// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (
  modules,
  entry,
  mainEntry,
  parcelRequireName,
  externals,
  distDir,
  publicUrl,
  devServer
) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var importMap = previousRequire.i || {};
  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        if (externals[name]) {
          return externals[name];
        }
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        globalObject
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.require = nodeRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.distDir = distDir;
  newRequire.publicUrl = publicUrl;
  newRequire.devServer = devServer;
  newRequire.i = importMap;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  // Only insert newRequire.load when it is actually used.
  // The code in this file is linted against ES5, so dynamic import is not allowed.
  function $parcel$resolve(url) {  url = importMap[url] || url;  return import.meta.resolve(distDir + url);}newRequire.resolve = $parcel$resolve;

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });
    }
  }
})({"iUuJv":[function(require,module,exports,__globalThis) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SERVER_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "439701173a9199ea";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "47f455d51fcc916e";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_SERVER_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , disposedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ , bundleNotFound = false;
function getHostname() {
    return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);
}
// eslint-disable-next-line no-redeclare
let WebSocket = globalThis.WebSocket;
if (!WebSocket && typeof module.bundle.root === 'function') try {
    // eslint-disable-next-line no-global-assign
    WebSocket = module.bundle.root('ws');
} catch  {
// ignore.
}
var hostname = getHostname();
var port = getPort();
var protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && ![
    'localhost',
    '127.0.0.1',
    '0.0.0.0'
].includes(hostname) ? 'wss' : 'ws';
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if (!parent || !parent.isParcelRequire) {
    // Web extension context
    var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes('test.js');
    }
    var ws;
    if (HMR_USE_SSE) ws = new EventSource('/__parcel_hmr');
    else try {
        // If we're running in the dev server's node runner, listen for messages on the parent port.
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) {
            parentPort.on('message', async (message)=>{
                try {
                    await handleMessage(message);
                    parentPort.postMessage('updated');
                } catch  {
                    parentPort.postMessage('restart');
                }
            });
            // After the bundle has finished running, notify the dev server that the HMR update is complete.
            queueMicrotask(()=>parentPort.postMessage('ready'));
        }
    } catch  {
        if (typeof WebSocket !== 'undefined') try {
            ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
        } catch (err) {
            // Ignore cloudflare workers error.
            if (err.message && !err.message.includes('Disallowed operation called within global scope')) console.error(err.message);
        }
    }
    if (ws) {
        // $FlowFixMe
        ws.onmessage = async function(event /*: {data: string, ...} */ ) {
            var data /*: HMRMessage */  = JSON.parse(event.data);
            await handleMessage(data);
        };
        if (ws instanceof WebSocket) {
            ws.onerror = function(e) {
                if (e.message) console.error(e.message);
            };
            ws.onclose = function() {
                console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
            };
        }
    }
}
async function handleMessage(data /*: HMRMessage */ ) {
    checkedAssets = {} /*: {|[string]: boolean|} */ ;
    disposedAssets = {} /*: {|[string]: boolean|} */ ;
    assetsToAccept = [];
    assetsToDispose = [];
    bundleNotFound = false;
    if (data.type === 'reload') fullReload();
    else if (data.type === 'update') {
        // Remove error overlay if there is one
        if (typeof document !== 'undefined') removeErrorOverlay();
        let assets = data.assets;
        // Handle HMR Update
        let handled = assets.every((asset)=>{
            return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        });
        // Dispatch a custom event in case a bundle was not found. This might mean
        // an asset on the server changed and we should reload the page. This event
        // gives the client an opportunity to refresh without losing state
        // (e.g. via React Server Components). If e.preventDefault() is not called,
        // we will trigger a full page reload.
        if (handled && bundleNotFound && assets.some((a)=>a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {
            cancelable: true
        }));
        if (handled) {
            console.clear();
            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
            if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') window.dispatchEvent(new CustomEvent('parcelhmraccept'));
            await hmrApplyUpdates(assets);
            hmrDisposeQueue();
            // Run accept callbacks. This will also re-execute other disposed assets in topological order.
            let processedAssets = {};
            for(let i = 0; i < assetsToAccept.length; i++){
                let id = assetsToAccept[i][1];
                if (!processedAssets[id]) {
                    hmrAccept(assetsToAccept[i][0], id);
                    processedAssets[id] = true;
                }
            }
        } else fullReload();
    }
    if (data.type === 'error') {
        // Log parcel errors to console
        for (let ansiDiagnostic of data.diagnostics.ansi){
            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
            console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
        }
        if (typeof document !== 'undefined') {
            // Render the fancy html overlay
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html);
            // $FlowFixMe
            document.body.appendChild(overlay);
        }
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, '') : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + '</div>').join('')}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ''}
      </div>
    `;
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if (typeof location !== 'undefined' && 'reload' in location) location.reload();
    else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
    else try {
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) parentPort.postMessage('restart');
    } catch (err) {
        console.error("[parcel] \u26A0\uFE0F An HMR update was not accepted. Please restart the process.");
    }
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute('href');
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', // $FlowFixMe
    href.split('?')[0] + '?' + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout || typeof document === 'undefined') return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === 'js') {
        if (typeof document !== 'undefined') {
            let script = document.createElement('script');
            script.src = asset.url + '?t=' + Date.now();
            if (asset.outputFormat === 'esmodule') script.type = 'module';
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === 'function') {
            // Worker scripts
            if (asset.outputFormat === 'esmodule') return import(asset.url + '?t=' + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + '?t=' + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        }
        // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.
        // This is required in case modules are duplicated. We need to ensure all instances have the updated code.
        if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    checkedAssets = {};
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else if (a !== null) {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) {
            bundleNotFound = true;
            return true;
        }
        return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return null;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    if (!cached) return true;
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
    return false;
}
function hmrDisposeQueue() {
    // Dispose all old assets.
    for(let i = 0; i < assetsToDispose.length; i++){
        let id = assetsToDispose[i][1];
        if (!disposedAssets[id]) {
            hmrDispose(assetsToDispose[i][0], id);
            disposedAssets[id] = true;
        }
    }
    assetsToDispose = [];
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        let assetsToAlsoAccept = [];
        cached.hot._acceptCallbacks.forEach(function(cb) {
            let additionalAssets = cb(function() {
                return getParents(module.bundle.root, id);
            });
            if (Array.isArray(additionalAssets) && additionalAssets.length) assetsToAlsoAccept.push(...additionalAssets);
        });
        if (assetsToAlsoAccept.length) {
            let handled = assetsToAlsoAccept.every(function(a) {
                return hmrAcceptCheck(a[0], a[1]);
            });
            if (!handled) return fullReload();
            hmrDisposeQueue();
        }
    }
}

},{}],"fILKw":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$9dcd = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$9dcd.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$9dcd.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _app = require("./App");
var _appDefault = parcelHelpers.interopDefault(_app);
const root = (0, _client.createRoot)(document.getElementById("root"));
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _appDefault.default), {}, void 0, false, {
    fileName: "src/main.js",
    lineNumber: 6,
    columnNumber: 13
}, undefined));

  $parcel$ReactRefreshHelpers$9dcd.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-dom/client":"hrvwu","./App":"hh6uc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dVPUn":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"gnlQf"}],"gnlQf":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    var React = require("58362d9d82be395f");
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) {
            checkKeyStringCoercion(maybeKey);
            key = '' + maybeKey;
        }
        if (hasValidKey(config)) {
            checkKeyStringCoercion(config.key);
            key = '' + config.key;
        }
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    var didWarnAboutKeySpread = {};
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (hasOwnProperty.call(props, 'key')) {
            var componentName = getComponentNameFromType(type);
            var keys = Object.keys(props).filter(function(k) {
                return k !== 'key';
            });
            var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';
            if (!didWarnAboutKeySpread[componentName + beforeExample]) {
                var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';
                error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);
                didWarnAboutKeySpread[componentName + beforeExample] = true;
            }
        }
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = jsxDEV$1;
})();

},{"58362d9d82be395f":"jMk1U"}],"jMk1U":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"ghslp"}],"ghslp":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var ReactVersion = '18.3.1';
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: null
    };
    var ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: false,
        didScheduleLegacyUpdate: false
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame = {};
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame.getCurrentStack = null;
    ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = ''; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) stack += impl() || '';
        return stack;
    };
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {};
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
        }
    };
    var assign = Object.assign;
    var emptyObject = {};
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component.prototype.isReactComponent = {};
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component.prototype.setState = function(partialState, callback) {
        if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    var deprecatedAPIs = {
        isMounted: [
            'isMounted',
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            'replaceState',
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {}
    ComponentDummy.prototype = Component.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    assign(pureComponentPrototype, Component.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = '' + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (element === null || element === undefined) throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = assign({}, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = '' + config.key;
            } // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            '=': '=0',
            ':': '=2'
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return '$' + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, '$&/');
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === 'object' && element !== null && element.key != null) {
            checkKeyStringCoercion(element.key);
            return escape('' + element.key);
        } // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === 'undefined' || type === 'boolean') // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case 'string':
            case 'number':
                invokeCallback = true;
                break;
            case 'object':
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
                var escapedChildKey = '';
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + '/';
                mapIntoArray(mappedChild, array, escapedChildKey, '', function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                    // The `if` statement here prevents auto-disabling of the safe
                    // coercion ESLint rule, so we must manually disable it below.
                    // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) checkKeyStringCoercion(mappedChild.key);
                    mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
                }
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === 'object') {
                // eslint-disable-next-line react-internal/safe-string-coercion
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, '', '', function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw new Error('React.Children.only expected to receive a single React element child.');
        return children;
    }
    function createContext(defaultValue) {
        // TODO: Second argument used to be an optional `calculateChangedBits`
        // function. Warn to reserve for future use?
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            // This might throw either because it's missing or throws. If so, we treat it
            // as still uninitialized and try again next time. Which is the same as what
            // happens if the ctor or any wrappers processing the ctor throws. This might
            // end up fixing it if the resolution was a concurrency bug.
            thenable.then(function(moduleObject) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = moduleObject;
                }
            }, function(error) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
            if (payload._status === Uninitialized) {
                // In case, we're still uninitialized, then we're waiting for the thenable
                // to resolve. Set it as pending in the meantime.
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
            }
        }
        if (payload._status === Resolved) {
            var moduleObject = payload._result;
            if (moduleObject === undefined) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
            if (!('default' in moduleObject)) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
            return moduleObject.default;
        } else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'defaultProps', {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'propTypes', {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== 'function') error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        else if (render.length !== 0 && render.length !== 2) error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.forwardRef((props, ref) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!render.name && !render.displayName) render.displayName = name;
            }
        });
        return elementType;
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error("memo: The first argument must be a component. Instead received: %s", type === null ? 'null' : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.memo((props) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!type.name && !type.displayName) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (dispatcher === null) error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        // intentionally don't throw our own error because this is in a hot path.
        // Also helps ensure this is inlined.
        return dispatcher;
    }
    function useContext(Context) {
        var dispatcher = resolveDispatcher();
        // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    function useTransition() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
    }
    function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
    }
    function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
    }
    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, 'type', {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
        try {
            scope();
        } finally{
            ReactCurrentBatchConfig.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    var didWarnAboutMessageChannel = false;
    var enqueueTaskImpl = null;
    function enqueueTask(task) {
        if (enqueueTaskImpl === null) try {
            // read require off the module object to get around the bundlers.
            // we don't want them to detect a require and bundle a Node polyfill.
            var requireString = ('require' + Math.random()).slice(0, 7);
            var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
            // version of setImmediate, bypassing fake timers if any.
            enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
        } catch (_err) {
            // we're in a browser
            // we can't use regular timers because they may still be faked
            // so we try MessageChannel+postMessage instead
            enqueueTaskImpl = function(callback) {
                if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === 'undefined') error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(undefined);
            };
        }
        return enqueueTaskImpl(task);
    }
    var actScopeDepth = 0;
    var didWarnNoAwaitAct = false;
    function act(callback) {
        // `act` calls can be nested, so we track the depth. This represents the
        // number of `act` scopes on the stack.
        var prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        if (ReactCurrentActQueue.current === null) // This is the outermost `act` scope. Initialize the queue. The reconciler
        // will detect the queue and use it instead of Scheduler.
        ReactCurrentActQueue.current = [];
        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
        var result;
        try {
            // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
            // set to `true` while the given callback is executed, not for updates
            // triggered during an async event, because this is how the legacy
            // implementation of `act` behaved.
            ReactCurrentActQueue.isBatchingLegacy = true;
            result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
            // which flushed updates immediately after the scope function exits, even
            // if it's an async function.
            if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                }
            }
        } catch (error) {
            popActScope(prevActScopeDepth);
            throw error;
        } finally{
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
        }
        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
            var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
            // for it to resolve before exiting the current scope.
            var wasAwaited = false;
            var thenable = {
                then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue) {
                        popActScope(prevActScopeDepth);
                        if (actScopeDepth === 0) // We've exited the outermost act scope. Recursively flush the
                        // queue until there's no remaining work.
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        else resolve(returnValue);
                    }, function(error) {
                        // The callback threw an error.
                        popActScope(prevActScopeDepth);
                        reject(error);
                    });
                }
            };
            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') // eslint-disable-next-line no-undef
            Promise.resolve().then(function() {}).then(function() {
                if (!wasAwaited) {
                    didWarnNoAwaitAct = true;
                    error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                }
            });
            return thenable;
        } else {
            var returnValue = result; // The callback is not an async function. Exit the current scope
            // immediately, without awaiting.
            popActScope(prevActScopeDepth);
            if (actScopeDepth === 0) {
                // Exiting the outermost act scope. Flush the queue.
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                } // Return a thenable. If the user awaits it, we'll flush again in
                // case additional work was scheduled by a microtask.
                var _thenable = {
                    then: function(resolve, reject) {
                        // Confirm we haven't re-entered another `act` scope, in case
                        // the user does something weird like await the thenable
                        // multiple times.
                        if (ReactCurrentActQueue.current === null) {
                            // Recursively flush the queue until there's no remaining work.
                            ReactCurrentActQueue.current = [];
                            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        } else resolve(returnValue);
                    }
                };
                return _thenable;
            } else {
                // Since we're inside a nested `act` scope, the returned thenable
                // immediately resolves. The outer scope will flush the queue.
                var _thenable2 = {
                    then: function(resolve, reject) {
                        resolve(returnValue);
                    }
                };
                return _thenable2;
            }
        }
    }
    function popActScope(prevActScopeDepth) {
        if (prevActScopeDepth !== actScopeDepth - 1) error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactCurrentActQueue.current;
        if (queue !== null) try {
            flushActQueue(queue);
            enqueueTask(function() {
                if (queue.length === 0) {
                    // No additional work was scheduled. Finish.
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                } else // Keep flushing work until there's none left.
                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
        } catch (error) {
            reject(error);
        }
        else resolve(returnValue);
    }
    var isFlushing = false;
    function flushActQueue(queue) {
        if (!isFlushing) {
            // Prevent re-entrance.
            isFlushing = true;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(true);
                    while (callback !== null);
                }
                queue.length = 0;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                queue = queue.slice(i + 1);
                throw error;
            } finally{
                isFlushing = false;
            }
        }
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.act = act;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.startTransition = startTransition;
    exports.unstable_act = act;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useDeferredValue = useDeferredValue;
    exports.useEffect = useEffect;
    exports.useId = useId;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useInsertionEffect = useInsertionEffect;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.useSyncExternalStore = useSyncExternalStore;
    exports.useTransition = useTransition;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"hrvwu":[function(require,module,exports,__globalThis) {
'use strict';
var m = require("aaccff5d309d9239");
var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.createRoot(c, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};
exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.hydrateRoot(c, h, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};

},{"aaccff5d309d9239":"i4X7T"}],"i4X7T":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"cLd8p"}],"cLd8p":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var React = require("6f0162e9ab224cd4");
    var Scheduler = require("8ad4ca65319d28a7");
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var suppressWarning = false;
    function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
    } // In DEV, calls to console.warn and console.error get replaced
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        if (!suppressWarning) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            printWarning('warn', format, args);
        }
    }
    function error(format) {
        if (!suppressWarning) {
            for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
            printWarning('error', format, args);
        }
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var ScopeComponent = 21;
    var OffscreenComponent = 22;
    var LegacyHiddenComponent = 23;
    var CacheComponent = 24;
    var TracingMarkerComponent = 25;
    // -----------------------------------------------------------------------------
    var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
    // the react-reconciler package.
    var enableNewReconciler = false; // Support legacy Primer support on internal FB www
    var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
    // React DOM Chopping Block
    //
    // Similar to main Chopping Block but only flags related to React DOM. These are
    // grouped because we will likely batch all of them into a single major release.
    // -----------------------------------------------------------------------------
    // Disable support for comment nodes as React DOM containers. Already disabled
    // in open source, but www codebase still relies on it. Need to remove.
    var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
    // and client rendering, mostly to allow JSX attributes to apply to the custom
    // element's object properties instead of only HTML attributes.
    // https://github.com/facebook/react/issues/11347
    var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
    var warnAboutStringRefs = true; // -----------------------------------------------------------------------------
    // Debugging and DevTools
    // -----------------------------------------------------------------------------
    // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
    // for an experimental timeline tool.
    var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies = {};
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + 'Capture', dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies[registrationName]) error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') possibleRegistrationNames.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error('Invalid attribute name: `%s`', attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case 'function':
            case 'symbol':
                // eslint-disable-line
                return true;
            case 'boolean':
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== 'data-' && prefix !== 'aria-';
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === 'undefined') return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        'children',
        'dangerouslySetInnerHTML',
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        'defaultValue',
        'defaultChecked',
        'innerHTML',
        'suppressContentEditableWarning',
        'suppressHydrationWarning',
        'style'
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            'acceptCharset',
            'accept-charset'
        ],
        [
            'className',
            'class'
        ],
        [
            'htmlFor',
            'for'
        ],
        [
            'httpEquiv',
            'http-equiv'
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        'contentEditable',
        'draggable',
        'spellCheck',
        'value'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        'autoReverse',
        'externalResourcesRequired',
        'focusable',
        'preserveAlpha'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        'allowFullScreen',
        'async',
        // on the client side because the browsers are inconsistent. Instead we call focus().
        'autoFocus',
        'autoPlay',
        'controls',
        'default',
        'defer',
        'disabled',
        'disablePictureInPicture',
        'disableRemotePlayback',
        'formNoValidate',
        'hidden',
        'loop',
        'noModule',
        'noValidate',
        'open',
        'playsInline',
        'readOnly',
        'required',
        'reversed',
        'scoped',
        'seamless',
        'itemScope'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        'checked',
        // disabled with `removeAttribute`. We have special logic for handling this.
        'multiple',
        'muted',
        'selected' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        'capture',
        'download' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        'cols',
        'rows',
        'size',
        'span' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        'rowSpan',
        'start'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        'xlink:actuate',
        'xlink:arcrole',
        'xlink:role',
        'xlink:show',
        'xlink:title',
        'xlink:type' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/1999/xlink', false, false);
    }); // String SVG attributes with the xml namespace.
    [
        'xml:base',
        'xml:lang',
        'xml:space' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/XML/1998/namespace', false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        'tabIndex',
        'crossOrigin'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, 'xlink:href', 'http://www.w3.org/1999/xlink', true, false);
    [
        'src',
        'href',
        'action',
        'formAction'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            checkAttributeStringCoercion(expected, name);
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            // eslint-disable-next-line react-internal/safe-string-coercion
            sanitizeURL('' + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === '') return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                     // eslint-disable-next-line react-internal/safe-string-coercion
                    if (value === '' + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
            else if (stringValue === '' + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected, isCustomComponentTag) {
        if (!isAttributeNameSafe(name)) return;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        checkAttributeStringCoercion(expected, name);
        if (value === '' + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else {
                    checkAttributeStringCoercion(value, name);
                    node.setAttribute(_attributeName, '' + value);
                }
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : '';
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = '';
            else {
                checkAttributeStringCoercion(value, attributeName);
                attributeValue = '' + value;
                if (propertyInfo.sanitizeURL) sanitizeURL(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_SCOPE_TYPE = Symbol.for('react.scope');
    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
    var REACT_CACHE_TYPE = Symbol.for('react.cache');
    var REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame('Lazy');
            case SuspenseComponent:
                return describeBuiltInComponentFrame('Suspense');
            case SuspenseListComponent:
                return describeBuiltInComponentFrame('SuspenseList');
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return '';
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = '';
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node);
            return info;
        } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    } // Keep in sync with shared/getComponentNameFromType
    function getContextName$1(type) {
        return type.displayName || 'Context';
    }
    function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch(tag){
            case CacheComponent:
                return 'Cache';
            case ContextConsumer:
                var context = type;
                return getContextName$1(context) + '.Consumer';
            case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + '.Provider';
            case DehydratedFragment:
                return 'DehydratedFragment';
            case ForwardRef:
                return getWrappedName$1(type, type.render, 'ForwardRef');
            case Fragment:
                return 'Fragment';
            case HostComponent:
                // Host component type is the display name (e.g. "div", "View")
                return type;
            case HostPortal:
                return 'Portal';
            case HostRoot:
                return 'Root';
            case HostText:
                return 'Text';
            case LazyComponent:
                // Name comes from the type in this case; we don't have a tag.
                return getComponentNameFromType(type);
            case Mode:
                if (type === REACT_STRICT_MODE_TYPE) // Don't be less specific than shared/getComponentNameFromType
                return 'StrictMode';
                return 'Mode';
            case OffscreenComponent:
                return 'Offscreen';
            case Profiler:
                return 'Profiler';
            case ScopeComponent:
                return 'Scope';
            case SuspenseComponent:
                return 'Suspense';
            case SuspenseListComponent:
                return 'SuspenseList';
            case TracingMarkerComponent:
                return 'TracingMarker';
            // The display name for this tags come from the user-provided type:
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
                if (typeof type === 'function') return type.displayName || type.name || null;
                if (typeof type === 'string') return type;
                break;
        }
        return null;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var current = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current === null) return null;
        var owner = current._debugOwner;
        if (owner !== null && typeof owner !== 'undefined') return getComponentNameFromFiber(owner);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current === null) return '';
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
        current = fiber;
        isRendering = false;
    }
    function getCurrentFiber() {
        return current;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        // The coercion safety check is performed in getToStringValue().
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case 'boolean':
            case 'number':
            case 'string':
            case 'undefined':
                return value;
            case 'object':
                checkFormFieldValueStringCoercion(value);
                return value;
            default:
                // function, symbol are assigned as empty strings
                return '';
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = '';
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? 'true' : 'false';
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? 'checked' : 'value';
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = '' + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = '' + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== 'undefined' ? document : undefined);
        if (typeof doc === 'undefined') return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === 'checkbox' || props.type === 'radio';
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps('input', props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, 'checked', checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === 'number') {
                if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
                // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === 'submit' || type === 'reset') {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute('value');
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty('defaultValue')) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
            var type = props.type;
            var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== '') node.name = '';
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== '') node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            checkAttributeStringCoercion(name, 'name');
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    var didWarnInvalidInnerHTML = false;
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // If a value is not provided, then the children must be simple.
        if (props.value == null) {
            if (typeof props.children === 'object' && props.children !== null) React.Children.forEach(props.children, function(child) {
                if (child == null) return;
                if (typeof child === 'string' || typeof child === 'number') return;
                if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                }
            });
            else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
            }
        } // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute('value', toString(getToStringValue(props.value)));
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return '\n\nCheck the render method of `' + ownerName + '`.';
        return '';
    }
    var valuePropNames = [
        'value',
        'defaultValue'
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps('select', props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var propNameIsArray = isArray(props[propName]);
            if (props.multiple && !propNameIsArray) error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && propNameIsArray) error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue['$' + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$1(element, props) {
        return assign({}, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null) throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps('textarea', props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component');
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (defaultValue != null) throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');
                if (isArray(children)) {
                    if (children.length > 1) throw new Error('<textarea> can only have at most one child.');
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = '';
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== '' && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case 'svg':
                return SVG_NAMESPACE;
            case 'math':
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE) {
            if (!('innerHTML' in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement('div');
                reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            'animationDelay',
            'animationDirection',
            'animationDuration',
            'animationFillMode',
            'animationIterationCount',
            'animationName',
            'animationPlayState',
            'animationTimingFunction'
        ],
        background: [
            'backgroundAttachment',
            'backgroundClip',
            'backgroundColor',
            'backgroundImage',
            'backgroundOrigin',
            'backgroundPositionX',
            'backgroundPositionY',
            'backgroundRepeat',
            'backgroundSize'
        ],
        backgroundPosition: [
            'backgroundPositionX',
            'backgroundPositionY'
        ],
        border: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth',
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth',
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth',
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth',
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderBlockEnd: [
            'borderBlockEndColor',
            'borderBlockEndStyle',
            'borderBlockEndWidth'
        ],
        borderBlockStart: [
            'borderBlockStartColor',
            'borderBlockStartStyle',
            'borderBlockStartWidth'
        ],
        borderBottom: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth'
        ],
        borderColor: [
            'borderBottomColor',
            'borderLeftColor',
            'borderRightColor',
            'borderTopColor'
        ],
        borderImage: [
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth'
        ],
        borderInlineEnd: [
            'borderInlineEndColor',
            'borderInlineEndStyle',
            'borderInlineEndWidth'
        ],
        borderInlineStart: [
            'borderInlineStartColor',
            'borderInlineStartStyle',
            'borderInlineStartWidth'
        ],
        borderLeft: [
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth'
        ],
        borderRadius: [
            'borderBottomLeftRadius',
            'borderBottomRightRadius',
            'borderTopLeftRadius',
            'borderTopRightRadius'
        ],
        borderRight: [
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth'
        ],
        borderStyle: [
            'borderBottomStyle',
            'borderLeftStyle',
            'borderRightStyle',
            'borderTopStyle'
        ],
        borderTop: [
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderWidth: [
            'borderBottomWidth',
            'borderLeftWidth',
            'borderRightWidth',
            'borderTopWidth'
        ],
        columnRule: [
            'columnRuleColor',
            'columnRuleStyle',
            'columnRuleWidth'
        ],
        columns: [
            'columnCount',
            'columnWidth'
        ],
        flex: [
            'flexBasis',
            'flexGrow',
            'flexShrink'
        ],
        flexFlow: [
            'flexDirection',
            'flexWrap'
        ],
        font: [
            'fontFamily',
            'fontFeatureSettings',
            'fontKerning',
            'fontLanguageOverride',
            'fontSize',
            'fontSizeAdjust',
            'fontStretch',
            'fontStyle',
            'fontVariant',
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition',
            'fontWeight',
            'lineHeight'
        ],
        fontVariant: [
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition'
        ],
        gap: [
            'columnGap',
            'rowGap'
        ],
        grid: [
            'gridAutoColumns',
            'gridAutoFlow',
            'gridAutoRows',
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        gridArea: [
            'gridColumnEnd',
            'gridColumnStart',
            'gridRowEnd',
            'gridRowStart'
        ],
        gridColumn: [
            'gridColumnEnd',
            'gridColumnStart'
        ],
        gridColumnGap: [
            'columnGap'
        ],
        gridGap: [
            'columnGap',
            'rowGap'
        ],
        gridRow: [
            'gridRowEnd',
            'gridRowStart'
        ],
        gridRowGap: [
            'rowGap'
        ],
        gridTemplate: [
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        listStyle: [
            'listStyleImage',
            'listStylePosition',
            'listStyleType'
        ],
        margin: [
            'marginBottom',
            'marginLeft',
            'marginRight',
            'marginTop'
        ],
        marker: [
            'markerEnd',
            'markerMid',
            'markerStart'
        ],
        mask: [
            'maskClip',
            'maskComposite',
            'maskImage',
            'maskMode',
            'maskOrigin',
            'maskPositionX',
            'maskPositionY',
            'maskRepeat',
            'maskSize'
        ],
        maskPosition: [
            'maskPositionX',
            'maskPositionY'
        ],
        outline: [
            'outlineColor',
            'outlineStyle',
            'outlineWidth'
        ],
        overflow: [
            'overflowX',
            'overflowY'
        ],
        padding: [
            'paddingBottom',
            'paddingLeft',
            'paddingRight',
            'paddingTop'
        ],
        placeContent: [
            'alignContent',
            'justifyContent'
        ],
        placeItems: [
            'alignItems',
            'justifyItems'
        ],
        placeSelf: [
            'alignSelf',
            'justifySelf'
        ],
        textDecoration: [
            'textDecorationColor',
            'textDecorationLine',
            'textDecorationStyle'
        ],
        textEmphasis: [
            'textEmphasisColor',
            'textEmphasisStyle'
        ],
        transition: [
            'transitionDelay',
            'transitionDuration',
            'transitionProperty',
            'transitionTimingFunction'
        ],
        wordWrap: [
            'overflowWrap'
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        aspectRatio: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes = [
        'Webkit',
        'ms',
        'Moz',
        'O'
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === 'boolean' || value === '';
        if (isEmpty) return '';
        if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
        checkCSSPropertyStringCoercion(value, name);
        return ('' + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }
    var warnValidStyle = function() {};
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error('Unsupported style property %s. Did you mean %s?', name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error('`NaN` is an invalid value for the `%s` css style property.', name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error('`Infinity` is an invalid value for the `%s` css style property.', name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf('-') > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === 'number') {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = '';
        var delimiter = '';
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf('--') === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ';';
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === 'float') styleName = 'cssFloat';
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === 'boolean' || value === '';
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {};
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + ',' + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = '__html';
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) throw new Error(tag + " is a void element tag and must neither have `children` nor " + 'use `dangerouslySetInnerHTML`.');
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');
            if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (props.style != null && typeof props.style !== 'object') throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf('-') === -1) return typeof props.is === 'string';
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: 'accept',
        acceptcharset: 'acceptCharset',
        'accept-charset': 'acceptCharset',
        accesskey: 'accessKey',
        action: 'action',
        allowfullscreen: 'allowFullScreen',
        alt: 'alt',
        as: 'as',
        async: 'async',
        autocapitalize: 'autoCapitalize',
        autocomplete: 'autoComplete',
        autocorrect: 'autoCorrect',
        autofocus: 'autoFocus',
        autoplay: 'autoPlay',
        autosave: 'autoSave',
        capture: 'capture',
        cellpadding: 'cellPadding',
        cellspacing: 'cellSpacing',
        challenge: 'challenge',
        charset: 'charSet',
        checked: 'checked',
        children: 'children',
        cite: 'cite',
        class: 'className',
        classid: 'classID',
        classname: 'className',
        cols: 'cols',
        colspan: 'colSpan',
        content: 'content',
        contenteditable: 'contentEditable',
        contextmenu: 'contextMenu',
        controls: 'controls',
        controlslist: 'controlsList',
        coords: 'coords',
        crossorigin: 'crossOrigin',
        dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
        data: 'data',
        datetime: 'dateTime',
        default: 'default',
        defaultchecked: 'defaultChecked',
        defaultvalue: 'defaultValue',
        defer: 'defer',
        dir: 'dir',
        disabled: 'disabled',
        disablepictureinpicture: 'disablePictureInPicture',
        disableremoteplayback: 'disableRemotePlayback',
        download: 'download',
        draggable: 'draggable',
        enctype: 'encType',
        enterkeyhint: 'enterKeyHint',
        for: 'htmlFor',
        form: 'form',
        formmethod: 'formMethod',
        formaction: 'formAction',
        formenctype: 'formEncType',
        formnovalidate: 'formNoValidate',
        formtarget: 'formTarget',
        frameborder: 'frameBorder',
        headers: 'headers',
        height: 'height',
        hidden: 'hidden',
        high: 'high',
        href: 'href',
        hreflang: 'hrefLang',
        htmlfor: 'htmlFor',
        httpequiv: 'httpEquiv',
        'http-equiv': 'httpEquiv',
        icon: 'icon',
        id: 'id',
        imagesizes: 'imageSizes',
        imagesrcset: 'imageSrcSet',
        innerhtml: 'innerHTML',
        inputmode: 'inputMode',
        integrity: 'integrity',
        is: 'is',
        itemid: 'itemID',
        itemprop: 'itemProp',
        itemref: 'itemRef',
        itemscope: 'itemScope',
        itemtype: 'itemType',
        keyparams: 'keyParams',
        keytype: 'keyType',
        kind: 'kind',
        label: 'label',
        lang: 'lang',
        list: 'list',
        loop: 'loop',
        low: 'low',
        manifest: 'manifest',
        marginwidth: 'marginWidth',
        marginheight: 'marginHeight',
        max: 'max',
        maxlength: 'maxLength',
        media: 'media',
        mediagroup: 'mediaGroup',
        method: 'method',
        min: 'min',
        minlength: 'minLength',
        multiple: 'multiple',
        muted: 'muted',
        name: 'name',
        nomodule: 'noModule',
        nonce: 'nonce',
        novalidate: 'noValidate',
        open: 'open',
        optimum: 'optimum',
        pattern: 'pattern',
        placeholder: 'placeholder',
        playsinline: 'playsInline',
        poster: 'poster',
        preload: 'preload',
        profile: 'profile',
        radiogroup: 'radioGroup',
        readonly: 'readOnly',
        referrerpolicy: 'referrerPolicy',
        rel: 'rel',
        required: 'required',
        reversed: 'reversed',
        role: 'role',
        rows: 'rows',
        rowspan: 'rowSpan',
        sandbox: 'sandbox',
        scope: 'scope',
        scoped: 'scoped',
        scrolling: 'scrolling',
        seamless: 'seamless',
        selected: 'selected',
        shape: 'shape',
        size: 'size',
        sizes: 'sizes',
        span: 'span',
        spellcheck: 'spellCheck',
        src: 'src',
        srcdoc: 'srcDoc',
        srclang: 'srcLang',
        srcset: 'srcSet',
        start: 'start',
        step: 'step',
        style: 'style',
        summary: 'summary',
        tabindex: 'tabIndex',
        target: 'target',
        title: 'title',
        type: 'type',
        usemap: 'useMap',
        value: 'value',
        width: 'width',
        wmode: 'wmode',
        wrap: 'wrap',
        // SVG
        about: 'about',
        accentheight: 'accentHeight',
        'accent-height': 'accentHeight',
        accumulate: 'accumulate',
        additive: 'additive',
        alignmentbaseline: 'alignmentBaseline',
        'alignment-baseline': 'alignmentBaseline',
        allowreorder: 'allowReorder',
        alphabetic: 'alphabetic',
        amplitude: 'amplitude',
        arabicform: 'arabicForm',
        'arabic-form': 'arabicForm',
        ascent: 'ascent',
        attributename: 'attributeName',
        attributetype: 'attributeType',
        autoreverse: 'autoReverse',
        azimuth: 'azimuth',
        basefrequency: 'baseFrequency',
        baselineshift: 'baselineShift',
        'baseline-shift': 'baselineShift',
        baseprofile: 'baseProfile',
        bbox: 'bbox',
        begin: 'begin',
        bias: 'bias',
        by: 'by',
        calcmode: 'calcMode',
        capheight: 'capHeight',
        'cap-height': 'capHeight',
        clip: 'clip',
        clippath: 'clipPath',
        'clip-path': 'clipPath',
        clippathunits: 'clipPathUnits',
        cliprule: 'clipRule',
        'clip-rule': 'clipRule',
        color: 'color',
        colorinterpolation: 'colorInterpolation',
        'color-interpolation': 'colorInterpolation',
        colorinterpolationfilters: 'colorInterpolationFilters',
        'color-interpolation-filters': 'colorInterpolationFilters',
        colorprofile: 'colorProfile',
        'color-profile': 'colorProfile',
        colorrendering: 'colorRendering',
        'color-rendering': 'colorRendering',
        contentscripttype: 'contentScriptType',
        contentstyletype: 'contentStyleType',
        cursor: 'cursor',
        cx: 'cx',
        cy: 'cy',
        d: 'd',
        datatype: 'datatype',
        decelerate: 'decelerate',
        descent: 'descent',
        diffuseconstant: 'diffuseConstant',
        direction: 'direction',
        display: 'display',
        divisor: 'divisor',
        dominantbaseline: 'dominantBaseline',
        'dominant-baseline': 'dominantBaseline',
        dur: 'dur',
        dx: 'dx',
        dy: 'dy',
        edgemode: 'edgeMode',
        elevation: 'elevation',
        enablebackground: 'enableBackground',
        'enable-background': 'enableBackground',
        end: 'end',
        exponent: 'exponent',
        externalresourcesrequired: 'externalResourcesRequired',
        fill: 'fill',
        fillopacity: 'fillOpacity',
        'fill-opacity': 'fillOpacity',
        fillrule: 'fillRule',
        'fill-rule': 'fillRule',
        filter: 'filter',
        filterres: 'filterRes',
        filterunits: 'filterUnits',
        floodopacity: 'floodOpacity',
        'flood-opacity': 'floodOpacity',
        floodcolor: 'floodColor',
        'flood-color': 'floodColor',
        focusable: 'focusable',
        fontfamily: 'fontFamily',
        'font-family': 'fontFamily',
        fontsize: 'fontSize',
        'font-size': 'fontSize',
        fontsizeadjust: 'fontSizeAdjust',
        'font-size-adjust': 'fontSizeAdjust',
        fontstretch: 'fontStretch',
        'font-stretch': 'fontStretch',
        fontstyle: 'fontStyle',
        'font-style': 'fontStyle',
        fontvariant: 'fontVariant',
        'font-variant': 'fontVariant',
        fontweight: 'fontWeight',
        'font-weight': 'fontWeight',
        format: 'format',
        from: 'from',
        fx: 'fx',
        fy: 'fy',
        g1: 'g1',
        g2: 'g2',
        glyphname: 'glyphName',
        'glyph-name': 'glyphName',
        glyphorientationhorizontal: 'glyphOrientationHorizontal',
        'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
        glyphorientationvertical: 'glyphOrientationVertical',
        'glyph-orientation-vertical': 'glyphOrientationVertical',
        glyphref: 'glyphRef',
        gradienttransform: 'gradientTransform',
        gradientunits: 'gradientUnits',
        hanging: 'hanging',
        horizadvx: 'horizAdvX',
        'horiz-adv-x': 'horizAdvX',
        horizoriginx: 'horizOriginX',
        'horiz-origin-x': 'horizOriginX',
        ideographic: 'ideographic',
        imagerendering: 'imageRendering',
        'image-rendering': 'imageRendering',
        in2: 'in2',
        in: 'in',
        inlist: 'inlist',
        intercept: 'intercept',
        k1: 'k1',
        k2: 'k2',
        k3: 'k3',
        k4: 'k4',
        k: 'k',
        kernelmatrix: 'kernelMatrix',
        kernelunitlength: 'kernelUnitLength',
        kerning: 'kerning',
        keypoints: 'keyPoints',
        keysplines: 'keySplines',
        keytimes: 'keyTimes',
        lengthadjust: 'lengthAdjust',
        letterspacing: 'letterSpacing',
        'letter-spacing': 'letterSpacing',
        lightingcolor: 'lightingColor',
        'lighting-color': 'lightingColor',
        limitingconeangle: 'limitingConeAngle',
        local: 'local',
        markerend: 'markerEnd',
        'marker-end': 'markerEnd',
        markerheight: 'markerHeight',
        markermid: 'markerMid',
        'marker-mid': 'markerMid',
        markerstart: 'markerStart',
        'marker-start': 'markerStart',
        markerunits: 'markerUnits',
        markerwidth: 'markerWidth',
        mask: 'mask',
        maskcontentunits: 'maskContentUnits',
        maskunits: 'maskUnits',
        mathematical: 'mathematical',
        mode: 'mode',
        numoctaves: 'numOctaves',
        offset: 'offset',
        opacity: 'opacity',
        operator: 'operator',
        order: 'order',
        orient: 'orient',
        orientation: 'orientation',
        origin: 'origin',
        overflow: 'overflow',
        overlineposition: 'overlinePosition',
        'overline-position': 'overlinePosition',
        overlinethickness: 'overlineThickness',
        'overline-thickness': 'overlineThickness',
        paintorder: 'paintOrder',
        'paint-order': 'paintOrder',
        panose1: 'panose1',
        'panose-1': 'panose1',
        pathlength: 'pathLength',
        patterncontentunits: 'patternContentUnits',
        patterntransform: 'patternTransform',
        patternunits: 'patternUnits',
        pointerevents: 'pointerEvents',
        'pointer-events': 'pointerEvents',
        points: 'points',
        pointsatx: 'pointsAtX',
        pointsaty: 'pointsAtY',
        pointsatz: 'pointsAtZ',
        prefix: 'prefix',
        preservealpha: 'preserveAlpha',
        preserveaspectratio: 'preserveAspectRatio',
        primitiveunits: 'primitiveUnits',
        property: 'property',
        r: 'r',
        radius: 'radius',
        refx: 'refX',
        refy: 'refY',
        renderingintent: 'renderingIntent',
        'rendering-intent': 'renderingIntent',
        repeatcount: 'repeatCount',
        repeatdur: 'repeatDur',
        requiredextensions: 'requiredExtensions',
        requiredfeatures: 'requiredFeatures',
        resource: 'resource',
        restart: 'restart',
        result: 'result',
        results: 'results',
        rotate: 'rotate',
        rx: 'rx',
        ry: 'ry',
        scale: 'scale',
        security: 'security',
        seed: 'seed',
        shaperendering: 'shapeRendering',
        'shape-rendering': 'shapeRendering',
        slope: 'slope',
        spacing: 'spacing',
        specularconstant: 'specularConstant',
        specularexponent: 'specularExponent',
        speed: 'speed',
        spreadmethod: 'spreadMethod',
        startoffset: 'startOffset',
        stddeviation: 'stdDeviation',
        stemh: 'stemh',
        stemv: 'stemv',
        stitchtiles: 'stitchTiles',
        stopcolor: 'stopColor',
        'stop-color': 'stopColor',
        stopopacity: 'stopOpacity',
        'stop-opacity': 'stopOpacity',
        strikethroughposition: 'strikethroughPosition',
        'strikethrough-position': 'strikethroughPosition',
        strikethroughthickness: 'strikethroughThickness',
        'strikethrough-thickness': 'strikethroughThickness',
        string: 'string',
        stroke: 'stroke',
        strokedasharray: 'strokeDasharray',
        'stroke-dasharray': 'strokeDasharray',
        strokedashoffset: 'strokeDashoffset',
        'stroke-dashoffset': 'strokeDashoffset',
        strokelinecap: 'strokeLinecap',
        'stroke-linecap': 'strokeLinecap',
        strokelinejoin: 'strokeLinejoin',
        'stroke-linejoin': 'strokeLinejoin',
        strokemiterlimit: 'strokeMiterlimit',
        'stroke-miterlimit': 'strokeMiterlimit',
        strokewidth: 'strokeWidth',
        'stroke-width': 'strokeWidth',
        strokeopacity: 'strokeOpacity',
        'stroke-opacity': 'strokeOpacity',
        suppresscontenteditablewarning: 'suppressContentEditableWarning',
        suppresshydrationwarning: 'suppressHydrationWarning',
        surfacescale: 'surfaceScale',
        systemlanguage: 'systemLanguage',
        tablevalues: 'tableValues',
        targetx: 'targetX',
        targety: 'targetY',
        textanchor: 'textAnchor',
        'text-anchor': 'textAnchor',
        textdecoration: 'textDecoration',
        'text-decoration': 'textDecoration',
        textlength: 'textLength',
        textrendering: 'textRendering',
        'text-rendering': 'textRendering',
        to: 'to',
        transform: 'transform',
        typeof: 'typeof',
        u1: 'u1',
        u2: 'u2',
        underlineposition: 'underlinePosition',
        'underline-position': 'underlinePosition',
        underlinethickness: 'underlineThickness',
        'underline-thickness': 'underlineThickness',
        unicode: 'unicode',
        unicodebidi: 'unicodeBidi',
        'unicode-bidi': 'unicodeBidi',
        unicoderange: 'unicodeRange',
        'unicode-range': 'unicodeRange',
        unitsperem: 'unitsPerEm',
        'units-per-em': 'unitsPerEm',
        unselectable: 'unselectable',
        valphabetic: 'vAlphabetic',
        'v-alphabetic': 'vAlphabetic',
        values: 'values',
        vectoreffect: 'vectorEffect',
        'vector-effect': 'vectorEffect',
        version: 'version',
        vertadvy: 'vertAdvY',
        'vert-adv-y': 'vertAdvY',
        vertoriginx: 'vertOriginX',
        'vert-origin-x': 'vertOriginX',
        vertoriginy: 'vertOriginY',
        'vert-origin-y': 'vertOriginY',
        vhanging: 'vHanging',
        'v-hanging': 'vHanging',
        videographic: 'vIdeographic',
        'v-ideographic': 'vIdeographic',
        viewbox: 'viewBox',
        viewtarget: 'viewTarget',
        visibility: 'visibility',
        vmathematical: 'vMathematical',
        'v-mathematical': 'vMathematical',
        vocab: 'vocab',
        widths: 'widths',
        wordspacing: 'wordSpacing',
        'word-spacing': 'wordSpacing',
        writingmode: 'writingMode',
        'writing-mode': 'writingMode',
        x1: 'x1',
        x2: 'x2',
        x: 'x',
        xchannelselector: 'xChannelSelector',
        xheight: 'xHeight',
        'x-height': 'xHeight',
        xlinkactuate: 'xlinkActuate',
        'xlink:actuate': 'xlinkActuate',
        xlinkarcrole: 'xlinkArcrole',
        'xlink:arcrole': 'xlinkArcrole',
        xlinkhref: 'xlinkHref',
        'xlink:href': 'xlinkHref',
        xlinkrole: 'xlinkRole',
        'xlink:role': 'xlinkRole',
        xlinkshow: 'xlinkShow',
        'xlink:show': 'xlinkShow',
        xlinktitle: 'xlinkTitle',
        'xlink:title': 'xlinkTitle',
        xlinktype: 'xlinkType',
        'xlink:type': 'xlinkType',
        xmlbase: 'xmlBase',
        'xml:base': 'xmlBase',
        xmllang: 'xmlLang',
        'xml:lang': 'xmlLang',
        xmlns: 'xmlns',
        'xml:space': 'xmlSpace',
        xmlnsxlink: 'xmlnsXlink',
        'xmlns:xlink': 'xmlnsXlink',
        xmlspace: 'xmlSpace',
        y1: 'y1',
        y2: 'y2',
        y: 'y',
        ychannelselector: 'yChannelSelector',
        z: 'z',
        zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
        'aria-current': 0,
        // state
        'aria-description': 0,
        'aria-details': 0,
        'aria-disabled': 0,
        // state
        'aria-hidden': 0,
        // state
        'aria-invalid': 0,
        // state
        'aria-keyshortcuts': 0,
        'aria-label': 0,
        'aria-roledescription': 0,
        // Widget Attributes
        'aria-autocomplete': 0,
        'aria-checked': 0,
        'aria-expanded': 0,
        'aria-haspopup': 0,
        'aria-level': 0,
        'aria-modal': 0,
        'aria-multiline': 0,
        'aria-multiselectable': 0,
        'aria-orientation': 0,
        'aria-placeholder': 0,
        'aria-pressed': 0,
        'aria-readonly': 0,
        'aria-required': 0,
        'aria-selected': 0,
        'aria-sort': 0,
        'aria-valuemax': 0,
        'aria-valuemin': 0,
        'aria-valuenow': 0,
        'aria-valuetext': 0,
        // Live Region Attributes
        'aria-atomic': 0,
        'aria-busy': 0,
        'aria-live': 0,
        'aria-relevant': 0,
        // Drag-and-Drop Attributes
        'aria-dropeffect': 0,
        'aria-grabbed': 0,
        // Relationship Attributes
        'aria-activedescendant': 0,
        'aria-colcount': 0,
        'aria-colindex': 0,
        'aria-colspan': 0,
        'aria-controls': 0,
        'aria-describedby': 0,
        'aria-errormessage': 0,
        'aria-flowto': 0,
        'aria-labelledby': 0,
        'aria-owns': 0,
        'aria-posinset': 0,
        'aria-rowcount': 0,
        'aria-rowindex': 0,
        'aria-rowspan': 0,
        'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    function validateProperty(tagName, name) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (invalidProps.length === 1) error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== 'input' && type !== 'textarea' && type !== 'select') return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === 'select' && props.multiple) error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {};
    var warnedProperties$1 = {};
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
            error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error('Unknown event handler property `%s`. It will be ignored.', name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === 'innerhtml') {
            error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'aria') {
            error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
            error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'number' && isNaN(value)) {
            error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
            else error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (unknownProps.length === 1) error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    // This exists to avoid circular dependency between ReactDOMEventReplaying
    // and DOMPluginEventSystem.
    var currentReplayingEvent = null;
    function setReplayingEvent(event) {
        if (currentReplayingEvent !== null) error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = event;
    }
    function resetReplayingEvent() {
        if (currentReplayingEvent === null) error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = null;
    }
    function isReplayingEvent(event) {
        return event === currentReplayingEvent;
    }
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (typeof restoreImpl !== 'function') throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var flushSyncImpl = function() {};
    var isInsideEventHandler = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            // TODO: Restore state in the microtask, after the discrete updates flush,
            // instead of early flushing them here.
            flushSyncImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, a, b) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, a, b);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    } // TODO: Replace with flushSync
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        flushSyncImpl = _flushSyncImpl;
    }
    function isInteractive(tag) {
        return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (listener && typeof listener !== 'function') throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options, 'passive', {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
    } catch (e) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebook/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (typeof document === 'undefined' || document === null) throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent('Event');
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === 'object') try {
                        error._suppressLogging = true;
                    } catch (inner) {}
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers
            window.addEventListener('error', handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, 'event', windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener('error', handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get(key) {
        return key._reactInternals;
    }
    function has(key) {
        return key._reactInternals !== undefined;
    }
    function set(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var ChildDeletion = /*                */ 16;
    var ContentReset = /*                 */ 32;
    var Callback = /*                     */ 64;
    var DidCapture = /*                   */ 128;
    var ForceClientRender = /*            */ 256;
    var Ref = /*                          */ 512;
    var Snapshot = /*                     */ 1024;
    var Passive = /*                      */ 2048;
    var Hydrating = /*                    */ 4096;
    var Visibility = /*                   */ 8192;
    var StoreConsistency = /*             */ 16384;
    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)
    var HostEffectMask = /*               */ 32767; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 32768;
    var ShouldCapture = /*                */ 65536;
    var ForceUpdateForLegacySuspense = /* */ 131072;
    var Forked = /*                       */ 1048576; // Static tags describe aspects of a fiber that are not specific to a render,
    // e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
    // This enables us to defer more work in the unmount case,
    // since we can defer traversing the tree during layout to look for Passive effects,
    // and instead rely on the static flag as a signal that there may be cleanup work.
    var RefStatic = /*                    */ 2097152;
    var LayoutStatic = /*                 */ 4194304;
    var PassiveStatic = /*                */ 8388608; // These flags allow us to traverse to fibers that have effects on mount
    // without traversing the entire tree after every commit for
    // double invoking
    var MountLayoutDev = /*               */ 16777216;
    var MountPassiveDev = /*              */ 33554432; // Groups of flags that are used in the commit phase to skip over trees that
    // don't contain effects, by checking subtreeFlags.
    var BeforeMutationMask = // flag logic (see #20043)
    Update | Snapshot | 0;
    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
    var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask
    var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
    // This allows certain concepts to persist without recalculating them,
    // e.g. whether a subtree contains passive effects or portals.
    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode);
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || 'A component');
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw new Error('Unable to find node on an unmounted component.');
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) throw new Error('Unable to find node on an unmounted component.');
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                throw new Error('Unable to find node on an unmounted component.');
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (a.tag !== HostRoot) throw new Error('Unable to find node on an unmounted component.');
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
    }
    function findCurrentHostFiberImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) return match;
            child = child.sibling;
        }
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
    }
    function findCurrentHostFiberWithNoPortalsImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) return match;
            }
            child = child.sibling;
        }
        return null;
    }
    // This module only exists as an ESM wrapper around the external CommonJS
    var scheduleCallback = Scheduler.unstable_scheduleCallback;
    var cancelCallback = Scheduler.unstable_cancelCallback;
    var shouldYield = Scheduler.unstable_shouldYield;
    var requestPaint = Scheduler.unstable_requestPaint;
    var now = Scheduler.unstable_now;
    var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var NormalPriority = Scheduler.unstable_NormalPriority;
    var LowPriority = Scheduler.unstable_LowPriority;
    var IdlePriority = Scheduler.unstable_IdlePriority;
    // this doesn't actually exist on the scheduler, but it *does*
    // on scheduler/unstable_mock, which we'll need for internal testing
    var unstable_yieldValue = Scheduler.unstable_yieldValue;
    var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
    var rendererID = null;
    var injectedHook = null;
    var injectedProfilingHooks = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            if (enableSchedulingProfiler) // Conditionally inject these hooks only if Timeline profiler is supported by this build.
            // This gives DevTools a way to feature detect that isn't tied to version number
            // (since profiling and timeline are controlled by different feature flags).
            internals = assign({}, internals, {
                getLaneLabelMap: getLaneLabelMap,
                injectProfilingHooks: injectProfilingHooks
            });
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error('React instrumentation encountered an error: %s.', err);
        }
        if (hook.checkDCE) // This is the real DevTools.
        return true;
        else // This is likely a hook installed by Fast Refresh runtime.
        return false;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitRoot(root, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
                var schedulerPriority;
                switch(eventPriority){
                    case DiscreteEventPriority:
                        schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority;
                        break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
            } else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onPostCommitRoot(root) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue === 'function') {
            // We're in a test because Scheduler.unstable_yieldValue only exists
            // in SchedulerMock. To reduce the noise in strict mode tests,
            // suppress warnings and disable scheduler yielding during the double render
            unstable_setDisableYieldValue(newIsStrictMode);
            setSuppressWarning(newIsStrictMode);
        }
        if (injectedHook && typeof injectedHook.setStrictMode === 'function') try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    } // Profiler API hooks
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function getLaneLabelMap() {
        var map = new Map();
        var lane = 1;
        for(var index = 0; index < TotalLanes; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function markCommitStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') injectedProfilingHooks.markCommitStarted(lanes);
    }
    function markCommitStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') injectedProfilingHooks.markComponentRenderStopped();
    }
    function markComponentPassiveEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
    function markComponentPassiveEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
    function markComponentPassiveEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
    function markComponentPassiveEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
    function markComponentLayoutEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
    function markComponentLayoutEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
    function markComponentLayoutEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
    function markComponentLayoutEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
    function markComponentErrored(fiber, thrownValue, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
    function markComponentSuspended(fiber, wakeable, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
    function markLayoutEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
    function markLayoutEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') injectedProfilingHooks.markLayoutEffectsStopped();
    }
    function markPassiveEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
    function markPassiveEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') injectedProfilingHooks.markPassiveEffectsStopped();
    }
    function markRenderStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderYielded() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') injectedProfilingHooks.markRenderYielded();
    }
    function markRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') injectedProfilingHooks.markRenderStopped();
    }
    function markRenderScheduled(lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') injectedProfilingHooks.markRenderScheduled(lane);
    }
    function markForceUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
    function markStateUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    var NoMode = /*                         */ 0; // TODO: Remove ConcurrentMode by reading from the root tag instead
    var ConcurrentMode = /*                 */ 1;
    var ProfileMode = /*                    */ 2;
    var StrictLegacyMode = /*               */ 8;
    var StrictEffectsMode = /*              */ 16;
    // TODO: This is pretty well supported by browsers. Maybe we can drop it.
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x) {
        var asUint = x >>> 0;
        if (asUint === 0) return 32;
        return 31 - (log(asUint) / LN2 | 0) | 0;
    }
    // If those values are changed that package should be rebuilt and redeployed.
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var InputContinuousHydrationLane = /*    */ 2;
    var InputContinuousLane = /*             */ 4;
    var DefaultHydrationLane = /*            */ 8;
    var DefaultLane = /*                     */ 16;
    var TransitionHydrationLane = /*                */ 32;
    var TransitionLanes = /*                       */ 4194240;
    var TransitionLane1 = /*                        */ 64;
    var TransitionLane2 = /*                        */ 128;
    var TransitionLane3 = /*                        */ 256;
    var TransitionLane4 = /*                        */ 512;
    var TransitionLane5 = /*                        */ 1024;
    var TransitionLane6 = /*                        */ 2048;
    var TransitionLane7 = /*                        */ 4096;
    var TransitionLane8 = /*                        */ 8192;
    var TransitionLane9 = /*                        */ 16384;
    var TransitionLane10 = /*                       */ 32768;
    var TransitionLane11 = /*                       */ 65536;
    var TransitionLane12 = /*                       */ 131072;
    var TransitionLane13 = /*                       */ 262144;
    var TransitionLane14 = /*                       */ 524288;
    var TransitionLane15 = /*                       */ 1048576;
    var TransitionLane16 = /*                       */ 2097152;
    var RetryLanes = /*                            */ 130023424;
    var RetryLane1 = /*                             */ 4194304;
    var RetryLane2 = /*                             */ 8388608;
    var RetryLane3 = /*                             */ 16777216;
    var RetryLane4 = /*                             */ 33554432;
    var RetryLane5 = /*                             */ 67108864;
    var SomeRetryLane = RetryLane1;
    var SelectiveHydrationLane = /*          */ 134217728;
    var NonIdleLanes = /*                          */ 268435455;
    var IdleHydrationLane = /*               */ 268435456;
    var IdleLane = /*                        */ 536870912;
    var OffscreenLane = /*                   */ 1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
    // It should be kept in sync with the Lanes values above.
    function getLabelForLane(lane) {
        if (lane & SyncLane) return 'Sync';
        if (lane & InputContinuousHydrationLane) return 'InputContinuousHydration';
        if (lane & InputContinuousLane) return 'InputContinuous';
        if (lane & DefaultHydrationLane) return 'DefaultHydration';
        if (lane & DefaultLane) return 'Default';
        if (lane & TransitionHydrationLane) return 'TransitionHydration';
        if (lane & TransitionLanes) return 'Transition';
        if (lane & RetryLanes) return 'Retry';
        if (lane & SelectiveHydrationLane) return 'SelectiveHydration';
        if (lane & IdleHydrationLane) return 'IdleHydration';
        if (lane & IdleLane) return 'Idle';
        if (lane & OffscreenLane) return 'Offscreen';
    }
    var NoTimestamp = -1;
    var nextTransitionLane = TransitionLane1;
    var nextRetryLane = RetryLane1;
    function getHighestPriorityLanes(lanes) {
        switch(getHighestPriorityLane(lanes)){
            case SyncLane:
                return SyncLane;
            case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
            case InputContinuousLane:
                return InputContinuousLane;
            case DefaultHydrationLane:
                return DefaultHydrationLane;
            case DefaultLane:
                return DefaultLane;
            case TransitionHydrationLane:
                return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                return lanes & RetryLanes;
            case SelectiveHydrationLane:
                return SelectiveHydrationLane;
            case IdleHydrationLane:
                return IdleHydrationLane;
            case IdleLane:
                return IdleLane;
            case OffscreenLane:
                return OffscreenLane;
            default:
                error('Should have found matching lanes. This is a bug in React.');
                return lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) return NoLanes;
        var nextLanes = NoLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
            }
        } else {
            // The only remaining work is Idle.
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(unblockedLanes);
            else if (pingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(pingedLanes);
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
        // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (// one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
            // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) // Keep working on the existing in-progress tree. Do not interrupt.
            return wipLanes;
        }
        if ((nextLanes & InputContinuousLane) !== NoLanes) // When updates are sync by default, we entangle continuous priority updates
        // and default updates, so they render in the same batch. The only reason
        // they use separate lanes is because continuous updates should interrupt
        // transitions, but default updates should not.
        nextLanes |= pendingLanes & DefaultLane;
         // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        // TODO: Reconsider this. The counter-argument is that the partial work
        // represents an intermediate state, which we don't want to show to the user.
        // And by spending extra time finishing it, we're increasing the amount of
        // time it takes to show the final state, which is what they are actually
        // waiting for.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
                // User interactions should expire slightly more quickly.
                //
                // NOTE: This is set to the corresponding constant as in Scheduler.js.
                // When we made it larger, a product metric in www regressed, suggesting
                // there's a user interaction that's being starved by a series of
                // synchronous updates. If that theory is correct, the proper solution is
                // to fix the starvation. However, this scenario supports the idea that
                // expiration times are an important safeguard when starvation
                // does happen.
                return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return currentTime + 5000;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                // TODO: Retries should be allowed to expire if they are CPU bound for
                // too long, but when I made this change it caused a spike in browser
                // crashes. There must be some other underlying bug; not super urgent but
                // ideally should figure out why and fix it. Unfortunately we don't have
                // a repro for the crashes, only detected via production metrics.
                return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
                // Anything idle priority or lower should never expire.
                return NoTimestamp;
            default:
                error('Should have found matching lanes. This is a bug in React.');
                return NoTimestamp;
        }
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    // are suspended.
    function getHighestPriorityPendingLanes(root) {
        return getHighestPriorityLanes(root.pendingLanes);
    }
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    }
    function includesBlockingLane(root, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
    }
    function includesExpiredLane(root, lanes) {
        // This is a separate check from includesBlockingLane because a lane can
        // expire after a render has already started.
        return (lanes & root.expiredLanes) !== NoLanes;
    }
    function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
    }
    function claimNextTransitionLane() {
        // Cycle through the lanes, assigning each new transition to the next lane.
        // In most cases, this means every transition gets its own lane, until we
        // run out of lanes and cycle back to the beginning.
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        if ((nextTransitionLane & TransitionLanes) === NoLanes) nextTransitionLane = TransitionLane1;
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        if ((nextRetryLane & RetryLanes) === NoLanes) nextRetryLane = RetryLane1;
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    }
    function intersectLanes(a, b) {
        return a & b;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
        // could unblock them. Clear the suspended lanes so that we can try rendering
        // them again.
        //
        // TODO: We really only need to unsuspend only lanes that are in the
        // `subtreeLanes` of the updated fiber, or the update lanes of the return
        // path. This would exclude suspended updates in an unrelated sibling tree,
        // since there's no way for this update to unblock it.
        //
        // We don't do this if the incoming update is idle, because we never process
        // idle updates until after all the regular updates have finished; there's no
        // way it could unblock a transition.
        if (updateLane !== IdleLane) {
            root.suspendedLanes = NoLanes;
            root.pingedLanes = NoLanes;
        }
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = NoLanes;
        root.pingedLanes = NoLanes;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        // In addition to entangling each of the given lanes with each other, we also
        // have to consider _transitive_ entanglements. For each lane that is already
        // entangled with *any* of the given lanes, that lane is now transitively
        // entangled with *all* the given lanes.
        //
        // Translated: If C is entangled with A, then entangling A with B also
        // entangles C with B.
        //
        // If this is hard to grasp, it might help to intentionally break this
        // function and look at the tests that fail in ReactTransition-test.js. Try
        // commenting out one of the conditions below.
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = rootEntangledLanes;
        while(lanes){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            if (lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
            entanglements[index] & entangledLanes) entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
        var renderLane = getHighestPriorityLane(renderLanes);
        var lane;
        switch(renderLane){
            case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
            case DefaultLane:
                lane = DefaultHydrationLane;
                break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                lane = TransitionHydrationLane;
                break;
            case IdleLane:
                lane = IdleHydrationLane;
                break;
            default:
                // Everything else is already either a hydration lane, or shouldn't
                // be retried at a hydration lane.
                lane = NoLane;
                break;
        } // Check if the lane we chose is suspended. If so, that indicates that we
        // already attempted and failed to hydrate at that level. Also check if we're
        // already rendering that lane, which is rare but could happen.
        if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) // Give up trying to hydrate and fall back to client render.
        return NoLane;
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            updaters.add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        var memoizedUpdaters = root.memoizedUpdaters;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                    var alternate = fiber.alternate;
                    if (alternate === null || !memoizedUpdaters.has(alternate)) memoizedUpdaters.add(fiber);
                });
                updaters.clear();
            }
            lanes &= ~lane;
        }
    }
    function getTransitionsForLanes(root, lanes) {
        return null;
    }
    var DiscreteEventPriority = SyncLane;
    var ContinuousEventPriority = InputContinuousLane;
    var DefaultEventPriority = DefaultLane;
    var IdleEventPriority = IdleLane;
    var currentUpdatePriority = NoLane;
    function getCurrentUpdatePriority() {
        return currentUpdatePriority;
    }
    function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
    }
    function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
            currentUpdatePriority = priority;
            return fn();
        } finally{
            currentUpdatePriority = previousPriority;
        }
    }
    function higherEventPriority(a, b) {
        return a !== 0 && a < b ? a : b;
    }
    function lowerEventPriority(a, b) {
        return a === 0 || a > b ? a : b;
    }
    function isHigherEventPriority(a, b) {
        return a !== 0 && a < b;
    }
    function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        if (!isHigherEventPriority(DiscreteEventPriority, lane)) return DiscreteEventPriority;
        if (!isHigherEventPriority(ContinuousEventPriority, lane)) return ContinuousEventPriority;
        if (includesNonIdleWork(lane)) return DefaultEventPriority;
        return IdleEventPriority;
    }
    // This is imported by the event replaying implementation in React DOM. It's
    // in a separate file to break a circular dependency between the renderer and
    // the reconciler.
    function isRootDehydrated(root) {
        var currentState = root.current.memoizedState;
        return currentState.isDehydrated;
    }
    var _attemptSynchronousHydration;
    function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
    }
    function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var getCurrentUpdatePriority$1;
    function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    var discreteReplayableEvents = [
        'mousedown',
        'mouseup',
        'touchcancel',
        'touchend',
        'touchstart',
        'auxclick',
        'dblclick',
        'pointercancel',
        'pointerdown',
        'pointerup',
        'dragend',
        'dragstart',
        'drop',
        'compositionend',
        'compositionstart',
        'keydown',
        'keypress',
        'keyup',
        'input',
        'textInput',
        'copy',
        'cut',
        'paste',
        'click',
        'change',
        'contextmenu',
        'reset',
        'submit'
    ];
    function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case 'focusin':
            case 'focusout':
                queuedFocus = null;
                break;
            case 'dragenter':
            case 'dragleave':
                queuedDrag = null;
                break;
            case 'mouseover':
            case 'mouseout':
                queuedMouse = null;
                break;
            case 'pointerover':
            case 'pointerout':
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case 'focusin':
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case 'dragenter':
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case 'mouseover':
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case 'pointerover':
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case 'gotpointercapture':
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.priority, function() {
                            attemptHydrationAtCurrentPriority(nearestMounted);
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function queueExplicitHydrationTarget(target) {
        // TODO: This will read the priority if it's dispatched by the React
        // event system but not native events. Should read window.event.type, like
        // we do for updates (getCurrentEventPriority).
        var updatePriority = getCurrentUpdatePriority$1();
        var queuedTarget = {
            blockedOn: null,
            target: target,
            priority: updatePriority
        };
        var i = 0;
        for(; i < queuedExplicitHydrationTargets.length; i++){
            // Stop once we hit the first target with lower priority than
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) break;
        }
        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
        if (i === 0) attemptExplicitHydrationTarget(queuedTarget);
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
            } else {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false;
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            case DefaultEventPriority:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
    }
    function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
        } // We need to clear only if we didn't queue because
        // queueing is accumulative.
        clearIfContinuousEvent(domEventName, nativeEvent);
        if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while(blockedOn !== null){
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) attemptSynchronousHydration(fiber);
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                if (nextBlockedOn === blockedOn) break;
                blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) nativeEvent.stopPropagation();
            return;
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    }
    var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
    // The return_targetInst field above is conceptually part of the return value.
    function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        return_targetInst = null;
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        return_targetInst = targetInst; // We're not blocked on anything.
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            // Used by SimpleEventPlugin:
            case 'cancel':
            case 'click':
            case 'close':
            case 'contextmenu':
            case 'copy':
            case 'cut':
            case 'auxclick':
            case 'dblclick':
            case 'dragend':
            case 'dragstart':
            case 'drop':
            case 'focusin':
            case 'focusout':
            case 'input':
            case 'invalid':
            case 'keydown':
            case 'keypress':
            case 'keyup':
            case 'mousedown':
            case 'mouseup':
            case 'paste':
            case 'pause':
            case 'play':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointerup':
            case 'ratechange':
            case 'reset':
            case 'resize':
            case 'seeked':
            case 'submit':
            case 'touchcancel':
            case 'touchend':
            case 'touchstart':
            case 'volumechange':
            // eslint-disable-next-line no-fallthrough
            case 'change':
            case 'selectionchange':
            case 'textInput':
            case 'compositionstart':
            case 'compositionend':
            case 'compositionupdate':
            // eslint-disable-next-line no-fallthrough
            case 'beforeblur':
            case 'afterblur':
            // eslint-disable-next-line no-fallthrough
            case 'beforeinput':
            case 'blur':
            case 'fullscreenchange':
            case 'focus':
            case 'hashchange':
            case 'popstate':
            case 'select':
            case 'selectstart':
                return DiscreteEventPriority;
            case 'drag':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'mousemove':
            case 'mouseout':
            case 'mouseover':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'scroll':
            case 'toggle':
            case 'touchmove':
            case 'wheel':
            // eslint-disable-next-line no-fallthrough
            case 'mouseenter':
            case 'mouseleave':
            case 'pointerenter':
            case 'pointerleave':
                return ContinuousEventPriority;
            case 'message':
                // We might be in the Scheduler callback.
                // Eventually this mechanism will be replaced by a check
                // of the current priority on the native scheduler.
                var schedulerPriority = getCurrentPriorityLevel();
                switch(schedulerPriority){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority:
                    case LowPriority:
                        // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ('value' in root) return root.value;
        return root.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== 'unknown') event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== 'unknown') // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {},
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === 'mousemove') {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ('movementX' in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ('movementY' in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified'
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        '8': 'Backspace',
        '9': 'Tab',
        '12': 'Clear',
        '13': 'Enter',
        '16': 'Shift',
        '17': 'Control',
        '18': 'Alt',
        '19': 'Pause',
        '20': 'CapsLock',
        '27': 'Escape',
        '32': ' ',
        '33': 'PageUp',
        '34': 'PageDown',
        '35': 'End',
        '36': 'Home',
        '37': 'ArrowLeft',
        '38': 'ArrowUp',
        '39': 'ArrowRight',
        '40': 'ArrowDown',
        '45': 'Insert',
        '46': 'Delete',
        '112': 'F1',
        '113': 'F2',
        '114': 'F3',
        '115': 'F4',
        '116': 'F5',
        '117': 'F6',
        '118': 'F7',
        '119': 'F8',
        '120': 'F9',
        '121': 'F10',
        '122': 'F11',
        '123': 'F12',
        '144': 'NumLock',
        '145': 'ScrollLock',
        '224': 'Meta'
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        return '';
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === 'keypress') return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === 'keypress') return getEventCharCode(event);
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;
    if (canUseDOM && 'documentMode' in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent('onBeforeInput', [
            'compositionend',
            'keypress',
            'textInput',
            'paste'
        ]);
        registerTwoPhaseEvent('onCompositionEnd', [
            'compositionend',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionStart', [
            'compositionstart',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionUpdate', [
            'compositionupdate',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
        !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case 'compositionstart':
                return 'onCompositionStart';
            case 'compositionend':
                return 'onCompositionEnd';
            case 'compositionupdate':
                return 'onCompositionUpdate';
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case 'keyup':
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case 'keydown':
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = 'onCompositionStart';
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = 'onCompositionEnd';
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === 'onCompositionStart') isComposing = initialize(nativeEventTarget);
            else if (eventType === 'onCompositionEnd') {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case 'compositionend':
                return getDataFromCustomEvent(nativeEvent);
            case 'keypress':
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case 'textInput':
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case 'paste':
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case 'keypress':
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case 'compositionend':
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === 'input') return !!supportedInputTypes[elem.type];
        if (nodeName === 'textarea') return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent('onChange', [
            'change',
            'click',
            'focusin',
            'focusout',
            'input',
            'keydown',
            'keyup',
            'selectionchange'
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, 'onChange');
        if (listeners.length > 0) {
            var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === 'change') return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent('onpropertychange', handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === 'focusin') {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === 'focusout') stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === 'click') return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === 'input' || domEventName === 'change') return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== 'number') return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === 'focusout') handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent('onMouseEnter', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onMouseLeave', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onPointerEnter', [
            'pointerout',
            'pointerover'
        ]);
        registerDirectEvent('onPointerLeave', [
            'pointerout',
            'pointerover'
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
        var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = 'onMouseLeave';
        var enterEventType = 'onMouseEnter';
        var eventTypePrefix = 'mouse';
        if (domEventName === 'pointerout' || domEventName === 'pointerover') {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = 'onPointerLeave';
            enterEventType = 'onPointerEnter';
            eventTypePrefix = 'pointer';
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === 'function' ? Object.is : is;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ('contains' in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === 'string';
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === 'function') priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ('selectionStart' in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent('onSelect', [
            'focusout',
            'contextmenu',
            'dragend',
            'focusin',
            'keydown',
            'keyup',
            'mousedown',
            'mouseup',
            'selectionchange'
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ('selectionStart' in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');
            if (listeners.length > 0) {
                var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case 'focusin':
                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case 'focusout':
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case 'mousedown':
                mouseDown = true;
                break;
            case 'contextmenu':
            case 'mouseup':
            case 'dragend':
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case 'selectionchange':
                if (skipSelectionChangeEvent) break;
            // falls through
            case 'keydown':
            case 'keyup':
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {};
    /**
 * Element to check for prefixes on.
 */ var style = {};
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!('TransitionEvent' in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName('animationend');
    var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
    var ANIMATION_START = getVendorPrefixedEventName('animationstart');
    var TRANSITION_END = getVendorPrefixedEventName('transitionend');
    var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
    //
    // E.g. it needs "pointerDown", not "pointerdown".
    // This is because we derive both React name ("onPointerDown")
    // and DOM name ("pointerdown") from the same list.
    //
    // Exceptions that don't match this convention are listed separately.
    //
    // prettier-ignore
    var simpleEventPluginEvents = [
        'abort',
        'auxClick',
        'cancel',
        'canPlay',
        'canPlayThrough',
        'click',
        'close',
        'contextMenu',
        'copy',
        'cut',
        'drag',
        'dragEnd',
        'dragEnter',
        'dragExit',
        'dragLeave',
        'dragOver',
        'dragStart',
        'drop',
        'durationChange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'gotPointerCapture',
        'input',
        'invalid',
        'keyDown',
        'keyPress',
        'keyUp',
        'load',
        'loadedData',
        'loadedMetadata',
        'loadStart',
        'lostPointerCapture',
        'mouseDown',
        'mouseMove',
        'mouseOut',
        'mouseOver',
        'mouseUp',
        'paste',
        'pause',
        'play',
        'playing',
        'pointerCancel',
        'pointerDown',
        'pointerMove',
        'pointerOut',
        'pointerOver',
        'pointerUp',
        'progress',
        'rateChange',
        'reset',
        'resize',
        'seeked',
        'seeking',
        'stalled',
        'submit',
        'suspend',
        'timeUpdate',
        'touchCancel',
        'touchEnd',
        'touchStart',
        'volumeChange',
        'scroll',
        'toggle',
        'touchMove',
        'waiting',
        'wheel'
    ];
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function registerSimpleEvents() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, 'on' + capitalizedEvent);
        } // Special cases where event names don't match.
        registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');
        registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');
        registerSimpleEvent(ANIMATION_START, 'onAnimationStart');
        registerSimpleEvent('dblclick', 'onDoubleClick');
        registerSimpleEvent('focusin', 'onFocus');
        registerSimpleEvent('focusout', 'onBlur');
        registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case 'keypress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case 'keydown':
            case 'keyup':
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case 'focusin':
                reactEventType = 'focus';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'focusout':
                reactEventType = 'blur';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'beforeblur':
            case 'afterblur':
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'click':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case 'auxclick':
            case 'dblclick':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            /* falls through */ case 'mouseout':
            case 'mouseover':
            case 'contextmenu':
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case 'drag':
            case 'dragend':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'dragstart':
            case 'drop':
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case 'touchcancel':
            case 'touchend':
            case 'touchmove':
            case 'touchstart':
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case 'scroll':
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case 'wheel':
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case 'copy':
            case 'cut':
            case 'paste':
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'pointerup':
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
        // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === 'scroll';
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't foresee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        'abort',
        'canplay',
        'canplaythrough',
        'durationchange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'loadeddata',
        'loadedmetadata',
        'loadstart',
        'pause',
        'play',
        'playing',
        'progress',
        'ratechange',
        'resize',
        'seeked',
        'seeking',
        'stalled',
        'suspend',
        'timeupdate',
        'volumechange',
        'waiting'
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        'cancel',
        'close',
        'invalid',
        'load',
        'scroll',
        'toggle'
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || 'unknown-event';
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        if (!nonDelegatedEvents.has(domEventName)) error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    } // This is only used by createEventHandle when the
    var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
                // We handle selectionchange separately because it
                // doesn't bubble and needs to be on the document.
                if (domEventName !== 'selectionchange') {
                    if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement);
                    listenToNativeEvent(domEventName, true, rootContainerElement);
                }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) // The selectionchange event also needs deduplication
            // but it is attached to the document.
            {
                if (!ownerDocument[listeningMarker]) {
                    ownerDocument[listeningMarker] = true;
                    listenToNativeEvent('selectionchange', false, ownerDocument);
                }
            }
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') isPassiveListener = true;
        }
        targetContainer;
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        var captureName = reactName !== null ? reactName + 'Capture' : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
             // If we are processing the onBeforeBlur event, then we need to take
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + 'Capture';
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? 'capture' : 'bubble');
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE = 'style';
    var HTML$1 = '__html';
    var warnedUnknownTags;
    var validatePropertiesInDevelopment;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error('Extra attributes from the server: %s', names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
    }
    function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        if (shouldWarnDev) {
            if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            }
        }
        if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) // In concurrent roots, we throw when there's a text mismatch and revert to
        // client rendering, up to the nearest Suspense boundary.
        throw new Error('Text content does not match server-rendered HTML.');
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {}
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string') {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === 'number') setTextContent(domElement, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === 'string') // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === 'select') {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                props = rawProps;
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                props = rawProps;
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                props = rawProps;
                break;
            case 'input':
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'option':
                postMountWrapper$1(domElement, rawProps);
                break;
            case 'select':
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case 'input':
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'select':
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'textarea':
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {};
                    styleUpdates[styleName] = '';
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = '';
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string' || typeof nextProp === 'number') (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case 'textarea':
                updateWrapper$1(domElement, nextRawProps);
                break;
            case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag;
        var extraAttributeNames;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                break;
            case 'input':
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case 'value':
                    break;
                case 'checked':
                    break;
                case 'selected':
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                    if (domElement.textContent !== nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === 'number') {
                    if (domElement.textContent !== '' + nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            '' + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag === 'boolean') {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === 'value' || propKey === 'checked' || propKey === 'selected') ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute('style');
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        if (shouldWarnDev) {
            if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) // $FlowFixMe - Should be inferred as not undefined.
            warnForExtraAttributes(extraAttributeNames);
        }
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'select':
            case 'option':
                break;
            default:
                if (typeof rawProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === '') // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case 'input':
                restoreControlledState(domElement, props);
                return;
            case 'textarea':
                restoreControlledState$2(domElement, props);
                return;
            case 'select':
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {};
    var updatedAncestorInfo = function() {};
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        'address',
        'applet',
        'area',
        'article',
        'aside',
        'base',
        'basefont',
        'bgsound',
        'blockquote',
        'body',
        'br',
        'button',
        'caption',
        'center',
        'col',
        'colgroup',
        'dd',
        'details',
        'dir',
        'div',
        'dl',
        'dt',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'frame',
        'frameset',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'iframe',
        'img',
        'input',
        'isindex',
        'li',
        'link',
        'listing',
        'main',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'nav',
        'noembed',
        'noframes',
        'noscript',
        'object',
        'ol',
        'p',
        'param',
        'plaintext',
        'pre',
        'script',
        'section',
        'select',
        'source',
        'style',
        'summary',
        'table',
        'tbody',
        'td',
        'template',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'title',
        'tr',
        'track',
        'ul',
        'wbr',
        'xmp'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        'applet',
        'caption',
        'html',
        'table',
        'td',
        'th',
        'marquee',
        'object',
        'template',
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        'foreignObject',
        'desc',
        'title'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        'button'
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        'dd',
        'dt',
        'li',
        'option',
        'optgroup',
        'p',
        'rp',
        'rt'
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') ancestorInfo.formTag = info;
        if (tag === 'a') ancestorInfo.aTagInScope = info;
        if (tag === 'button') ancestorInfo.buttonTagInScope = info;
        if (tag === 'nobr') ancestorInfo.nobrTagInScope = info;
        if (tag === 'p') ancestorInfo.pTagInButtonScope = info;
        if (tag === 'li') ancestorInfo.listItemTagAutoclosing = info;
        if (tag === 'dd' || tag === 'dt') ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
            case 'optgroup':
                return tag === 'option' || tag === '#text';
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case 'option':
                return tag === '#text';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case 'tbody':
            case 'thead':
            case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case 'colgroup':
                return tag === 'col' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case 'html':
                return tag === 'head' || tag === 'body' || tag === 'frameset';
            case 'frameset':
                return tag === 'frame';
            case '#document':
                return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
            case 'rp':
            case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;
            case 'body':
            case 'caption':
            case 'col':
            case 'colgroup':
            case 'frameset':
            case 'frame':
            case 'head':
            case 'html':
            case 'tbody':
            case 'td':
            case 'tfoot':
            case 'th':
            case 'thead':
            case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case 'address':
            case 'article':
            case 'aside':
            case 'blockquote':
            case 'center':
            case 'details':
            case 'dialog':
            case 'dir':
            case 'div':
            case 'dl':
            case 'fieldset':
            case 'figcaption':
            case 'figure':
            case 'footer':
            case 'header':
            case 'hgroup':
            case 'main':
            case 'menu':
            case 'nav':
            case 'ol':
            case 'p':
            case 'section':
            case 'summary':
            case 'ul':
            case 'pre':
            case 'listing':
            case 'table':
            case 'hr':
            case 'xmp':
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return ancestorInfo.pTagInButtonScope;
            case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case 'li':
                return ancestorInfo.listItemTagAutoclosing;
            case 'dd':
            case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;
            case 'button':
                return ancestorInfo.buttonTagInScope;
            case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case 'nobr':
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {};
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error('validateDOMNesting: when childText is passed, childTag should be null');
            childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';
        if (childTag === '#text') {
            if (/\S/.test(childText)) tagDisplayName = 'Text nodes';
            else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = '<' + childTag + '>';
        if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE$1 = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, '');
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === 'string' || typeof props.children === 'number') {
            var string = '' + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                return !!props.autoFocus;
            case 'img':
                return true;
            default:
                return false;
        }
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
            var string = '' + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === 'textarea' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    function getCurrentEventPriority() {
        var currentEvent = window.event;
        if (currentEvent === undefined) return DefaultEventPriority;
        return getEventPriority(currentEvent.type);
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1;
    var localPromise = typeof Promise === 'function' ? Promise : undefined; // -------------------
    var scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : typeof localPromise !== 'undefined' ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout; // TODO: Determine the best fallback here.
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    } // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                if (newProps.autoFocus) domElement.focus();
                return;
            case 'img':
                if (newProps.src) domElement.src = newProps.src;
                return;
        }
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, '');
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance; // Delete all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) {
                        parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    } else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) depth++;
            }
            node = nextNode;
        }while (node); // TODO: Warn, we didn't find the end comment boundary.
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        if (container.nodeType === COMMENT_NODE) clearSuspenseBoundary(container.parentNode, suspenseInstance);
        else if (container.nodeType === ELEMENT_NODE) clearSuspenseBoundary(container, suspenseInstance);
         // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function hideInstance(instance) {
        // TODO: Does this work for all element types? What about MathML? Should we
        // pass host context to this method?
        instance;
        var style = instance.style;
        if (typeof style.setProperty === 'function') style.setProperty('display', 'none', 'important');
        else style.display = 'none';
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = '';
    }
    function unhideInstance(instance, props) {
        instance;
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
        instance.style.display = dangerousStyleValue('display', display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = '';
        else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) container.removeChild(container.documentElement);
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === '' || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function canHydrateSuspenseInstance(instance) {
        if (instance.nodeType !== COMMENT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a suspense node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getSuspenseInstanceFallbackErrorDetails(instance) {
        var dataset = instance.nextSibling && instance.nextSibling.dataset;
        var digest, message, stack;
        if (dataset) {
            digest = dataset.dgst;
            message = dataset.msg;
            stack = dataset.stck;
        }
        return {
            message: message,
            digest: digest,
            stack: stack
        };
    // const nextSibling = instance.nextSibling;
    // if (nextSibling) {
    //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
    //   value.message = dataset.msg;
    //   value.hash = dataset.hash;
    //   if (true) {
    //     value.stack = dataset.stack;
    //   }
    // }
    // return value;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
            if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) break;
                if (nodeData === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
    }
    function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
    }
    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== 'head' && parentType !== 'body';
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = true;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
    }
    function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentNode, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentNode, instance);
        }
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
    }
    function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function errorHydratingContainer(parentContainer) {
        // TODO: This gets logged by onRecoverableError, too, so we should be
        // able to remove it.
        error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.', parentContainer.nodeName.toLowerCase());
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactFiber$' + randomKey;
    var internalPropsKey = '__reactProps$' + randomKey;
    var internalContainerInstanceKey = '__reactContainer$' + randomKey;
    var internalEventHandlersKey = '__reactEvents$' + randomKey;
    var internalEventHandlerListenersKey = '__reactListeners$' + randomKey;
    var internalEventHandlesSetKey = '__reactHandles$' + randomKey;
    function detachDeletedInstance(node) {
        // TODO: This function is only called on host components. I don't think all of
        // these fields are relevant.
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        throw new Error('getNodeFromInstance: Invalid argument.');
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index < 0) {
            error('Unexpected pop.');
            return;
        }
        if (fiber !== fiberStack[index]) error('Unexpected Fiber popped.');
        cursor.current = valueStack[index];
        valueStack[index] = null;
        fiberStack[index] = null;
        index--;
    }
    function push(cursor, value, fiber) {
        index++;
        valueStack[index] = cursor.current;
        fiberStack[index] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {};
    var emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentNameFromFiber(workInProgress) || 'Unknown';
        checkPropTypes(contextTypes, context, 'context', name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== 'function') {
            var componentName = getComponentNameFromFiber(fiber) || 'Unknown';
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
        var name = getComponentNameFromFiber(fiber) || 'Unknown';
        checkPropTypes(childContextTypes, childContext, 'child context', name);
        return assign({}, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var ConcurrentRoot = 1;
    var syncQueue = null;
    var includesLegacySyncCallbacks = false;
    var isFlushingSyncQueue = false;
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) syncQueue = [
            callback
        ];
        else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
    }
    function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = true;
        scheduleSyncCallback(callback);
    }
    function flushSyncCallbacksOnlyInLegacyMode() {
        // Only flushes the queue if there's a legacy sync callback scheduled.
        // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
        // it might make more sense for the queue to be a list of roots instead of a
        // list of generic callbacks. Then we can have two: one for legacy roots, one
        // for concurrent roots. And this method would only flush the legacy ones.
        if (includesLegacySyncCallbacks) flushSyncCallbacks();
    }
    function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrance.
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
                var isSync = true;
                var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
                // queue is in the render or commit phases.
                setCurrentUpdatePriority(DiscreteEventPriority);
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(isSync);
                    while (callback !== null);
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error;
            } finally{
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
            }
        }
        return null;
    }
    // TODO: Use the unified fiber stack module instead of this local one?
    // Intentionally not using it yet to derisk the initial implementation, because
    // the way we push/pop these values is a bit unusual. If there's a mistake, I'd
    // rather the ids be wrong than crash the whole reconciler.
    var forkStack = [];
    var forkStackIndex = 0;
    var treeForkProvider = null;
    var treeForkCount = 0;
    var idStack = [];
    var idStackIndex = 0;
    var treeContextProvider = null;
    var treeContextId = 1;
    var treeContextOverflow = '';
    function isForkedChild(workInProgress) {
        warnIfNotHydrating();
        return (workInProgress.flags & Forked) !== NoFlags;
    }
    function getForksAtLevel(workInProgress) {
        warnIfNotHydrating();
        return treeForkCount;
    }
    function getTreeId() {
        var overflow = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        // This is called right after we reconcile an array (or iterator) of child
        // fibers, because that's the only place where we know how many children in
        // the whole set without doing extra work later, or storing addtional
        // information on the fiber.
        //
        // That's why this function is separate from pushTreeId — it's called during
        // the render phase of the fork parent, not the child, which is where we push
        // the other context values.
        //
        // In the Fizz implementation this is much simpler because the child is
        // rendered in the same callstack as the parent.
        //
        // It might be better to just add a `forks` field to the Fiber type. It would
        // make this module simpler.
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
        // of the id; we use it to account for leading 0s.
        var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
        var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
        var slot = index + 1;
        var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
        // consideration the leading 1 we use to mark the end of the sequence.
        if (length > 30) {
            // We overflowed the bitwise-safe range. Fall back to slower algorithm.
            // This branch assumes the length of the base id is greater than 5; it won't
            // work for smaller ids, because you need 5 bits per character.
            //
            // We encode the id in multiple steps: first the base id, then the
            // remaining digits.
            //
            // Each 5 bit sequence corresponds to a single base 32 character. So for
            // example, if the current id is 23 bits long, we can convert 20 of those
            // bits into a string of 4 characters, with 3 bits left over.
            //
            // First calculate how many bits in the base id represent a complete
            // sequence of characters.
            var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.
            var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.
            var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
            // we made more room, this time it won't overflow.
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
        } else {
            // Normal path
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
        }
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
        // in its children.
        var returnFiber = workInProgress.return;
        if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress, numberOfForks);
            pushTreeId(workInProgress, numberOfForks, slotIndex);
        }
    }
    function getBitLength(number) {
        return 32 - clz32(number);
    }
    function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
    }
    function popTreeContext(workInProgress) {
        // Restore the previous values.
        // This is a bit more complicated than other context-like modules in Fiber
        // because the same Fiber may appear on the stack multiple times and for
        // different reasons. We have to keep popping until the work-in-progress is
        // no longer at the top of the stack.
        while(workInProgress === treeForkProvider){
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
        }
        while(workInProgress === treeContextProvider){
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
        }
    }
    function getSuspendedTreeContext() {
        warnIfNotHydrating();
        if (treeContextProvider !== null) return {
            id: treeContextId,
            overflow: treeContextOverflow
        };
        else return null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextId = suspendedContext.id;
        treeContextOverflow = suspendedContext.overflow;
        treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
        if (!getIsHydrating()) error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
    // due to earlier mismatches or a suspended fiber.
    var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary
    var hydrationErrors = null;
    function warnIfHydrating() {
        if (isHydrating) error('We should not be hydrating here. This is a bug in React. Please file a bug.');
    }
    function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = true;
    }
    function didSuspendOrErrorWhileHydratingDEV() {
        return didSuspendOrErrorDEV;
    }
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        return true;
    }
    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        if (treeContext !== null) restoreSuspendedTreeContext(fiber, treeContext);
        return true;
    }
    function warnUnhydratedInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
        }
    }
    function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                childToDelete
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(childToDelete);
    }
    function warnNonhydratedInstance(returnFiber, fiber) {
        if (didSuspendOrErrorDEV) // Inside a boundary that already suspended. We're currently rendering the
        // siblings of a suspended node. The mismatch may be due to the missing
        // data, so it's probably a false positive.
        return;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                        break;
                }
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null) switch(fiber.tag){
                    case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                    case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        warnNonhydratedInstance(returnFiber, fiber);
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    hydrationParentFiber = fiber;
                    nextHydratableInstance = getFirstHydratableChild(instance);
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            case SuspenseComponent:
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                    var suspenseState = {
                        dehydrated: suspenseInstance,
                        treeContext: getSuspendedTreeContext(),
                        retryLane: OffscreenLane
                    };
                    fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                    // This simplifies the code for getHostSibling and deleting nodes,
                    // since it doesn't have to consider all Suspense boundaries and
                    // check if they're dehydrated ones or not.
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
                    // it during the first pass. Instead, we'll reenter it later.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            default:
                return false;
        }
    }
    function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
    }
    function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                    break;
            }
        }
        return shouldUpdate;
    }
    function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
        } // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them. We also don't delete anything inside the root container.
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                    warnIfUnhydratedTailNodes(fiber);
                    throwOnHydrationMismatch();
                } else while(nextInstance){
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                }
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function hasUnhydratedTailNodes() {
        return isHydrating && nextHydratableInstance !== null;
    }
    function warnIfUnhydratedTailNodes(fiber) {
        var nextInstance = nextHydratableInstance;
        while(nextInstance){
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
        }
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating = false;
        didSuspendOrErrorDEV = false;
    }
    function upgradeHydrationErrorsToRecoverable() {
        if (hydrationErrors !== null) {
            // Successfully completed a forced client render. The errors that occurred
            // during the hydration attempt are now recovered. We will log them in
            // commit phase, once the entire tree has finished.
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
        }
    }
    function getIsHydrating() {
        return isHydrating;
    }
    function queueHydrationError(error) {
        if (hydrationErrors === null) hydrationErrors = [
            error
        ];
        else hydrationErrors.push(error);
    }
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = null;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function(fiber, instance) {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictLegacyMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(', ');
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedupe strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {};
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {};
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {};
    ownerHasFunctionTypeWarning = {};
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== 'object') return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (typeof child._store !== 'object') throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
    };
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
            // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self) && // Will already throw with "Function components cannot have string refs"
            !(element._owner && element._owner.tag !== ClassComponent) && // Will already warn with "Function components cannot be given refs"
            !(typeof element.type === 'function' && !isReactClass(element.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
            element._owner) {
                var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
                if (!didWarnAboutStringRefs[componentName]) {
                    error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (ownerFiber.tag !== ClassComponent) throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + 'bug in React. Please file an issue.');
                 // Assigning this to a const so Flow knows it won't change in the closure
                var resolvedInst = inst;
                checkPropStringCoercion(mixedRef, 'ref');
                var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = resolvedInst.refs;
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (typeof mixedRef !== 'string') throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');
                if (!element._owner) throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + ' the following reasons:\n' + '1. You may be adding a ref to a function component\n' + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + '3. You have multiple copies of React loaded\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    }
    function resolveLazy(lazyType) {
        var payload = lazyType._payload;
        var init = lazyType._init;
        return init(payload);
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
                returnFiber.deletions = [
                    childToDelete
                ];
                returnFiber.flags |= ChildDeletion;
            } else deletions.push(childToDelete);
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
                // During hydration, the useId algorithm needs to know which fibers are
                // part of a list of children (arrays, iterators).
                newFiber.flags |= Forked;
                return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags |= Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags |= Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags |= Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
            if (current !== null) {
                if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.
                // We need to do this after the Hot Reloading check above,
                // because hot reloading has different semantics than prod because
                // it doesn't resuspend. So we can't let the call below suspend.
                typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return createChild(returnFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) return updateElement(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== 'object' || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== 'string') break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                    var _numberOfForks = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== 'function') throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
            newChildrenIterable[Symbol.toStringTag] === 'Generator') {
                if (!didWarnAboutGenerators) error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) throw new Error('An iterable object provided no iterator.');
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                    var _numberOfForks3 = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    var elementType = element.type;
                    if (elementType === REACT_FRAGMENT_TYPE) {
                        if (child.tag === Fragment) {
                            deleteRemainingChildren(returnFiber, child.sibling);
                            var existing = useFiber(child, element.props.children);
                            existing.return = returnFiber;
                            existing._debugSource = element._source;
                            existing._debugOwner = element._owner;
                            return existing;
                        }
                    } else if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
                    // We need to do this after the Hot Reloading check above,
                    // because hot reloading has different semantics than prod because
                    // it doesn't resuspend. So we can't let the call below suspend.
                    typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing = useFiber(child, element.props);
                        _existing.ref = coerceRef(returnFiber, child, element);
                        _existing.return = returnFiber;
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                        return _existing;
                    }
                     // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_PORTAL_TYPE:
                        return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init; // TODO: This function is supposed to be non-recursive.
                        return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (current !== null && workInProgress.child !== current.child) throw new Error('Resuming work not yet implemented.');
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {};
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastFullyObservedContext = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        context._currentValue = currentValue;
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            if (node === propagationRoot) break;
            node = node.return;
        }
        if (node !== propagationRoot) error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChange(workInProgress, context, renderLanes) {
        propagateContextChange_eager(workInProgress, context, renderLanes);
    }
    function propagateContextChange_eager(workInProgress, context, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var lane = pickArbitraryLane(renderLanes);
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            // Inlined `enqueueUpdate` to remove interleaved update check
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) ;
                            else {
                                var sharedQueue = updateQueue.shared;
                                var pending = sharedQueue.pending;
                                if (pending === null) // This is the first update. Create a circular list.
                                update.next = update;
                                else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                            }
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else if (fiber.tag === DehydratedFragment) {
                // If a dehydrated suspense boundary is in this subtree, we don't know
                // if it will have any context consumers in it. The best we can do is
                // mark it as having updates.
                var parentSuspense = fiber.return;
                if (parentSuspense === null) throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
                 // This is intentionally passing this fiber as the parent
                // because we want to schedule this fiber as having work
                // on its children. We'll use the childLanes on
                // this fiber to indicate that a context has changed.
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
                nextFiber = fiber.sibling;
            } else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext === context) ;
        else {
            var contextItem = {
                context: context,
                memoizedValue: value,
                next: null
            };
            if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
    }
    // render. When this render exits, either because it finishes or because it is
    // interrupted, the interleaved updates will be transferred onto the main part
    // of the queue.
    var concurrentQueues = null;
    function pushConcurrentUpdateQueue(queue) {
        if (concurrentQueues === null) concurrentQueues = [
            queue
        ];
        else concurrentQueues.push(queue);
    }
    function finishQueueingConcurrentUpdates() {
        // Transfer the interleaved updates onto the main queue. Each queue has a
        // `pending` field and an `interleaved` field. When they are not null, they
        // point to the last node in a circular linked list. We need to append the
        // interleaved list to the end of the pending list by joining them into a
        // single, circular list.
        if (concurrentQueues !== null) {
            for(var i = 0; i < concurrentQueues.length; i++){
                var queue = concurrentQueues[i];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                    queue.interleaved = null;
                    var firstInterleavedUpdate = lastInterleavedUpdate.next;
                    var lastPendingUpdate = queue.pending;
                    if (lastPendingUpdate !== null) {
                        var firstPendingUpdate = lastPendingUpdate.next;
                        lastPendingUpdate.next = firstInterleavedUpdate;
                        lastInterleavedUpdate.next = firstPendingUpdate;
                    }
                    queue.pending = lastInterleavedUpdate;
                }
            }
            concurrentQueues = null;
        }
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
    }
    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    } // Calling this function outside this module should only be done for backwards
    // compatibility and should always be accompanied by a warning.
    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return null;
        var sharedQueue = updateQueue.shared;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
        if (isUnsafeClassRenderPhaseUpdate()) {
            // This is an unsafe render phase update. Add directly to the update
            // queue so we can process it immediately during the current render.
            var pending = sharedQueue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
            // this fiber. This is for backwards compatibility in the case where you
            // update a different component during render phase than the one that is
            // currently renderings (a pattern that is accompanied by a warning).
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
        } else return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
    }
    function entangleTransitions(root, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
            // have finished. We can remove them from the shared queue, which represents
            // a superset of the actually pending lanes. In some cases we may entangle
            // more than we need to, but that's OK. In fact it's worse if we *don't*
            // entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null); // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return assign({}, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null && // If the update was already committed, we should not queue its
                    // callback again.
                    update.lane !== NoLane) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true);
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
            // process them during this render, but we do need to track which lanes
            // are remaining.
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                    newLanes = mergeLanes(newLanes, interleaved.lane);
                    interleaved = interleaved.next;
                }while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) // `queue.lanes` is used for entangling transitions. We can set it back to
            // zero once the queue is empty.
            queue.shared.lanes = NoLanes;
             // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if (typeof callback !== 'function') throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + ("received: " + callback));
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
            }
        }
    }
    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (c === NO_CONTEXT) throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // Regular boundaries always capture.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
            // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*   */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Insertion = /*  */ 2;
    var Layout = /*    */ 4;
    var Passive$1 = /*   */ 8;
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnUncachedGetSnapshot;
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.
    var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
    // hydration). This counter is global, so client ids are not stable across
    // render attempts.
    var globalClientIdCounter = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = '';
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += ' ';
                    row += newHookName + '\n';
                    table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass);
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
        // render. If this fires, it suggests that we incorrectly reset the static
        // flags in some other part of the codebase. This has happened before, for
        // example, in the SuspenseList implementation.
        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
        // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current.mode & ConcurrentMode) !== NoMode) error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
        // localIdCounter = 0;
        if (didRenderTooFewHooks) throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function checkDidRenderIdHook() {
        // This should be called immediately after every renderWithHooks call.
        // Conceptually, it's part of the return value of renderWithHooks; it's only a
        // separate function to avoid using an array tuple.
        var didRenderIdHook = localIdCounter !== 0;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
        // complete phase (bubbleProperties).
        if ((workInProgress.mode & StrictEffectsMode) !== NoMode) workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
        else workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
        localIdCounter = 0;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (nextCurrentHook === null) throw new Error('Rendered more hooks than during the previous render.');
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            stores: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === 'function' ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
        queue.lastRenderedReducer = reducer;
        var current = currentHook; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            hasEagerState: update.hasEagerState,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.hasEagerState) // If this update is a state update (not a reducer) and was processed eagerly,
                    // we can use the eagerly computed state
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first);
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        } // Interleaved updates are stored on a separate queue. We aren't going to
        // process them during this render, but we do need to track which lanes
        // are remaining.
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
            }while (interleaved !== lastInterleaved);
        } else if (baseQueue === null) // `queue.lanes` is used for entangling transitions. We can set it back to
        // zero once the queue is empty.
        queue.lanes = NoLanes;
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = mountWorkInProgressHook();
        var nextSnapshot;
        var isHydrating = getIsHydrating();
        if (isHydrating) {
            if (getServerSnapshot === undefined) throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            nextSnapshot = getServerSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                    error('The result of getServerSnapshot should be cached to avoid an infinite loop');
                    didWarnUncachedGetSnapshot = true;
                }
            }
        } else {
            nextSnapshot = getSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error('The result of getSnapshot should be cached to avoid an infinite loop');
                    didWarnUncachedGetSnapshot = true;
                }
            }
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            //
            // We won't do this if we're hydrating server-rendered content, because if
            // the content is stale, it's already visible anyway. Instead we'll patch
            // it up in a passive effect.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        } // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        hook.memoizedState = nextSnapshot;
        var inst = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = inst; // Schedule an effect to subscribe to the store.
        mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Schedule an effect to update the mutable instance fields. We will update
        // this whenever subscribe, getSnapshot, or value changes. Because there's no
        // clean-up function, and we track the deps correctly, we can call pushEffect
        // directly, without storing any additional state. For the same reason, we
        // don't need to set a static flag, either.
        // TODO: We can move this to the passive phase once we add a pre-commit
        // consistency check. See the next comment.
        fiber.flags |= Passive;
        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        var nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error('The result of getSnapshot should be cached to avoid an infinite loop');
                didWarnUncachedGetSnapshot = true;
            }
        }
        var prevSnapshot = hook.memoizedState;
        var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
        }
        var inst = hook.queue;
        updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Whenever getSnapshot or subscribe changes, we need to check in the
        // commit phase if there was an interleaved mutation. In concurrent mode
        // this can happen all the time, but even in synchronous mode, an earlier
        // effect may have mutated the store.
        if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
        // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [
                check
            ];
        } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) componentUpdateQueue.stores = [
                check
            ];
            else stores.push(check);
        }
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        // These are updated in the passive phase
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
        // have been in an event that fired before the passive effects, or it could
        // have been in a layout effect. In that case, we would have used the old
        // snapsho and getSnapshot values to bail out. We need to check one more time.
        if (checkIfSnapshotChanged(inst)) // Force a re-render.
        forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
            // The store changed. Check if the snapshot changed since the last time we
            // read from the store.
            if (checkIfSnapshotChanged(inst)) // Force a re-render.
            forceStoreRerender(fiber);
        }; // Subscribe to the store and return a clean-up function.
        return subscribe(handleStoreChange);
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
        } catch (error) {
            return true;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === 'function') // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var _ref2 = {
            current: initialValue
        };
        hook.memoizedState = _ref2;
        return _ref2;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
        else return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
    }
    function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
    }
    function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === 'function') {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty('current')) error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = value;
        return value;
    }
    function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        var resolvedCurrentHook = currentHook;
        var prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
    }
    function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook === null) {
            // This is a rerender during a mount.
            hook.memoizedState = value;
            return value;
        } else {
            // This is a rerender during an update.
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
        }
    }
    function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
        if (shouldDeferValue) {
            // This is an urgent update. If the value has changed, keep using the
            // previous value and spawn a deferred render to update it later.
            if (!objectIs(value, prevValue)) {
                // Schedule a deferred render
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
                // from the latest value. The name "baseState" doesn't really match how we
                // use it because we're reusing a state hook field instead of creating a
                // new one.
                hook.baseState = true;
            } // Reuse the previous value
            return prevValue;
        } else {
            // This is not an urgent update, so we can use the latest value regardless
            // of what it is. No need to defer it.
            // However, if we're currently inside a spawned render, then we need to mark
            // this as an update to prevent the fiber from bailing out.
            //
            // `baseState` is true when the current value is different from the rendered
            // value. The name doesn't really match how we use it because we're reusing
            // a state hook field instead of creating a new one.
            if (hook.baseState) {
                // Flip this back to false.
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
        }
    }
    function startTransition(setPending, callback, options) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
        setPending(true);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
        try {
            setPending(false);
            callback();
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    function mountTransition() {
        var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1]; // The `start` method never changes.
        var start = startTransition.bind(null, setPending);
        var hook = mountWorkInProgressHook();
        hook.memoizedState = start;
        return [
            isPending,
            start
        ];
    }
    function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function mountId() {
        var hook = mountWorkInProgressHook();
        var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
        // should do this in Fiber, too? Deferring this decision for now because
        // there's no other place to store the prefix except for an internal field on
        // the public createRoot object, which the fiber tree does not currently have
        // a reference to.
        var identifierPrefix = root.identifierPrefix;
        var id;
        if (getIsHydrating()) {
            var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.
            id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end
            // that represents the position of this useId hook among all the useId
            // hooks for this fiber.
            var localId = localIdCounter++;
            if (localId > 0) id += 'H' + localId.toString(32);
            id += ':';
        } else {
            // Use a lowercase r prefix for client-generated ids.
            var globalClientId = globalClientIdCounter++;
            id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';
        }
        hook.memoizedState = id;
        return id;
    }
    function updateId() {
        var hook = updateWorkInProgressHook();
        var id = hook.memoizedState;
        return id;
    }
    function dispatchReducerAction(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function dispatchSetState(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.hasEagerState = true;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) {
                            // Fast path. We can bail out without scheduling React to re-render.
                            // It's still possible that we'll need to rebase this update later,
                            // if the component re-renders for a different reason and by that
                            // time the reducer has changed.
                            // TODO: Do we still need to entangle transitions in this case?
                            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                            return;
                        }
                    } catch (error) {} finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
    } // TODO: Move to ReactFiberConcurrentUpdates?
    function entangleTransitionUpdate(root, queue, lane) {
        if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
            // must have finished. We can remove them from the shared queue, which
            // represents a superset of the actually pending lanes. In some cases we
            // may entangle more than we need to, but that's OK. In fact it's worse if
            // we *don't* entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function markUpdateInDevTools(fiber, lane, action) {
        markStateUpdateScheduled(fiber, lane);
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var layoutEffectStartTime = -1;
    var profilerStartTime = -1;
    var passiveEffectStartTime = -1;
    /**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */ var currentUpdateIsNested = false;
    var nestedUpdateScheduled = false;
    function isCurrentUpdateNested() {
        return currentUpdateIsNested;
    }
    function markNestedUpdateScheduled() {
        nestedUpdateScheduled = true;
    }
    function resetNestedUpdateFlag() {
        currentUpdateIsNested = false;
        nestedUpdateScheduled = false;
    }
    function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = false;
    }
    function getCommitTime() {
        return commitTime;
    }
    function recordCommitTime() {
        commitTime = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        root.effectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        parentStateNode.effectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        if (root !== null) root.passiveEffectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        if (parentStateNode !== null) // Detached fibers have their state node cleared out.
                        // In this case, the return pointer is also cleared out,
                        // so we won't be able to report the time spent in this Profiler's subtree.
                        parentStateNode.passiveEffectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
    }
    function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    var fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    var didWarnAboutLegacyContext$1;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    didWarnAboutLegacyContext$1 = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === 'function') return;
        var key = callerName + '_' + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentNameFromType(type) || 'Component';
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                // Invoke the function an extra time to help detect side-effects.
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'replaceState');
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'forceUpdate');
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markForceUpdateScheduled(fiber, lane);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === 'function') {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (shouldUpdate === undefined) error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || 'Component');
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentNameFromType(ctor) || 'Component';
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === 'function') error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (ctor.childContextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead\n\n.Learn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (ctor.contextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (instance.contextTypes) error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === 'function') error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || 'A pure component');
        if (typeof instance.componentDidUnmount === 'function') error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === 'function') error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === 'function') error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === 'function') error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === 'function') error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === 'function') error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== 'object' || isArray(_state))) error('%s.state: must be set to an object or null', name);
        if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ('contextType' in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== 'object') addendum = ' However, it is set to a ' + typeof contextType + '.';
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = ' Did you accidentally pass the Context.Provider instead?';
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = ' Did you accidentally pass the Context.Consumer instead?';
                else addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || 'Component', addendum);
            }
        }
        if (typeof contextType === 'object' && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                instance = new ctor(props, context); // eslint-disable-line no-new
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
            var componentName = getComponentNameFromType(ctor) || 'Component';
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? 'null' : 'undefined', componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = 'componentWillMount';
            else if (typeof instance.UNSAFE_componentWillMount === 'function') foundWillMountName = 'UNSAFE_componentWillMount';
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = 'componentWillReceiveProps';
            else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = 'componentWillUpdate';
            else if (typeof instance.UNSAFE_componentWillUpdate === 'function') foundWillUpdateName = 'UNSAFE_componentWillUpdate';
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || 'Component';
                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || 'Component');
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === 'function') instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentNameFromFiber(workInProgress) || 'Component';
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = {};
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === 'object' && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || 'Component';
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === 'function') {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic;
            if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
            workInProgress.flags |= fiberFlags;
        }
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') {
                var fiberFlags = Update;
                fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
                workInProgress.flags |= fiberFlags;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
                if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === 'function') {
                var _fiberFlags = Update;
                _fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags;
            }
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') {
                var _fiberFlags2 = Update;
                _fiberFlags2 |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags2 |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags2;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
        // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
                if (typeof instance.componentWillUpdate === 'function') instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === 'function') instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === 'function') workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === 'function') workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    function createCapturedValueAtFiber(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
        };
    }
    function createCapturedValue(value, digest, stack) {
        return {
            value: value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console['error'](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentNameFromFiber(source) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
            var errorBoundaryMessage;
            if (boundary.tag === HostRoot) errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            }
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console['error'](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === 'function') {
            var error$1 = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                logCapturedError(fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === 'function') update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            logCapturedError(fiber, errorInfo);
            if (typeof getDerivedStateFromError !== 'function') // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ''
            });
            if (typeof getDerivedStateFromError !== 'function') // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || 'Unknown');
            }
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a ping listener
        //
        // The data might resolve before we have a chance to commit the fallback. Or,
        // in the case of a refresh, we'll never commit a fallback. So we need to
        // attach a listener now. When it resolves ("pings"), we can decide whether to
        // try rendering the tree again.
        //
        // Only attach a listener if one does not already exist for the lanes
        // we're currently rendering (which acts like a "thread ID" here).
        //
        // We only need to do this in concurrent mode. Legacy Suspense always
        // commits fallbacks synchronously, so there are no pings.
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            if (isDevToolsPresent) // If we have pending work still, restore the original updaters
            restorePendingUpdaters(root, lanes);
            wakeable.then(ping, ping);
        }
    }
    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
        // Retry listener
        //
        // If the fallback does commit, we need to attach a different type of
        // listener. This one schedules an update on the Suspense boundary to turn
        // the fallback state off.
        //
        // Stash the wakeable on the boundary fiber so we can access it in the
        // commit phase.
        //
        // When the wakeable resolves, we'll attempt to render the boundary
        // again ("retry").
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
            var updateQueue = new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
        } else wakeables.add(wakeable);
    }
    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        // A legacy mode Suspense quirk, only relevant to hook components.
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
            } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
            }
        }
    }
    function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) return node;
             // This boundary already captured during this render. Continue to the next
            // boundary.
            node = node.return;
        }while (node !== null);
        return null;
    }
    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
        // This marks a Suspense boundary so that when we're unwinding the stack,
        // it captures the suspended "exception" and does a second (fallback) pass.
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            // Legacy Mode Suspense
            //
            // If the boundary is in legacy mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. When the Suspense boundary completes,
            // we'll do a second pass to render the fallback.
            if (suspenseBoundary === returnFiber) // Special case where we suspended while reconciling the children of
            // a Suspense boundary's inner Offscreen wrapper fiber. This happens
            // when a React.lazy component is a direct child of a
            // Suspense boundary.
            //
            // Suspense boundaries are implemented as multiple fibers, but they
            // are a single conceptual unit. The legacy mode behavior where we
            // pretend the suspended fiber committed as `null` won't work,
            // because in this case the "suspended" fiber is the inner
            // Offscreen wrapper.
            //
            // Because the contents of the boundary haven't started rendering
            // yet (i.e. nothing in the tree has partially rendered) we can
            // switch to the regular, concurrent mode behavior: mark the
            // boundary with ShouldCapture and enter the unwind phase.
            suspenseBoundary.flags |= ShouldCapture;
            else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                // But we shouldn't call any lifecycle methods or callbacks. Remove
                // all lifecycle effect tags.
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                    // completed class component. For example, we should not call
                    // componentWillUnmount if it is deleted.
                    sourceFiber.tag = IncompleteClassComponent;
                    else {
                        // When we try rendering again, we should not reuse the current fiber,
                        // since it's known to be in an inconsistent state. Use a force update to
                        // prevent a bail out.
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update, SyncLane);
                    }
                } // The source fiber did not complete. Mark it with Sync priority to
                // indicate that it still has pending work.
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.
        suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
        // the begin phase to prevent an early bailout.
        suspenseBoundary.lanes = rootRenderLanes;
        return suspenseBoundary;
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete;
        if (isDevToolsPresent) // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, rootRenderLanes);
        if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
            // This is a wakeable. The component suspended.
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) markDidThrowWhileHydratingDEV();
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
                // commits fallbacks synchronously, so there are no pings.
                if (suspenseBoundary.mode & ConcurrentMode) attachPingListener(root, wakeable, rootRenderLanes);
                attachRetryListener(suspenseBoundary, root, wakeable);
                return;
            } else {
                // No boundary was found. Unless this is a sync update, this is OK.
                // We can suspend and wait for more data to arrive.
                if (!includesSyncLane(rootRenderLanes)) {
                    // This is not a sync update. Suspend. Since we're not activating a
                    // Suspense boundary, this will unwind all the way to the root without
                    // performing a second pass to render a fallback. (This is arguably how
                    // refresh transitions should work, too, since we're not going to commit
                    // the fallbacks anyway.)
                    //
                    // This case also applies to initial hydration.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    renderDidSuspendDelayIfPossible();
                    return;
                } // This is a sync/discrete update. We treat this case like an error
                // because discrete renders are expected to produce a complete tree
                // synchronously to maintain consistency with external state.
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."); // If we're outside a transition, fall through to the regular error path.
                // The error will be caught by the nearest suspense boundary.
                value = uncaughtSuspenseError;
            }
        } else // This is a regular error, not a Suspense wakeable.
        if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
            markDidThrowWhileHydratingDEV();
            var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
            // discarding the dehydrated content and switching to a client render.
            // Instead of surfacing the error, find the nearest Suspense boundary
            // and render it again without hydration.
            if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) // Set a flag to indicate that we should try rendering the normal
                // children again, not the fallback.
                _suspenseBoundary.flags |= ForceClientRender;
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
                // still log it so it can be fixed.
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
            }
        }
        value = createCapturedValueAtFiber(value, sourceFiber);
        renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null);
    }
    function getSuspendedCache() {
        return null;
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    var didWarnAboutDefaultPropsOnFunctionComponent;
    didWarnAboutBadClass = {};
    didWarnAboutModulePatternComponent = {};
    didWarnAboutContextTypeOnFunctionComponent = {};
    didWarnAboutGetDerivedStateOnFunctionComponent = {};
    didWarnAboutFunctionRefs = {};
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {};
    didWarnAboutTailOptions = {};
    didWarnAboutDefaultPropsOnFunctionComponent = {};
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
            Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(type));
            if (Component.defaultProps !== undefined) {
                var componentName = getComponentNameFromType(type) || 'Unknown';
                if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                    error("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", componentName);
                    didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
                }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, 'prop', getComponentNameFromType(_type));
        var currentChild = current.child; // This is always exactly one child
        var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
        if (!hasScheduledUpdateOrContext) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, 'prop', getComponentNameFromType(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
                // would during a normal fiber bailout.
                //
                // We don't have strong guarantees that the props object is referentially
                // equal during updates where we can't bail out anyway — like if the props
                // are shallowly equal, but there's a local state or context update in the
                // same batch.
                //
                // However, as a principle, we should aim to make the behavior consistent
                // across different ways of memoizing a component. For example, React.memo
                // has a different internal Fiber layout if you pass a normal function
                // component (SimpleMemoComponent) versus if you pass a different type
                // like forwardRef (MemoComponent). But this is an implementation detail.
                // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
                // affect whether the props object is reused during a bailout.
                workInProgress.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current, renderLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumulated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === 'hidden' || enableLegacyHidden) {
            // Rendering a hidden tree.
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Consider how Offscreen should work with transitions in the future
                var nextState = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
                // and resume this tree later.
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes,
                    cachePool: spawnedCachePool,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState;
                workInProgress.updateQueue = null;
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // This is the second render. The surrounding visible content has already
                // committed. Now we resume rendering the hidden tree.
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            // Rendering a visible tree.
            var _subtreeRenderLanes;
            if (prevState !== null) {
                // We're going from hidden -> visible.
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    function updateFragment(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update;
        // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) {
            // Schedule a Ref effect
            workInProgress.flags |= Ref;
            workInProgress.flags |= RefStatic;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        // This is used by DevTools to force a boundary to error.
        switch(shouldError(workInProgress)){
            case false:
                var _instance = workInProgress.stateNode;
                var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
                // Is there a better way to do this?
                var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case true:
                workInProgress.flags |= DidCapture;
                workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes
                var error$1 = new Error('Simulated error coming from DevTools');
                var lane = pickArbitraryLane(renderLanes);
                workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state
                var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
                enqueueCapturedUpdate(workInProgress, update);
                break;
        }
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || 'a component');
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            markComponentRenderStarted(workInProgress);
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    instance.render();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            setIsRendering(false);
            markComponentRenderStopped();
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        if (current === null) throw new Error('Should have a current fiber. This is a bug in React.');
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        var root = workInProgress.stateNode;
        // being called "element".
        var nextChildren = nextState.element;
        if (prevState.isDehydrated) {
            // This is a hydration root whose shell has not yet hydrated. We should
            // attempt to hydrate.
            // Flip isDehydrated to false to indicate that when this render
            // finishes, the root will no longer be dehydrated.
            var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
            };
            var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
            // have reducer functions so it doesn't need rebasing.
            updateQueue.baseState = overrideState;
            workInProgress.memoizedState = overrideState;
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during a previous attempt to hydrate the shell, so we
                // forced a client render.
                var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
            } else if (nextChildren !== prevChildren) {
                var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
            } else {
                // The outermost shell has not hydrated yet. Start hydrating.
                enterHydrationState(workInProgress);
                var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
                workInProgress.child = child;
                var node = child;
                while(node){
                    // Mark each child as hydrating. This is a fast path to know whether this
                    // tree is part of a hydrating tree. This is used to determine if a child
                    // node has fully mounted yet, and for scheduling event replaying.
                    // Conceptually this is similar to Placement in that a new subtree is
                    // inserted into the React tree here. It just happens to not need DOM
                    // mutations because it already exists.
                    node.flags = node.flags & ~Placement | Hydrating;
                    node = node.sibling;
                }
            }
        } else {
            // Root is not dehydrated. Either this is a client-only root, or it
            // already hydrated.
            resetHydrationState();
            if (nextChildren === prevChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        }
        return workInProgress.child;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
        // Revert to client rendering.
        resetHydrationState();
        queueHydrationError(recoverableError);
        workInProgress.flags |= ForceClientRender;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, 'prop', getComponentNameFromType(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);
                return child;
        }
        var hint = '';
        if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) hint = ' Did you wrap a component in React.lazy() more than once?';
        // because the fact that it's a separate type of work is an
        // implementation detail.
        throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        var hasId;
        markComponentRenderStarted(workInProgress);
        if (Component.prototype && typeof Component.prototype.render === 'function') {
            var componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        hasId = checkDidRenderIdHook();
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName2 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                    hasId = checkDidRenderIdHook();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
            var info = '';
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
            var warningKey = ownerName || '';
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (Component.defaultProps !== undefined) {
            var componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                error("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", componentName);
                didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
            }
        }
        if (typeof Component.getDerivedStateFromProps === 'function') {
            var _componentName3 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === 'object' && Component.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error('%s: Function components do not support contextType.', _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache(),
            transitions: null
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        var cachePool = null;
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
            cachePool: cachePool,
            transitions: prevOffscreenState.transitions
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallback
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else // Attempting the main content
        if (current === null || current.memoizedState !== null) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconciliation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // Special path for hydration
            // If we're currently hydrating, try to hydrate this boundary.
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var suspenseState = workInProgress.memoizedState;
            if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
        } else {
            // This is an update.
            // Special path for hydration
            var prevState = current.memoizedState;
            if (prevState !== null) {
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
            }
            if (showFallback) {
                var _nextFallbackChildren = nextProps.fallback;
                var _nextPrimaryChildren = nextProps.children;
                var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
                var _primaryChildFragment2 = workInProgress.child;
                var prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            } else {
                var _nextPrimaryChildren2 = nextProps.children;
                var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment3;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
        // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
        // this wrapper function to constrain it.
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
    }
    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: 'visible',
            children: primaryChildren
        });
        if ((workInProgress.mode & ConcurrentMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            var deletions = workInProgress.deletions;
            if (deletions === null) {
                workInProgress.deletions = [
                    currentFallbackChildFragment
                ];
                workInProgress.flags |= ChildDeletion;
            } else deletions.push(currentFallbackChildFragment);
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it.
            workInProgress.deletions = null;
        } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
            // (We don't do this in legacy mode, because in legacy mode we don't re-use
            // the current tree; see previous branch.)
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        }
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
        // Falling back to client rendering. Because this has performance
        // implications, it's considered a recoverable error, even though the user
        // likely won't observe anything wrong with the UI.
        //
        // The error is passed in as an argument to enforce that every caller provide
        // a custom message, or explicitly opt out (currently the only path that opts
        // out is legacy mode; every concurrent path provides an error).
        if (recoverableError !== null) queueHydrationError(recoverableError);
         // This will add the old fiber to the deletion list
        reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.
        var nextProps = workInProgress.pendingProps;
        var primaryChildren = nextProps.children;
        var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.
        primaryChildFragment.flags |= Placement;
        workInProgress.memoizedState = null;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var fiberMode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
        var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
        // boundary) already mounted but this is a new fiber.
        fallbackChildFragment.flags |= Placement;
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        if ((workInProgress.mode & ConcurrentMode) !== NoMode) // We will have dropped the effect list which contains the
        // deletion. We need to reconcile to delete the current child.
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        return fallbackChildFragment;
    }
    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            workInProgress.lanes = laneToLanes(SyncLane);
        } else if (isSuspenseInstanceFallback(suspenseInstance)) // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        // Schedule a normal pri update to render this content.
        workInProgress.lanes = laneToLanes(DefaultHydrationLane);
        else // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.lanes = laneToLanes(OffscreenLane);
        return null;
    }
    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
        if (!didSuspend) {
            // This is the first render pass. Attempt to hydrate.
            // We should never be hydrating at this point because it is the first pass,
            // but after we've already committed once.
            warnIfHydrating();
            if ((workInProgress.mode & ConcurrentMode) === NoMode) return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null);
            if (isSuspenseInstanceFallback(suspenseInstance)) {
                // This boundary is in a permanent fallback state. In this case, we'll never
                // get an update and we'll never be able to hydrate the final content. Let's just try the
                // client side render instead.
                var digest, message, stack;
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
                var error;
                if (message) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error(message);
                else error = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                var capturedValue = createCapturedValue(error, digest, stack);
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
            }
            // any context has changed, we need to treat is as if the input might have changed.
            var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);
            if (didReceiveUpdate || hasContextChanged) {
                // This boundary has changed since the first render. This means that we are now unable to
                // hydrate it. We might still be able to hydrate it using a higher priority lane.
                var root = getWorkInProgressRoot();
                if (root !== null) {
                    var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);
                    if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                        // Intentionally mutating since this render will get interrupted. This
                        // is one of the very rare times where we mutate the current tree
                        // during the render phase.
                        suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render
                        var eventTime = NoTimestamp;
                        enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
                        scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
                    }
                } // If we have scheduled higher pri work above, this will probably just abort the render
                // since we now have higher priority work, but in case it doesn't, we need to prepare to
                // render something, if we time out. Even if that requires us to delete everything and
                // skip hydration.
                // Delay having to do this as long as the suspense timeout allows us.
                renderDidSuspendDelayIfPossible();
                var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
                // This component is still pending more data from the server, so we can't hydrate its
                // content. We treat it as if this component suspended itself. It might seem as if
                // we could just try to render it client-side instead. However, this will perform a
                // lot of unnecessary work and is unlikely to complete since it often will suspend
                // on missing data anyway. Additionally, the server might be able to render more
                // than we can on the client yet. In that case we'd end up with more fallback states
                // on the client than if we just leave it alone. If the server times out or errors
                // these should update this boundary to the permanent Fallback state instead.
                // Mark it as having captured (i.e. suspended).
                workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.
                workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.
                var retry = retryDehydratedSuspenseBoundary.bind(null, current);
                registerSuspenseInstanceRetry(suspenseInstance, retry);
                return null;
            } else {
                // This is the first attempt.
                reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
                var primaryChildren = nextProps.children;
                var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                primaryChildFragment.flags |= Hydrating;
                return primaryChildFragment;
            }
        } else {
            // This is the second render pass. We already attempted to hydrated, but
            // something either suspended or errored.
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during hydration. Try again without hydrating.
                workInProgress.flags &= ~ForceClientRender;
                var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
            } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.
                workInProgress.flags |= DidCapture;
                return null;
            } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback.
                var nextPrimaryChildren = nextProps.children;
                var nextFallbackChildren = nextProps.fallback;
                var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment4 = workInProgress.child;
                _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            }
        }
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === 'string') switch(revealOrder.toLowerCase()){
                case 'together':
                case 'forwards':
                case 'backwards':
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case 'forward':
                case 'backward':
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
            }
            else error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
            } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArray(childSlot);
        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';
        if (isAnArray || isIterable) {
            var type = isAnArray ? 'array' : 'iterable';
            error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
            if (isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === 'function') {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & ConcurrentMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case 'forwards':
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);
                break;
            case 'backwards':
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);
                break;
            case 'together':
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!('value' in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
        pushProvider(workInProgress, context, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            if (objectIs(oldValue, newValue)) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== 'function') error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            if (current !== null) {
                // A lazy component only mounts if it suspended inside a non-
                // concurrent tree, in an inconsistent state. We want to treat it like
                // a new mount, even though an empty version of it already committed.
                // Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            }
        }
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) return null;
         // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error('Cannot swap the root fiber.');
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
            throw new Error('Expected parent to have a child.');
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
                throw new Error('Expected to find the previous sibling.');
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                current
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(current);
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        // Before performing an early bailout, we must check if there are pending
        // updates or context.
        var updateLanes = current.lanes;
        if (includesSomeLane(updateLanes, renderLanes)) return true;
         // No pending update, but because context is propagated lazily, we need
        return false;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        // This fiber does not have any pending work. Bailout without entering
        // the begin phase. There's still some bookkeeping we that needs to be done
        // in this optimized path, mostly pushing stuff onto the stack.
        switch(workInProgress.tag){
            case HostRoot:
                pushHostRootContext(workInProgress);
                var root = workInProgress.stateNode;
                resetHydrationState();
                break;
            case HostComponent:
                pushHostContext(workInProgress);
                break;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) pushContextProvider(workInProgress);
                break;
            case HostPortal:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case ContextProvider:
                var newValue = workInProgress.memoizedProps.value;
                var context = workInProgress.type._context;
                pushProvider(workInProgress, context, newValue);
                break;
            case Profiler:
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (hasChildWork) workInProgress.flags |= Update;
                // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
                break;
            case SuspenseComponent:
                var state = workInProgress.memoizedState;
                if (state !== null) {
                    if (state.dehydrated !== null) {
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                        // been unsuspended it has committed as a resolved Suspense component.
                        // If it needs to be retried, it should have work scheduled on it.
                        workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
                        // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
                        return null;
                    } // If this boundary is currently timed out, we need to decide
                    // whether to retry the primary children, or to skip over it and
                    // go straight to the fallback. Check the priority of the primary
                    // child fragment.
                    var primaryChildFragment = workInProgress.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                    else {
                        // The primary child fragment does not have pending work marked
                        // on it
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                        // priority. Bailout.
                        var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                        if (child !== null) // The fallback children have pending work. Skip over the
                        // primary children and work on the fallback.
                        return child.sibling;
                        else // Note: We can return `null` here because we already checked
                        // whether there were nested context consumers, via the call to
                        // `bailoutOnAlreadyFinishedWork` above.
                        return null;
                    }
                } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                break;
            case SuspenseListComponent:
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (didSuspendBefore) {
                    if (_hasChildWork) // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                     // If none of the children had any work, that means that none of
                    // them got retried so they'll still be blocked in the same way
                    // as before. We can fast bail out.
                    workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.
                var renderState = workInProgress.memoizedState;
                if (renderState !== null) {
                    // Reset to the "together" mode in case we've started a different
                    // update in the past but didn't complete it.
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                if (_hasChildWork) break;
                else // If none of the children had any work, that means that none of
                // them got retried so they'll still be blocked in the same way
                // as before. We can fast bail out.
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else {
                // Neither props nor legacy context changes. Check if there's a pending
                // update or context change.
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
                if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
                // may not be work scheduled on `current`, so we check for this flag.
                (workInProgress.flags & DidCapture) === NoFlags) {
                    // No pending updates or context. Bail out now.
                    didReceiveUpdate = false;
                    return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                }
                if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
                else // An update was scheduled on this fiber, but there are no new props
                // nor legacy context. Set this to false. If an update queue or context
                // consumer produces a changed value, it will set this to true. Otherwise,
                // the component will assume the children have not changed and bail out.
                didReceiveUpdate = false;
            }
        } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress)) {
                // Check if this child belongs to a list of muliple children in
                // its parent.
                //
                // In a true multi-threaded implementation, we would render children on
                // parallel threads. This would represent the beginning of a new render
                // thread for this subtree.
                //
                // We only use this for id generation during hydration, which is why the
                // logic is located in this special branch.
                var slotIndex = workInProgress.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress, numberOfForks, slotIndex);
            }
        } // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, renderLanes);
            case FunctionComponent:
                var Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, 'prop', getComponentNameFromType(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case IncompleteClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case ScopeComponent:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
        workInProgress.flags |= RefStatic;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(current, workInProgress) {};
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case 'hidden':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case 'collapsed':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
        var newChildLanes = NoLanes;
        var subtreeFlags = NoFlags;
        if (!didBailout) {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while(child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                    subtreeFlags |= child.subtreeFlags;
                    subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
                    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
                    // When work is done, it should bubble to the parent's actualDuration. If
                    // the fiber has not been cloned though, (meaning no work was done), then
                    // this value will reflect the amount of time spent working on a previous
                    // render. In that case it should not bubble. We determine whether it was
                    // cloned by comparing the child pointer.
                    actualDuration += child.actualDuration;
                    treeBaseDuration += child.treeBaseDuration;
                    child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
            } else {
                var _child = completedWork.child;
                while(_child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                    subtreeFlags |= _child.subtreeFlags;
                    subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child.return = completedWork;
                    _child = _child.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        } else {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while(_child2 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child2.subtreeFlags & StaticMask;
                    subtreeFlags |= _child2.flags & StaticMask;
                    _treeBaseDuration += _child2.treeBaseDuration;
                    _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
                var _child3 = completedWork.child;
                while(_child3 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child3.subtreeFlags & StaticMask;
                    subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child3.return = completedWork;
                    _child3 = _child3.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        }
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
        if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress);
            resetHydrationState();
            workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
        }
        var wasHydrated = popHydrationState(workInProgress);
        if (nextState !== null && nextState.dehydrated !== null) {
            // We might be inside a hydration state the first time we're picking up this
            // Suspense boundary, and also after we've reentered it for further hydration.
            if (current === null) {
                if (!wasHydrated) throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                prepareToHydrateHostSuspenseInstance(workInProgress);
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var isTimedOutSuspense = nextState !== null;
                    if (isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            } else {
                // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
                // state since we're now exiting out of it. popHydrationState doesn't do that for us.
                resetHydrationState();
                if ((workInProgress.flags & DidCapture) === NoFlags) // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
                 // If nothing suspended, we need to schedule an effect to mark this boundary
                // as having hydrated so events know that they're free to be invoked.
                // It's also a signal to replay events and the suspense callback.
                // If something suspended, schedule an effect to attach retry listeners.
                // So we might as well always mark this.
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var _isTimedOutSuspense = nextState !== null;
                    if (_isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var _primaryChildFragment = workInProgress.child;
                        if (_primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            }
        } else {
            // Successfully completed this tree. If this was a forced client render,
            // there may have been recoverable errors during first hydration
            // attempt. If so, add them to a queue so we can log them in the
            // commit phase.
            upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path
            return true;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                bubbleProperties(workInProgress);
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostRoot:
                var fiberRoot = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (current !== null) {
                        var prevState = current.memoizedState;
                        if (!prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                        (workInProgress.flags & ForceClientRender) !== NoFlags) {
                            // Schedule an effect to clear this container at the start of the
                            // next commit. This handles the case of React rendering into a
                            // container with previous children. It's also safe to do for
                            // updates too, because current.child would only be null if the
                            // previous render was null (so the container would already
                            // be empty).
                            workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                            // recoverable errors during first hydration attempt. If so, add
                            // them to a queue so we can log them in the commit phase.
                            upgradeHydrationErrorsToRecoverable();
                        }
                    }
                }
                updateHostContainer(current, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== 'string') {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
                // to its own fiber type so that we can add other kinds of hydration
                // boundaries that aren't associated with a Suspense tree. In anticipation
                // of such a refactor, all the hydration logic is contained in
                // this branch.
                if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
                    var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);
                    if (!fallthroughToNormalSuspensePath) {
                        if (workInProgress.flags & ShouldCapture) // Special case. There were remaining unhydrated nodes. We treat
                        // this as a mismatch. Revert to client rendering.
                        return workInProgress;
                        else // Did not finish hydrating, either because this is the initial
                        // render or because something suspended.
                        return null;
                    } // Continue with the normal Suspense path.
                }
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                     // Don't bubble properties in this case.
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current !== null && current.memoizedState !== null;
                // a passive effect, which is when we process the transitions
                if (nextDidTimeout !== prevDidTimeout) // an effect to toggle the subtree's visibility. When we switch from
                // fallback -> primary, the inner Offscreen fiber schedules this effect
                // as part of its normal complete phase. But when we switch from
                // primary -> fallback, the inner Offscreen fiber does not have a complete
                // phase. So we need to schedule its effect here.
                //
                // We also use this flag to connect/disconnect the effects, but the same
                // logic applies: when re-connecting, the Offscreen fiber's complete
                // phase will handle scheduling the effect. It's only when the fallback
                // is active that we have to do anything special.
                {
                    if (nextDidTimeout) {
                        var _offscreenFiber2 = workInProgress.child;
                        _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
                        // in the concurrent tree already suspended during this render.
                        // This is a known bug.
                        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
                            // TODO: Move this back to throwException because this is too late
                            // if this is a large tree which is common for initial loads. We
                            // don't know if we should restart a render or not until we get
                            // this marker, and this is too late.
                            // If this render already had a ping or lower pri updates,
                            // and this is the first time we know we're going to suspend we
                            // should be able to immediately restart from within throwException.
                            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                            // this boundary is ok.
                            renderDidSuspend();
                            else // Otherwise, we're going to have to hide content so we should
                            // suspend for longer if possible.
                            renderDidSuspendDelayIfPossible();
                        }
                    }
                }
                var wakeables = workInProgress.updateQueue;
                if (wakeables !== null) // Schedule an effect to attach a retry listener to the promise.
                // TODO: Move to passive phase
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(current, workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                bubbleProperties(workInProgress);
                return null;
            case ContextProvider:
                // Pop provider fiber
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) {
                    // We're running in the default, "independent" mode.
                    // We don't do anything in this mode.
                    bubbleProperties(workInProgress);
                    return null;
                }
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thenables. Instead, we'll transfer its thenables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThenables = suspended.updateQueue;
                                    if (newThenables !== null) {
                                        workInProgress.updateQueue = newThenables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect flags before doing the second pass since that's now invalid.
                                    // Reset the child fibers to their original state.
                                    workInProgress.subtreeFlags = NoFlags;
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThenables = _suspended.updateQueue;
                            if (_newThenables !== null) {
                                workInProgress.updateQueue = _newThenables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We're done.
                                bubbleProperties(workInProgress);
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    // Don't bubble properties in this case.
                    return next;
                }
                bubbleProperties(workInProgress);
                return null;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                var _nextState = workInProgress.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current !== null) {
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) workInProgress.flags |= Visibility;
                }
                if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) bubbleProperties(workInProgress);
                else // Don't bubble properties for hidden children unless we're rendering
                // at offscreen priority.
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                    bubbleProperties(workInProgress);
                    // Check if there was an insertion or update in the hidden subtree.
                    // If so, we need to hide those nodes in the commit phase, so
                    // schedule a visibility effect.
                    if (workInProgress.subtreeFlags & (Placement | Update)) workInProgress.flags |= Visibility;
                }
                return null;
            case CacheComponent:
                return null;
            case TracingMarkerComponent:
                return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
    }
    function unwindWork(current, workInProgress, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                var root = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                    // There was an error during render that wasn't captured by a suspense
                    // boundary. Do a second pass on the root to unmount the children.
                    workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                    return workInProgress;
                } // We unwound to the root without completing it. Exit.
                return null;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var suspenseState = workInProgress.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (workInProgress.alternate === null) throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            case CacheComponent:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                var root = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    // Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
    // Only used when enableSuspenseLayoutEffectSemantics is enabled.
    var offscreenSubtreeIsHidden = false;
    var offscreenSubtreeWasHidden = false;
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
    var nextEffect = null; // Used for Profiling builds to track updaters.
    var inProgressLanes = null;
    var inProgressRoot = null;
    function reportUncaughtErrorInDEV(error) {
        invokeGuardedCallback(null, function() {
            throw error;
        });
        clearCaughtError();
    }
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        if (current.mode & ProfileMode) try {
            startLayoutEffectTimer();
            instance.componentWillUnmount();
        } finally{
            recordLayoutEffectDuration(current);
        }
        else instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt mounting.
    function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
        try {
            commitHookEffectListMount(Layout, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        try {
            callComponentWillUnmountWithTimer(current, instance);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
        try {
            instance.componentDidMount();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            commitAttachRef(current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === 'function') {
                var retVal;
                try {
                    if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        retVal = ref(null);
                    } finally{
                        recordLayoutEffectDuration(current);
                    }
                    else retVal = ref(null);
                } catch (error) {
                    captureCommitPhaseError(current, nearestMountedAncestor, error);
                }
                if (typeof retVal === 'function') error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current));
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
        try {
            destroy();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function commitBeforeMutationEffects(root, firstChild) {
        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        nextEffect = firstChild;
        commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = false;
        focusedInstanceHandle = null;
        return shouldFire;
    }
    function commitBeforeMutationEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitBeforeMutationEffects_complete();
        }
    }
    function commitBeforeMutationEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
                commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags;
        if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch(finishedWork.tag){
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    break;
                case ClassComponent:
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                    break;
                case HostRoot:
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                    break;
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                    break;
                default:
                    throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            resetCurrentFiber();
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) {
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStarted(finishedWork);
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStarted(finishedWork);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                        safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStopped();
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStopped();
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitHookEffectListMount(flags, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStarted(finishedWork);
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStarted(finishedWork);
                    var create = effect.create;
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                    effect.destroy = create();
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStopped();
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStopped();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== 'function') {
                        var hookName = void 0;
                        if ((effect.tag & Layout) !== NoFlags) hookName = 'useLayoutEffect';
                        else if ((effect.tag & Insertion) !== NoFlags) hookName = 'useInsertionEffect';
                        else hookName = 'useEffect';
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === 'function') addendum = '\n\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + hookName + '(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
                        else addendum = ' You returned: ' + destroy;
                        error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        // Only Profilers with work in their subtree will have an Update effect scheduled.
        if ((finishedWork.flags & Update) !== NoFlags) switch(finishedWork.tag){
            case Profiler:
                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
                // It does not get reset until the start of the next commit phase.
                var commitTime = getCommitTime();
                var phase = finishedWork.alternate === null ? 'mount' : 'update';
                if (isCurrentUpdateNested()) phase = 'nested-update';
                if (typeof onPostCommit === 'function') onPostCommit(id, phase, passiveEffectDuration, commitTime);
                 // Bubble times to the next nearest ancestor Profiler.
                // After we process that Profiler, we'll bubble further up.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags) switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    // At this point layout effects have already been destroyed (during mutation phase).
                    // This is done to prevent sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally{
                        recordLayoutEffectDuration(finishedWork);
                    }
                    else commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                break;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                        if (current === null) {
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidMount();
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidMount();
                        } else {
                            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                            var prevState = current.memoizedState; // We could update instance props and state here,
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                        if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                break;
            case HostText:
                break;
            case HostPortal:
                break;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                var phase = current === null ? 'mount' : 'update';
                if (isCurrentUpdateNested()) phase = 'nested-update';
                if (typeof onRender === 'function') onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
                if (typeof onCommit === 'function') onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
                 // Schedule a passive effect for this Profiler to call onPostCommit hooks.
                // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
                // because the effect is also where times bubble to parent Profilers.
                enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
                // Do not reset these values until the next render so DevTools has a chance to read them first.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.effectDuration += effectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
            case TracingMarkerComponent:
                break;
            default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (!offscreenSubtreeWasHidden) {
            if (finishedWork.flags & Ref) commitAttachRef(finishedWork);
        }
    }
    function reappearLayoutEffectsOnFiber(node) {
        // Turn on layout effects in a tree that previously disappeared.
        // TODO (Offscreen) Check: flags & LayoutStatic
        switch(node.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (node.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally{
                    recordLayoutEffectDuration(node);
                }
                else safelyCallCommitHookLayoutEffectListMount(node, node.return);
                break;
            case ClassComponent:
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === 'function') safelyCallComponentDidMount(node, node.return, instance);
                safelyAttachRef(node, node.return);
                break;
            case HostComponent:
                safelyAttachRef(node, node.return);
                break;
        }
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // Only hide or unhide the top-most host nodes.
        var hostSubtreeRoot = null;
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                        var instance = node.stateNode;
                        if (isHidden) hideInstance(instance);
                        else unhideInstance(node.stateNode, node.memoizedProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) try {
                    var _instance3 = node.stateNode;
                    if (isHidden) hideTextInstance(_instance3);
                    else unhideTextInstance(_instance3, node.memoizedProps);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                if (hostSubtreeRoot === node) hostSubtreeRoot = null;
                node = node.return;
            }
            if (hostSubtreeRoot === node) hostSubtreeRoot = null;
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === 'function') {
                var retVal;
                if (finishedWork.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                } finally{
                    recordLayoutEffectDuration(finishedWork);
                }
                else retVal = ref(instanceToUse);
                if (typeof retVal === 'function') error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
            } else {
                if (!ref.hasOwnProperty('current')) error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                ref.current = instanceToUse;
            }
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointer to disconnect it from the tree.
        // This enables us to detect and warn against state updates on an unmounted component.
        // It also prevents events from bubbling from within disconnected components.
        //
        // Ideally, we should also clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child.
        // This child itself will be GC:ed when the parent updates the next time.
        //
        // Note that we can't clear child or sibling pointers yet.
        // They're needed for passive effects and for findDOMNode.
        // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
        //
        // Don't reset the alternate yet, either. We need that so we can detach the
        // alternate's fields in the passive phase. Clearing the return pointer is
        // sufficient for findDOMNode semantics.
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.return = null;
        fiber.return = null;
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
        } // Note: Defensively using negation instead of < in case
        // Clear cyclical Fiber fields. This level alone is designed to roughly
        // approximate the planned Fiber refactor. In that world, `setState` will be
        // bound to a special "instance" object instead of a Fiber. The Instance
        // object will not have any of these fields. It will only be connected to
        // the fiber tree via a single link at the root. So if this level alone is
        // sufficient to fix memory issues, that bodes well for our plans.
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
        // tree, which has its own pointers to children, parents, and siblings.
        // The other host nodes also point back to fibers, so we should detach that
        // one, too.
        if (fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            if (hostInstance !== null) detachDeletedInstance(hostInstance);
        }
        fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
        fiber._debugOwner = null;
        // Theoretically, nothing in here should be necessary, because we already
        // disconnected the fiber from the tree. So even if something leaks this
        // particular fiber, it won't leak anything else
        //
        // The purpose of this branch is to be super aggressive so we can measure
        // if there's any difference in memory impact. If there is, that could
        // indicate a React leak we don't know about.
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
        fiber.updateQueue = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        switch(parentFiber.tag){
            case HostComponent:
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                    // Reset the text content of the parent before doing any insertions
                    resetTextContent(parent); // Clear ContentReset from the effect tag
                    parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
                // children to find all the terminal nodes.
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
            case HostRoot:
            case HostPortal:
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
            // eslint-disable-next-line-no-fallthrough
            default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    } // These are tracked on the stack as we recursively traverse a
    // deleted subtree.
    // TODO: Update these during the whole mutation phase, not just during
    // a deletion.
    var hostParent = null;
    var hostParentIsContainer = false;
    function commitDeletionEffects(root, returnFiber, deletedFiber) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        // Recursively delete all host nodes from the parent, detach refs, clean
        // up mounted layout effects, and call componentWillUnmount.
        // We only need to remove the topmost host child in each branch. But then we
        // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
        // could split this into two separate traversals functions, where the second
        // one doesn't include any removeChild logic. This is maybe the same
        // function as "disappearLayoutEffects" (or whatever that turns into after
        // the layout phase is refactored to use recursion).
        // Before starting, find the nearest host parent on the stack so we know
        // which instance/container to remove the children from.
        // TODO: Instead of searching up the fiber return path on every deletion, we
        // can track the nearest host component on the JS stack as we traverse the
        // tree during the commit phase. This would make insertions faster, too.
        var parent = returnFiber;
        findParent: while(parent !== null){
            switch(parent.tag){
                case HostComponent:
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                case HostRoot:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                case HostPortal:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
            }
            parent = parent.return;
        }
        if (hostParent === null) throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
        hostParent = null;
        hostParentIsContainer = false;
        detachFiberMutation(deletedFiber);
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        // TODO: Use a static flag to skip trees that don't have unmount effects
        var child = parent.child;
        while(child !== null){
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
        }
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
        // into their subtree. There are simpler cases in the inner switch
        // that don't modify the stack.
        switch(deletedFiber.tag){
            case HostComponent:
                if (!offscreenSubtreeWasHidden) safelyDetachRef(deletedFiber, nearestMountedAncestor);
                 // Intentional fallthrough to next branch
            // eslint-disable-next-line-no-fallthrough
            case HostText:
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                    // Now that all the child effects have unmounted, we can remove the
                    // node from the tree.
                    if (hostParentIsContainer) removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    else removeChild(hostParent, deletedFiber.stateNode);
                }
                return;
            case DehydratedFragment:
                if (hostParent !== null) {
                    if (hostParentIsContainer) clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    else clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                }
                return;
            case HostPortal:
                // When we go into a portal, it becomes the parent to remove from.
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
                return;
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    var updateQueue = deletedFiber.updateQueue;
                    if (updateQueue !== null) {
                        var lastEffect = updateQueue.lastEffect;
                        if (lastEffect !== null) {
                            var firstEffect = lastEffect.next;
                            var effect = firstEffect;
                            do {
                                var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                if (destroy !== undefined) {
                                    if ((tag & Insertion) !== NoFlags$1) safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                    else if ((tag & Layout) !== NoFlags$1) {
                                        markComponentLayoutEffectUnmountStarted(deletedFiber);
                                        if (deletedFiber.mode & ProfileMode) {
                                            startLayoutEffectTimer();
                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                            recordLayoutEffectDuration(deletedFiber);
                                        } else safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                        markComponentLayoutEffectUnmountStopped();
                                    }
                                }
                                effect = effect.next;
                            }while (effect !== firstEffect);
                        }
                    }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ClassComponent:
                if (!offscreenSubtreeWasHidden) {
                    safelyDetachRef(deletedFiber, nearestMountedAncestor);
                    var instance = deletedFiber.stateNode;
                    if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ScopeComponent:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case OffscreenComponent:
                if (deletedFiber.mode & ConcurrentMode) {
                    // If this offscreen component is hidden, we already unmounted it. Before
                    // deleting the children, track that it's already unmounted so that we
                    // don't attempt to unmount the effects again.
                    // TODO: If the tree is hidden, in most cases we should be able to skip
                    // over the nested children entirely. An exception is we haven't yet found
                    // the topmost host node to delete, which we already track on the stack.
                    // But the other case is portals, which need to be detached no matter how
                    // deeply they are nested. We should use a subtree flag to track whether a
                    // subtree includes a nested portal.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
        }
    }
    function commitSuspenseCallback(finishedWork) {
        // TODO: Move this to passive phase
        var newState = finishedWork.memoizedState;
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    retryCache.add(wakeable);
                    if (isDevToolsPresent) {
                        if (inProgressLanes !== null && inProgressRoot !== null) // If we have pending work still, associate the original updaters with it.
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                        else throw Error('Expected finished root and lanes to be set. This is a bug in React.');
                    }
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        setCurrentFiber(finishedWork);
        commitMutationEffectsOnFiber(finishedWork, root);
        setCurrentFiber(finishedWork);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
        // Deletions effects can be scheduled on any fiber type. They need to happen
        // before the children effects hae fired.
        var deletions = parentFiber.deletions;
        if (deletions !== null) for(var i = 0; i < deletions.length; i++){
            var childToDelete = deletions[i];
            try {
                commitDeletionEffects(root, parentFiber, childToDelete);
            } catch (error) {
                captureCommitPhaseError(childToDelete, parentFiber, error);
            }
        }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while(child !== null){
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root);
                child = child.sibling;
            }
        }
        setCurrentFiber(prevDebugFiber);
    }
    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
        // because the fiber tag is more specific. An exception is any flag related
        // to reconcilation, because those can be set on all fiber types.
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    try {
                        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                        commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    } // Layout effects are destroyed during the mutation phase so that all
                    // destroy functions for all fibers are called before any create functions.
                    // This prevents sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) {
                        try {
                            startLayoutEffectTimer();
                            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                        recordLayoutEffectDuration(finishedWork);
                    } else try {
                        commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case ClassComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                return;
            case HostComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                // TODO: ContentReset gets cleared by the children during the commit
                // phase. This is a refactor hazard because it means we must read
                // flags the flags after `commitReconciliationEffects` has already run;
                // the order matters. We should refactor so that ContentReset does not
                // rely on mutating the flag during commit. Like by setting a flag
                // during the render phase instead.
                if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                        resetTextContent(instance);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                        // Commit the work prepared earlier.
                        var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                        // as the newProps. The updatePayload will contain the real change in
                        // this case.
                        var oldProps = current !== null ? current.memoizedProps : newProps;
                        var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                        var updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null;
                        if (updatePayload !== null) try {
                            commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostText:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (finishedWork.stateNode === null) throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText = current !== null ? current.memoizedProps : newText;
                    try {
                        commitTextUpdate(textInstance, oldText, newText);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case HostRoot:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (current !== null) {
                        var prevRootState = current.memoizedState;
                        if (prevRootState.isDehydrated) try {
                            commitHydratedContainer(root.containerInfo);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostPortal:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
            case SuspenseComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                    var offscreenInstance = offscreenFiber.stateNode;
                    var newState = offscreenFiber.memoizedState;
                    var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    offscreenInstance.isHidden = isHidden;
                    if (isHidden) {
                        var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                        if (!wasHidden) // TODO: Move to passive phase
                        markCommitTimeOfFallback();
                    }
                }
                if (flags & Update) {
                    try {
                        commitSuspenseCallback(finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                    attachSuspenseRetryListeners(finishedWork);
                }
                return;
            case OffscreenComponent:
                var _wasHidden = current !== null && current.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                    // Before committing the children, track on the stack whether this
                    // offscreen subtree was already hidden, so that we don't unmount the
                    // effects again.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                    recursivelyTraverseMutationEffects(root, finishedWork);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                    var _offscreenInstance = finishedWork.stateNode;
                    var _newState = finishedWork.memoizedState;
                    var _isHidden = _newState !== null;
                    var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    _offscreenInstance.isHidden = _isHidden;
                    if (_isHidden) {
                        if (!_wasHidden) {
                            if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                nextEffect = offscreenBoundary;
                                var offscreenChild = offscreenBoundary.child;
                                while(offscreenChild !== null){
                                    nextEffect = offscreenChild;
                                    disappearLayoutEffects_begin(offscreenChild);
                                    offscreenChild = offscreenChild.sibling;
                                }
                            }
                        }
                    }
                    // TODO: This needs to run whenever there's an insertion or update
                    // inside a hidden Offscreen tree.
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
                return;
            case SuspenseListComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) attachSuspenseRetryListeners(finishedWork);
                return;
            case ScopeComponent:
                return;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
        }
    }
    function commitReconciliationEffects(finishedWork) {
        // Placement effects (insertions, reorders) can be scheduled on any fiber
        // type. They needs to happen after the children effects have fired, but
        // before the effects on this fiber have fired.
        var flags = finishedWork.flags;
        if (flags & Placement) {
            try {
                commitPlacement(finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            } // Clear the "placement" from effect tag so that we know that this is
            // inserted, before any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted does
            // and isMounted is deprecated anyway so we should be able to kill this.
            finishedWork.flags &= ~Placement;
        }
        if (flags & Hydrating) finishedWork.flags &= ~Hydrating;
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        nextEffect = finishedWork;
        commitLayoutEffects_begin(finishedWork, root, committedLanes);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
        // Suspense layout effects semantics don't change for legacy roots.
        var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
                // Keep track of the current Offscreen stack's state.
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                    // The Offscreen tree is hidden. Skip over its layout effects.
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                } else {
                    // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
                    var current = fiber.alternate;
                    var wasHidden = current !== null && current.memoizedState !== null;
                    var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.
                    offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                    if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                        // This is the root of a reappearing boundary. Turn its layout effects
                        // back on.
                        nextEffect = fiber;
                        reappearLayoutEffects_begin(fiber);
                    }
                    var child = firstChild;
                    while(child !== null){
                        nextEffect = child;
                        commitLayoutEffects_begin(child, root, committedLanes);
                        child = child.sibling;
                    } // Restore Offscreen state and resume in our-progress traversal.
                    nextEffect = fiber;
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        }
    }
    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                    commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function disappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
            switch(fiber.tag){
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                    if (fiber.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally{
                        recordLayoutEffectDuration(fiber);
                    }
                    else commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    break;
                case ClassComponent:
                    // TODO (Offscreen) Check: flags & RefStatic
                    safelyDetachRef(fiber, fiber.return);
                    var instance = fiber.stateNode;
                    if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                    break;
                case HostComponent:
                    safelyDetachRef(fiber, fiber.return);
                    break;
                case OffscreenComponent:
                    // Check if this is a
                    var isHidden = fiber.memoizedState !== null;
                    if (isHidden) {
                        // Nested Offscreen tree is already hidden. Don't disappear
                        // its effects.
                        disappearLayoutEffects_complete(subtreeRoot);
                        continue;
                    }
                    break;
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else disappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function disappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function reappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                    // Nested Offscreen tree is still hidden. Don't re-appear its effects.
                    reappearLayoutEffects_complete(subtreeRoot);
                    continue;
                }
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else reappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function reappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic
            setCurrentFiber(fiber);
            try {
                reappearLayoutEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork;
        commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
    }
    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
        }
    }
    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                    commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    try {
                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                    } finally{
                        recordPassiveEffectDuration(finishedWork);
                    }
                } else commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                break;
        }
    }
    function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild;
        commitPassiveUnmountEffects_begin();
    }
    function commitPassiveUnmountEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                    for(var i = 0; i < deletions.length; i++){
                        var fiberToDelete = deletions[i];
                        nextEffect = fiberToDelete;
                        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                    }
                    // A fiber was deleted from this parent fiber, but it's still part of
                    // the previous (alternate) parent fiber's list of children. Because
                    // children are a linked list, an earlier sibling that's still alive
                    // will be connected to the deleted fiber via its `alternate`:
                    //
                    //   live fiber
                    //   --alternate--> previous live fiber
                    //   --sibling--> deleted fiber
                    //
                    // We can't disconnect `alternate` on nodes that haven't been deleted
                    // yet, but we can disconnect the `sibling` and `child` pointers.
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                        var detachedChild = previousFiber.child;
                        if (detachedChild !== null) {
                            previousFiber.child = null;
                            do {
                                var detachedSibling = detachedChild.sibling;
                                detachedChild.sibling = null;
                                detachedChild = detachedSibling;
                            }while (detachedChild !== null);
                        }
                    }
                    nextEffect = fiber;
                }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffects_complete();
        }
    }
    function commitPassiveUnmountEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                    recordPassiveEffectDuration(finishedWork);
                } else commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                break;
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        while(nextEffect !== null){
            var fiber = nextEffect; // Deletion effects fire in parent -> child order
            // TODO: Check if fiber has a PassiveStatic flag
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
            // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
            if (child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            // Recursively traverse the entire deleted tree and clean up fiber fields.
            // This is more aggressive than ideal, and the long term goal is to only
            // have to detach the deleted tree at the root.
            detachFiberAfterEffects(fiber);
            if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
            }
            if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
            }
            nextEffect = returnFiber;
        }
    }
    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (current.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                    recordPassiveEffectDuration(current);
                } else commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                break;
        }
    } // TODO: Reuse reappearLayoutEffects traversal here?
    function invokeLayoutEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                try {
                    instance.componentDidMount();
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokePassiveEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokeLayoutEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                break;
        }
    }
    function invokePassiveEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
        }
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor('selector.component');
        HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');
        ROLE_TYPE = symbolFor('selector.role');
        TEST_NAME_TYPE = symbolFor('selector.test_id');
        TEXT_TYPE = symbolFor('selector.text');
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
    function isLegacyActEnvironment(fiber) {
        // Legacy mode. We preserve the behavior of React 17's act. It assumes an
        // act environment whenever `jest` is defined, but you can still turn off
        // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
        // to false.
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest
        var jestIsDefined = typeof jest !== 'undefined';
        return jestIsDefined && isReactActEnvironmentGlobal !== false;
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;
        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) // TODO: Include link to relevant documentation page.
        error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var RenderContext = /*                */ 2;
    var CommitContext = /*                */ 4;
    var RootInProgress = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootDidNotComplete = 6; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).
    var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.
    var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
    // We will log them once the tree commits.
    var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    var workInProgressTransitions = null;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveProfilerEffects = [];
    var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var isFlushingPassiveEffects = false;
    var didScheduleUpdateDuringPassiveEffects = false;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventTransitionLane = NoLanes;
    var isRunningInsertionEffect = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) // This is a render phase update. These are not officially supported. The
        // old behavior is to give this the same "thread" (lanes) as
        // whatever is currently rendering. So if you call `setState` on a component
        // that happens later in the same render, it will flush. Ideally, we want to
        // remove the special case and treat them as if they came from an
        // interleaved event. Regardless, this pattern is not officially supported.
        // This behavior is only a fallback. The flag only exists until we can roll
        // out the setState warning, since existing code might accidentally rely on
        // the current behavior.
        return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) transition._updatedFibers = new Set();
                transition._updatedFibers.add(fiber);
            } // The algorithm for assigning an update to a lane should be stable for all
            // updates at the same priority within the same event. To do this, the
            // inputs to the algorithm must be the same.
            //
            // The trick we use is to cache the first of each of these inputs within an
            // event. Then reset the cached values once we can be sure the event is
            // over. Our heuristic for that is whenever we enter a concurrent work loop.
            if (currentEventTransitionLane === NoLane) // All transitions within the same event are assigned the same lane.
            currentEventTransitionLane = claimNextTransitionLane();
            return currentEventTransitionLane;
        } // Updates originating inside certain React methods, like flushSync, have
        // their priority set by tracking it with a context variable.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane) return updateLane;
         // This update originated outside React. Ask the host environment for an
        // appropriate priority, based on the type of event.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var eventLane = getCurrentEventPriority();
        return eventLane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        return claimNextRetryLane();
    }
    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
        checkForNestedUpdates();
        if (isRunningInsertionEffect) error('useInsertionEffect must not schedule updates.');
        if (isFlushingPassiveEffects) didScheduleUpdateDuringPassiveEffects = true;
        markRootUpdated(root, lane, eventTime);
        if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) // This update was dispatched during the render phase. This is a mistake
        // if the update originates from user space (with the exception of local
        // hook updates, which are handled differently and don't reach this
        // function), but there are some internal React features that use this as
        // an implementation detail, like selective hydration.
        warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
        else {
            if (isDevToolsPresent) addFiberToLanesMap(root, fiber, lane);
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root === workInProgressRoot) {
                // Received an update to a tree that's in the middle of rendering. Mark
                // that there was an interleaved update work on this root. Unless the
                // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
                // phase update. In that case, we don't treat render phase updates as if
                // they were interleaved, for backwards compat reasons.
                if ((executionContext & RenderContext) === NoContext) workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
                // definitely won't finish. Since we have a new update, let's mark it as
                // suspended now, right before marking the incoming update. This has the
                // effect of interrupting the current render and switching to the update.
                // TODO: Make sure this doesn't override pings that happen while we've
                // already started rendering.
                markRootSuspended$1(root, workInProgressRootRenderLanes);
            }
            ensureRootIsScheduled(root, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                // Flush the synchronous work now, unless we're already working or inside
                // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                // scheduleCallbackForFiber to preserve the ability to schedule a callback
                // without immediately flushing it. We only do this for user-initiated
                // updates, to preserve historical behavior of legacy mode.
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
        // This is a special fork of scheduleUpdateOnFiber that is only used to
        // schedule the initial hydration of a root that has just been created. Most
        // of the stuff in scheduleUpdateOnFiber can be skipped.
        //
        // The main reason for this separate path, though, is to distinguish the
        // initial children from subsequent updates. In fully client-rendered roots
        // (createRoot instead of hydrateRoot), all top-level renders are modeled as
        // updates, but hydration roots are special because the initial render must
        // match what was rendered on the server.
        var current = root.current;
        current.lanes = lane;
        markRootUpdated(root, lane, eventTime);
        ensureRootIsScheduled(root, eventTime);
    }
    function isUnsafeClassRenderPhaseUpdate(fiber) {
        // Check if this is a render phase update. Only called by class components,
        // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
        return(// decided not to enable it.
        (executionContext & RenderContext) !== NoContext);
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) cancelCallback$1(existingCallbackNode);
            root.callbackNode = null;
            root.callbackPriority = NoLane;
            return;
        } // We use the highest priority lane to represent the priority of the callback.
        var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.
        var existingCallbackPriority = root.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
        // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            // If we're going to re-use an existing task, it needs to exist.
            // Assume that discrete update microtasks are non-cancellable and null.
            // TODO: Temporary until we confirm this warning is not fired.
            if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');
            return;
        }
        if (existingCallbackNode != null) // Cancel the existing callback. We'll schedule a new one below.
        cancelCallback$1(existingCallbackNode);
         // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLane) {
            // Special case: Sync React callbacks are scheduled on a special
            // internal queue
            if (root.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            // Flush the queue in a microtask.
            if (ReactCurrentActQueue$1.current !== null) // Inside `act`, use our internal `act` queue so that these get flushed
            // at the end of the current scope even when using the sync version
            // of `act`.
            ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
            else scheduleMicrotask(function() {
                // In Safari, appending an iframe forces microtasks to run.
                // https://github.com/facebook/react/issues/22459
                // We don't support running callbacks in the middle of render
                // or commit so we need to check against that.
                if ((executionContext & (RenderContext | CommitContext)) === NoContext) // Note that this would still prematurely flush the callbacks
                // if this happens outside render or commit phase (e.g. in an event).
                flushSyncCallbacks();
            });
            newCallbackNode = null;
        } else {
            var schedulerPriorityLevel;
            switch(lanesToEventPriority(nextLanes)){
                case DiscreteEventPriority:
                    schedulerPriorityLevel = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriorityLevel = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriorityLevel = NormalPriority;
                    break;
                case IdleEventPriority:
                    schedulerPriorityLevel = IdlePriority;
                    break;
                default:
                    schedulerPriorityLevel = NormalPriority;
                    break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root, didTimeout) {
        resetNestedUpdateFlag();
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventTransitionLane = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next lanes to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
         // We disable time-slicing in some cases: if the work has been CPU-bound
        // for too long ("expired" work, to prevent starvation), or we're in
        // sync-updates-by-default mode.
        // TODO: We only check `didTimeout` defensively, to account for a Scheduler
        // bug we're still investigating. Once the bug in Scheduler is fixed,
        // we can remove this, since we track expiration ourselves.
        var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;
        var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);
        if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
                // If something threw an error, try rendering one more time. We'll
                // render synchronously to block concurrent data mutations, and we'll
                // includes all pending updates are included. If it still fails after
                // the second attempt, we'll give up and commit the resulting tree.
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                if (errorRetryLanes !== NoLanes) {
                    lanes = errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
                }
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) // The render unwound without completing the tree. This happens in special
            // cases where need to exit the current render without producing a
            // consistent tree or committing.
            //
            // This should only happen during a concurrent render, not a discrete or
            // synchronous update. We should have already checked for this when we
            // unwound the stack.
            markRootSuspended$1(root, lanes);
            else {
                // The render completed.
                // Check if this render may have yielded to a concurrent event, and if so,
                // confirm that any newly rendered stores are consistent.
                // TODO: It's possible that even a concurrent render may never have yielded
                // to the main thread, if it was fast enough, or if it expired. We could
                // skip the consistency check in that case, too.
                var renderWasConcurrent = !includesBlockingLane(root, lanes);
                var finishedWork = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                    // A store was mutated in an interleaved event. Render again,
                    // synchronously, to block further mutations.
                    exitStatus = renderRootSync(root, lanes); // We need to check again if something threw
                    if (exitStatus === RootErrored) {
                        var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                        if (_errorRetryLanes !== NoLanes) {
                            lanes = _errorRetryLanes;
                            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
                        // concurrent events.
                        }
                    }
                    if (exitStatus === RootFatalErrored) {
                        var _fatalError = workInProgressRootFatalError;
                        prepareFreshStack(root, NoLanes);
                        markRootSuspended$1(root, lanes);
                        ensureRootIsScheduled(root, now());
                        throw _fatalError;
                    }
                } // We now have a consistent tree. The next step is either to commit it,
                // or, if something suspended, wait to commit it after a timeout.
                root.finishedWork = finishedWork;
                root.finishedLanes = lanes;
                finishConcurrentRender(root, exitStatus, lanes);
            }
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function recoverFromConcurrentError(root, errorRetryLanes) {
        // If an error occurred during hydration, discard server response and fall
        // back to client side render.
        // Before rendering again, save the errors from the previous attempt.
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root)) {
            // The shell failed to hydrate. Set a flag to force a client rendering
            // during the next attempt. To do this, we call prepareFreshStack now
            // to create the root work-in-progress fiber. This is a bit weird in terms
            // of factoring, because it relies on renderRootSync not calling
            // prepareFreshStack again in the call below, which happens because the
            // root and lanes haven't changed.
            //
            // TODO: I think what we should do is set ForceClientRender inside
            // throwException, like we do for nested Suspense boundaries. The reason
            // it's here instead is so we can switch to the synchronous work loop, too.
            // Something to consider for a future refactor.
            var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            errorHydratingContainer(root.containerInfo);
        }
        var exitStatus = renderRootSync(root, errorRetryLanes);
        if (exitStatus !== RootErrored) {
            // Successfully finished rendering on retry
            // The errors from the failed first attempt have been recovered. Add
            // them to the collection of recoverable errors. We'll log them in the
            // commit phase.
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
            // from the first attempt, to preserve the causal sequence.
            if (errorsFromSecondAttempt !== null) queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
    }
    function queueRecoverableErrors(errors) {
        if (workInProgressRootRecoverableErrors === null) workInProgressRootRecoverableErrors = errors;
        else workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootInProgress:
            case RootFatalErrored:
                throw new Error('Root did not complete. This is a bug in React.');
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
                !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            default:
                throw new Error('Unknown root exit status.');
        }
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        // Search the rendered tree for external store reads, and check whether the
        // stores were mutated in a concurrent event. Intentionally using an iterative
        // loop instead of recursion so we can exit early.
        var node = finishedWork;
        while(true){
            if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                    var checks = updateQueue.stores;
                    if (checks !== null) for(var i = 0; i < checks.length; i++){
                        var check = checks[i];
                        var getSnapshot = check.getSnapshot;
                        var renderedValue = check.value;
                        try {
                            if (!objectIs(getSnapshot(), renderedValue)) // Found an inconsistent store.
                            return false;
                        } catch (error) {
                            // If `getSnapshot` throws, return `false`. This will schedule
                            // a re-render, and the error will be rethrown during render.
                            return false;
                        }
                    }
                }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
            }
            if (node === finishedWork) return true;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return true;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow doesn't know this is unreachable, but eslint does
        // eslint-disable-next-line no-unreachable
        return true;
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        syncNestedUpdateFlag();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
        flushPassiveEffects();
        var lanes = getNextLanes(root, NoLanes);
        if (!includesSomeLane(lanes, SyncLane)) {
            // There's no remaining sync work left.
            ensureRootIsScheduled(root, now());
            return null;
        }
        var exitStatus = renderRootSync(root, lanes);
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
            if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
            }
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        }
        if (exitStatus === RootDidNotComplete) throw new Error('Root did not complete. This is a bug in React.');
         // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushRoot(root, lanes) {
        if (lanes !== NoLanes) {
            markRootEntangled(root, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
            }
        }
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
            // most batchedUpdates-like method.
            if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) resetRenderTimer();
        }
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync(fn) {
        // In legacy mode, we flush pending passive effects at the beginning of the
        // next event, not at the end of the previous one.
        if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        var previousPriority = getCurrentUpdatePriority();
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) return fn();
            else return undefined;
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) flushSyncCallbacks();
        }
    }
    function isAlreadyRendering() {
        // Used by the renderer to print a warning if certain APIs are called from
        // the wrong context.
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
        subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while(interruptedWork !== null){
                var current = interruptedWork.alternate;
                unwindInterruptedWork(current, interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        var rootWorkInProgress = createWorkInProgress(root.current, null);
        workInProgress = rootWorkInProgress;
        workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootInterleavedUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        workInProgressRootConcurrentErrors = null;
        workInProgressRootRecoverableErrors = null;
        finishQueueingConcurrentUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return rootWorkInProgress;
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                if (enableSchedulingProfiler) {
                    markComponentRenderStopped();
                    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
                        var wakeable = thrownValue;
                        markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                    } else markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress = erroredWork;
                } else erroredWork = workInProgress;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true);
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError(error) {
        if (workInProgressRootExitStatus !== RootSuspendedWithDelay) workInProgressRootExitStatus = RootErrored;
        if (workInProgressRootConcurrentErrors === null) workInProgressRootConcurrentErrors = [
            error
        ];
        else workInProgressRootConcurrentErrors.push(error);
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootInProgress;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress !== null) // This is a sync render, so we should have finished the whole tree.
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress !== null)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress !== null) {
            markRenderYielded();
            return RootInProgress;
        } else {
            markRenderStopped();
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress !== null && !shouldYield())performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress = next;
                    return;
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its subtree flags.
                    returnFiber.flags |= Incomplete;
                    returnFiber.subtreeFlags = NoFlags;
                    returnFiber.deletions = null;
                } else {
                    // We've unwound all the way to the root.
                    workInProgressRootExitStatus = RootDidNotComplete;
                    workInProgress = null;
                    return;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress = completedWork;
        }while (completedWork !== null); // We've reached the root.
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootCompleted;
    }
    function commitRoot(root, recoverableErrors, transitions) {
        // TODO: This no longer makes any sense. We already wrap the mutation and
        // layout phases. Should be able to remove.
        var previousUpdateLanePriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally{
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
    }
    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null);
        flushRenderPhaseStrictModeWarningsInDEV();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        markCommitStarted(lanes);
        if (finishedWork === null) {
            markCommitStopped();
            return null;
        } else if (lanes === NoLanes) error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (finishedWork === root.current) throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null;
        root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes);
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
        } // If there are pending passive effects, schedule a callback to process them.
        // Do this as early as possible, so it is queued before anything else that
        // might get scheduled in the commit phase. (See #16714.)
        // TODO: Delete all other places that schedule the passive effect callback
        // They're redundant.
        if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                // to store it in pendingPassiveTransitions until they get processed
                // We need to pass this through as an argument to commitRoot
                // because workInProgressTransitions might have changed between
                // the previous render and commit if we throttle the commit
                // with setTimeout
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                    flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
                    // *after* passive effects fire to avoid freeing a cache pool that may
                    // be referenced by a node in the tree (HostRoot, Cache boundary etc)
                    return null;
                });
            }
        } // Check if there are any effects in the whole tree.
        // TODO: This is left over from the effect list implementation, where we had
        // to check for the existence of `firstEffect` to satisfy Flow. I think the
        // only other reason this optimization exists is because it affects profiling.
        // Reconsider whether this is necessary.
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext; // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            commitMutationEffects(root, finishedWork, lanes);
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            markLayoutEffectsStarted(lanes);
            commitLayoutEffects(finishedWork, root, lanes);
            markLayoutEffectsStopped();
            // opportunity to paint.
            requestPaint();
            executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
        } else {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        // TODO: This is part of the `componentDidCatch` implementation. Its purpose
        // is to detect whether something might have called setState inside
        // `componentDidCatch`. The mechanism is known to be flawed because `setState`
        // inside `componentDidCatch` is itself flawed — that's why we recommend
        // `getDerivedStateFromError` instead. However, it could be improved by
        // checking if remainingLanes includes Sync work, instead of whether there's
        // any work remaining at all (which would also include stuff like Suspense
        // retries or transitions). It's been like this for a while, though, so fixing
        // it probably isn't that urgent.
        if (remainingLanes === NoLanes) // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) commitDoubleInvokeEffectsInDEV(root.current, false);
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        if (isDevToolsPresent) root.memoizedUpdaters.clear();
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (recoverableErrors !== null) {
            // There were errors during this render, but recovered from them without
            // needing to surface it to the UI. We log them here.
            var onRecoverableError = root.onRecoverableError;
            for(var i = 0; i < recoverableErrors.length; i++){
                var recoverableError = recoverableErrors[i];
                var componentStack = recoverableError.stack;
                var digest = recoverableError.digest;
                onRecoverableError(recoverableError.value, {
                    componentStack: componentStack,
                    digest: digest
                });
            }
        }
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
        } // If the passive effects are the result of a discrete render, flush them
        // synchronously at the end of the current task so that the result is
        // immediately observable. Otherwise, we assume that they are not
        // order-dependent and do not need to be observed by external systems, so we
        // can wait until after paint.
        // TODO: We can optimize this by not scheduling the callback earlier. Since we
        // currently schedule the callback in multiple places, will wait until those
        // are consolidated.
        if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) flushPassiveEffects();
         // Read this again, since a passive effect might have updated it
        remainingLanes = root.pendingLanes;
        if (includesSomeLane(remainingLanes, SyncLane)) {
            markNestedUpdateScheduled();
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
         // If layout work was scheduled, flush it now.
        flushSyncCallbacks();
        markCommitStopped();
        return null;
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
        // probably just combine the two functions. I believe they were only separate
        // in the first place because we used to wrap it with
        // `Scheduler.runWithPriority`, which accepts a function. But now we track the
        // priority within React itself, so we can mutate the variable directly.
        if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
            } finally{
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
            }
        }
        return false;
    }
    function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
         // Cache and clear the transitions flag
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
        // Figure out why and fix it. It's not causing any known issues (probably
        // because it's only used for profiling), but it's a refactor hazard.
        pendingPassiveEffectsLanes = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Cannot flush passive effects while already rendering.');
        isFlushingPassiveEffects = true;
        didScheduleUpdateDuringPassiveEffects = false;
        markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        commitPassiveUnmountEffects(root.current);
        commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects
        var profilerEffects = pendingPassiveProfilerEffects;
        pendingPassiveProfilerEffects = [];
        for(var i = 0; i < profilerEffects.length; i++){
            var _fiber = profilerEffects[i];
            commitPassiveEffectDurations(root, _fiber);
        }
        markPassiveEffectsStopped();
        commitDoubleInvokeEffectsInDEV(root.current, true);
        executionContext = prevExecutionContext;
        flushSyncCallbacks();
        // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        if (didScheduleUpdateDuringPassiveEffects) {
            if (root === rootWithPassiveNestedUpdates) nestedPassiveUpdateCount++;
            else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root;
            }
        } else nestedPassiveUpdateCount = 0;
        isFlushingPassiveEffects = false;
        didScheduleUpdateDuringPassiveEffects = false;
        onPostCommitRoot(root);
        var stateNode = root.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        var root = enqueueUpdate(rootFiber, update, SyncLane);
        var eventTime = requestEventTime();
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        reportUncaughtErrorInDEV(error$1);
        setIsRunningInsertionEffect(false);
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
        }
        var fiber = null;
        fiber = nearestMountedAncestor;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    var root = enqueueUpdate(fiber, update, SyncLane);
                    var eventTime = requestEventTime();
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
        // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
        // will fire for errors that are thrown by destroy functions inside deleted
        // trees. What it should instead do is propagate the error to the parent of
        // the deleted tree. In the meantime, do not add this warning to the
        // allowlist; this is only for our internal use.
        error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        warnIfSuspenseResolutionNotWrappedWithActDEV(root);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new lanes.
        if (retryLane === NoLane) // TODO: Assign this to `suspenseState.retryLane`? to avoid
        // unnecessary entanglement?
        retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState;
        var retryLane = NoLane;
        if (suspenseState !== null) retryLane = suspenseState.retryLane;
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        switch(boundaryFiber.tag){
            case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) retryLane = suspenseState.retryLane;
                break;
            case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
            default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
            error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
        // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
        // Maybe not a big deal since this is DEV only behavior.
        setCurrentFiber(fiber);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
        resetCurrentFiber();
    }
    function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        var current = firstChild;
        var subtreeRoot = null;
        while(current !== null){
            var primarySubtreeFlag = current.subtreeFlags & fiberFlags;
            if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) current = current.child;
            else {
                if ((current.flags & fiberFlags) !== NoFlags) invokeEffectFn(current);
                if (current.sibling !== null) current = current.sibling;
                else current = subtreeRoot = current.return;
            }
        }
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & ConcurrentMode)) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current;
        try {
            setCurrentFiber(fiber);
            error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') // Don't replay promises.
            // Don't replay errors if we are hydrating and have already suspended or handled an error
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
                originalError._suppressLogging = true;
            } // We always throw the original error in case the second render pass is not idempotent.
            // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    }
    function restorePendingUpdaters(root, lanes) {
        if (isDevToolsPresent) {
            var memoizedUpdaters = root.memoizedUpdaters;
            memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root, schedulingFiber, lanes);
            }); // This function intentionally does not clear memoized updaters.
        // Those may still be relevant to the current commit
        // and a future one (e.g. Suspense).
        }
    }
    var fakeActCallbackNode = {};
    function scheduleCallback$1(priorityLevel, callback) {
        // If we're currently inside an `act` scope, bypass Scheduler and push to
        // the `act` queue instead.
        var actQueue = ReactCurrentActQueue$1.current;
        if (actQueue !== null) {
            actQueue.push(callback);
            return fakeActCallbackNode;
        } else return scheduleCallback(priorityLevel, callback);
    }
    function cancelCallback$1(callbackNode) {
        if (callbackNode === fakeActCallbackNode) return;
         // In production, always call Scheduler. This function will be stripped out.
        return cancelCallback(callbackNode);
    }
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return ReactCurrentActQueue$1.current !== null;
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment()) // Not in an act environment. No need to warn.
            return;
        } else {
            // Legacy mode has additional cases where we suppress a warning.
            if (!isLegacyActEnvironment()) // Not in an act environment. No need to warn.
            return;
            if (executionContext !== NoContext) // Legacy mode doesn't warn if the update is batched, i.e.
            // batchedUpdates or flushSync.
            return;
            if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) // For backwards compatibility with pre-hooks code, legacy mode only
            // warns for updates that originate from a hook.
            return;
        }
        if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current;
            try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
    }
    function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
    }
    /* eslint-disable react-internal/prod-error-codes */ var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === 'function') {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== 'function') return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error('Expected resolveFamily to be set during hot reload.');
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) {
            var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (_root !== null) scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
        }
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error('Expected to reach root first.');
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.subtreeFlags = NoFlags;
        this.deletions = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === 'function') return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effects are no longer valid.
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        } // Reset all effects except static ones.
        // Static effects are not specific to a render.
        workInProgress.flags = current.flags & StaticMask;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect flags but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
            }
        } else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === 'string') fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictLegacyMode;
                if ((mode & ConcurrentMode) !== NoMode) // Strict effects should never run on legacy roots
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_CACHE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_TRACING_MARKER_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_DEBUG_TRACING_MODE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === 'object' && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                }
                var info = '';
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== 'string') error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        var primaryChildInstance = {
            isHidden: false
        };
        fiber.stateNode = primaryChildInstance;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        fiber.elementType = 'DELETED';
        return fiber;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        fiber.stateNode = dehydratedNode;
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.subtreeFlags = source.subtreeFlags;
        target.deletions = source.deletions;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.callbackNode = null;
        this.callbackPriority = NoLane;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.identifierPrefix = identifierPrefix;
        this.onRecoverableError = onRecoverableError;
        this.mutableSourceEagerHydrationData = null;
        this.effectDuration = 0;
        this.passiveEffectDuration = 0;
        this.memoizedUpdaters = new Set();
        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
        for(var _i = 0; _i < TotalLanes; _i++)pendingUpdatersLaneMap.push(new Set());
        switch(tag){
            case ConcurrentRoot:
                this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';
                break;
            case LegacyRoot:
                this._debugRootType = hydrate ? 'hydrate()' : 'render()';
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // host config, but because they are passed in at runtime, we have to thread
    // them through the root constructor. Perhaps we should put them all into a
    // single type, like a DynamicHostConfig that is defined by the renderer.
    identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
        };
        uninitializedFiber.memoizedState = _initialState;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    var ReactVersion = '18.3.1';
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        checkKeyStringCoercion(key);
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {};
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get(component);
        if (fiber === undefined) {
            if (typeof component.render === 'function') throw new Error('Unable to find node on an unmounted component.');
            else {
                var keys = Object.keys(component).join(',');
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
            }
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || 'Component';
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = false;
        var initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
    }
    function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = true;
        var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor
        root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
        // a regular update because the initial render must match was was rendered
        // on the server.
        // NOTE: This update intentionally doesn't have a payload. We're only using
        // the update to schedule work on the root fiber (and, for legacy roots, to
        // enqueue the callback if one is provided).
        var current = root.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current);
        var update = createUpdate(eventTime, lane);
        update.callback = callback !== undefined && callback !== null ? callback : null;
        enqueueUpdate(current, update, lane);
        scheduleInitialHydrationOnRoot(root, lane, eventTime);
        return root;
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || 'Unknown');
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== 'function') error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        var root = enqueueUpdate(current$1, update, lane);
        if (root !== null) {
            scheduleUpdateOnFiber(root, current$1, lane, eventTime);
            entangleTransitions(root, current$1, lane);
        }
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function attemptSynchronousHydration$1(fiber) {
        switch(fiber.tag){
            case HostRoot:
                var root = fiber.stateNode;
                if (isRootDehydrated(root)) {
                    // Flush the first scheduled "update".
                    var lanes = getHighestPriorityPendingLanes(root);
                    flushRoot(root, lanes);
                }
                break;
            case SuspenseComponent:
                flushSync(function() {
                    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                    if (root !== null) {
                        var eventTime = requestEventTime();
                        scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
                    }
                }); // If we're still blocked after this, we need to increase
                // the priority of any promises resolving within this
                // boundary so that they next attempt also has higher pri.
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thenables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var lane = SelectiveHydrationLane;
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var lane = requestUpdateLane(fiber);
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    var shouldErrorImpl = function(fiber) {
        return null;
    };
    function shouldError(fiber) {
        return shouldErrorImpl(fiber);
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setErrorHandler = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) {
            if (isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn('copyWithRename() expects paths of the same length');
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn('copyWithRename() expects paths to be the same except for the deepest key');
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setErrorHandler: setErrorHandler,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
        });
    }
    /* global reportError */ var defaultOnRecoverableError = typeof reportError === 'function' ? // emulating an uncaught JavaScript error.
    reportError : function(error) {
        // In older browsers and test environments, fallback to console.error.
        // eslint-disable-next-line react-internal/no-production-logging
        console['error'](error);
    };
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (root === null) throw new Error('Cannot update an unmounted root.');
        if (typeof arguments[1] === 'function') error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        else if (isValidContainer(arguments[1])) error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
        else if (typeof arguments[1] !== 'undefined') error("You passed a second argument to root.render(...) but it only accepts one argument.");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        if (typeof arguments[0] === 'function') error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        if (root !== null) {
            this._internalRoot = null;
            var container = root.containerInfo;
            if (isAlreadyRendering()) error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            flushSync(function() {
                updateContainer(null, root, null, null);
            });
            unmarkContainerAsRoot(container);
        }
    };
    function createRoot(container, options) {
        if (!isValidContainer(container)) throw new Error('createRoot(...): Target container is not a DOM element.');
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = '';
        var onRecoverableError = defaultOnRecoverableError;
        var transitionCallbacks = null;
        if (options !== null && options !== undefined) {
            if (options.hydrate) warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');
            else if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
            if (options.transitionCallbacks !== undefined) transitionCallbacks = options.transitionCallbacks;
        }
        var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        return new ReactDOMRoot(root);
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function scheduleHydration(target) {
        if (target) queueExplicitHydrationTarget(target);
    }
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
    function hydrateRoot(container, initialChildren, options) {
        if (!isValidContainer(container)) throw new Error('hydrateRoot(...): Target container is not a DOM element.');
        warnIfReactDOMContainerInDEV(container);
        if (initialChildren === undefined) error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        // the hydration callbacks.
        var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option
        var mutableSources = options != null && options.hydratedSources || null;
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = '';
        var onRecoverableError = defaultOnRecoverableError;
        if (options !== null && options !== undefined) {
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
        }
        var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.
        listenToAllSupportedEvents(container);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return new ReactDOMHydrationRoot(root);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
    } // TODO: Remove this function which also includes comment nodes.
    // We only use it in places that are currently more relaxed.
    function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }
    function warnIfReactDOMContainerInDEV(container) {
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
        if (isContainerMarkedAsRoot(container)) {
            if (container._reactRootContainer) error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
            else error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
        }
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function noopOnRecoverableError() {
    // legacy API.
    }
    function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            }
            var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, '', noopOnRecoverableError);
            container._reactRootContainer = root;
            markContainerAsRoot(root.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root;
        } else {
            // First clear any existing content.
            var rootSibling;
            while(rootSibling = container.lastChild)container.removeChild(rootSibling);
            if (typeof callback === 'function') {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(_root);
                    _originalCallback.call(instance);
                };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, '', noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.
            flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
        }
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== 'function') error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
        var maybeRoot = container._reactRootContainer;
        var root;
        if (!maybeRoot) // Initial mount
        root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
            root = maybeRoot;
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, root, parentComponent, callback);
        }
        return getPublicRootInstance(root);
    }
    var didWarnAboutFindDOMNode = false;
    function findDOMNode(componentOrElement) {
        if (!didWarnAboutFindDOMNode) {
            didWarnAboutFindDOMNode = true;
            error("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node");
        }
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || 'A component');
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    function hydrate(element, container, callback) {
        error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error('Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render(element, container, callback) {
        error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error('Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(containerNode)) throw new Error('Target container is not a DOM element.');
        if (parentComponent == null || !has(parentComponent)) throw new Error('parentComponent must be a valid React Component');
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    var didWarnAboutUnmountComponentAtNode = false;
    function unmountComponentAtNode(container) {
        if (!didWarnAboutUnmountComponentAtNode) {
            didWarnAboutUnmountComponentAtNode = true;
            error("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot");
        }
        if (!isValidContainerLegacy(container)) throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setGetCurrentUpdatePriority(getCurrentUpdatePriority);
    setAttemptHydrationAtPriority(runWithPriority);
    if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw new Error('Target container is not a DOM element.');
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    var Internals = {
        usingClientEntryPoint: false,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            batchedUpdates$1
        ]
    };
    function createRoot$1(container, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return createRoot(container, options);
    }
    function hydrateRoot$1(container, initialChildren, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return hydrateRoot(container, initialChildren, options);
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync$1(fn) {
        if (isAlreadyRendering()) error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        return flushSync(fn);
    }
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: 'react-dom'
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === 'file:' ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ''), 'font-weight:bold');
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.createRoot = createRoot$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync$1;
    exports.hydrate = hydrate;
    exports.hydrateRoot = hydrateRoot$1;
    exports.render = render;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{"6f0162e9ab224cd4":"jMk1U","8ad4ca65319d28a7":"4OQ2m"}],"4OQ2m":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"j5hep"}],"j5hep":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var frameYieldMs = 5;
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        return heap.length === 0 ? null : heap[0];
    }
    function pop(heap) {
        if (heap.length === 0) return null;
        var first = heap[0];
        var last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
        }
        return first;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(index > 0){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        var halfLength = length >>> 1;
        while(index < halfLength){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */ var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
    var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom
    var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) break;
            var callback = currentTask.callback;
            if (typeof callback === 'function') {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === 'function') currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === 'object' && options !== null) {
            var delay = options.delay;
            if (typeof delay === 'number' && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {}
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var isMessageLoopRunning = false;
    var scheduledHostCallback = null;
    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
    // thread, like user events. By default, it yields multiple times per frame.
    // It does not attempt to align with frame boundaries, since most tasks don't
    // need to be frame aligned; for those that do, use requestAnimationFrame.
    var frameInterval = frameYieldMs;
    var startTime = -1;
    function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime;
        if (timeElapsed < frameInterval) // The main thread has only been blocked for a really short amount of time;
        // smaller than a single frame. Don't yield yet.
        return false;
         // The main thread has been blocked for a non-negligible amount of time. We
        return true;
    }
    function requestPaint() {}
    function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
            // Using console['error'] to evade Babel and ESLint
            console['error']("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
        }
        if (fps > 0) frameInterval = Math.floor(1000 / fps);
        else // reset the framerate
        frameInterval = frameYieldMs;
    }
    var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
            // has been blocked.
            startTime = currentTime;
            var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            //
            // Intentionally not using a try-catch, since that makes some debugging
            // techniques harder. Instead, if `scheduledHostCallback` errors, then
            // `hasMoreWork` will remain true, and we'll continue the work loop.
            var hasMoreWork = true;
            try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally{
                if (hasMoreWork) // If there's more work, schedule the next message event at the end
                // of the preceding one.
                schedulePerformWorkUntilDeadline();
                else {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                }
            }
        } else isMessageLoopRunning = false;
         // Yielding to the browser will give it a chance to paint, so we can
    };
    var schedulePerformWorkUntilDeadline;
    if (typeof localSetImmediate === 'function') // Node.js and old IE.
    // There's a few reasons for why we prefer setImmediate.
    //
    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
    // (Even though this is a DOM fork of the Scheduler, you could get here
    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
    // https://github.com/facebook/react/issues/20756
    //
    // But also, it runs earlier which is the semantic we want.
    // If other browsers ever implement it, it's better to use it.
    // Although both of these would be inferior to native scheduling.
    schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if (typeof MessageChannel !== 'undefined') {
        // DOM and Worker environments.
        // We prefer MessageChannel because of the 4ms setTimeout clamping.
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else // We should only fallback here in non-browser environments.
    schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    function requestHostCallback(callback) {
        scheduledHostCallback = callback;
        if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
        }
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID);
        taskTimeoutID = -1;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_forceFrameRate = forceFrameRate;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"hh6uc":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$4089 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$4089.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$4089.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>App);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _dashboard = require("./components/dashboard");
var _dashboardDefault = parcelHelpers.interopDefault(_dashboard);
var _heroMp4 = require("./hero.mp4");
var _heroMp4Default = parcelHelpers.interopDefault(_heroMp4);
var _darkModeToggle = require("./components/darkModeToggle");
var _darkModeToggleDefault = parcelHelpers.interopDefault(_darkModeToggle);
var _s = $RefreshSig$();
function App() {
    _s();
    const dashboardRef = (0, _react.useRef)(null);
    const scrollToDashboard = ()=>{
        dashboardRef.current?.scrollIntoView({
            behavior: "smooth"
        });
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "min-h-screen bg-white text-gray-800 dark:bg-gray-900 dark:text-gray-100 transition-colors duration-300",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "fixed top-4 left-4 z-50",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _darkModeToggleDefault.default), {}, void 0, false, {
                    fileName: "src/App.js",
                    lineNumber: 17,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "src/App.js",
                lineNumber: 16,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("section", {
                className: "relative min-h-screen flex flex-col items-center justify-center text-center overflow-hidden px-6",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("video", {
                        autoPlay: true,
                        muted: true,
                        loop: true,
                        playsInline: true,
                        className: "absolute inset-0 w-full h-full object-cover opacity-30 z-0",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("source", {
                                src: (0, _heroMp4Default.default),
                                type: "video/mp4"
                            }, void 0, false, {
                                fileName: "src/App.js",
                                lineNumber: 29,
                                columnNumber: 11
                            }, this),
                            "Your browser does not support the video tag."
                        ]
                    }, void 0, true, {
                        fileName: "src/App.js",
                        lineNumber: 22,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "z-10 max-w-4xl",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                                className: "text-5xl font-extrabold text-blue-700 dark:text-blue-400 mb-4 drop-shadow-lg",
                                children: "Welcome to FactoryFlow"
                            }, void 0, false, {
                                fileName: "src/App.js",
                                lineNumber: 34,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-lg text-gray-800 dark:text-gray-200 max-w-xl mx-auto drop-shadow-sm",
                                children: "The smart manufacturing dashboard designed to simplify performance monitoring, analytics, and workflow \u2014 all in one intuitive interface."
                            }, void 0, false, {
                                fileName: "src/App.js",
                                lineNumber: 37,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "mt-8",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                    onClick: scrollToDashboard,
                                    className: "px-6 py-3 bg-blue-600 text-white rounded-xl shadow hover:bg-blue-700 transition",
                                    children: "View Dashboard"
                                }, void 0, false, {
                                    fileName: "src/App.js",
                                    lineNumber: 42,
                                    columnNumber: 13
                                }, this)
                            }, void 0, false, {
                                fileName: "src/App.js",
                                lineNumber: 41,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/App.js",
                        lineNumber: 33,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "z-10 mt-20 grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl w-full px-4",
                        children: [
                            {
                                title: "Real-Time Metrics",
                                description: "Live data streams to help you make better decisions, faster."
                            },
                            {
                                title: "Modular UI",
                                description: "Clean, component-based layout designed with scalability in mind."
                            },
                            {
                                title: "Tailored Insights",
                                description: "Built-in analytics and charts for better operational clarity."
                            }
                        ].map(({ title, description }, i)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "backdrop-blur-md bg-white/70 dark:bg-gray-800/70 border border-white/20 dark:border-gray-700 rounded-2xl p-6 shadow-lg",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                        className: "text-xl font-semibold text-blue-700 dark:text-blue-400 mb-2",
                                        children: title
                                    }, void 0, false, {
                                        fileName: "src/App.js",
                                        lineNumber: 71,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-gray-700 dark:text-gray-300",
                                        children: description
                                    }, void 0, false, {
                                        fileName: "src/App.js",
                                        lineNumber: 72,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, i, true, {
                                fileName: "src/App.js",
                                lineNumber: 67,
                                columnNumber: 13
                            }, this))
                    }, void 0, false, {
                        fileName: "src/App.js",
                        lineNumber: 52,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/App.js",
                lineNumber: 21,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _dashboardDefault.default), {
                ref: dashboardRef
            }, void 0, false, {
                fileName: "src/App.js",
                lineNumber: 79,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("footer", {
                className: "text-center py-8 text-sm text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-900 z-20 relative",
                children: "\xa9 2025 FactoryFlow. Built by Evan Nicotra."
            }, void 0, false, {
                fileName: "src/App.js",
                lineNumber: 82,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/App.js",
        lineNumber: 14,
        columnNumber: 5
    }, this);
}
_s(App, "L/GTULlpZ28dc11EJsRuP59/hkA=");
_c = App;
var _c;
$RefreshReg$(_c, "App");

  $parcel$ReactRefreshHelpers$4089.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","./components/dashboard":"8sbCd","./components/darkModeToggle":"dGyqr","./hero.mp4":"60As1"}],"7h6Pi":[function(require,module,exports,__globalThis) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
module.exports.init = function() {
    if (!globalThis.$RefreshReg$) {
        Refresh.injectIntoGlobalHook(globalThis);
        globalThis.$RefreshReg$ = function() {};
        globalThis.$RefreshSig$ = function() {
            return function(type) {
                return type;
            };
        };
        if (typeof window !== 'undefined') {
            let ErrorOverlay = require("e4d875b7642f9496");
            ErrorOverlay.setEditorHandler(function(errorLocation) {
                let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
                fetch(module.bundle.devServer + `/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
            });
            ErrorOverlay.startReportingRuntimeErrors({
                onError: function() {}
            });
            window.addEventListener('parcelhmraccept', ()=>{
                ErrorOverlay.dismissRuntimeErrors();
            });
        }
    }
};
// Everything below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    globalThis.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + ' ' + id);
    };
    globalThis.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (typeof window === 'undefined') return;
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + ' %exports% ' + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"hpiFP","e4d875b7642f9496":"gnoim"}],"hpiFP":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"7AD9f"}],"7AD9f":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function computeFullKey(signature) {
        if (null !== signature.fullKey) return signature.fullKey;
        var fullKey = signature.ownKey;
        try {
            var hooks = signature.getCustomHooks();
        } catch (err) {
            return signature.forceReset = !0, signature.fullKey = fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if ("function" !== typeof hook) return signature.forceReset = !0, signature.fullKey = fullKey;
            hook = allSignaturesByType.get(hook);
            if (void 0 !== hook) {
                var nestedHookKey = computeFullKey(hook);
                hook.forceReset && (signature.forceReset = !0);
                fullKey += "\n---\n" + nestedHookKey;
            }
        }
        return signature.fullKey = fullKey;
    }
    function resolveFamily(type) {
        return updatedFamiliesByType.get(type);
    }
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function getProperty(object, property) {
        try {
            return object[property];
        } catch (err) {}
    }
    function register(type, id) {
        if (!(null === type || "function" !== typeof type && "object" !== typeof type || allFamiliesByType.has(type))) {
            var family = allFamiliesByID.get(id);
            void 0 === family ? (family = {
                current: type
            }, allFamiliesByID.set(id, family)) : pendingUpdates.push([
                family,
                type
            ]);
            allFamiliesByType.set(type, family);
            if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
                case REACT_FORWARD_REF_TYPE:
                    register(type.render, id + "$render");
                    break;
                case REACT_MEMO_TYPE:
                    register(type.type, id + "$type");
            }
        }
    }
    function setSignature(type, key) {
        var forceReset = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !1, getCustomHooks = 3 < arguments.length ? arguments[3] : void 0;
        allSignaturesByType.has(type) || allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
        if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
            case REACT_FORWARD_REF_TYPE:
                setSignature(type.render, key, forceReset, getCustomHooks);
                break;
            case REACT_MEMO_TYPE:
                setSignature(type.type, key, forceReset, getCustomHooks);
        }
    }
    function collectCustomHooksForSignature(type) {
        type = allSignaturesByType.get(type);
        void 0 !== type && computeFullKey(type);
    }
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_MEMO_TYPE = Symbol.for("react.memo"), PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, allFamiliesByID = new Map(), allFamiliesByType = new PossiblyWeakMap(), allSignaturesByType = new PossiblyWeakMap(), updatedFamiliesByType = new PossiblyWeakMap(), pendingUpdates = [], helpersByRendererID = new Map(), helpersByRoot = new Map(), mountedRoots = new Set(), failedRoots = new Set(), rootElements = "function" === typeof WeakMap ? new WeakMap() : null, isPerformingRefresh = !1;
    exports._getMountedRootCount = function() {
        return mountedRoots.size;
    };
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = function() {
        var savedType, hasCustomHooks, didCollectHooks = !1;
        return function(type, key, forceReset, getCustomHooks) {
            if ("string" === typeof key) return savedType || (savedType = type, hasCustomHooks = "function" === typeof getCustomHooks), null == type || "function" !== typeof type && "object" !== typeof type || setSignature(type, key, forceReset, getCustomHooks), type;
            !didCollectHooks && hasCustomHooks && (didCollectHooks = !0, collectCustomHooksForSignature(savedType));
        };
    };
    exports.getFamilyByID = function(id) {
        return allFamiliesByID.get(id);
    };
    exports.getFamilyByType = function(type) {
        return allFamiliesByType.get(type);
    };
    exports.hasUnrecoverableErrors = function() {
        return !1;
    };
    exports.injectIntoGlobalHook = function(globalObject) {
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (void 0 === hook) {
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: !0,
                inject: function() {
                    return nextID++;
                },
                onScheduleFiberRoot: function() {},
                onCommitFiberRoot: function() {},
                onCommitFiberUnmount: function() {}
            };
        }
        if (hook.isDisabled) console.warn("Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). Fast Refresh is not compatible with this shim and will be disabled.");
        else {
            var oldInject = hook.inject;
            hook.inject = function(injected) {
                var id = oldInject.apply(this, arguments);
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
                return id;
            };
            hook.renderers.forEach(function(injected, id) {
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
            });
            var oldOnCommitFiberRoot = hook.onCommitFiberRoot, oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
            hook.onScheduleFiberRoot = function(id, root, children) {
                isPerformingRefresh || (failedRoots.delete(root), null !== rootElements && rootElements.set(root, children));
                return oldOnScheduleFiberRoot.apply(this, arguments);
            };
            hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
                var helpers = helpersByRendererID.get(id);
                if (void 0 !== helpers) {
                    helpersByRoot.set(root, helpers);
                    helpers = root.current;
                    var alternate = helpers.alternate;
                    null !== alternate ? (alternate = null != alternate.memoizedState && null != alternate.memoizedState.element && mountedRoots.has(root), helpers = null != helpers.memoizedState && null != helpers.memoizedState.element, !alternate && helpers ? (mountedRoots.add(root), failedRoots.delete(root)) : alternate && helpers || (alternate && !helpers ? (mountedRoots.delete(root), didError ? failedRoots.add(root) : helpersByRoot.delete(root)) : alternate || helpers || didError && failedRoots.add(root))) : mountedRoots.add(root);
                }
                return oldOnCommitFiberRoot.apply(this, arguments);
            };
        }
    };
    exports.isLikelyComponentType = function(type) {
        switch(typeof type){
            case "function":
                if (null != type.prototype) {
                    if (type.prototype.isReactComponent) return !0;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (1 < ownNames.length || "constructor" !== ownNames[0] || type.prototype.__proto__ !== Object.prototype) return !1;
                }
                type = type.name || type.displayName;
                return "string" === typeof type && /^[A-Z]/.test(type);
            case "object":
                if (null != type) switch(getProperty(type, "$$typeof")){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        return !0;
                }
                return !1;
            default:
                return !1;
        }
    };
    exports.performReactRefresh = function() {
        if (0 === pendingUpdates.length || isPerformingRefresh) return null;
        isPerformingRefresh = !0;
        try {
            var staleFamilies = new Set(), updatedFamilies = new Set(), updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0];
                _ref = _ref[1];
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(_ref, family);
                family.current = _ref;
                prevType.prototype && prevType.prototype.isReactComponent || _ref.prototype && _ref.prototype.isReactComponent ? _ref = !1 : (prevType = allSignaturesByType.get(prevType), _ref = allSignaturesByType.get(_ref), _ref = void 0 === prevType && void 0 === _ref || void 0 !== prevType && void 0 !== _ref && computeFullKey(prevType) === computeFullKey(_ref) && !_ref.forceReset ? !0 : !1);
                _ref ? updatedFamilies.add(family) : staleFamilies.add(family);
            });
            var update = {
                updatedFamilies: updatedFamilies,
                staleFamilies: staleFamilies
            };
            helpersByRendererID.forEach(function(helpers) {
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = !1, firstError = null, failedRootsSnapshot = cloneSet(failedRoots), mountedRootsSnapshot = cloneSet(mountedRoots), helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (null !== rootElements && rootElements.has(root)) {
                    var element = rootElements.get(root);
                    try {
                        helpers.scheduleRoot(root, element);
                    } catch (err) {
                        didError || (didError = !0, firstError = err);
                    }
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    didError || (didError = !0, firstError = err);
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = !1;
        }
    };
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"gnoim":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setEditorHandler", ()=>$da9882e673ac146b$export$25a22ac46f1bd016);
parcelHelpers.export(exports, "reportRuntimeError", ()=>$da9882e673ac146b$export$74e9101ce4078c0);
parcelHelpers.export(exports, "startReportingRuntimeErrors", ()=>$da9882e673ac146b$export$cda2c88a41631c16);
parcelHelpers.export(exports, "dismissRuntimeErrors", ()=>$da9882e673ac146b$export$1cfa6d161ca81bd9);
parcelHelpers.export(exports, "stopReportingRuntimeErrors", ()=>$da9882e673ac146b$export$25ba7d9a816639e7);
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /* eslint-disable react/react-in-jsx-scope, no-console */ var $b6c7f0288a15c619$var$n, $b6c7f0288a15c619$export$41c562ebe57d11e2, $b6c7f0288a15c619$var$u, $b6c7f0288a15c619$export$a8257692ac88316c, $b6c7f0288a15c619$var$i, $b6c7f0288a15c619$var$r, $b6c7f0288a15c619$var$o, $b6c7f0288a15c619$var$e, $b6c7f0288a15c619$var$f, $b6c7f0288a15c619$var$c, $b6c7f0288a15c619$var$s, $b6c7f0288a15c619$var$a, $b6c7f0288a15c619$var$h, $b6c7f0288a15c619$var$p = {}, $b6c7f0288a15c619$var$y = [], $b6c7f0288a15c619$var$v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $b6c7f0288a15c619$var$w = Array.isArray;
function $b6c7f0288a15c619$var$d(n, l) {
    for(var u in l)n[u] = l[u];
    return n;
}
function $b6c7f0288a15c619$var$g(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
}
function $b6c7f0288a15c619$export$c8a8987d4410bf2d(l, u, t) {
    var i, r, o, e = {};
    for(o in u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : e[o] = u[o];
    if (arguments.length > 2 && (e.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), "function" == typeof l && null != l.defaultProps) for(o in l.defaultProps)null == e[o] && (e[o] = l.defaultProps[o]);
    return $b6c7f0288a15c619$var$m(l, e, i, r, null);
}
function $b6c7f0288a15c619$var$m(n, t, i, r, o) {
    var e = {
        type: n,
        props: t,
        key: i,
        ref: r,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: null == o ? ++$b6c7f0288a15c619$var$u : o,
        __i: -1,
        __u: 0
    };
    return null == o && null != $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(e), e;
}
function $b6c7f0288a15c619$export$7d1e3a5e95ceca43() {
    return {
        current: null
    };
}
function $b6c7f0288a15c619$export$ffb0004e005737fa(n) {
    return n.children;
}
function $b6c7f0288a15c619$export$16fa2f45be04daa8(n, l) {
    this.props = n, this.context = l;
}
function $b6c7f0288a15c619$var$S(n, l) {
    if (null == l) return n.__ ? $b6c7f0288a15c619$var$S(n.__, n.__i + 1) : null;
    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;
    return "function" == typeof n.type ? $b6c7f0288a15c619$var$S(n) : null;
}
function $b6c7f0288a15c619$var$C(n) {
    var l, u;
    if (null != (n = n.__) && null != n.__c) {
        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {
            n.__e = n.__c.base = u.__e;
            break;
        }
        return $b6c7f0288a15c619$var$C(n);
    }
}
function $b6c7f0288a15c619$var$M(n) {
    (!n.__d && (n.__d = !0) && $b6c7f0288a15c619$var$i.push(n) && !$b6c7f0288a15c619$var$$.__r++ || $b6c7f0288a15c619$var$r != $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) && (($b6c7f0288a15c619$var$r = $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) || $b6c7f0288a15c619$var$o)($b6c7f0288a15c619$var$$);
}
function $b6c7f0288a15c619$var$$() {
    for(var n, u, t, r, o, f, c, s = 1; $b6c7f0288a15c619$var$i.length;)$b6c7f0288a15c619$var$i.length > s && $b6c7f0288a15c619$var$i.sort($b6c7f0288a15c619$var$e), n = $b6c7f0288a15c619$var$i.shift(), s = $b6c7f0288a15c619$var$i.length, n.__d && (t = void 0, o = (r = (u = n).__v).__e, f = [], c = [], u.__P && ((t = $b6c7f0288a15c619$var$d({}, r)).__v = r.__v + 1, $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(t), $b6c7f0288a15c619$var$O(u.__P, t, r, u.__n, u.__P.namespaceURI, 32 & r.__u ? [
        o
    ] : null, f, null == o ? $b6c7f0288a15c619$var$S(r) : o, !!(32 & r.__u), c), t.__v = r.__v, t.__.__k[t.__i] = t, $b6c7f0288a15c619$var$z(f, t, c), t.__e != o && $b6c7f0288a15c619$var$C(t)));
    $b6c7f0288a15c619$var$$.__r = 0;
}
function $b6c7f0288a15c619$var$I(n, l, u, t, i, r, o, e, f, c, s) {
    var a, h, v, w, d, g, _ = t && t.__k || $b6c7f0288a15c619$var$y, m = l.length;
    for(f = $b6c7f0288a15c619$var$P(u, l, _, f, m), a = 0; a < m; a++)null != (v = u.__k[a]) && (h = -1 == v.__i ? $b6c7f0288a15c619$var$p : _[v.__i] || $b6c7f0288a15c619$var$p, v.__i = a, g = $b6c7f0288a15c619$var$O(n, v, h, i, r, o, e, f, c, s), w = v.__e, v.ref && h.ref != v.ref && (h.ref && $b6c7f0288a15c619$var$q(h.ref, null, v), s.push(v.ref, v.__c || w, v)), null == d && null != w && (d = w), 4 & v.__u || h.__k === v.__k ? f = $b6c7f0288a15c619$var$A(v, f, n) : "function" == typeof v.type && void 0 !== g ? f = g : w && (f = w.nextSibling), v.__u &= -7);
    return u.__e = d, f;
}
function $b6c7f0288a15c619$var$P(n, l, u, t, i) {
    var r, o, e, f, c, s = u.length, a = s, h = 0;
    for(n.__k = new Array(i), r = 0; r < i; r++)null != (o = l[r]) && "boolean" != typeof o && "function" != typeof o ? (f = r + h, (o = n.__k[r] = "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String ? $b6c7f0288a15c619$var$m(null, o, null, null, null) : $b6c7f0288a15c619$var$w(o) ? $b6c7f0288a15c619$var$m($b6c7f0288a15c619$export$ffb0004e005737fa, {
        children: o
    }, null, null, null) : null == o.constructor && o.__b > 0 ? $b6c7f0288a15c619$var$m(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 != (c = o.__i = $b6c7f0288a15c619$var$L(o, u, f, a)) && (a--, (e = u[c]) && (e.__u |= 2)), null == e || null == e.__v ? (-1 == c && (i > s ? h-- : i < s && h++), "function" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? h-- : c == f + 1 ? h++ : (c > f ? h-- : h++, o.__u |= 4))) : n.__k[r] = null;
    if (a) for(r = 0; r < s; r++)null != (e = u[r]) && 0 == (2 & e.__u) && (e.__e == t && (t = $b6c7f0288a15c619$var$S(e)), $b6c7f0288a15c619$var$B(e, e));
    return t;
}
function $b6c7f0288a15c619$var$A(n, l, u) {
    var t, i;
    if ("function" == typeof n.type) {
        for(t = n.__k, i = 0; t && i < t.length; i++)t[i] && (t[i].__ = n, l = $b6c7f0288a15c619$var$A(t[i], l, u));
        return l;
    }
    n.__e != l && (l && n.type && !u.contains(l) && (l = $b6c7f0288a15c619$var$S(n)), u.insertBefore(n.__e, l || null), l = n.__e);
    do l = l && l.nextSibling;
    while (null != l && 8 == l.nodeType);
    return l;
}
function $b6c7f0288a15c619$export$47e4c5b300681277(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || ($b6c7f0288a15c619$var$w(n) ? n.some(function(n) {
        $b6c7f0288a15c619$export$47e4c5b300681277(n, l);
    }) : l.push(n)), l;
}
function $b6c7f0288a15c619$var$L(n, l, u, t) {
    var i, r, o = n.key, e = n.type, f = l[u];
    if (null === f && null == n.key || f && o == f.key && e == f.type && 0 == (2 & f.__u)) return u;
    if (t > (null != f && 0 == (2 & f.__u) ? 1 : 0)) for(i = u - 1, r = u + 1; i >= 0 || r < l.length;){
        if (i >= 0) {
            if ((f = l[i]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return i;
            i--;
        }
        if (r < l.length) {
            if ((f = l[r]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return r;
            r++;
        }
    }
    return -1;
}
function $b6c7f0288a15c619$var$T(n, l, u) {
    "-" == l[0] ? n.setProperty(l, null == u ? "" : u) : n[l] = null == u ? "" : "number" != typeof u || $b6c7f0288a15c619$var$v.test(l) ? u : u + "px";
}
function $b6c7f0288a15c619$var$j(n, l, u, t, i) {
    var r;
    n: if ("style" == l) {
        if ("string" == typeof u) n.style.cssText = u;
        else {
            if ("string" == typeof t && (n.style.cssText = t = ""), t) for(l in t)u && l in u || $b6c7f0288a15c619$var$T(n.style, l, "");
            if (u) for(l in u)t && u[l] == t[l] || $b6c7f0288a15c619$var$T(n.style, l, u[l]);
        }
    } else if ("o" == l[0] && "n" == l[1]) r = l != (l = l.replace($b6c7f0288a15c619$var$f, "$1")), l = l.toLowerCase() in n || "onFocusOut" == l || "onFocusIn" == l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? t ? u.u = t.u : (u.u = $b6c7f0288a15c619$var$c, n.addEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r)) : n.removeEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r);
    else {
        if ("http://www.w3.org/2000/svg" == i) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" != l && "height" != l && "href" != l && "list" != l && "form" != l && "tabIndex" != l && "download" != l && "rowSpan" != l && "colSpan" != l && "role" != l && "popover" != l && l in n) try {
            n[l] = null == u ? "" : u;
            break n;
        } catch (n) {}
        "function" == typeof u || (null == u || !1 === u && "-" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, "popover" == l && 1 == u ? "" : u));
    }
}
function $b6c7f0288a15c619$var$F(n) {
    return function(u) {
        if (this.l) {
            var t = this.l[u.type + n];
            if (null == u.t) u.t = $b6c7f0288a15c619$var$c++;
            else if (u.t < t.u) return;
            return t($b6c7f0288a15c619$export$41c562ebe57d11e2.event ? $b6c7f0288a15c619$export$41c562ebe57d11e2.event(u) : u);
        }
    };
}
function $b6c7f0288a15c619$var$O(n, u, t, i, r, o, e, f, c, s) {
    var a, h, p, y, v, _, m, b, S, C, M, $, P, A, H, L, T, j = u.type;
    if (null != u.constructor) return null;
    128 & t.__u && (c = !!(32 & t.__u), o = [
        f = u.__e = t.__e
    ]), (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.__b) && a(u);
    n: if ("function" == typeof j) try {
        if (b = u.props, S = "prototype" in j && j.prototype.render, C = (a = j.contextType) && i[a.__c], M = a ? C ? C.props.value : a.__ : i, t.__c ? m = (h = u.__c = t.__c).__ = h.__E : (S ? u.__c = h = new j(b, M) : (u.__c = h = new $b6c7f0288a15c619$export$16fa2f45be04daa8(b, M), h.constructor = j, h.render = $b6c7f0288a15c619$var$D), C && C.sub(h), h.props = b, h.state || (h.state = {}), h.context = M, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), S && null == h.__s && (h.__s = h.state), S && null != j.getDerivedStateFromProps && (h.__s == h.state && (h.__s = $b6c7f0288a15c619$var$d({}, h.__s)), $b6c7f0288a15c619$var$d(h.__s, j.getDerivedStateFromProps(b, h.__s))), y = h.props, v = h.state, h.__v = u, p) S && null == j.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), S && null != h.componentDidMount && h.__h.push(h.componentDidMount);
        else {
            if (S && null == j.getDerivedStateFromProps && b !== y && null != h.componentWillReceiveProps && h.componentWillReceiveProps(b, M), !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(b, h.__s, M) || u.__v == t.__v) {
                for(u.__v != t.__v && (h.props = b, h.state = h.__s, h.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.some(function(n) {
                    n && (n.__ = u);
                }), $ = 0; $ < h._sb.length; $++)h.__h.push(h._sb[$]);
                h._sb = [], h.__h.length && e.push(h);
                break n;
            }
            null != h.componentWillUpdate && h.componentWillUpdate(b, h.__s, M), S && null != h.componentDidUpdate && h.__h.push(function() {
                h.componentDidUpdate(y, v, _);
            });
        }
        if (h.context = M, h.props = b, h.__P = n, h.__e = !1, P = $b6c7f0288a15c619$export$41c562ebe57d11e2.__r, A = 0, S) {
            for(h.state = h.__s, h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++)h.__h.push(h._sb[H]);
            h._sb = [];
        } else do h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), h.state = h.__s;
        while (h.__d && ++A < 25);
        h.state = h.__s, null != h.getChildContext && (i = $b6c7f0288a15c619$var$d($b6c7f0288a15c619$var$d({}, i), h.getChildContext())), S && !p && null != h.getSnapshotBeforeUpdate && (_ = h.getSnapshotBeforeUpdate(y, v)), L = a, null != a && a.type === $b6c7f0288a15c619$export$ffb0004e005737fa && null == a.key && (L = $b6c7f0288a15c619$var$N(a.props.children)), f = $b6c7f0288a15c619$var$I(n, $b6c7f0288a15c619$var$w(L) ? L : [
            L
        ], u, t, i, r, o, e, f, c, s), h.base = u.__e, u.__u &= -161, h.__h.length && e.push(h), m && (h.__E = h.__ = null);
    } catch (n) {
        if (u.__v = null, c || null != o) {
            if (n.then) {
                for(u.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;
                o[o.indexOf(f)] = null, u.__e = f;
            } else for(T = o.length; T--;)$b6c7f0288a15c619$var$g(o[T]);
        } else u.__e = t.__e, u.__k = t.__k;
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u, t);
    }
    else null == o && u.__v == t.__v ? (u.__k = t.__k, u.__e = t.__e) : f = u.__e = $b6c7f0288a15c619$var$V(t.__e, u, t, i, r, o, e, c, s);
    return (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.diffed) && a(u), 128 & u.__u ? void 0 : f;
}
function $b6c7f0288a15c619$var$z(n, u, t) {
    for(var i = 0; i < t.length; i++)$b6c7f0288a15c619$var$q(t[i], t[++i], t[++i]);
    $b6c7f0288a15c619$export$41c562ebe57d11e2.__c && $b6c7f0288a15c619$export$41c562ebe57d11e2.__c(u, n), n.some(function(u) {
        try {
            n = u.__h, u.__h = [], n.some(function(n) {
                n.call(u);
            });
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u.__v);
        }
    });
}
function $b6c7f0288a15c619$var$N(n) {
    return "object" != typeof n || null == n || n.__b && n.__b > 0 ? n : $b6c7f0288a15c619$var$w(n) ? n.map($b6c7f0288a15c619$var$N) : $b6c7f0288a15c619$var$d({}, n);
}
function $b6c7f0288a15c619$var$V(u, t, i, r, o, e, f, c, s) {
    var a, h, y, v, d, _, m, b = i.props, k = t.props, x = t.type;
    if ("svg" == x ? o = "http://www.w3.org/2000/svg" : "math" == x ? o = "http://www.w3.org/1998/Math/MathML" : o || (o = "http://www.w3.org/1999/xhtml"), null != e) {
        for(a = 0; a < e.length; a++)if ((d = e[a]) && "setAttribute" in d == !!x && (x ? d.localName == x : 3 == d.nodeType)) {
            u = d, e[a] = null;
            break;
        }
    }
    if (null == u) {
        if (null == x) return document.createTextNode(k);
        u = document.createElementNS(o, x, k.is && k), c && ($b6c7f0288a15c619$export$41c562ebe57d11e2.__m && $b6c7f0288a15c619$export$41c562ebe57d11e2.__m(t, e), c = !1), e = null;
    }
    if (null == x) b === k || c && u.data == k || (u.data = k);
    else {
        if (e = e && $b6c7f0288a15c619$var$n.call(u.childNodes), b = i.props || $b6c7f0288a15c619$var$p, !c && null != e) for(b = {}, a = 0; a < u.attributes.length; a++)b[(d = u.attributes[a]).name] = d.value;
        for(a in b)if (d = b[a], "children" == a) ;
        else if ("dangerouslySetInnerHTML" == a) y = d;
        else if (!(a in k)) {
            if ("value" == a && "defaultValue" in k || "checked" == a && "defaultChecked" in k) continue;
            $b6c7f0288a15c619$var$j(u, a, null, d, o);
        }
        for(a in k)d = k[a], "children" == a ? v = d : "dangerouslySetInnerHTML" == a ? h = d : "value" == a ? _ = d : "checked" == a ? m = d : c && "function" != typeof d || b[a] === d || $b6c7f0288a15c619$var$j(u, a, d, b[a], o);
        if (h) c || y && (h.__html == y.__html || h.__html == u.innerHTML) || (u.innerHTML = h.__html), t.__k = [];
        else if (y && (u.innerHTML = ""), $b6c7f0288a15c619$var$I("template" == t.type ? u.content : u, $b6c7f0288a15c619$var$w(v) ? v : [
            v
        ], t, i, r, "foreignObject" == x ? "http://www.w3.org/1999/xhtml" : o, e, f, e ? e[0] : i.__k && $b6c7f0288a15c619$var$S(i, 0), c, s), null != e) for(a = e.length; a--;)$b6c7f0288a15c619$var$g(e[a]);
        c || (a = "value", "progress" == x && null == _ ? u.removeAttribute("value") : null != _ && (_ !== u[a] || "progress" == x && !_ || "option" == x && _ != b[a]) && $b6c7f0288a15c619$var$j(u, a, _, b[a], o), a = "checked", null != m && m != u[a] && $b6c7f0288a15c619$var$j(u, a, m, b[a], o));
    }
    return u;
}
function $b6c7f0288a15c619$var$q(n, u, t) {
    try {
        if ("function" == typeof n) {
            var i = "function" == typeof n.__u;
            i && n.__u(), i && null == u || (n.__u = n(u));
        } else n.current = u;
    } catch (n) {
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t);
    }
}
function $b6c7f0288a15c619$var$B(n, u, t) {
    var i, r;
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.unmount && $b6c7f0288a15c619$export$41c562ebe57d11e2.unmount(n), (i = n.ref) && (i.current && i.current != n.__e || $b6c7f0288a15c619$var$q(i, null, u)), null != (i = n.__c)) {
        if (i.componentWillUnmount) try {
            i.componentWillUnmount();
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u);
        }
        i.base = i.__P = null;
    }
    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && $b6c7f0288a15c619$var$B(i[r], u, t || "function" != typeof n.type);
    t || $b6c7f0288a15c619$var$g(n.__e), n.__c = n.__ = n.__e = void 0;
}
function $b6c7f0288a15c619$var$D(n, l, u) {
    return this.constructor(n, u);
}
function $b6c7f0288a15c619$export$b3890eb0ae9dca99(u, t, i) {
    var r, o, e, f;
    t == document && (t = document.documentElement), $b6c7f0288a15c619$export$41c562ebe57d11e2.__ && $b6c7f0288a15c619$export$41c562ebe57d11e2.__(u, t), o = (r = "function" == typeof i) ? null : i && i.__k || t.__k, e = [], f = [], $b6c7f0288a15c619$var$O(t, u = (!r && i || t).__k = $b6c7f0288a15c619$export$c8a8987d4410bf2d($b6c7f0288a15c619$export$ffb0004e005737fa, null, [
        u
    ]), o || $b6c7f0288a15c619$var$p, $b6c7f0288a15c619$var$p, t.namespaceURI, !r && i ? [
        i
    ] : o ? null : t.firstChild ? $b6c7f0288a15c619$var$n.call(t.childNodes) : null, e, !r && i ? i : o ? o.__e : t.firstChild, r, f), $b6c7f0288a15c619$var$z(e, u, f);
}
function $b6c7f0288a15c619$export$fa8d919ba61d84db(n, l) {
    $b6c7f0288a15c619$export$b3890eb0ae9dca99(n, l, $b6c7f0288a15c619$export$fa8d919ba61d84db);
}
function $b6c7f0288a15c619$export$e530037191fcd5d7(l, u, t) {
    var i, r, o, e, f = $b6c7f0288a15c619$var$d({}, l.props);
    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : f[o] = null == u[o] && null != e ? e[o] : u[o];
    return arguments.length > 2 && (f.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), $b6c7f0288a15c619$var$m(l.type, f, i || l.key, r || l.ref, null);
}
function $b6c7f0288a15c619$export$fd42f52fd3ae1109(n) {
    function l(n) {
        var u, t;
        return this.getChildContext || (u = new Set, (t = {})[l.__c] = this, this.getChildContext = function() {
            return t;
        }, this.componentWillUnmount = function() {
            u = null;
        }, this.shouldComponentUpdate = function(n) {
            this.props.value != n.value && u.forEach(function(n) {
                n.__e = !0, $b6c7f0288a15c619$var$M(n);
            });
        }, this.sub = function(n) {
            u.add(n);
            var l = n.componentWillUnmount;
            n.componentWillUnmount = function() {
                u && u.delete(n), l && l.call(n);
            };
        }), n.children;
    }
    return l.__c = "__cC" + $b6c7f0288a15c619$var$h++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {
        return n.children(l);
    }).contextType = l, l;
}
$b6c7f0288a15c619$var$n = $b6c7f0288a15c619$var$y.slice, $b6c7f0288a15c619$export$41c562ebe57d11e2 = {
    __e: function(n, l, u, t) {
        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {
            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), o = i.__d), o) return i.__E = i;
        } catch (l) {
            n = l;
        }
        throw n;
    }
}, $b6c7f0288a15c619$var$u = 0, $b6c7f0288a15c619$export$a8257692ac88316c = function(n) {
    return null != n && null == n.constructor;
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.setState = function(n, l) {
    var u;
    u = null != this.__s && this.__s != this.state ? this.__s : this.__s = $b6c7f0288a15c619$var$d({}, this.state), "function" == typeof n && (n = n($b6c7f0288a15c619$var$d({}, u), this.props)), n && $b6c7f0288a15c619$var$d(u, n), null != n && this.__v && (l && this._sb.push(l), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.forceUpdate = function(n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.render = $b6c7f0288a15c619$export$ffb0004e005737fa, $b6c7f0288a15c619$var$i = [], $b6c7f0288a15c619$var$o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $b6c7f0288a15c619$var$e = function(n, l) {
    return n.__v.__b - l.__v.__b;
}, $b6c7f0288a15c619$var$$.__r = 0, $b6c7f0288a15c619$var$f = /(PointerCapture)$|Capture$/i, $b6c7f0288a15c619$var$c = 0, $b6c7f0288a15c619$var$s = $b6c7f0288a15c619$var$F(!1), $b6c7f0288a15c619$var$a = $b6c7f0288a15c619$var$F(!0), $b6c7f0288a15c619$var$h = 0;
var $23b7c1cb98b19658$var$t = /["&<]/;
function $23b7c1cb98b19658$var$n(r) {
    if (0 === r.length || !1 === $23b7c1cb98b19658$var$t.test(r)) return r;
    for(var e = 0, n = 0, o = "", f = ""; n < r.length; n++){
        switch(r.charCodeAt(n)){
            case 34:
                f = "&quot;";
                break;
            case 38:
                f = "&amp;";
                break;
            case 60:
                f = "&lt;";
                break;
            default:
                continue;
        }
        n !== e && (o += r.slice(e, n)), o += f, e = n + 1;
    }
    return n !== e && (o += r.slice(e, n)), o;
}
var $23b7c1cb98b19658$var$o = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $23b7c1cb98b19658$var$f = 0, $23b7c1cb98b19658$var$i = Array.isArray;
function $23b7c1cb98b19658$export$34b9dba7ce09269b(e, t, n, o, i, u) {
    t || (t = {});
    var a, c, p = t;
    if ("ref" in p) for(c in p = {}, t)"ref" == c ? a = t[c] : p[c] = t[c];
    var l = {
        type: e,
        props: p,
        key: n,
        ref: a,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: --$23b7c1cb98b19658$var$f,
        __i: -1,
        __u: 0,
        __source: i,
        __self: u
    };
    if ("function" == typeof e && (a = e.defaultProps)) for(c in a)void 0 === p[c] && (p[c] = a[c]);
    return $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(l), l;
}
function $23b7c1cb98b19658$export$45700d561b2268ac(r) {
    var t = $23b7c1cb98b19658$export$34b9dba7ce09269b($b6c7f0288a15c619$export$ffb0004e005737fa, {
        tpl: r,
        exprs: [].slice.call(arguments, 1)
    });
    return t.key = t.__v, t;
}
var $23b7c1cb98b19658$var$c = {}, $23b7c1cb98b19658$var$p = /[A-Z]/g;
function $23b7c1cb98b19658$export$991f6ffe102e5bac(e, t) {
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.attr) {
        var f = $b6c7f0288a15c619$export$41c562ebe57d11e2.attr(e, t);
        if ("string" == typeof f) return f;
    }
    if ("ref" === e || "key" === e) return "";
    if ("style" === e && "object" == typeof t) {
        var i = "";
        for(var u in t){
            var a = t[u];
            if (null != a && "" !== a) {
                var l = "-" == u[0] ? u : $23b7c1cb98b19658$var$c[u] || ($23b7c1cb98b19658$var$c[u] = u.replace($23b7c1cb98b19658$var$p, "-$&").toLowerCase()), s = ";";
                "number" != typeof a || l.startsWith("--") || $23b7c1cb98b19658$var$o.test(l) || (s = "px;"), i = i + l + ":" + a + s;
            }
        }
        return e + '="' + i + '"';
    }
    return null == t || !1 === t || "function" == typeof t || "object" == typeof t ? "" : !0 === t ? e : e + '="' + $23b7c1cb98b19658$var$n(t) + '"';
}
function $23b7c1cb98b19658$export$40e96e718441efeb(r) {
    if (null == r || "boolean" == typeof r || "function" == typeof r) return null;
    if ("object" == typeof r) {
        if (void 0 === r.constructor) return r;
        if ($23b7c1cb98b19658$var$i(r)) {
            for(var e = 0; e < r.length; e++)r[e] = $23b7c1cb98b19658$export$40e96e718441efeb(r[e]);
            return r;
        }
    }
    return $23b7c1cb98b19658$var$n("" + r);
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $883a43040cbd0629$var$boundErrorHandler = null;
function $883a43040cbd0629$var$errorHandler(callback, e) {
    // $FlowFixMe
    if (!e.error) return;
    // $FlowFixMe
    const { error: error } = e;
    if (error instanceof Error) callback(error);
    else // Look in your browser's devtools for more information
    callback(new Error(error));
}
function $883a43040cbd0629$export$6503ec6e8aabbaf(target, callback) {
    if ($883a43040cbd0629$var$boundErrorHandler !== null) return;
    $883a43040cbd0629$var$boundErrorHandler = $883a43040cbd0629$var$errorHandler.bind(undefined, callback);
    target.addEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
}
function $883a43040cbd0629$export$d07f55d4c15c0440(target) {
    if ($883a43040cbd0629$var$boundErrorHandler === null) return;
    target.removeEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
    $883a43040cbd0629$var$boundErrorHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $900f8c32b7484e20$var$boundRejectionHandler = null;
function $900f8c32b7484e20$var$rejectionHandler(callback, e) {
    if (e == null || e.reason == null) return callback(new Error('Unknown'));
    let { reason: reason } = e;
    if (reason instanceof Error) return callback(reason);
    // A non-error was rejected, we don't have a trace :(
    // Look in your browser's devtools for more information
    return callback(new Error(reason));
}
function $900f8c32b7484e20$export$6503ec6e8aabbaf(target, callback) {
    if ($900f8c32b7484e20$var$boundRejectionHandler !== null) return;
    $900f8c32b7484e20$var$boundRejectionHandler = $900f8c32b7484e20$var$rejectionHandler.bind(undefined, callback);
    // $FlowFixMe
    target.addEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
}
function $900f8c32b7484e20$export$d07f55d4c15c0440(target) {
    if ($900f8c32b7484e20$var$boundRejectionHandler === null) return;
    // $FlowFixMe
    target.removeEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
    $900f8c32b7484e20$var$boundRejectionHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $5f72ade198404e99$var$stackTraceRegistered = false;
// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
let $5f72ade198404e99$var$restoreStackTraceValue = 10;
const $5f72ade198404e99$var$MAX_STACK_LENGTH = 50;
function $5f72ade198404e99$export$6503ec6e8aabbaf(limit = $5f72ade198404e99$var$MAX_STACK_LENGTH) {
    if ($5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        $5f72ade198404e99$var$restoreStackTraceValue = Error.stackTraceLimit;
        Error.stackTraceLimit = limit;
        $5f72ade198404e99$var$stackTraceRegistered = true;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
function $5f72ade198404e99$export$d07f55d4c15c0440() {
    if (!$5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        Error.stackTraceLimit = $5f72ade198404e99$var$restoreStackTraceValue;
        $5f72ade198404e99$var$stackTraceRegistered = false;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * A representation of a stack frame.
 */ class $d35756f426c25812$export$8949fddf10447898 {
    constructor(functionName = null, fileName = null, lineNumber = null, columnNumber = null, scriptCode = null, sourceFunctionName = null, sourceFileName = null, sourceLineNumber = null, sourceColumnNumber = null, sourceScriptCode = null){
        if (functionName && functionName.indexOf('Object.') === 0) functionName = functionName.slice(7);
        if (// https://github.com/facebook/create-react-app/issues/2097
        // Let's ignore a meaningless name we get for top-level modules.
        functionName === 'friendlySyntaxErrorLabel' || functionName === 'exports.__esModule' || functionName === '<anonymous>' || !functionName) functionName = null;
        this.functionName = functionName;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
        this._originalFunctionName = sourceFunctionName;
        this._originalFileName = sourceFileName;
        this._originalLineNumber = sourceLineNumber;
        this._originalColumnNumber = sourceColumnNumber;
        this._scriptCode = scriptCode;
        this._originalScriptCode = sourceScriptCode;
    }
    /**
   * Returns the name of this function.
   */ getFunctionName() {
        return this.functionName || '(anonymous function)';
    }
    /**
   * Returns the source of the frame.
   * This contains the file name, line number, and column number when available.
   */ getSource() {
        let str = '';
        if (this.fileName != null) str += this.fileName + ':';
        if (this.lineNumber != null) str += this.lineNumber + ':';
        if (this.columnNumber != null) str += this.columnNumber + ':';
        return str.slice(0, -1);
    }
    /**
   * Returns a pretty version of this stack frame.
   */ toString() {
        const functionName = this.getFunctionName();
        const source = this.getSource();
        return `${functionName}${source ? ` (${source})` : ``}`;
    }
}
var $d35756f426c25812$export$2e2bcd8739ae039 = $d35756f426c25812$export$8949fddf10447898;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $865b9ffc545cb441$var$regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
function $865b9ffc545cb441$var$extractLocation(token) {
    return $865b9ffc545cb441$var$regexExtractLocation.exec(token) // $FlowFixMe
    .slice(1).map((v)=>{
        const p = Number(v);
        if (!isNaN(p)) return p;
        return v;
    });
}
const $865b9ffc545cb441$var$regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
const $865b9ffc545cb441$var$regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
function $865b9ffc545cb441$var$parseStack(stack) {
    let frames = stack.filter((e)=>$865b9ffc545cb441$var$regexValidFrame_Chrome.test(e) || $865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)).map((e)=>{
        if ($865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)) {
            // Strip eval, we don't care about it
            let isEval = false;
            if (/ > (eval|Function)/.test(e)) {
                e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ':$1');
                isEval = true;
            }
            const data = e.split(/[@]/g);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join('@') || (isEval ? 'eval' : null), ...$865b9ffc545cb441$var$extractLocation(last));
        } else {
            // Strip eval, we don't care about it
            if (e.indexOf('(eval ') !== -1) e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
            if (e.indexOf('(at ') !== -1) e = e.replace(/\(at /, '(');
            const data = e.trim().split(/\s+/g).slice(1);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join(' ') || null, ...$865b9ffc545cb441$var$extractLocation(last));
        }
    });
    let index = frames.findIndex((frame)=>frame.getFunctionName().includes('react-stack-bottom-frame'));
    if (index >= 0) frames = frames.slice(0, index);
    return frames;
}
/**
 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
 * @alias parse
 */ function $865b9ffc545cb441$export$98e6a39c04603d36(error) {
    if (error == null) throw new Error('You cannot pass a null object.');
    if (typeof error === 'string') return $865b9ffc545cb441$var$parseStack(error.split('\n'));
    if (Array.isArray(error)) return $865b9ffc545cb441$var$parseStack(error);
    if (typeof error.stack === 'string') return $865b9ffc545cb441$var$parseStack(error.stack.split('\n'));
    throw new Error('The error you provided does not contain a stack trace.');
}
var $865b9ffc545cb441$export$2e2bcd8739ae039 = $865b9ffc545cb441$export$98e6a39c04603d36;
/**
 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
 */ async function $df495b51087c401c$export$35b6448019ed80b8(error, contextLines = 3) {
    const frames = $865b9ffc545cb441$export$98e6a39c04603d36(error);
    // $FlowFixMe
    let res = await fetch(module.bundle.devServer + '/__parcel_code_frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            contextLines: contextLines,
            frames: frames.map((f)=>({
                    fileName: f.fileName,
                    lineNumber: f.lineNumber,
                    columnNumber: f.columnNumber
                }))
        })
    });
    let json = await res.json();
    return json.map((f, i)=>new $d35756f426c25812$export$8949fddf10447898(frames[i].functionName, f.fileName, f.lineNumber, f.columnNumber, f.compiledLines, frames[i].functionName, f.sourceFileName, f.sourceLineNumber, f.sourceColumnNumber, f.sourceLines));
}
var $df495b51087c401c$export$2e2bcd8739ae039 = $df495b51087c401c$export$35b6448019ed80b8;
const $6d40ebe8356580e0$var$CONTEXT_SIZE = 3;
function $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash) {
    return (error, unhandledRejection = false)=>{
        $df495b51087c401c$export$2e2bcd8739ae039(error, $6d40ebe8356580e0$var$CONTEXT_SIZE).then((stackFrames)=>{
            if (stackFrames == null) return;
            crash({
                error: error,
                unhandledRejection: unhandledRejection,
                contextSize: $6d40ebe8356580e0$var$CONTEXT_SIZE,
                stackFrames: stackFrames
            });
        }).catch((e)=>{
            // eslint-disable-next-line no-console
            console.log('Could not get the stack frames of error:', e);
        });
    };
}
function $6d40ebe8356580e0$var$patchConsole(method, onError) {
    /* eslint-disable no-console */ let original = console[method];
    console[method] = (...args)=>{
        let error = null;
        if (typeof args[0] === 'string') {
            let format = args[0].match(/%[oOdisfc]/g);
            if (format) {
                let errorIndex = format.findIndex((match)=>match === '%o' || match === '%O');
                if (errorIndex < 0) errorIndex = format.findIndex((match)=>match === '%s');
                if (errorIndex >= 0) error = args[errorIndex + 1];
                else error = args[1];
                if (!(error instanceof Error)) {
                    let index = 1;
                    let message = args[0].replace(/%[oOdisfc]/g, (match)=>{
                        switch(match){
                            case '%s':
                                return String(args[index++]);
                            case '%f':
                                return parseFloat(args[index++]);
                            case '%d':
                            case '%i':
                                return parseInt(args[index++], 10);
                            case '%o':
                            case '%O':
                                if (args[index] instanceof Error) return String(args[index++]);
                                else return JSON.stringify(args[index++]);
                            case '%c':
                                index++;
                                return '';
                        }
                    });
                    error = new Error(message);
                }
            } else error = new Error(args[0]);
        } else error = args.find((arg)=>arg instanceof Error);
        if (error && !error.message.includes('[parcel]') && typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            // Attempt to append the React component stack
            // TODO: use React.captureOwnerStack once stable.
            let hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.renderers instanceof Map) {
                for (let renderer of hook.renderers.values())if (typeof renderer?.currentDispatcherRef?.getCurrentStack === 'function') {
                    let stack = renderer.currentDispatcherRef.getCurrentStack();
                    if (stack) {
                        error.stack += stack;
                        break;
                    }
                }
            }
            onError(error);
        }
        original.apply(console, args);
    };
/* eslint-enable no-console */ }
function $6d40ebe8356580e0$export$38ec23daa6e8dcdf(crash) {
    const crashWithFramesRunTime = $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash);
    $883a43040cbd0629$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, false));
    $900f8c32b7484e20$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, true));
    $5f72ade198404e99$export$6503ec6e8aabbaf();
    $6d40ebe8356580e0$var$patchConsole('error', (error)=>crashWithFramesRunTime(error, false));
    return function() {
        $5f72ade198404e99$export$d07f55d4c15c0440();
        $900f8c32b7484e20$export$d07f55d4c15c0440(window);
        $883a43040cbd0629$export$d07f55d4c15c0440(window);
    };
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ var $10ecac3e4062713a$var$t, $10ecac3e4062713a$var$r, $10ecac3e4062713a$var$u, $10ecac3e4062713a$var$i, $10ecac3e4062713a$var$o = 0, $10ecac3e4062713a$var$f = [], $10ecac3e4062713a$var$c = $b6c7f0288a15c619$export$41c562ebe57d11e2, $10ecac3e4062713a$var$e = $10ecac3e4062713a$var$c.__b, $10ecac3e4062713a$var$a = $10ecac3e4062713a$var$c.__r, $10ecac3e4062713a$var$v = $10ecac3e4062713a$var$c.diffed, $10ecac3e4062713a$var$l = $10ecac3e4062713a$var$c.__c, $10ecac3e4062713a$var$m = $10ecac3e4062713a$var$c.unmount, $10ecac3e4062713a$var$s = $10ecac3e4062713a$var$c.__;
function $10ecac3e4062713a$var$p(n, t) {
    $10ecac3e4062713a$var$c.__h && $10ecac3e4062713a$var$c.__h($10ecac3e4062713a$var$r, n, $10ecac3e4062713a$var$o || t), $10ecac3e4062713a$var$o = 0;
    var u = $10ecac3e4062713a$var$r.__H || ($10ecac3e4062713a$var$r.__H = {
        __: [],
        __h: []
    });
    return n >= u.__.length && u.__.push({}), u.__[n];
}
function $10ecac3e4062713a$export$60241385465d0a34(n) {
    return $10ecac3e4062713a$var$o = 1, $10ecac3e4062713a$export$13e3392192263954($10ecac3e4062713a$var$D, n);
}
function $10ecac3e4062713a$export$13e3392192263954(n, u, i) {
    var o = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 2);
    if (o.t = n, !o.__c && (o.__ = [
        i ? i(u) : $10ecac3e4062713a$var$D(void 0, u),
        function(n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [
                r,
                o.__[1]
            ], o.__c.setState({}));
        }
    ], o.__c = $10ecac3e4062713a$var$r, !$10ecac3e4062713a$var$r.__f)) {
        var f = function(n, t, r) {
            if (!o.__c.__H) return !0;
            var u = o.__c.__H.__.filter(function(n) {
                return !!n.__c;
            });
            if (u.every(function(n) {
                return !n.__N;
            })) return !c || c.call(this, n, t, r);
            var i = o.__c.props !== n;
            return u.forEach(function(n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), c && c.call(this, n, t, r) || i;
        };
        $10ecac3e4062713a$var$r.__f = !0;
        var c = $10ecac3e4062713a$var$r.shouldComponentUpdate, e = $10ecac3e4062713a$var$r.componentWillUpdate;
        $10ecac3e4062713a$var$r.componentWillUpdate = function(n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, $10ecac3e4062713a$var$r.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function $10ecac3e4062713a$export$6d9c69b0de29b591(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 3);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__H.__h.push(i));
}
function $10ecac3e4062713a$export$e5c5a5f917a5871c(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 4);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__h.push(i));
}
function $10ecac3e4062713a$export$b8f5890fc79d6aca(n) {
    return $10ecac3e4062713a$var$o = 5, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return {
            current: n
        };
    }, []);
}
function $10ecac3e4062713a$export$d5a552a76deda3c2(n, t, r) {
    $10ecac3e4062713a$var$o = 6, $10ecac3e4062713a$export$e5c5a5f917a5871c(function() {
        if ("function" == typeof n) {
            var r = n(t());
            return function() {
                n(null), r && "function" == typeof r && r();
            };
        }
        if (n) return n.current = t(), function() {
            return n.current = null;
        };
    }, null == r ? r : r.concat(n));
}
function $10ecac3e4062713a$export$1538c33de8887b59(n, r) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 7);
    return $10ecac3e4062713a$var$C(u.__H, r) && (u.__ = n(), u.__H = r, u.__h = n), u.__;
}
function $10ecac3e4062713a$export$35808ee640e87ca7(n, t) {
    return $10ecac3e4062713a$var$o = 8, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return n;
    }, t);
}
function $10ecac3e4062713a$export$fae74005e78b1a27(n) {
    var u = $10ecac3e4062713a$var$r.context[n.__c], i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub($10ecac3e4062713a$var$r)), u.props.value) : n.__;
}
function $10ecac3e4062713a$export$dc8fbce3eb94dc1e(n, t) {
    $10ecac3e4062713a$var$c.useDebugValue && $10ecac3e4062713a$var$c.useDebugValue(t ? t(n) : n);
}
function $10ecac3e4062713a$export$c052f6604b7d51fe(n) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 10), i = $10ecac3e4062713a$export$60241385465d0a34();
    return u.__ = n, $10ecac3e4062713a$var$r.componentDidCatch || ($10ecac3e4062713a$var$r.componentDidCatch = function(n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [
        i[0],
        function() {
            i[1](void 0);
        }
    ];
}
function $10ecac3e4062713a$export$f680877a34711e37() {
    var n = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 11);
    if (!n.__) {
        for(var u = $10ecac3e4062713a$var$r.__v; null !== u && !u.__m && null !== u.__;)u = u.__;
        var i = u.__m || (u.__m = [
            0,
            0
        ]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function $10ecac3e4062713a$var$j() {
    for(var n; n = $10ecac3e4062713a$var$f.shift();)if (n.__P && n.__H) try {
        n.__H.__h.forEach($10ecac3e4062713a$var$z), n.__H.__h.forEach($10ecac3e4062713a$var$B), n.__H.__h = [];
    } catch (t) {
        n.__H.__h = [], $10ecac3e4062713a$var$c.__e(t, n.__v);
    }
}
$10ecac3e4062713a$var$c.__b = function(n) {
    $10ecac3e4062713a$var$r = null, $10ecac3e4062713a$var$e && $10ecac3e4062713a$var$e(n);
}, $10ecac3e4062713a$var$c.__ = function(n, t) {
    n && t.__k && t.__k.__m && (n.__m = t.__k.__m), $10ecac3e4062713a$var$s && $10ecac3e4062713a$var$s(n, t);
}, $10ecac3e4062713a$var$c.__r = function(n) {
    $10ecac3e4062713a$var$a && $10ecac3e4062713a$var$a(n), $10ecac3e4062713a$var$t = 0;
    var i = ($10ecac3e4062713a$var$r = n.__c).__H;
    i && ($10ecac3e4062713a$var$u === $10ecac3e4062713a$var$r ? (i.__h = [], $10ecac3e4062713a$var$r.__h = [], i.__.forEach(function(n) {
        n.__N && (n.__ = n.__N), n.u = n.__N = void 0;
    })) : (i.__h.forEach($10ecac3e4062713a$var$z), i.__h.forEach($10ecac3e4062713a$var$B), i.__h = [], $10ecac3e4062713a$var$t = 0)), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r;
}, $10ecac3e4062713a$var$c.diffed = function(n) {
    $10ecac3e4062713a$var$v && $10ecac3e4062713a$var$v(n);
    var t = n.__c;
    t && t.__H && (t.__H.__h.length && (1 !== $10ecac3e4062713a$var$f.push(t) && $10ecac3e4062713a$var$i === $10ecac3e4062713a$var$c.requestAnimationFrame || (($10ecac3e4062713a$var$i = $10ecac3e4062713a$var$c.requestAnimationFrame) || $10ecac3e4062713a$var$w)($10ecac3e4062713a$var$j)), t.__H.__.forEach(function(n) {
        n.u && (n.__H = n.u), n.u = void 0;
    })), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r = null;
}, $10ecac3e4062713a$var$c.__c = function(n, t) {
    t.some(function(n) {
        try {
            n.__h.forEach($10ecac3e4062713a$var$z), n.__h = n.__h.filter(function(n) {
                return !n.__ || $10ecac3e4062713a$var$B(n);
            });
        } catch (r) {
            t.some(function(n) {
                n.__h && (n.__h = []);
            }), t = [], $10ecac3e4062713a$var$c.__e(r, n.__v);
        }
    }), $10ecac3e4062713a$var$l && $10ecac3e4062713a$var$l(n, t);
}, $10ecac3e4062713a$var$c.unmount = function(n) {
    $10ecac3e4062713a$var$m && $10ecac3e4062713a$var$m(n);
    var t, r = n.__c;
    r && r.__H && (r.__H.__.forEach(function(n) {
        try {
            $10ecac3e4062713a$var$z(n);
        } catch (n) {
            t = n;
        }
    }), r.__H = void 0, t && $10ecac3e4062713a$var$c.__e(t, r.__v));
};
var $10ecac3e4062713a$var$k = "function" == typeof requestAnimationFrame;
function $10ecac3e4062713a$var$w(n) {
    var t, r = function() {
        clearTimeout(u), $10ecac3e4062713a$var$k && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    $10ecac3e4062713a$var$k && (t = requestAnimationFrame(r));
}
function $10ecac3e4062713a$var$z(n) {
    var t = $10ecac3e4062713a$var$r, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$B(n) {
    var t = $10ecac3e4062713a$var$r;
    n.__c = n.__(), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$C(n, t) {
    return !n || n.length !== t.length || t.some(function(t, r) {
        return t !== n[r];
    });
}
function $10ecac3e4062713a$var$D(n, t) {
    return "function" == typeof t ? t(n) : t;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $74bb4be6e9b78681$export$f30cb9bc4f736419 = {
    // Colors for components styles
    background: 'white',
    color: 'black',
    headerColor: '#ce1126',
    primaryPreBackground: 'rgba(206, 17, 38, 0.05)',
    primaryPreColor: 'inherit',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.3)',
    secondaryPreColor: 'inherit',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#293238',
    navBackground: 'rgba(206, 17, 38, 0.05)',
    navArrow: '#ce1126',
    diffAdded: 'green',
    diffRemoved: '#ce1126',
    // Light color scheme inspired by https://chriskempson.github.io/base16/css/base16-github.css
    // base00: '#ffffff',
    base01: '#f5f5f5',
    // base02: '#c8c8fa',
    base03: '#6e6e6e',
    // base04: '#e8e8e8',
    base05: '#333333',
    // base06: '#ffffff',
    // base07: '#ffffff',
    base08: '#881280',
    // base09: '#0086b3',
    // base0A: '#795da3',
    base0B: '#1155cc',
    base0C: '#994500',
    // base0D: '#795da3',
    base0E: '#c80000'
};
const $74bb4be6e9b78681$export$3e936a8db52a10a0 = {
    // Colors for components styles
    background: '#353535',
    color: 'white',
    headerColor: '#e83b46',
    primaryPreBackground: 'rgba(206, 17, 38, 0.1)',
    primaryPreColor: '#fccfcf',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.1)',
    secondaryPreColor: '#fbf5b4',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#ffffff',
    navBackground: 'rgba(206, 17, 38, 0.2)',
    navArrow: '#ce1126',
    diffAdded: '#85e285',
    diffRemoved: '#ff5459',
    // Dark color scheme inspired by https://github.com/atom/base16-tomorrow-dark-theme/blob/master/styles/colors.less
    // base00: '#1d1f21',
    base01: '#282a2e',
    // base02: '#373b41',
    base03: '#969896',
    // base04: '#b4b7b4',
    base05: '#c5c8c6',
    // base06: '#e0e0e0',
    // base07: '#ffffff',
    base08: '#cc6666',
    // base09: '#de935f',
    // base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    // base0D: '#81a2be',
    base0E: '#b294bb'
};
const $74bb4be6e9b78681$export$bca14c5b3b88a9c9 = Object.fromEntries(Object.keys($74bb4be6e9b78681$export$f30cb9bc4f736419).map((key)=>[
        key,
        `light-dark(${$74bb4be6e9b78681$export$f30cb9bc4f736419[key]}, ${$74bb4be6e9b78681$export$3e936a8db52a10a0[key]})`
    ]));
const $74bb4be6e9b78681$export$7ef984671d1853d7 = {
    width: '100vw',
    height: '100vh',
    maxWidth: 'none',
    maxHeight: 'none',
    border: 0,
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    textAlign: 'center',
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    outline: 'none',
    colorScheme: 'light dark'
};
const $20d888b381d18c6c$var$overlayStyle = {
    position: 'relative',
    display: 'inline-flex',
    flexDirection: 'column',
    height: '100%',
    width: '1024px',
    maxWidth: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: '0.5rem',
    boxSizing: 'border-box',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '11px',
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word',
    lineHeight: 1.5,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color
};
function $20d888b381d18c6c$var$ErrorOverlay(props) {
    const { shortcutHandler: shortcutHandler } = props;
    $10ecac3e4062713a$export$6d9c69b0de29b591(()=>{
        const onKeyDown = (e)=>{
            if (shortcutHandler) shortcutHandler(e.key);
        };
        window.addEventListener('keydown', onKeyDown);
        return ()=>{
            window.removeEventListener('keydown', onKeyDown);
        };
    }, [
        shortcutHandler
    ]);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $20d888b381d18c6c$var$overlayStyle,
        children: props.children
    });
}
var $20d888b381d18c6c$export$2e2bcd8739ae039 = $20d888b381d18c6c$var$ErrorOverlay;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7aae0c9ea64fc08c$var$closeButtonStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.closeColor,
    lineHeight: '1rem',
    fontSize: '1.5rem',
    padding: '1rem',
    cursor: 'pointer',
    position: 'absolute',
    right: 0,
    top: 0
};
function $7aae0c9ea64fc08c$var$CloseButton({ close: close }) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        title: "Click or press Escape to dismiss.",
        onClick: close,
        style: $7aae0c9ea64fc08c$var$closeButtonStyle,
        children: "\xd7"
    });
}
var $7aae0c9ea64fc08c$export$2e2bcd8739ae039 = $7aae0c9ea64fc08c$var$CloseButton;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $1adc179a826c5dd2$var$navigationBarStyle = {
    marginBottom: '0.5rem'
};
const $1adc179a826c5dd2$var$buttonContainerStyle = {
    marginRight: '1em'
};
const $1adc179a826c5dd2$var$_navButtonStyle = {
    border: 'none',
    borderRadius: '4px',
    padding: '3px 6px',
    cursor: 'pointer'
};
const $1adc179a826c5dd2$var$leftButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    marginRight: '1px'
};
const $1adc179a826c5dd2$var$rightButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopLeftRadius: '0px',
    borderBottomLeftRadius: '0px'
};
function $1adc179a826c5dd2$var$NavigationBar(props) {
    const { currentError: currentError, totalErrors: totalErrors, previous: previous, next: next } = props;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $1adc179a826c5dd2$var$navigationBarStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                style: $1adc179a826c5dd2$var$buttonContainerStyle,
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: previous,
                        style: $1adc179a826c5dd2$var$leftButtonStyle,
                        children: "\u2190"
                    }),
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: next,
                        style: $1adc179a826c5dd2$var$rightButtonStyle,
                        children: "\u2192"
                    })
                ]
            }),
            `${currentError} of ${totalErrors} errors on the page`
        ]
    });
}
var $1adc179a826c5dd2$export$2e2bcd8739ae039 = $1adc179a826c5dd2$var$NavigationBar;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $c306e3a42547c8c2$var$headerStyle = {
    fontSize: '2em',
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.headerColor,
    whiteSpace: 'pre-wrap',
    // Top bottom margin spaces header
    // Right margin revents overlap with close button
    margin: '0 2rem 0.75rem 0',
    flex: '0 0 auto'
};
function $c306e3a42547c8c2$var$Header(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $c306e3a42547c8c2$var$headerStyle,
        children: props.headerText
    });
}
var $c306e3a42547c8c2$export$2e2bcd8739ae039 = $c306e3a42547c8c2$var$Header;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $97c30df7f5c364f7$var$_preStyle = {
    position: 'relative',
    display: 'block',
    padding: '0.5em',
    marginTop: '0.5em',
    marginBottom: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
const $97c30df7f5c364f7$var$codeStyle = {
    fontFamily: 'Consolas, Menlo, monospace'
};
function $97c30df7f5c364f7$var$CodeBlock({ main: main, codeHTML: codeHTML }) {
    const primaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor
    };
    const secondaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreColor
    };
    const preStyle = main ? primaryPreStyle : secondaryPreStyle;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: preStyle,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b("code", {
            style: $97c30df7f5c364f7$var$codeStyle,
            dangerouslySetInnerHTML: {
                __html: codeHTML
            }
        })
    });
}
var $97c30df7f5c364f7$export$2e2bcd8739ae039 = $97c30df7f5c364f7$var$CodeBlock;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled) {
    let prettyURL;
    if (!compiled && sourceFileName && typeof sourceLineNumber === 'number') {
        // Remove everything up to the first /src/ or /node_modules/
        const trimMatch = /^[/|\\].*?[/|\\]((src|node_modules)[/|\\].*)/.exec(sourceFileName);
        if (trimMatch && trimMatch[1]) prettyURL = trimMatch[1];
        else prettyURL = sourceFileName;
        prettyURL += ':' + sourceLineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (sourceColumnNumber) prettyURL += ':' + sourceColumnNumber;
    } else if (fileName && typeof lineNumber === 'number') {
        prettyURL = fileName + ':' + lineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (columnNumber) prettyURL += ':' + columnNumber;
    } else prettyURL = 'unknown';
    return prettyURL.replace('webpack://', '.');
}
var $f78f50d61026cdc5$export$2e2bcd8739ae039 = $f78f50d61026cdc5$export$44b1e5ee7f53eae1;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $cdea3ae92bef6910$exports = {};
'use strict';
$cdea3ae92bef6910$exports = $cdea3ae92bef6910$var$ansiHTML;
// Reference to https://github.com/sindresorhus/ansi-regex
var $cdea3ae92bef6910$var$_regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var $cdea3ae92bef6910$var$_defColors = {
    reset: [
        'fff',
        '000'
    ],
    black: '000',
    red: 'ff0000',
    green: '209805',
    yellow: 'e8bf03',
    blue: '0000ff',
    magenta: 'ff00ff',
    cyan: '00ffee',
    lightgrey: 'f0f0f0',
    darkgrey: '888'
};
var $cdea3ae92bef6910$var$_styles = {
    30: 'black',
    31: 'red',
    32: 'green',
    33: 'yellow',
    34: 'blue',
    35: 'magenta',
    36: 'cyan',
    37: 'lightgrey'
};
var $cdea3ae92bef6910$var$_openTags = {
    '1': 'font-weight:bold',
    '2': 'opacity:0.5',
    '3': '<i>',
    '4': '<u>',
    '8': 'display:none',
    '9': '<del>' // delete
};
var $cdea3ae92bef6910$var$_closeTags = {
    '23': '</i>',
    '24': '</u>',
    '29': '</del>' // reset delete
};
[
    0,
    21,
    22,
    27,
    28,
    39,
    49
].forEach(function(n) {
    $cdea3ae92bef6910$var$_closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */ function $cdea3ae92bef6910$var$ansiHTML(text) {
    // Returns the text if the string has no ANSI escape code.
    if (!$cdea3ae92bef6910$var$_regANSI.test(text)) return text;
    // Cache opened sequence.
    var ansiCodes = [];
    // Replace with markup.
    var ret = text.replace(/\033\[(\d+)m/g, function(match, seq) {
        var ot = $cdea3ae92bef6910$var$_openTags[seq];
        if (ot) {
            // If current sequence has been opened, close it.
            if (!!~ansiCodes.indexOf(seq)) {
                ansiCodes.pop();
                return '</span>';
            }
            // Open tag.
            ansiCodes.push(seq);
            return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
        }
        var ct = $cdea3ae92bef6910$var$_closeTags[seq];
        if (ct) {
            // Pop sequence
            ansiCodes.pop();
            return ct;
        }
        return '';
    });
    // Make sure tags are closed.
    var l = ansiCodes.length;
    l > 0 && (ret += Array(l + 1).join('</span>'));
    return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */ $cdea3ae92bef6910$var$ansiHTML.setColors = function(colors) {
    if (typeof colors !== 'object') throw new Error('`colors` parameter must be an Object.');
    var _finalColors = {};
    for(var key in $cdea3ae92bef6910$var$_defColors){
        var hex = colors.hasOwnProperty(key) ? colors[key] : null;
        if (!hex) {
            _finalColors[key] = $cdea3ae92bef6910$var$_defColors[key];
            continue;
        }
        if ('reset' === key) {
            if (typeof hex === 'string') hex = [
                hex
            ];
            if (!Array.isArray(hex) || hex.length === 0 || hex.some(function(h) {
                return typeof h !== 'string';
            })) throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
            var defHexColor = $cdea3ae92bef6910$var$_defColors[key];
            if (!hex[0]) hex[0] = defHexColor[0];
            if (hex.length === 1 || !hex[1]) {
                hex = [
                    hex[0]
                ];
                hex.push(defHexColor[1]);
            }
            hex = hex.slice(0, 2);
        } else if (typeof hex !== 'string') throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
        _finalColors[key] = hex;
    }
    $cdea3ae92bef6910$var$_setTags(_finalColors);
};
/**
 * Reset colors.
 */ $cdea3ae92bef6910$var$ansiHTML.reset = function() {
    $cdea3ae92bef6910$var$_setTags($cdea3ae92bef6910$var$_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */ $cdea3ae92bef6910$var$ansiHTML.tags = {};
if (Object.defineProperty) {
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'open', {
        get: function() {
            return $cdea3ae92bef6910$var$_openTags;
        }
    });
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'close', {
        get: function() {
            return $cdea3ae92bef6910$var$_closeTags;
        }
    });
} else {
    $cdea3ae92bef6910$var$ansiHTML.tags.open = $cdea3ae92bef6910$var$_openTags;
    $cdea3ae92bef6910$var$ansiHTML.tags.close = $cdea3ae92bef6910$var$_closeTags;
}
function $cdea3ae92bef6910$var$_setTags(colors) {
    // reset all
    $cdea3ae92bef6910$var$_openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
    // inverse
    $cdea3ae92bef6910$var$_openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
    // dark grey
    $cdea3ae92bef6910$var$_openTags['90'] = 'color:#' + colors.darkgrey;
    for(var code in $cdea3ae92bef6910$var$_styles){
        var color = $cdea3ae92bef6910$var$_styles[code];
        var oriColor = colors[color] || '000';
        $cdea3ae92bef6910$var$_openTags[code] = 'color:#' + oriColor;
        code = parseInt(code);
        $cdea3ae92bef6910$var$_openTags[(code + 10).toString()] = 'background:#' + oriColor;
    }
}
$cdea3ae92bef6910$var$ansiHTML.reset();
// Map ANSI colors from what babel-code-frame uses to base16-github
// See: https://github.com/babel/babel/blob/e86f62b304d280d0bab52c38d61842b853848ba6/packages/babel-code-frame/src/index.js#L9-L22
const $b67e2a05a9c13039$var$colors = {
    reset: [
        $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
        'transparent'
    ],
    black: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
    red: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* marker, bg-invalid */ ,
    green: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0B /* string */ ,
    yellow: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* capitalized, jsx_tag, punctuator */ ,
    blue: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C,
    magenta: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C /* regex */ ,
    cyan: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0E /* keyword */ ,
    gray: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03 /* comment, gutter */ ,
    lightgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base01,
    darkgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03
};
/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).setColors($b67e2a05a9c13039$var$colors);
// $FlowFixMe
for(let tag in /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open)/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag] = /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag].replace(/#light-dark/g, 'light-dark');
function $b67e2a05a9c13039$var$generateAnsiHTML(txt) {
    return /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports)(txt.replace(/[&<>"']/g, (c)=>{
        switch(c){
            case '&':
                return '&amp';
            case '<':
                return '&lt;';
            case '>':
                return '&gt';
            case '"':
                return '&quot;';
            case "'":
                return '&#39;';
            default:
                return c;
        }
    }));
}
var $b67e2a05a9c13039$export$2e2bcd8739ae039 = $b67e2a05a9c13039$var$generateAnsiHTML;
const $e0e0fa52b83f95a9$var$linkStyle = {
    fontSize: '0.9em',
    marginBottom: '0.9em'
};
const $e0e0fa52b83f95a9$var$anchorStyle = {
    textDecoration: 'none',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.anchorColor,
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$codeAnchorStyle = {
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$toggleStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleColor,
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleBackground,
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
function $e0e0fa52b83f95a9$var$StackFrame(props) {
    const { frame: frame, critical: critical, showCode: showCode } = props;
    const { fileName: fileName, lineNumber: lineNumber, columnNumber: columnNumber, _scriptCode: scriptLines, _originalFileName: sourceFileName, _originalLineNumber: sourceLineNumber, _originalColumnNumber: sourceColumnNumber, _originalScriptCode: sourceLines } = frame;
    const functionName = frame.getFunctionName();
    const [compiled, setCompiled] = $10ecac3e4062713a$export$60241385465d0a34(!sourceLines);
    const getErrorLocation = ()=>{
        const { _originalFileName: fileName, _originalLineNumber: lineNumber } = props.frame;
        // Unknown file
        if (!fileName) return null;
        // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"
        const isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;
        if (isInternalWebpackBootstrapCode) return null;
        // Code is in a real file
        return {
            fileName: fileName,
            lineNumber: lineNumber || 1
        };
    };
    const editorHandler = ()=>{
        const errorLoc = getErrorLocation();
        if (!errorLoc) return;
        props.editorHandler?.(errorLoc);
    };
    const url = $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
    let codeBlockProps = null;
    if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(scriptLines),
            main: critical
        };
        else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(sourceLines),
            main: critical
        };
    }
    const canOpenInEditor = getErrorLocation() !== null && props.editorHandler !== null;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: functionName
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: $e0e0fa52b83f95a9$var$linkStyle,
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                    role: "link",
                    style: canOpenInEditor ? $e0e0fa52b83f95a9$var$anchorStyle : null,
                    onClick: canOpenInEditor ? editorHandler : null,
                    onKeyDown: canOpenInEditor ? (e)=>{
                        if (e.key === 'Enter') editorHandler();
                    } : null,
                    tabIndex: canOpenInEditor ? '0' : null,
                    children: url
                })
            }),
            codeBlockProps && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: {
                    marginBottom: '1.5em'
                },
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                        onClick: canOpenInEditor ? editorHandler : null,
                        style: canOpenInEditor ? $e0e0fa52b83f95a9$var$codeAnchorStyle : null,
                        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($97c30df7f5c364f7$export$2e2bcd8739ae039, {
                            ...codeBlockProps
                        })
                    }),
                    scriptLines && sourceLines && $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        style: $e0e0fa52b83f95a9$var$toggleStyle,
                        onClick: ()=>{
                            setCompiled(!compiled);
                        },
                        children: 'View ' + (compiled ? 'source' : 'compiled')
                    })
                ]
            })
        ]
    });
}
var $e0e0fa52b83f95a9$export$2e2bcd8739ae039 = $e0e0fa52b83f95a9$var$StackFrame;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $9a1abb59f5d10ec8$var$_collapsibleStyle = {
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
const $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '1.5em'
};
const $9a1abb59f5d10ec8$var$collapsibleExpandedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '0.6em'
};
function $9a1abb59f5d10ec8$var$Collapsible(props) {
    const [collapsed, setCollapsed] = $10ecac3e4062713a$export$60241385465d0a34(true);
    const toggleCollapsed = ()=>{
        setCollapsed(!collapsed);
    };
    const count = props.children.length;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("details", {
        open: !collapsed,
        onToggle: toggleCollapsed,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("summary", {
                style: collapsed ? $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle : $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                children: (collapsed ? "\u25B6" : "\u25BC") + ` ${count} stack frames were ` + (collapsed ? 'collapsed.' : 'expanded.')
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: [
                    props.children,
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: toggleCollapsed,
                        style: $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                        children: `\u{25B2} ${count} stack frames were expanded.`
                    })
                ]
            })
        ]
    });
}
var $9a1abb59f5d10ec8$export$2e2bcd8739ae039 = $9a1abb59f5d10ec8$var$Collapsible;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName) {
    return sourceFileName == null || sourceFileName === '' || sourceFileName.indexOf('~/') !== -1 || sourceFileName.indexOf('node_modules/') !== -1 || sourceFileName.indexOf('error-overlay') !== -1 || sourceFileName.trim().indexOf(' ') !== -1 || fileName == null || fileName === '';
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $a5027556d7003a42$export$64794fcb05cf0bcf(errorName) {
    switch(errorName){
        case 'EvalError':
        case 'InternalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
            return true;
        default:
            return false;
    }
}
var $a5027556d7003a42$export$2e2bcd8739ae039 = $a5027556d7003a42$export$64794fcb05cf0bcf;
const $5ee7d2edb790dd06$var$traceStyle = {
    fontSize: '1em',
    flex: '0 1 auto',
    minHeight: '0px',
    overflow: 'auto'
};
function $5ee7d2edb790dd06$var$StackTrace(props) {
    const { stackFrames: stackFrames, errorName: errorName, contextSize: contextSize, editorHandler: editorHandler } = props;
    const renderedFrames = [];
    let hasReachedAppCode = false, currentBundle = [], bundleCount = 0;
    stackFrames.forEach((frame, index)=>{
        const { fileName: fileName, _originalFileName: sourceFileName } = frame;
        const isInternalUrl = $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName);
        const isThrownIntentionally = !$a5027556d7003a42$export$64794fcb05cf0bcf(errorName);
        const shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);
        if (!isInternalUrl) hasReachedAppCode = true;
        const frameEle = $23b7c1cb98b19658$export$34b9dba7ce09269b($e0e0fa52b83f95a9$export$2e2bcd8739ae039, {
            frame: frame,
            contextSize: contextSize,
            critical: index === 0,
            showCode: !shouldCollapse,
            editorHandler: editorHandler
        }, 'frame-' + index);
        const lastElement = index === stackFrames.length - 1;
        if (shouldCollapse) currentBundle.push(frameEle);
        if (!shouldCollapse || lastElement) {
            if (currentBundle.length === 1) renderedFrames.push(currentBundle[0]);
            else if (currentBundle.length > 1) {
                bundleCount++;
                renderedFrames.push($23b7c1cb98b19658$export$34b9dba7ce09269b($9a1abb59f5d10ec8$export$2e2bcd8739ae039, {
                    children: currentBundle
                }, 'bundle-' + bundleCount));
            }
            currentBundle = [];
        }
        if (!shouldCollapse) renderedFrames.push(frameEle);
    });
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $5ee7d2edb790dd06$var$traceStyle,
        children: renderedFrames
    });
}
var $5ee7d2edb790dd06$export$2e2bcd8739ae039 = $5ee7d2edb790dd06$var$StackTrace;
const $2eeadf2892cff4e4$var$diffStyle = {
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor,
    padding: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
function $2eeadf2892cff4e4$export$2e2bcd8739ae039({ diff: diff }) {
    let lines = diff.split('\n').flatMap((line, i)=>[
            $2eeadf2892cff4e4$var$formatLine(line, i),
            '\n'
        ]).slice(0, -1);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: $2eeadf2892cff4e4$var$diffStyle,
        children: lines
    });
}
function $2eeadf2892cff4e4$var$formatLine(line, index) {
    if (line.startsWith('+')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffAdded,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else if (line.startsWith('-') || line.startsWith('>')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffRemoved,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else return line;
}
const $4baa71cb4cecc0ea$var$wrapperStyle = {
    display: 'flex',
    flexDirection: 'column'
};
function $4baa71cb4cecc0ea$var$RuntimeError({ errorRecord: errorRecord, editorHandler: editorHandler }) {
    const { error: error, unhandledRejection: unhandledRejection, contextSize: contextSize, stackFrames: stackFrames } = errorRecord;
    const errorName = unhandledRejection ? 'Unhandled Rejection (' + error.name + ')' : error.name;
    // Make header prettier
    const message = error.message;
    let headerText = message.match(/^\w*:/) || !errorName ? message : errorName + ': ' + message;
    headerText = headerText // TODO: maybe remove this prefix from fbjs?
    // It's just scaring people
    .replace(/^Invariant Violation:\s*/, '') // This is not helpful either:
    .replace(/^Warning:\s*/, '') // Break the actionable part to the next line.
    // AFAIK React 16+ should already do this.
    .replace(' Check the render method', '\n\nCheck the render method').replace(' Check your code at', '\n\nCheck your code at');
    let link, diff;
    if (headerText.includes('https://react.dev/link/hydration-mismatch')) {
        [headerText, diff] = headerText.split('https://react.dev/link/hydration-mismatch');
        link = 'https://react.dev/link/hydration-mismatch';
    } else if (headerText.includes('This will cause a hydration error.')) {
        [headerText, diff] = headerText.split('This will cause a hydration error.');
        headerText += 'This will cause a hydration error.';
    }
    let lines = headerText.split('\n');
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $4baa71cb4cecc0ea$var$wrapperStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($c306e3a42547c8c2$export$2e2bcd8739ae039, {
                headerText: lines[0]
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
                children: lines.slice(1).join('\n').trim()
            }),
            link && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("a", {
                    href: link,
                    target: "_blank",
                    rel: "noreferrer",
                    children: link
                })
            }),
            diff && $23b7c1cb98b19658$export$34b9dba7ce09269b($2eeadf2892cff4e4$export$2e2bcd8739ae039, {
                diff: diff.trim()
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($5ee7d2edb790dd06$export$2e2bcd8739ae039, {
                stackFrames: stackFrames,
                errorName: errorName,
                contextSize: contextSize,
                editorHandler: editorHandler
            })
        ]
    });
}
var $4baa71cb4cecc0ea$export$2e2bcd8739ae039 = $4baa71cb4cecc0ea$var$RuntimeError;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7606db210182b733$var$footerStyle = {
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.footer,
    marginTop: '0.5rem',
    flex: '0 0 auto'
};
function $7606db210182b733$var$Footer(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $7606db210182b733$var$footerStyle,
        children: [
            props.line1,
            $23b7c1cb98b19658$export$34b9dba7ce09269b("br", {}),
            props.line2
        ]
    });
}
var $7606db210182b733$export$2e2bcd8739ae039 = $7606db210182b733$var$Footer;
function $d0eac8b125ed15e2$var$RuntimeErrorContainer(props) {
    const { errorRecords: errorRecords, close: close } = props;
    const totalErrors = errorRecords.length;
    let [currentIndex, setCurrentIndex] = $10ecac3e4062713a$export$60241385465d0a34(0);
    let previous = ()=>{
        setCurrentIndex(currentIndex > 0 ? currentIndex - 1 : totalErrors - 1);
    };
    let next = ()=>{
        setCurrentIndex(currentIndex < totalErrors - 1 ? currentIndex + 1 : 0);
    };
    return $23b7c1cb98b19658$export$34b9dba7ce09269b($20d888b381d18c6c$export$2e2bcd8739ae039, {
        shortcutHandler: (key)=>{
            if (key === 'Escape') props.close();
            else if (key === 'ArrowLeft') previous();
            else if (key === 'ArrowRight') next();
        },
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7aae0c9ea64fc08c$export$2e2bcd8739ae039, {
                close: close
            }),
            totalErrors > 1 && $23b7c1cb98b19658$export$34b9dba7ce09269b($1adc179a826c5dd2$export$2e2bcd8739ae039, {
                currentError: currentIndex + 1,
                totalErrors: totalErrors,
                previous: previous,
                next: next
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($4baa71cb4cecc0ea$export$2e2bcd8739ae039, {
                errorRecord: errorRecords[currentIndex],
                editorHandler: props.editorHandler
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7606db210182b733$export$2e2bcd8739ae039, {
                line1: "This screen is visible only in development. It will not appear if the app crashes in production.",
                line2: "Open your browser\u2019s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message."
            })
        ]
    });
}
var $d0eac8b125ed15e2$export$2e2bcd8739ae039 = $d0eac8b125ed15e2$var$RuntimeErrorContainer;
let $da9882e673ac146b$var$iframe = null;
let $da9882e673ac146b$var$editorHandler = null;
let $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
let $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
function $da9882e673ac146b$export$25a22ac46f1bd016(handler) {
    $da9882e673ac146b$var$editorHandler = handler;
    if ($da9882e673ac146b$var$iframe) $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$74e9101ce4078c0(error, options) {
    $6d40ebe8356580e0$export$9123e6c9c0ac21ed($da9882e673ac146b$var$handleRuntimeError(options))(error, false);
}
function $da9882e673ac146b$export$cda2c88a41631c16(options) {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors !== null) throw new Error('Already listening');
    $da9882e673ac146b$var$stopListeningToRuntimeErrors = $6d40ebe8356580e0$export$38ec23daa6e8dcdf($da9882e673ac146b$var$handleRuntimeError(options));
}
const $da9882e673ac146b$var$handleRuntimeError = (options)=>(errorRecord)=>{
        try {
            if (typeof options.onError === 'function') options.onError.call(null);
        } finally{
            if ($da9882e673ac146b$var$currentRuntimeErrorRecords.some(({ error: error })=>error === errorRecord.error)) // This fixes https://github.com/facebook/create-react-app/issues/3011.
            // eslint-disable-next-line no-unsafe-finally
            return;
            $da9882e673ac146b$var$currentRuntimeErrorRecords = $da9882e673ac146b$var$currentRuntimeErrorRecords.concat([
                errorRecord
            ]);
            $da9882e673ac146b$var$update();
        }
    };
function $da9882e673ac146b$export$1cfa6d161ca81bd9() {
    $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
    $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$25ba7d9a816639e7() {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors === null) throw new Error('Not currently listening');
    try {
        $da9882e673ac146b$var$stopListeningToRuntimeErrors();
    } finally{
        $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
    }
}
let $da9882e673ac146b$var$rootNode, $da9882e673ac146b$var$shadow;
function $da9882e673ac146b$var$update() {
    if (!$da9882e673ac146b$var$rootNode) {
        $da9882e673ac146b$var$rootNode = document.createElement('parcel-error-overlay');
        $da9882e673ac146b$var$shadow = $da9882e673ac146b$var$rootNode.attachShadow({
            mode: 'open'
        });
        if ($da9882e673ac146b$var$rootNode) document.body?.appendChild($da9882e673ac146b$var$rootNode);
    }
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0 && $da9882e673ac146b$var$shadow) $b6c7f0288a15c619$export$b3890eb0ae9dca99($23b7c1cb98b19658$export$34b9dba7ce09269b("dialog", {
        ref: (d)=>d?.showModal(),
        style: $74bb4be6e9b78681$export$7ef984671d1853d7,
        onClose: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($da9882e673ac146b$var$ErrorOverlay, {})
    }), $da9882e673ac146b$var$shadow);
    else {
        $da9882e673ac146b$var$rootNode?.remove();
        $da9882e673ac146b$var$rootNode = null;
    }
}
function $da9882e673ac146b$var$ErrorOverlay() {
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0) return $23b7c1cb98b19658$export$34b9dba7ce09269b($d0eac8b125ed15e2$export$2e2bcd8739ae039, {
        errorRecords: $da9882e673ac146b$var$currentRuntimeErrorRecords,
        close: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        editorHandler: $da9882e673ac146b$var$editorHandler
    });
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jnFvT":[function(require,module,exports,__globalThis) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"8sbCd":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$095f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$095f.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$095f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _dashboardDataJson = require("../data/dashboardData.json");
var _dashboardDataJsonDefault = parcelHelpers.interopDefault(_dashboardDataJson);
var _chartPanel = require("./chartPanel");
var _chartPanelDefault = parcelHelpers.interopDefault(_chartPanel);
const Dashboard = /*#__PURE__*/ (0, _react.forwardRef)(_c = (props, ref)=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        ref: ref,
        className: "bg-background text-foreground min-h-screen pt-16 pb-12 px-4 sm:px-6 lg:px-12 space-y-10 transition-colors duration-300",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6",
                children: (0, _dashboardDataJsonDefault.default).kpiCards.map((item, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "bg-white dark:bg-gray-800 rounded-xl p-6 shadow text-center flex flex-col justify-center transition-colors",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                className: "text-sm text-gray-500 dark:text-gray-300",
                                children: item.label
                            }, void 0, false, {
                                fileName: "src/components/dashboard.js",
                                lineNumber: 18,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                                className: "text-2xl font-bold text-blue-700 dark:text-white",
                                children: item.value
                            }, void 0, false, {
                                fileName: "src/components/dashboard.js",
                                lineNumber: 19,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, index, true, {
                        fileName: "src/components/dashboard.js",
                        lineNumber: 14,
                        columnNumber: 11
                    }, undefined))
            }, void 0, false, {
                fileName: "src/components/dashboard.js",
                lineNumber: 12,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _chartPanelDefault.default), {}, void 0, false, {
                fileName: "src/components/dashboard.js",
                lineNumber: 25,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "bg-white dark:bg-gray-800 rounded-xl p-6 shadow overflow-x-auto transition-colors",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                        className: "text-lg font-semibold mb-4 text-gray-800 dark:text-white",
                        children: "Line Status"
                    }, void 0, false, {
                        fileName: "src/components/dashboard.js",
                        lineNumber: 29,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("table", {
                        className: "min-w-full text-left text-sm text-gray-800 dark:text-gray-200",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("thead", {
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("tr", {
                                    className: "border-b border-gray-200 dark:border-gray-700",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("th", {
                                            className: "py-2 pr-4",
                                            children: "Line"
                                        }, void 0, false, {
                                            fileName: "src/components/dashboard.js",
                                            lineNumber: 33,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("th", {
                                            className: "pr-4",
                                            children: "Status"
                                        }, void 0, false, {
                                            fileName: "src/components/dashboard.js",
                                            lineNumber: 34,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("th", {
                                            className: "pr-4",
                                            children: "Output"
                                        }, void 0, false, {
                                            fileName: "src/components/dashboard.js",
                                            lineNumber: 35,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("th", {
                                            className: "pr-4",
                                            children: "Last Updated"
                                        }, void 0, false, {
                                            fileName: "src/components/dashboard.js",
                                            lineNumber: 36,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/dashboard.js",
                                    lineNumber: 32,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/components/dashboard.js",
                                lineNumber: 31,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("tbody", {
                                children: (0, _dashboardDataJsonDefault.default).statusTable.map((row, i)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("tr", {
                                        className: "border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("td", {
                                                className: "py-2 pr-4",
                                                children: row.line
                                            }, void 0, false, {
                                                fileName: "src/components/dashboard.js",
                                                lineNumber: 45,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("td", {
                                                className: "pr-4",
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                    className: `px-2 py-1 rounded-full text-xs font-semibold ${row.status === "Running" ? "bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300" : row.status === "Paused" ? "bg-yellow-100 text-yellow-700 dark:bg-yellow-900 dark:text-yellow-300" : "bg-red-100 text-red-700 dark:bg-red-900 dark:text-red-300"}`,
                                                    children: row.status
                                                }, void 0, false, {
                                                    fileName: "src/components/dashboard.js",
                                                    lineNumber: 47,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/components/dashboard.js",
                                                lineNumber: 46,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("td", {
                                                className: "pr-4",
                                                children: row.output
                                            }, void 0, false, {
                                                fileName: "src/components/dashboard.js",
                                                lineNumber: 59,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("td", {
                                                className: "pr-4",
                                                children: row.updated
                                            }, void 0, false, {
                                                fileName: "src/components/dashboard.js",
                                                lineNumber: 60,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, i, true, {
                                        fileName: "src/components/dashboard.js",
                                        lineNumber: 41,
                                        columnNumber: 15
                                    }, undefined))
                            }, void 0, false, {
                                fileName: "src/components/dashboard.js",
                                lineNumber: 39,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/dashboard.js",
                        lineNumber: 30,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/dashboard.js",
                lineNumber: 28,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/dashboard.js",
        lineNumber: 7,
        columnNumber: 5
    }, undefined);
});
_c1 = Dashboard;
exports.default = Dashboard;
var _c, _c1;
$RefreshReg$(_c, "Dashboard$forwardRef");
$RefreshReg$(_c1, "Dashboard");

  $parcel$ReactRefreshHelpers$095f.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","../data/dashboardData.json":"2zr83","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","./chartPanel":"2YZfg"}],"2zr83":[function(require,module,exports,__globalThis) {
module.exports = JSON.parse("{\"kpiCards\":[{\"label\":\"Units Produced\",\"value\":\"8,320\"},{\"label\":\"Downtime (hrs)\",\"value\":\"3.7\"},{\"label\":\"Efficiency\",\"value\":\"92%\"},{\"label\":\"Orders Pending\",\"value\":\"27\"}],\"statusTable\":[{\"line\":\"Line A\",\"status\":\"Running\",\"output\":\"1,203\",\"updated\":\"5 mins ago\"},{\"line\":\"Line B\",\"status\":\"Paused\",\"output\":\"978\",\"updated\":\"12 mins ago\"},{\"line\":\"Line C\",\"status\":\"Error\",\"output\":\"530\",\"updated\":\"1 min ago\"}],\"chartData\":[{\"name\":\"Mon\",\"output\":400},{\"name\":\"Tue\",\"output\":700},{\"name\":\"Wed\",\"output\":600},{\"name\":\"Thu\",\"output\":800},{\"name\":\"Fri\",\"output\":650},{\"name\":\"Sat\",\"output\":500},{\"name\":\"Sun\",\"output\":700}]}");

},{}],"2YZfg":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$a234 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$a234.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$a234.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ChartPanel);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _recharts = require("recharts");
var _reactCountup = require("react-countup");
var _reactCountupDefault = parcelHelpers.interopDefault(_reactCountup);
var _lucideReact = require("lucide-react");
var _dashboardDataJson = require("../data/dashboardData.json");
var _dashboardDataJsonDefault = parcelHelpers.interopDefault(_dashboardDataJson);
var _s = $RefreshSig$(), _s1 = $RefreshSig$();
const chartData = (0, _dashboardDataJsonDefault.default).chartData;
const COLORS = [
    "#3B82F6",
    "#10B981",
    "#F59E0B",
    "#EF4444"
];
const ICONS = {
    BarChart: (0, _lucideReact.BarChart),
    Gauge: (0, _lucideReact.Gauge),
    ArrowUpRight: (0, _lucideReact.ArrowUpRight),
    ArrowDownRight: (0, _lucideReact.ArrowDownRight)
};
function StatItem({ icon, label, value }) {
    const Icon = ICONS[icon];
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "flex items-center gap-3",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(Icon, {
                className: "w-5 h-5 text-primary dark:text-blue-400 shrink-0"
            }, void 0, false, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 39,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "text-xs text-muted-foreground dark:text-gray-400",
                        children: label
                    }, void 0, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 41,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "text-base font-semibold text-foreground dark:text-white",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactCountupDefault.default), {
                            end: value,
                            duration: 1.5,
                            separator: ","
                        }, void 0, false, {
                            fileName: "src/components/chartPanel.js",
                            lineNumber: 43,
                            columnNumber: 11
                        }, this)
                    }, void 0, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 42,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 40,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/chartPanel.js",
        lineNumber: 38,
        columnNumber: 5
    }, this);
}
_c = StatItem;
function TabbedStatsPanel() {
    _s();
    const [activeTab, setActiveTab] = (0, _react.useState)("production");
    const total = chartData.reduce((acc, val)=>acc + val.output, 0);
    const avg = Math.round(total / chartData.length);
    const highest = chartData.reduce((max, val)=>val.output > max.output ? val : max);
    const lowest = chartData.reduce((min, val)=>val.output < min.output ? val : min);
    const TABS = {
        production: [
            {
                icon: "BarChart",
                label: "Total Output",
                value: total
            },
            {
                icon: "Gauge",
                label: "Avg Daily Output",
                value: avg
            }
        ],
        shifts: [
            {
                icon: "ArrowUpRight",
                label: `Peak (${highest.name})`,
                value: highest.output
            },
            {
                icon: "ArrowDownRight",
                label: `Low (${lowest.name})`,
                value: lowest.output
            }
        ],
        errors: [
            {
                icon: "Gauge",
                label: "Error Rate",
                value: 2.1
            },
            {
                icon: "BarChart",
                label: "Resolved Issues",
                value: 13
            }
        ]
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "rounded-xl bg-muted dark:bg-gray-800 p-4 shadow mt-6 md:mt-0 w-full max-w-sm mx-auto md:mx-0",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex gap-2 mb-4 justify-center md:justify-start",
                children: Object.keys(TABS).map((tab)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                        className: `px-3 py-1 rounded-full text-sm capitalize transition ${activeTab === tab ? "bg-primary text-white" : "bg-gray-300 text-muted-foreground dark:bg-gray-700 dark:text-gray-300"}`,
                        onClick: ()=>setActiveTab(tab),
                        children: tab
                    }, tab, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 77,
                        columnNumber: 11
                    }, this))
            }, void 0, false, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 75,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "grid gap-4 text-sm text-foreground dark:text-white",
                children: TABS[activeTab].map((item, i)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(StatItem, {
                        icon: item.icon,
                        label: item.label,
                        value: item.value
                    }, i, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 93,
                        columnNumber: 11
                    }, this))
            }, void 0, false, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 91,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/chartPanel.js",
        lineNumber: 74,
        columnNumber: 5
    }, this);
}
_s(TabbedStatsPanel, "Y/EP9HrXzqFbZ0USmzr68R6+gf0=");
_c1 = TabbedStatsPanel;
function ChartPanel() {
    _s1();
    const [selectedChart, setSelectedChart] = (0, _react.useState)("line");
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "w-full max-w-6xl mx-auto p-6 bg-background dark:bg-gray-900 rounded-xl shadow overflow-hidden transition-colors duration-300",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                className: "text-2xl font-bold text-primary dark:text-blue-400 mb-4 text-center",
                children: "Production Metrics"
            }, void 0, false, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 105,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex justify-center gap-4 mb-6",
                children: [
                    "line",
                    "bar",
                    "pie"
                ].map((type)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                        onClick: ()=>setSelectedChart(type),
                        className: `px-4 py-2 rounded-full text-sm font-medium transition-colors duration-200 ${selectedChart === type ? "bg-blue-600 text-white" : "bg-gray-200 text-gray-700 dark:bg-gray-700 dark:text-gray-300"}`,
                        children: type.charAt(0).toUpperCase() + type.slice(1)
                    }, type, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 110,
                        columnNumber: 17
                    }, this))
            }, void 0, false, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 108,
                columnNumber: 9
            }, this),
            selectedChart === "pie" ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "flex flex-col md:flex-row items-center justify-center gap-8",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "w-full flex justify-center",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.PieChart), {
                            width: 350,
                            height: 300,
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Tooltip), {}, void 0, false, {
                                    fileName: "src/components/chartPanel.js",
                                    lineNumber: 128,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Pie), {
                                    data: chartData,
                                    dataKey: "output",
                                    nameKey: "name",
                                    cx: "50%",
                                    cy: "50%",
                                    outerRadius: 100,
                                    label: true,
                                    children: chartData.map((entry, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Cell), {
                                            fill: COLORS[index % COLORS.length]
                                        }, `cell-${index}`, false, {
                                            fileName: "src/components/chartPanel.js",
                                            lineNumber: 139,
                                            columnNumber: 19
                                        }, this))
                                }, void 0, false, {
                                    fileName: "src/components/chartPanel.js",
                                    lineNumber: 129,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/chartPanel.js",
                            lineNumber: 127,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 126,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(TabbedStatsPanel, {}, void 0, false, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 144,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 125,
                columnNumber: 9
            }, this) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "w-full h-[300px]",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.ResponsiveContainer), {
                    width: "100%",
                    height: "100%",
                    children: selectedChart === "bar" ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.BarChart), {
                        data: chartData,
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.XAxis), {
                                dataKey: "name",
                                stroke: "#ccc"
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 151,
                                columnNumber: 17
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.YAxis), {
                                stroke: "#ccc"
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 152,
                                columnNumber: 17
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Tooltip), {
                                contentStyle: {
                                    backgroundColor: "#1f2937",
                                    color: "#fff"
                                }
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 153,
                                columnNumber: 17
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Bar), {
                                dataKey: "output",
                                fill: "#3B82F6"
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 154,
                                columnNumber: 17
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 150,
                        columnNumber: 15
                    }, this) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.LineChart), {
                        data: chartData,
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.XAxis), {
                                dataKey: "name",
                                stroke: "#ccc"
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 158,
                                columnNumber: 17
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.YAxis), {
                                stroke: "#ccc"
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 159,
                                columnNumber: 17
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Tooltip), {
                                contentStyle: {
                                    backgroundColor: "#1f2937",
                                    color: "#fff"
                                }
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 160,
                                columnNumber: 17
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _recharts.Line), {
                                type: "monotone",
                                dataKey: "output",
                                stroke: "#3B82F6",
                                strokeWidth: 2
                            }, void 0, false, {
                                fileName: "src/components/chartPanel.js",
                                lineNumber: 161,
                                columnNumber: 17
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/chartPanel.js",
                        lineNumber: 157,
                        columnNumber: 15
                    }, this)
                }, void 0, false, {
                    fileName: "src/components/chartPanel.js",
                    lineNumber: 148,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "src/components/chartPanel.js",
                lineNumber: 147,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/chartPanel.js",
        lineNumber: 104,
        columnNumber: 5
    }, this);
}
_s1(ChartPanel, "+0zEVKHIIgP68h1rZjfWtprqNzQ=");
_c2 = ChartPanel;
var _c, _c1, _c2;
$RefreshReg$(_c, "StatItem");
$RefreshReg$(_c1, "TabbedStatsPanel");
$RefreshReg$(_c2, "ChartPanel");

  $parcel$ReactRefreshHelpers$a234.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","recharts":"k9rge","../data/dashboardData.json":"2zr83","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","react-countup":"h0lhQ","lucide-react":"2I7qR"}],"k9rge":[function(require,module,exports,__globalThis) {
// "export type" declarations on separate lines are in use
// to workaround babel issue(s) 11465 12578
//
// see https://github.com/babel/babel/issues/11464#issuecomment-617606898
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Surface", ()=>(0, _surface.Surface));
parcelHelpers.export(exports, "Layer", ()=>(0, _layer.Layer));
parcelHelpers.export(exports, "Legend", ()=>(0, _legend.Legend));
parcelHelpers.export(exports, "DefaultLegendContent", ()=>(0, _defaultLegendContent.DefaultLegendContent));
parcelHelpers.export(exports, "Tooltip", ()=>(0, _tooltip.Tooltip));
parcelHelpers.export(exports, "DefaultTooltipContent", ()=>(0, _defaultTooltipContent.DefaultTooltipContent));
parcelHelpers.export(exports, "ResponsiveContainer", ()=>(0, _responsiveContainer.ResponsiveContainer));
parcelHelpers.export(exports, "Cell", ()=>(0, _cell.Cell));
parcelHelpers.export(exports, "Text", ()=>(0, _text.Text));
parcelHelpers.export(exports, "Label", ()=>(0, _label.Label));
parcelHelpers.export(exports, "LabelList", ()=>(0, _labelList.LabelList));
parcelHelpers.export(exports, "Customized", ()=>(0, _customized.Customized));
parcelHelpers.export(exports, "Sector", ()=>(0, _sector.Sector));
parcelHelpers.export(exports, "Curve", ()=>(0, _curve.Curve));
parcelHelpers.export(exports, "Rectangle", ()=>(0, _rectangle.Rectangle));
parcelHelpers.export(exports, "Polygon", ()=>(0, _polygon.Polygon));
parcelHelpers.export(exports, "Dot", ()=>(0, _dot.Dot));
parcelHelpers.export(exports, "Cross", ()=>(0, _cross.Cross));
parcelHelpers.export(exports, "Symbols", ()=>(0, _symbols.Symbols));
parcelHelpers.export(exports, "PolarGrid", ()=>(0, _polarGrid.PolarGrid));
parcelHelpers.export(exports, "PolarRadiusAxis", ()=>(0, _polarRadiusAxis.PolarRadiusAxis));
parcelHelpers.export(exports, "PolarAngleAxis", ()=>(0, _polarAngleAxis.PolarAngleAxis));
parcelHelpers.export(exports, "Pie", ()=>(0, _pie.Pie));
parcelHelpers.export(exports, "Radar", ()=>(0, _radar.Radar));
parcelHelpers.export(exports, "RadialBar", ()=>(0, _radialBar.RadialBar));
parcelHelpers.export(exports, "Brush", ()=>(0, _brush.Brush));
parcelHelpers.export(exports, "ReferenceLine", ()=>(0, _referenceLine.ReferenceLine));
parcelHelpers.export(exports, "ReferenceDot", ()=>(0, _referenceDot.ReferenceDot));
parcelHelpers.export(exports, "ReferenceArea", ()=>(0, _referenceArea.ReferenceArea));
parcelHelpers.export(exports, "CartesianAxis", ()=>(0, _cartesianAxis.CartesianAxis));
parcelHelpers.export(exports, "CartesianGrid", ()=>(0, _cartesianGrid.CartesianGrid));
parcelHelpers.export(exports, "Line", ()=>(0, _line.Line));
parcelHelpers.export(exports, "Area", ()=>(0, _area.Area));
parcelHelpers.export(exports, "Bar", ()=>(0, _bar.Bar));
parcelHelpers.export(exports, "Scatter", ()=>(0, _scatter.Scatter));
parcelHelpers.export(exports, "XAxis", ()=>(0, _xaxis.XAxis));
parcelHelpers.export(exports, "YAxis", ()=>(0, _yaxis.YAxis));
parcelHelpers.export(exports, "ZAxis", ()=>(0, _zaxis.ZAxis));
parcelHelpers.export(exports, "ErrorBar", ()=>(0, _errorBar.ErrorBar));
parcelHelpers.export(exports, "LineChart", ()=>(0, _lineChart.LineChart));
parcelHelpers.export(exports, "BarChart", ()=>(0, _barChart.BarChart));
parcelHelpers.export(exports, "PieChart", ()=>(0, _pieChart.PieChart));
parcelHelpers.export(exports, "Treemap", ()=>(0, _treemap.Treemap));
parcelHelpers.export(exports, "Sankey", ()=>(0, _sankey.Sankey));
parcelHelpers.export(exports, "RadarChart", ()=>(0, _radarChart.RadarChart));
parcelHelpers.export(exports, "ScatterChart", ()=>(0, _scatterChart.ScatterChart));
parcelHelpers.export(exports, "AreaChart", ()=>(0, _areaChart.AreaChart));
parcelHelpers.export(exports, "RadialBarChart", ()=>(0, _radialBarChart.RadialBarChart));
parcelHelpers.export(exports, "ComposedChart", ()=>(0, _composedChart.ComposedChart));
parcelHelpers.export(exports, "SunburstChart", ()=>(0, _sunburstChart.SunburstChart));
parcelHelpers.export(exports, "Funnel", ()=>(0, _funnel.Funnel));
parcelHelpers.export(exports, "FunnelChart", ()=>(0, _funnelChart.FunnelChart));
parcelHelpers.export(exports, "Trapezoid", ()=>(0, _trapezoid.Trapezoid));
parcelHelpers.export(exports, "Global", ()=>(0, _global.Global));
var _surface = require("./container/Surface");
var _layer = require("./container/Layer");
var _legend = require("./component/Legend");
var _defaultLegendContent = require("./component/DefaultLegendContent");
var _tooltip = require("./component/Tooltip");
var _defaultTooltipContent = require("./component/DefaultTooltipContent");
var _responsiveContainer = require("./component/ResponsiveContainer");
var _cell = require("./component/Cell");
var _text = require("./component/Text");
var _label = require("./component/Label");
var _labelList = require("./component/LabelList");
var _customized = require("./component/Customized");
var _sector = require("./shape/Sector");
var _curve = require("./shape/Curve");
var _rectangle = require("./shape/Rectangle");
var _polygon = require("./shape/Polygon");
var _dot = require("./shape/Dot");
var _cross = require("./shape/Cross");
var _symbols = require("./shape/Symbols");
var _polarGrid = require("./polar/PolarGrid");
var _polarRadiusAxis = require("./polar/PolarRadiusAxis");
var _polarAngleAxis = require("./polar/PolarAngleAxis");
var _pie = require("./polar/Pie");
var _radar = require("./polar/Radar");
var _radialBar = require("./polar/RadialBar");
var _brush = require("./cartesian/Brush");
var _referenceLine = require("./cartesian/ReferenceLine");
var _referenceDot = require("./cartesian/ReferenceDot");
var _referenceArea = require("./cartesian/ReferenceArea");
var _cartesianAxis = require("./cartesian/CartesianAxis");
var _cartesianGrid = require("./cartesian/CartesianGrid");
var _line = require("./cartesian/Line");
var _area = require("./cartesian/Area");
var _bar = require("./cartesian/Bar");
var _scatter = require("./cartesian/Scatter");
var _xaxis = require("./cartesian/XAxis");
var _yaxis = require("./cartesian/YAxis");
var _zaxis = require("./cartesian/ZAxis");
var _errorBar = require("./cartesian/ErrorBar");
var _lineChart = require("./chart/LineChart");
var _barChart = require("./chart/BarChart");
var _pieChart = require("./chart/PieChart");
var _treemap = require("./chart/Treemap");
var _sankey = require("./chart/Sankey");
var _radarChart = require("./chart/RadarChart");
var _scatterChart = require("./chart/ScatterChart");
var _areaChart = require("./chart/AreaChart");
var _radialBarChart = require("./chart/RadialBarChart");
var _composedChart = require("./chart/ComposedChart");
var _sunburstChart = require("./chart/SunburstChart");
var _funnel = require("./numberAxis/Funnel");
var _funnelChart = require("./chart/FunnelChart");
var _trapezoid = require("./shape/Trapezoid");
var _global = require("./util/Global");

},{"./container/Surface":false,"./container/Layer":false,"./component/Legend":false,"./component/DefaultLegendContent":false,"./component/Tooltip":"hVtpG","./component/DefaultTooltipContent":false,"./component/ResponsiveContainer":"5Nzfy","./component/Cell":"fGup7","./component/Text":false,"./component/Label":false,"./component/LabelList":false,"./component/Customized":false,"./shape/Sector":false,"./shape/Curve":false,"./shape/Rectangle":false,"./shape/Polygon":false,"./shape/Dot":false,"./shape/Cross":false,"./shape/Symbols":false,"./polar/PolarGrid":false,"./polar/PolarRadiusAxis":false,"./polar/PolarAngleAxis":false,"./polar/Pie":"23lCG","./polar/Radar":false,"./polar/RadialBar":false,"./cartesian/Brush":false,"./cartesian/ReferenceLine":false,"./cartesian/ReferenceDot":false,"./cartesian/ReferenceArea":false,"./cartesian/CartesianAxis":false,"./cartesian/CartesianGrid":false,"./cartesian/Line":"4Hkie","./cartesian/Area":false,"./cartesian/Bar":"M4yHZ","./cartesian/Scatter":false,"./cartesian/XAxis":"1BXde","./cartesian/YAxis":"f2O6f","./cartesian/ZAxis":false,"./cartesian/ErrorBar":false,"./chart/LineChart":"8AH5t","./chart/BarChart":"7U9AI","./chart/PieChart":"94rYU","./chart/Treemap":false,"./chart/Sankey":false,"./chart/RadarChart":false,"./chart/ScatterChart":false,"./chart/AreaChart":false,"./chart/RadialBarChart":false,"./chart/ComposedChart":false,"./chart/SunburstChart":false,"./numberAxis/Funnel":false,"./chart/FunnelChart":false,"./shape/Trapezoid":false,"./util/Global":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8sWIv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Surface", ()=>Surface);
/**
 * @fileOverview Surface
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactUtils = require("../util/ReactUtils");
var _excluded = [
    "children",
    "width",
    "height",
    "viewBox",
    "className",
    "style",
    "title",
    "desc"
];
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Surface(props) {
    var children = props.children, width = props.width, height = props.height, viewBox = props.viewBox, className = props.className, style = props.style, title = props.title, desc = props.desc, others = _objectWithoutProperties(props, _excluded);
    var svgView = viewBox || {
        width: width,
        height: height,
        x: 0,
        y: 0
    };
    var layerClass = (0, _clsxDefault.default)('recharts-surface', className);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("svg", _extends({}, (0, _reactUtils.filterProps)(others, true, 'svg'), {
        className: layerClass,
        width: width,
        height: height,
        style: style,
        viewBox: "".concat(svgView.x, " ").concat(svgView.y, " ").concat(svgView.width, " ").concat(svgView.height)
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement("title", null, title), /*#__PURE__*/ (0, _reactDefault.default).createElement("desc", null, desc), children);
}

},{"react":"jMk1U","clsx":"dOSJC","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dOSJC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clsx", ()=>clsx);
function r(e) {
    var t, f, n = "";
    if ("string" == typeof e || "number" == typeof e) n += e;
    else if ("object" == typeof e) {
        if (Array.isArray(e)) {
            var o = e.length;
            for(t = 0; t < o; t++)e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
        } else for(f in e)e[f] && (n && (n += " "), n += f);
    }
    return n;
}
function clsx() {
    for(var e, t, f = 0, n = "", o = arguments.length; f < o; f++)(e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
    return n;
}
exports.default = clsx;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dvc7w":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SCALE_TYPES", ()=>SCALE_TYPES);
parcelHelpers.export(exports, "LEGEND_TYPES", ()=>LEGEND_TYPES);
parcelHelpers.export(exports, "TOOLTIP_TYPES", ()=>TOOLTIP_TYPES);
parcelHelpers.export(exports, "getDisplayName", ()=>getDisplayName);
parcelHelpers.export(exports, "toArray", ()=>toArray);
/*
 * Find and return all matched children by type.
 * `type` must be a React.ComponentType
 */ parcelHelpers.export(exports, "findAllByType", ()=>findAllByType);
/*
 * Return the first matched child by type, return null otherwise.
 * `type` must be a React.ComponentType
 */ parcelHelpers.export(exports, "findChildByType", ()=>findChildByType);
parcelHelpers.export(exports, "withoutType", ()=>withoutType);
parcelHelpers.export(exports, "validateWidthHeight", ()=>validateWidthHeight);
parcelHelpers.export(exports, "hasClipDot", ()=>hasClipDot);
parcelHelpers.export(exports, "isValidSpreadableProp", ()=>isValidSpreadableProp);
parcelHelpers.export(exports, "filterSvgElements", ()=>filterSvgElements);
parcelHelpers.export(exports, "filterProps", ()=>filterProps);
parcelHelpers.export(exports, "isChildrenEqual", ()=>isChildrenEqual);
parcelHelpers.export(exports, "isSingleChildEqual", ()=>isSingleChildEqual);
parcelHelpers.export(exports, "renderByOrder", ()=>renderByOrder);
parcelHelpers.export(exports, "getReactEventByType", ()=>getReactEventByType);
parcelHelpers.export(exports, "parseChildIndex", ()=>parseChildIndex);
var _get = require("lodash/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isString = require("lodash/isString");
var _isStringDefault = parcelHelpers.interopDefault(_isString);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _isObject = require("lodash/isObject");
var _isObjectDefault = parcelHelpers.interopDefault(_isObject);
var _react = require("react");
var _reactIs = require("react-is");
var _dataUtils = require("./DataUtils");
var _shallowEqual = require("./ShallowEqual");
var _types = require("./types");
var _excluded = [
    "children"
], _excluded2 = [
    "children"
];
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var REACT_BROWSER_EVENT_MAP = {
    click: 'onClick',
    mousedown: 'onMouseDown',
    mouseup: 'onMouseUp',
    mouseover: 'onMouseOver',
    mousemove: 'onMouseMove',
    mouseout: 'onMouseOut',
    mouseenter: 'onMouseEnter',
    mouseleave: 'onMouseLeave',
    touchcancel: 'onTouchCancel',
    touchend: 'onTouchEnd',
    touchmove: 'onTouchMove',
    touchstart: 'onTouchStart',
    contextmenu: 'onContextMenu',
    dblclick: 'onDoubleClick'
};
var SCALE_TYPES = [
    'auto',
    'linear',
    'pow',
    'sqrt',
    'log',
    'identity',
    'time',
    'band',
    'point',
    'ordinal',
    'quantile',
    'quantize',
    'utc',
    'sequential',
    'threshold'
];
var LEGEND_TYPES = [
    'plainline',
    'line',
    'square',
    'rect',
    'circle',
    'cross',
    'diamond',
    'star',
    'triangle',
    'wye',
    'none'
];
var TOOLTIP_TYPES = [
    'none'
];
var getDisplayName = function getDisplayName(Comp) {
    if (typeof Comp === 'string') return Comp;
    if (!Comp) return '';
    return Comp.displayName || Comp.name || 'Component';
};
// `toArray` gets called multiple times during the render
// so we can memoize last invocation (since reference to `children` is the same)
var lastChildren = null;
var lastResult = null;
var toArray = function toArray(children) {
    if (children === lastChildren && Array.isArray(lastResult)) return lastResult;
    var result = [];
    (0, _react.Children).forEach(children, function(child) {
        if ((0, _isNilDefault.default)(child)) return;
        if ((0, _reactIs.isFragment)(child)) result = result.concat(toArray(child.props.children));
        else // @ts-expect-error this could still be Iterable<ReactNode> and TS does not like that
        result.push(child);
    });
    lastResult = result;
    lastChildren = children;
    return result;
};
function findAllByType(children, type) {
    var result = [];
    var types = [];
    if (Array.isArray(type)) types = type.map(function(t) {
        return getDisplayName(t);
    });
    else types = [
        getDisplayName(type)
    ];
    toArray(children).forEach(function(child) {
        var childType = (0, _getDefault.default)(child, 'type.displayName') || (0, _getDefault.default)(child, 'type.name');
        if (types.indexOf(childType) !== -1) result.push(child);
    });
    return result;
}
function findChildByType(children, type) {
    var result = findAllByType(children, type);
    return result && result[0];
}
var withoutType = function withoutType(children, type) {
    var newChildren = [];
    var types;
    if (Array.isArray(type)) types = type.map(function(t) {
        return getDisplayName(t);
    });
    else types = [
        getDisplayName(type)
    ];
    toArray(children).forEach(function(child) {
        var displayName = (0, _getDefault.default)(child, 'type.displayName');
        if (displayName && types.indexOf(displayName) !== -1) return;
        newChildren.push(child);
    });
    return newChildren;
};
var validateWidthHeight = function validateWidthHeight(el) {
    if (!el || !el.props) return false;
    var _el$props = el.props, width = _el$props.width, height = _el$props.height;
    if (!(0, _dataUtils.isNumber)(width) || width <= 0 || !(0, _dataUtils.isNumber)(height) || height <= 0) return false;
    return true;
};
var SVG_TAGS = [
    'a',
    'altGlyph',
    'altGlyphDef',
    'altGlyphItem',
    'animate',
    'animateColor',
    'animateMotion',
    'animateTransform',
    'circle',
    'clipPath',
    'color-profile',
    'cursor',
    'defs',
    'desc',
    'ellipse',
    'feBlend',
    'feColormatrix',
    'feComponentTransfer',
    'feComposite',
    'feConvolveMatrix',
    'feDiffuseLighting',
    'feDisplacementMap',
    'feDistantLight',
    'feFlood',
    'feFuncA',
    'feFuncB',
    'feFuncG',
    'feFuncR',
    'feGaussianBlur',
    'feImage',
    'feMerge',
    'feMergeNode',
    'feMorphology',
    'feOffset',
    'fePointLight',
    'feSpecularLighting',
    'feSpotLight',
    'feTile',
    'feTurbulence',
    'filter',
    'font',
    'font-face',
    'font-face-format',
    'font-face-name',
    'font-face-url',
    'foreignObject',
    'g',
    'glyph',
    'glyphRef',
    'hkern',
    'image',
    'line',
    'lineGradient',
    'marker',
    'mask',
    'metadata',
    'missing-glyph',
    'mpath',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'radialGradient',
    'rect',
    'script',
    'set',
    'stop',
    'style',
    'svg',
    'switch',
    'symbol',
    'text',
    'textPath',
    'title',
    'tref',
    'tspan',
    'use',
    'view',
    'vkern'
];
var isSvgElement = function isSvgElement(child) {
    return child && child.type && (0, _isStringDefault.default)(child.type) && SVG_TAGS.indexOf(child.type) >= 0;
};
var hasClipDot = function hasClipDot(dot) {
    return dot && _typeof(dot) === 'object' && 'clipDot' in dot;
};
var isValidSpreadableProp = function isValidSpreadableProp(property, key, includeEvents, svgElementType) {
    var _FilteredElementKeyMa;
    /**
   * If the svg element type is explicitly included, check against the filtered element key map
   * to determine if there are attributes that should only exist on that element type.
   * @todo Add an internal cjs version of https://github.com/wooorm/svg-element-attributes for full coverage.
   */ var matchingElementTypeKeys = (_FilteredElementKeyMa = (0, _types.FilteredElementKeyMap) === null || (0, _types.FilteredElementKeyMap) === void 0 ? void 0 : (0, _types.FilteredElementKeyMap)[svgElementType]) !== null && _FilteredElementKeyMa !== void 0 ? _FilteredElementKeyMa : [];
    return key.startsWith('data-') || !(0, _isFunctionDefault.default)(property) && (svgElementType && matchingElementTypeKeys.includes(key) || (0, _types.SVGElementPropKeys).includes(key)) || includeEvents && (0, _types.EventKeys).includes(key);
};
var filterSvgElements = function filterSvgElements(children) {
    var svgElements = [];
    toArray(children).forEach(function(entry) {
        if (isSvgElement(entry)) svgElements.push(entry);
    });
    return svgElements;
};
var filterProps = function filterProps(props, includeEvents, svgElementType) {
    if (!props || typeof props === 'function' || typeof props === 'boolean') return null;
    var inputProps = props;
    if (/*#__PURE__*/ (0, _react.isValidElement)(props)) inputProps = props.props;
    if (!(0, _isObjectDefault.default)(inputProps)) return null;
    var out = {};
    /**
   * Props are blindly spread onto SVG elements. This loop filters out properties that we don't want to spread.
   * Items filtered out are as follows:
   *   - functions in properties that are SVG attributes (functions are included when includeEvents is true)
   *   - props that are SVG attributes but don't matched the passed svgElementType
   *   - any prop that is not in SVGElementPropKeys (or in EventKeys if includeEvents is true)
   */ Object.keys(inputProps).forEach(function(key) {
        var _inputProps;
        if (isValidSpreadableProp((_inputProps = inputProps) === null || _inputProps === void 0 ? void 0 : _inputProps[key], key, includeEvents, svgElementType)) out[key] = inputProps[key];
    });
    return out;
};
var isChildrenEqual = function isChildrenEqual(nextChildren, prevChildren) {
    if (nextChildren === prevChildren) return true;
    var count = (0, _react.Children).count(nextChildren);
    if (count !== (0, _react.Children).count(prevChildren)) return false;
    if (count === 0) return true;
    if (count === 1) // eslint-disable-next-line @typescript-eslint/no-use-before-define
    return isSingleChildEqual(Array.isArray(nextChildren) ? nextChildren[0] : nextChildren, Array.isArray(prevChildren) ? prevChildren[0] : prevChildren);
    for(var i = 0; i < count; i++){
        var nextChild = nextChildren[i];
        var prevChild = prevChildren[i];
        if (Array.isArray(nextChild) || Array.isArray(prevChild)) {
            if (!isChildrenEqual(nextChild, prevChild)) return false;
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        } else if (!isSingleChildEqual(nextChild, prevChild)) return false;
    }
    return true;
};
var isSingleChildEqual = function isSingleChildEqual(nextChild, prevChild) {
    if ((0, _isNilDefault.default)(nextChild) && (0, _isNilDefault.default)(prevChild)) return true;
    if (!(0, _isNilDefault.default)(nextChild) && !(0, _isNilDefault.default)(prevChild)) {
        var _ref = nextChild.props || {}, nextChildren = _ref.children, nextProps = _objectWithoutProperties(_ref, _excluded);
        var _ref2 = prevChild.props || {}, prevChildren = _ref2.children, prevProps = _objectWithoutProperties(_ref2, _excluded2);
        if (nextChildren && prevChildren) return (0, _shallowEqual.shallowEqual)(nextProps, prevProps) && isChildrenEqual(nextChildren, prevChildren);
        if (!nextChildren && !prevChildren) return (0, _shallowEqual.shallowEqual)(nextProps, prevProps);
        return false;
    }
    return false;
};
var renderByOrder = function renderByOrder(children, renderMap) {
    var elements = [];
    var record = {};
    toArray(children).forEach(function(child, index) {
        if (isSvgElement(child)) elements.push(child);
        else if (child) {
            var displayName = getDisplayName(child.type);
            var _ref3 = renderMap[displayName] || {}, handler = _ref3.handler, once = _ref3.once;
            if (handler && (!once || !record[displayName])) {
                var results = handler(child, displayName, index);
                elements.push(results);
                record[displayName] = true;
            }
        }
    });
    return elements;
};
var getReactEventByType = function getReactEventByType(e) {
    var type = e && e.type;
    if (type && REACT_BROWSER_EVENT_MAP[type]) return REACT_BROWSER_EVENT_MAP[type];
    return null;
};
var parseChildIndex = function parseChildIndex(child, children) {
    return toArray(children).indexOf(child);
};

},{"lodash/get":"ce8mt","lodash/isNil":"66cvp","lodash/isString":"clHJ8","lodash/isFunction":"6aeG3","lodash/isObject":"ccoEe","react":"jMk1U","react-is":"59S9B","./DataUtils":"sgnJK","./ShallowEqual":"8AJub","./types":"j2YO8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ce8mt":[function(require,module,exports,__globalThis) {
var baseGet = require("446ba3c1be7939a3");
/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */ function get(object, path, defaultValue) {
    var result = object == null ? undefined : baseGet(object, path);
    return result === undefined ? defaultValue : result;
}
module.exports = get;

},{"446ba3c1be7939a3":"hDpQB"}],"hDpQB":[function(require,module,exports,__globalThis) {
var castPath = require("434ba191fc1dcf09"), toKey = require("c3296f04fad32769");
/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */ function baseGet(object, path) {
    path = castPath(path, object);
    var index = 0, length = path.length;
    while(object != null && index < length)object = object[toKey(path[index++])];
    return index && index == length ? object : undefined;
}
module.exports = baseGet;

},{"434ba191fc1dcf09":"lAgsO","c3296f04fad32769":"3WUuc"}],"lAgsO":[function(require,module,exports,__globalThis) {
var isArray = require("26a856890198f45b"), isKey = require("e823e604d75f975b"), stringToPath = require("f5fff1c342107fbd"), toString = require("b04e8cc634273c23");
/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */ function castPath(value, object) {
    if (isArray(value)) return value;
    return isKey(value, object) ? [
        value
    ] : stringToPath(toString(value));
}
module.exports = castPath;

},{"26a856890198f45b":"gqOzR","e823e604d75f975b":"5htJX","f5fff1c342107fbd":"8ATK1","b04e8cc634273c23":"boV58"}],"gqOzR":[function(require,module,exports,__globalThis) {
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */ var isArray = Array.isArray;
module.exports = isArray;

},{}],"5htJX":[function(require,module,exports,__globalThis) {
var isArray = require("1efcc081e9a448a8"), isSymbol = require("4cdff6c9e9ff5d38");
/** Used to match property names within property paths. */ var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */ function isKey(value, object) {
    if (isArray(value)) return false;
    var type = typeof value;
    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) return true;
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
module.exports = isKey;

},{"1efcc081e9a448a8":"gqOzR","4cdff6c9e9ff5d38":"k7Ns0"}],"k7Ns0":[function(require,module,exports,__globalThis) {
var baseGetTag = require("6118c0d5630f51ce"), isObjectLike = require("74644060ad1a1d3c");
/** `Object#toString` result references. */ var symbolTag = '[object Symbol]';
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */ function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}
module.exports = isSymbol;

},{"6118c0d5630f51ce":"ikiSI","74644060ad1a1d3c":"KdN4G"}],"ikiSI":[function(require,module,exports,__globalThis) {
var Symbol = require("68a84eb98c5d3fa2"), getRawTag = require("9b2aaf31b7bdd837"), objectToString = require("46d5beb3375f8a28");
/** `Object#toString` result references. */ var nullTag = '[object Null]', undefinedTag = '[object Undefined]';
/** Built-in value references. */ var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ function baseGetTag(value) {
    if (value == null) return value === undefined ? undefinedTag : nullTag;
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
module.exports = baseGetTag;

},{"68a84eb98c5d3fa2":"6PrIA","9b2aaf31b7bdd837":"9FROB","46d5beb3375f8a28":"hUDDI"}],"6PrIA":[function(require,module,exports,__globalThis) {
var root = require("9ff1abd51ad45ac0");
/** Built-in value references. */ var Symbol = root.Symbol;
module.exports = Symbol;

},{"9ff1abd51ad45ac0":"dNdcr"}],"dNdcr":[function(require,module,exports,__globalThis) {
var freeGlobal = require("cd92e8811deaabf5");
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
module.exports = root;

},{"cd92e8811deaabf5":"7MscQ"}],"7MscQ":[function(require,module,exports,__globalThis) {
/** Detect free variable `global` from Node.js. */ var global = arguments[3];
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
module.exports = freeGlobal;

},{}],"9FROB":[function(require,module,exports,__globalThis) {
var Symbol = require("e9b4533b2a68f814");
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var nativeObjectToString = objectProto.toString;
/** Built-in value references. */ var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */ function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
    try {
        value[symToStringTag] = undefined;
        var unmasked = true;
    } catch (e) {}
    var result = nativeObjectToString.call(value);
    if (unmasked) {
        if (isOwn) value[symToStringTag] = tag;
        else delete value[symToStringTag];
    }
    return result;
}
module.exports = getRawTag;

},{"e9b4533b2a68f814":"6PrIA"}],"hUDDI":[function(require,module,exports,__globalThis) {
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var nativeObjectToString = objectProto.toString;
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */ function objectToString(value) {
    return nativeObjectToString.call(value);
}
module.exports = objectToString;

},{}],"KdN4G":[function(require,module,exports,__globalThis) {
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return value != null && typeof value == 'object';
}
module.exports = isObjectLike;

},{}],"8ATK1":[function(require,module,exports,__globalThis) {
var memoizeCapped = require("55f565a895f455e5");
/** Used to match property names within property paths. */ var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
/** Used to match backslashes in property paths. */ var reEscapeChar = /\\(\\)?/g;
/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */ var stringToPath = memoizeCapped(function(string) {
    var result = [];
    if (string.charCodeAt(0) === 46 /* . */ ) result.push('');
    string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
    });
    return result;
});
module.exports = stringToPath;

},{"55f565a895f455e5":"eQyQ4"}],"eQyQ4":[function(require,module,exports,__globalThis) {
var memoize = require("cb456550b1f5dd0a");
/** Used as the maximum memoize cache size. */ var MAX_MEMOIZE_SIZE = 500;
/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */ function memoizeCapped(func) {
    var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) cache.clear();
        return key;
    });
    var cache = result.cache;
    return result;
}
module.exports = memoizeCapped;

},{"cb456550b1f5dd0a":"5ww8S"}],"5ww8S":[function(require,module,exports,__globalThis) {
var MapCache = require("b34b26bf235f1cdd");
/** Error message constants. */ var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */ function memoize(func, resolver) {
    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) return cache.get(key);
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
    };
    memoized.cache = new (memoize.Cache || MapCache);
    return memoized;
}
// Expose `MapCache`.
memoize.Cache = MapCache;
module.exports = memoize;

},{"b34b26bf235f1cdd":"hVYkX"}],"hVYkX":[function(require,module,exports,__globalThis) {
var mapCacheClear = require("a5ffecfb6a8bdac1"), mapCacheDelete = require("d2967b0e32ccfa56"), mapCacheGet = require("ca21409ea89624c0"), mapCacheHas = require("f88fd07f8dd1f67d"), mapCacheSet = require("dbf3eae765642a3b");
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function MapCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
module.exports = MapCache;

},{"a5ffecfb6a8bdac1":"lAgbq","d2967b0e32ccfa56":"8xJLg","ca21409ea89624c0":"dGobk","f88fd07f8dd1f67d":"4arXY","dbf3eae765642a3b":"3xgpo"}],"lAgbq":[function(require,module,exports,__globalThis) {
var Hash = require("4ae82d88051cc92b"), ListCache = require("a07dcf3fd3097a0c"), Map = require("92c01c953ef00ded");
/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */ function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
    };
}
module.exports = mapCacheClear;

},{"4ae82d88051cc92b":"2whmN","a07dcf3fd3097a0c":"l16M9","92c01c953ef00ded":"hdiCB"}],"2whmN":[function(require,module,exports,__globalThis) {
var hashClear = require("f47a1723b6e2d79b"), hashDelete = require("bc25d439ccd1fb47"), hashGet = require("f096b37295a92ab0"), hashHas = require("d88173cbc6a133c8"), hashSet = require("afb9b3bae0461cbf");
/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Hash(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
module.exports = Hash;

},{"f47a1723b6e2d79b":"fz0c1","bc25d439ccd1fb47":"764dm","f096b37295a92ab0":"1ssBl","d88173cbc6a133c8":"8TpUG","afb9b3bae0461cbf":"a6RE0"}],"fz0c1":[function(require,module,exports,__globalThis) {
var nativeCreate = require("dc294230a47ca365");
/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */ function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
}
module.exports = hashClear;

},{"dc294230a47ca365":"gzTNf"}],"gzTNf":[function(require,module,exports,__globalThis) {
var getNative = require("12f496acdffb7cf7");
/* Built-in method references that are verified to be native. */ var nativeCreate = getNative(Object, 'create');
module.exports = nativeCreate;

},{"12f496acdffb7cf7":"9Gozr"}],"9Gozr":[function(require,module,exports,__globalThis) {
var baseIsNative = require("63e3f1300cdc459f"), getValue = require("16db51a0e009bd8c");
/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */ function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
}
module.exports = getNative;

},{"63e3f1300cdc459f":"6FC7A","16db51a0e009bd8c":"6CmhL"}],"6FC7A":[function(require,module,exports,__globalThis) {
var isFunction = require("2f9b4543c84c6692"), isMasked = require("cabbc2adfaeb27d9"), isObject = require("cbb5703fe1562e7f"), toSource = require("388b819f47a43aa5");
/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used for built-in method references. */ var funcProto = Function.prototype, objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect if a method is native. */ var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */ function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) return false;
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
}
module.exports = baseIsNative;

},{"2f9b4543c84c6692":"6aeG3","cabbc2adfaeb27d9":"9zVvS","cbb5703fe1562e7f":"ccoEe","388b819f47a43aa5":"75ZSW"}],"6aeG3":[function(require,module,exports,__globalThis) {
var baseGetTag = require("5419308bd9194e11"), isObject = require("3cba3c966459d528");
/** `Object#toString` result references. */ var asyncTag = '[object AsyncFunction]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', proxyTag = '[object Proxy]';
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */ function isFunction(value) {
    if (!isObject(value)) return false;
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
module.exports = isFunction;

},{"5419308bd9194e11":"ikiSI","3cba3c966459d528":"ccoEe"}],"ccoEe":[function(require,module,exports,__globalThis) {
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
}
module.exports = isObject;

},{}],"9zVvS":[function(require,module,exports,__globalThis) {
var coreJsData = require("2fa6c734b0792bcf");
/** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */ function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
}
module.exports = isMasked;

},{"2fa6c734b0792bcf":"8206T"}],"8206T":[function(require,module,exports,__globalThis) {
var root = require("2f0959b2c20d7fb0");
/** Used to detect overreaching core-js shims. */ var coreJsData = root['__core-js_shared__'];
module.exports = coreJsData;

},{"2f0959b2c20d7fb0":"dNdcr"}],"75ZSW":[function(require,module,exports,__globalThis) {
/** Used for built-in method references. */ var funcProto = Function.prototype;
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */ function toSource(func) {
    if (func != null) {
        try {
            return funcToString.call(func);
        } catch (e) {}
        try {
            return func + '';
        } catch (e) {}
    }
    return '';
}
module.exports = toSource;

},{}],"6CmhL":[function(require,module,exports,__globalThis) {
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */ function getValue(object, key) {
    return object == null ? undefined : object[key];
}
module.exports = getValue;

},{}],"764dm":[function(require,module,exports,__globalThis) {
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
}
module.exports = hashDelete;

},{}],"1ssBl":[function(require,module,exports,__globalThis) {
var nativeCreate = require("627211fa3e1596e1");
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
}
module.exports = hashGet;

},{"627211fa3e1596e1":"gzTNf"}],"8TpUG":[function(require,module,exports,__globalThis) {
var nativeCreate = require("52b3f0bfeddceb45");
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}
module.exports = hashHas;

},{"52b3f0bfeddceb45":"gzTNf"}],"a6RE0":[function(require,module,exports,__globalThis) {
var nativeCreate = require("67b7d10f53ccd515");
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */ function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
}
module.exports = hashSet;

},{"67b7d10f53ccd515":"gzTNf"}],"l16M9":[function(require,module,exports,__globalThis) {
var listCacheClear = require("4b1a0d54aed80a7b"), listCacheDelete = require("b700cb849df2c166"), listCacheGet = require("d76dd90eead6cced"), listCacheHas = require("3d210628ba60ec8"), listCacheSet = require("76026bf2d4cfff93");
/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function ListCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
module.exports = ListCache;

},{"4b1a0d54aed80a7b":"f9P6y","b700cb849df2c166":"jomMe","d76dd90eead6cced":"2IjHc","3d210628ba60ec8":"kHIsh","76026bf2d4cfff93":"aEhWs"}],"f9P6y":[function(require,module,exports,__globalThis) {
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */ function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
}
module.exports = listCacheClear;

},{}],"jomMe":[function(require,module,exports,__globalThis) {
var assocIndexOf = require("173cad7d48c35f4f");
/** Used for built-in method references. */ var arrayProto = Array.prototype;
/** Built-in value references. */ var splice = arrayProto.splice;
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) return false;
    var lastIndex = data.length - 1;
    if (index == lastIndex) data.pop();
    else splice.call(data, index, 1);
    --this.size;
    return true;
}
module.exports = listCacheDelete;

},{"173cad7d48c35f4f":"fWmSK"}],"fWmSK":[function(require,module,exports,__globalThis) {
var eq = require("b38bfe408564f7a5");
/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function assocIndexOf(array, key) {
    var length = array.length;
    while(length--){
        if (eq(array[length][0], key)) return length;
    }
    return -1;
}
module.exports = assocIndexOf;

},{"b38bfe408564f7a5":"2pSvI"}],"2pSvI":[function(require,module,exports,__globalThis) {
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */ function eq(value, other) {
    return value === other || value !== value && other !== other;
}
module.exports = eq;

},{}],"2IjHc":[function(require,module,exports,__globalThis) {
var assocIndexOf = require("c0bae780ed176e2c");
/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
}
module.exports = listCacheGet;

},{"c0bae780ed176e2c":"fWmSK"}],"kHIsh":[function(require,module,exports,__globalThis) {
var assocIndexOf = require("7ed3d4e3adbd64a4");
/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
}
module.exports = listCacheHas;

},{"7ed3d4e3adbd64a4":"fWmSK"}],"aEhWs":[function(require,module,exports,__globalThis) {
var assocIndexOf = require("5be4035c2d7ca432");
/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */ function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
        ++this.size;
        data.push([
            key,
            value
        ]);
    } else data[index][1] = value;
    return this;
}
module.exports = listCacheSet;

},{"5be4035c2d7ca432":"fWmSK"}],"hdiCB":[function(require,module,exports,__globalThis) {
var getNative = require("ed0752fe9f482107"), root = require("29224713b8d411e6");
/* Built-in method references that are verified to be native. */ var Map = getNative(root, 'Map');
module.exports = Map;

},{"ed0752fe9f482107":"9Gozr","29224713b8d411e6":"dNdcr"}],"8xJLg":[function(require,module,exports,__globalThis) {
var getMapData = require("656d8c5510e0af84");
/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
}
module.exports = mapCacheDelete;

},{"656d8c5510e0af84":"4oDSz"}],"4oDSz":[function(require,module,exports,__globalThis) {
var isKeyable = require("adfdd2b4101370ed");
/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */ function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}
module.exports = getMapData;

},{"adfdd2b4101370ed":"ligiu"}],"ligiu":[function(require,module,exports,__globalThis) {
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */ function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}
module.exports = isKeyable;

},{}],"dGobk":[function(require,module,exports,__globalThis) {
var getMapData = require("d345cdfee2b4007d");
/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function mapCacheGet(key) {
    return getMapData(this, key).get(key);
}
module.exports = mapCacheGet;

},{"d345cdfee2b4007d":"4oDSz"}],"4arXY":[function(require,module,exports,__globalThis) {
var getMapData = require("29ebabd55e2d6074");
/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function mapCacheHas(key) {
    return getMapData(this, key).has(key);
}
module.exports = mapCacheHas;

},{"29ebabd55e2d6074":"4oDSz"}],"3xgpo":[function(require,module,exports,__globalThis) {
var getMapData = require("21c5ffca56eeb737");
/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */ function mapCacheSet(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
}
module.exports = mapCacheSet;

},{"21c5ffca56eeb737":"4oDSz"}],"boV58":[function(require,module,exports,__globalThis) {
var baseToString = require("81fca33832a744d9");
/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */ function toString(value) {
    return value == null ? '' : baseToString(value);
}
module.exports = toString;

},{"81fca33832a744d9":"dszKT"}],"dszKT":[function(require,module,exports,__globalThis) {
var Symbol = require("16af83505444e42a"), arrayMap = require("8439a3a1551d0706"), isArray = require("4b12c9f502d3288a"), isSymbol = require("a0ebd327d618908a");
/** Used as references for various `Number` constants. */ var INFINITY = 1 / 0;
/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */ function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') return value;
    if (isArray(value)) // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
    if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : '';
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}
module.exports = baseToString;

},{"16af83505444e42a":"6PrIA","8439a3a1551d0706":"2bz49","4b12c9f502d3288a":"gqOzR","a0ebd327d618908a":"k7Ns0"}],"2bz49":[function(require,module,exports,__globalThis) {
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */ function arrayMap(array, iteratee) {
    var index = -1, length = array == null ? 0 : array.length, result = Array(length);
    while(++index < length)result[index] = iteratee(array[index], index, array);
    return result;
}
module.exports = arrayMap;

},{}],"3WUuc":[function(require,module,exports,__globalThis) {
var isSymbol = require("2aed9f6fd4b7386");
/** Used as references for various `Number` constants. */ var INFINITY = 1 / 0;
/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */ function toKey(value) {
    if (typeof value == 'string' || isSymbol(value)) return value;
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}
module.exports = toKey;

},{"2aed9f6fd4b7386":"k7Ns0"}],"66cvp":[function(require,module,exports,__globalThis) {
/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */ function isNil(value) {
    return value == null;
}
module.exports = isNil;

},{}],"clHJ8":[function(require,module,exports,__globalThis) {
var baseGetTag = require("b4b8a393acf14901"), isArray = require("46fdd4d2c5d7b4ab"), isObjectLike = require("36ebbb6a9d8b3fe4");
/** `Object#toString` result references. */ var stringTag = '[object String]';
/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */ function isString(value) {
    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
}
module.exports = isString;

},{"b4b8a393acf14901":"ikiSI","46fdd4d2c5d7b4ab":"gqOzR","36ebbb6a9d8b3fe4":"KdN4G"}],"59S9B":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("2255125a8e8b1051");

},{"2255125a8e8b1051":"dFjTC"}],"dFjTC":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                        case REACT_SUSPENSE_LIST_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_SERVER_CONTEXT_TYPE:
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    }
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false;
    var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
        }
        return false;
    }
    function isConcurrentMode(object) {
        if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
            hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
        }
        return false;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    function isSuspenseList(object) {
        return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
    }
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.SuspenseList = SuspenseList;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isSuspenseList = isSuspenseList;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"sgnJK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mathSign", ()=>mathSign);
parcelHelpers.export(exports, "isPercent", ()=>isPercent);
parcelHelpers.export(exports, "isNumber", ()=>isNumber);
parcelHelpers.export(exports, "isNumOrStr", ()=>isNumOrStr);
parcelHelpers.export(exports, "uniqueId", ()=>uniqueId);
parcelHelpers.export(exports, "getPercentValue", ()=>getPercentValue);
parcelHelpers.export(exports, "getAnyElementOfObject", ()=>getAnyElementOfObject);
parcelHelpers.export(exports, "hasDuplicate", ()=>hasDuplicate);
parcelHelpers.export(exports, "interpolateNumber", ()=>interpolateNumber);
parcelHelpers.export(exports, "findEntryInArray", ()=>findEntryInArray);
parcelHelpers.export(exports, "getLinearRegression", ()=>getLinearRegression);
parcelHelpers.export(exports, "compareValues", ()=>compareValues);
var _isString = require("lodash/isString");
var _isStringDefault = parcelHelpers.interopDefault(_isString);
var _isNaN = require("lodash/isNaN");
var _isNaNDefault = parcelHelpers.interopDefault(_isNaN);
var _get = require("lodash/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _isNumber = require("lodash/isNumber");
var _isNumberDefault = parcelHelpers.interopDefault(_isNumber);
var mathSign = function mathSign(value) {
    if (value === 0) return 0;
    if (value > 0) return 1;
    return -1;
};
var isPercent = function isPercent(value) {
    return (0, _isStringDefault.default)(value) && value.indexOf('%') === value.length - 1;
};
var isNumber = function isNumber(value) {
    return (0, _isNumberDefault.default)(value) && !(0, _isNaNDefault.default)(value);
};
var isNumOrStr = function isNumOrStr(value) {
    return isNumber(value) || (0, _isStringDefault.default)(value);
};
var idCounter = 0;
var uniqueId = function uniqueId(prefix) {
    var id = ++idCounter;
    return "".concat(prefix || '').concat(id);
};
var getPercentValue = function getPercentValue(percent, totalValue) {
    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    if (!isNumber(percent) && !(0, _isStringDefault.default)(percent)) return defaultValue;
    var value;
    if (isPercent(percent)) {
        var index = percent.indexOf('%');
        value = totalValue * parseFloat(percent.slice(0, index)) / 100;
    } else value = +percent;
    if ((0, _isNaNDefault.default)(value)) value = defaultValue;
    if (validate && value > totalValue) value = totalValue;
    return value;
};
var getAnyElementOfObject = function getAnyElementOfObject(obj) {
    if (!obj) return null;
    var keys = Object.keys(obj);
    if (keys && keys.length) return obj[keys[0]];
    return null;
};
var hasDuplicate = function hasDuplicate(ary) {
    if (!Array.isArray(ary)) return false;
    var len = ary.length;
    var cache = {};
    for(var i = 0; i < len; i++){
        if (!cache[ary[i]]) cache[ary[i]] = true;
        else return true;
    }
    return false;
};
var interpolateNumber = function interpolateNumber(numberA, numberB) {
    if (isNumber(numberA) && isNumber(numberB)) return function(t) {
        return numberA + t * (numberB - numberA);
    };
    return function() {
        return numberB;
    };
};
function findEntryInArray(ary, specifiedKey, specifiedValue) {
    if (!ary || !ary.length) return null;
    return ary.find(function(entry) {
        return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : (0, _getDefault.default)(entry, specifiedKey)) === specifiedValue;
    });
}
var getLinearRegression = function getLinearRegression(data) {
    if (!data || !data.length) return null;
    var len = data.length;
    var xsum = 0;
    var ysum = 0;
    var xysum = 0;
    var xxsum = 0;
    var xmin = Infinity;
    var xmax = -Infinity;
    var xcurrent = 0;
    var ycurrent = 0;
    for(var i = 0; i < len; i++){
        xcurrent = data[i].cx || 0;
        ycurrent = data[i].cy || 0;
        xsum += xcurrent;
        ysum += ycurrent;
        xysum += xcurrent * ycurrent;
        xxsum += xcurrent * xcurrent;
        xmin = Math.min(xmin, xcurrent);
        xmax = Math.max(xmax, xcurrent);
    }
    var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;
    return {
        xmin: xmin,
        xmax: xmax,
        a: a,
        b: (ysum - a * xsum) / len
    };
};
var compareValues = function compareValues(a, b) {
    if (isNumber(a) && isNumber(b)) return a - b;
    if ((0, _isStringDefault.default)(a) && (0, _isStringDefault.default)(b)) return a.localeCompare(b);
    if (a instanceof Date && b instanceof Date) return a.getTime() - b.getTime();
    return String(a).localeCompare(String(b));
};

},{"lodash/isString":"clHJ8","lodash/isNaN":"f3jyo","lodash/get":"ce8mt","lodash/isNumber":"cuY9y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f3jyo":[function(require,module,exports,__globalThis) {
var isNumber = require("3426dfbd8f8be7c7");
/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */ function isNaN(value) {
    // An `NaN` primitive is the only value that is not equal to itself.
    // Perform the `toStringTag` check first to avoid errors with some
    // ActiveX objects in IE.
    return isNumber(value) && value != +value;
}
module.exports = isNaN;

},{"3426dfbd8f8be7c7":"cuY9y"}],"cuY9y":[function(require,module,exports,__globalThis) {
var baseGetTag = require("d5df50bb79e32710"), isObjectLike = require("6ae0825ac2dae50f");
/** `Object#toString` result references. */ var numberTag = '[object Number]';
/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */ function isNumber(value) {
    return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
}
module.exports = isNumber;

},{"d5df50bb79e32710":"ikiSI","6ae0825ac2dae50f":"KdN4G"}],"8AJub":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "shallowEqual", ()=>shallowEqual);
function shallowEqual(a, b) {
    /* eslint-disable no-restricted-syntax */ for(var key in a){
        if (({}).hasOwnProperty.call(a, key) && (!({}).hasOwnProperty.call(b, key) || a[key] !== b[key])) return false;
    }
    for(var _key in b){
        if (({}).hasOwnProperty.call(b, _key) && !({}).hasOwnProperty.call(a, _key)) return false;
    }
    return true;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j2YO8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SVGElementPropKeys", ()=>SVGElementPropKeys);
parcelHelpers.export(exports, "FilteredElementKeyMap", ()=>FilteredElementKeyMap);
parcelHelpers.export(exports, "EventKeys", ()=>EventKeys);
parcelHelpers.export(exports, "adaptEventHandlers", ()=>adaptEventHandlers);
parcelHelpers.export(exports, "adaptEventsOfChild", ()=>adaptEventsOfChild);
var _react = require("react");
var _isObject = require("lodash/isObject");
var _isObjectDefault = parcelHelpers.interopDefault(_isObject);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
/**
 * Determines how values are stacked:
 *
 * - `none` is the default, it adds values on top of each other. No smarts. Negative values will overlap.
 * - `expand` make it so that the values always add up to 1 - so the chart will look like a rectangle.
 * - `wiggle` and `silhouette` tries to keep the chart centered.
 * - `sign` stacks positive values above zero and negative values below zero. Similar to `none` but handles negatives.
 * - `positive` ignores all negative values, and then behaves like \`none\`.
 *
 * Also see https://d3js.org/d3-shape/stack#stack-offsets
 * (note that the `diverging` offset in d3 is named `sign` in recharts)
 */ //
// Event Handler Types -- Copied from @types/react/index.d.ts and adapted for Props.
//
var SVGContainerPropKeys = [
    'viewBox',
    'children'
];
var SVGElementPropKeys = [
    'aria-activedescendant',
    'aria-atomic',
    'aria-autocomplete',
    'aria-busy',
    'aria-checked',
    'aria-colcount',
    'aria-colindex',
    'aria-colspan',
    'aria-controls',
    'aria-current',
    'aria-describedby',
    'aria-details',
    'aria-disabled',
    'aria-errormessage',
    'aria-expanded',
    'aria-flowto',
    'aria-haspopup',
    'aria-hidden',
    'aria-invalid',
    'aria-keyshortcuts',
    'aria-label',
    'aria-labelledby',
    'aria-level',
    'aria-live',
    'aria-modal',
    'aria-multiline',
    'aria-multiselectable',
    'aria-orientation',
    'aria-owns',
    'aria-placeholder',
    'aria-posinset',
    'aria-pressed',
    'aria-readonly',
    'aria-relevant',
    'aria-required',
    'aria-roledescription',
    'aria-rowcount',
    'aria-rowindex',
    'aria-rowspan',
    'aria-selected',
    'aria-setsize',
    'aria-sort',
    'aria-valuemax',
    'aria-valuemin',
    'aria-valuenow',
    'aria-valuetext',
    'className',
    'color',
    'height',
    'id',
    'lang',
    'max',
    'media',
    'method',
    'min',
    'name',
    'style',
    /*
 * removed 'type' SVGElementPropKey because we do not currently use any SVG elements
 * that can use it and it conflicts with the recharts prop 'type'
 * https://github.com/recharts/recharts/pull/3327
 * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/type
 */ // 'type',
    'target',
    'width',
    'role',
    'tabIndex',
    'accentHeight',
    'accumulate',
    'additive',
    'alignmentBaseline',
    'allowReorder',
    'alphabetic',
    'amplitude',
    'arabicForm',
    'ascent',
    'attributeName',
    'attributeType',
    'autoReverse',
    'azimuth',
    'baseFrequency',
    'baselineShift',
    'baseProfile',
    'bbox',
    'begin',
    'bias',
    'by',
    'calcMode',
    'capHeight',
    'clip',
    'clipPath',
    'clipPathUnits',
    'clipRule',
    'colorInterpolation',
    'colorInterpolationFilters',
    'colorProfile',
    'colorRendering',
    'contentScriptType',
    'contentStyleType',
    'cursor',
    'cx',
    'cy',
    'd',
    'decelerate',
    'descent',
    'diffuseConstant',
    'direction',
    'display',
    'divisor',
    'dominantBaseline',
    'dur',
    'dx',
    'dy',
    'edgeMode',
    'elevation',
    'enableBackground',
    'end',
    'exponent',
    'externalResourcesRequired',
    'fill',
    'fillOpacity',
    'fillRule',
    'filter',
    'filterRes',
    'filterUnits',
    'floodColor',
    'floodOpacity',
    'focusable',
    'fontFamily',
    'fontSize',
    'fontSizeAdjust',
    'fontStretch',
    'fontStyle',
    'fontVariant',
    'fontWeight',
    'format',
    'from',
    'fx',
    'fy',
    'g1',
    'g2',
    'glyphName',
    'glyphOrientationHorizontal',
    'glyphOrientationVertical',
    'glyphRef',
    'gradientTransform',
    'gradientUnits',
    'hanging',
    'horizAdvX',
    'horizOriginX',
    'href',
    'ideographic',
    'imageRendering',
    'in2',
    'in',
    'intercept',
    'k1',
    'k2',
    'k3',
    'k4',
    'k',
    'kernelMatrix',
    'kernelUnitLength',
    'kerning',
    'keyPoints',
    'keySplines',
    'keyTimes',
    'lengthAdjust',
    'letterSpacing',
    'lightingColor',
    'limitingConeAngle',
    'local',
    'markerEnd',
    'markerHeight',
    'markerMid',
    'markerStart',
    'markerUnits',
    'markerWidth',
    'mask',
    'maskContentUnits',
    'maskUnits',
    'mathematical',
    'mode',
    'numOctaves',
    'offset',
    'opacity',
    'operator',
    'order',
    'orient',
    'orientation',
    'origin',
    'overflow',
    'overlinePosition',
    'overlineThickness',
    'paintOrder',
    'panose1',
    'pathLength',
    'patternContentUnits',
    'patternTransform',
    'patternUnits',
    'pointerEvents',
    'pointsAtX',
    'pointsAtY',
    'pointsAtZ',
    'preserveAlpha',
    'preserveAspectRatio',
    'primitiveUnits',
    'r',
    'radius',
    'refX',
    'refY',
    'renderingIntent',
    'repeatCount',
    'repeatDur',
    'requiredExtensions',
    'requiredFeatures',
    'restart',
    'result',
    'rotate',
    'rx',
    'ry',
    'seed',
    'shapeRendering',
    'slope',
    'spacing',
    'specularConstant',
    'specularExponent',
    'speed',
    'spreadMethod',
    'startOffset',
    'stdDeviation',
    'stemh',
    'stemv',
    'stitchTiles',
    'stopColor',
    'stopOpacity',
    'strikethroughPosition',
    'strikethroughThickness',
    'string',
    'stroke',
    'strokeDasharray',
    'strokeDashoffset',
    'strokeLinecap',
    'strokeLinejoin',
    'strokeMiterlimit',
    'strokeOpacity',
    'strokeWidth',
    'surfaceScale',
    'systemLanguage',
    'tableValues',
    'targetX',
    'targetY',
    'textAnchor',
    'textDecoration',
    'textLength',
    'textRendering',
    'to',
    'transform',
    'u1',
    'u2',
    'underlinePosition',
    'underlineThickness',
    'unicode',
    'unicodeBidi',
    'unicodeRange',
    'unitsPerEm',
    'vAlphabetic',
    'values',
    'vectorEffect',
    'version',
    'vertAdvY',
    'vertOriginX',
    'vertOriginY',
    'vHanging',
    'vIdeographic',
    'viewTarget',
    'visibility',
    'vMathematical',
    'widths',
    'wordSpacing',
    'writingMode',
    'x1',
    'x2',
    'x',
    'xChannelSelector',
    'xHeight',
    'xlinkActuate',
    'xlinkArcrole',
    'xlinkHref',
    'xlinkRole',
    'xlinkShow',
    'xlinkTitle',
    'xlinkType',
    'xmlBase',
    'xmlLang',
    'xmlns',
    'xmlnsXlink',
    'xmlSpace',
    'y1',
    'y2',
    'y',
    'yChannelSelector',
    'z',
    'zoomAndPan',
    'ref',
    'key',
    'angle'
];
var PolyElementKeys = [
    'points',
    'pathLength'
];
var FilteredElementKeyMap = {
    svg: SVGContainerPropKeys,
    polygon: PolyElementKeys,
    polyline: PolyElementKeys
};
var EventKeys = [
    'dangerouslySetInnerHTML',
    'onCopy',
    'onCopyCapture',
    'onCut',
    'onCutCapture',
    'onPaste',
    'onPasteCapture',
    'onCompositionEnd',
    'onCompositionEndCapture',
    'onCompositionStart',
    'onCompositionStartCapture',
    'onCompositionUpdate',
    'onCompositionUpdateCapture',
    'onFocus',
    'onFocusCapture',
    'onBlur',
    'onBlurCapture',
    'onChange',
    'onChangeCapture',
    'onBeforeInput',
    'onBeforeInputCapture',
    'onInput',
    'onInputCapture',
    'onReset',
    'onResetCapture',
    'onSubmit',
    'onSubmitCapture',
    'onInvalid',
    'onInvalidCapture',
    'onLoad',
    'onLoadCapture',
    'onError',
    'onErrorCapture',
    'onKeyDown',
    'onKeyDownCapture',
    'onKeyPress',
    'onKeyPressCapture',
    'onKeyUp',
    'onKeyUpCapture',
    'onAbort',
    'onAbortCapture',
    'onCanPlay',
    'onCanPlayCapture',
    'onCanPlayThrough',
    'onCanPlayThroughCapture',
    'onDurationChange',
    'onDurationChangeCapture',
    'onEmptied',
    'onEmptiedCapture',
    'onEncrypted',
    'onEncryptedCapture',
    'onEnded',
    'onEndedCapture',
    'onLoadedData',
    'onLoadedDataCapture',
    'onLoadedMetadata',
    'onLoadedMetadataCapture',
    'onLoadStart',
    'onLoadStartCapture',
    'onPause',
    'onPauseCapture',
    'onPlay',
    'onPlayCapture',
    'onPlaying',
    'onPlayingCapture',
    'onProgress',
    'onProgressCapture',
    'onRateChange',
    'onRateChangeCapture',
    'onSeeked',
    'onSeekedCapture',
    'onSeeking',
    'onSeekingCapture',
    'onStalled',
    'onStalledCapture',
    'onSuspend',
    'onSuspendCapture',
    'onTimeUpdate',
    'onTimeUpdateCapture',
    'onVolumeChange',
    'onVolumeChangeCapture',
    'onWaiting',
    'onWaitingCapture',
    'onAuxClick',
    'onAuxClickCapture',
    'onClick',
    'onClickCapture',
    'onContextMenu',
    'onContextMenuCapture',
    'onDoubleClick',
    'onDoubleClickCapture',
    'onDrag',
    'onDragCapture',
    'onDragEnd',
    'onDragEndCapture',
    'onDragEnter',
    'onDragEnterCapture',
    'onDragExit',
    'onDragExitCapture',
    'onDragLeave',
    'onDragLeaveCapture',
    'onDragOver',
    'onDragOverCapture',
    'onDragStart',
    'onDragStartCapture',
    'onDrop',
    'onDropCapture',
    'onMouseDown',
    'onMouseDownCapture',
    'onMouseEnter',
    'onMouseLeave',
    'onMouseMove',
    'onMouseMoveCapture',
    'onMouseOut',
    'onMouseOutCapture',
    'onMouseOver',
    'onMouseOverCapture',
    'onMouseUp',
    'onMouseUpCapture',
    'onSelect',
    'onSelectCapture',
    'onTouchCancel',
    'onTouchCancelCapture',
    'onTouchEnd',
    'onTouchEndCapture',
    'onTouchMove',
    'onTouchMoveCapture',
    'onTouchStart',
    'onTouchStartCapture',
    'onPointerDown',
    'onPointerDownCapture',
    'onPointerMove',
    'onPointerMoveCapture',
    'onPointerUp',
    'onPointerUpCapture',
    'onPointerCancel',
    'onPointerCancelCapture',
    'onPointerEnter',
    'onPointerEnterCapture',
    'onPointerLeave',
    'onPointerLeaveCapture',
    'onPointerOver',
    'onPointerOverCapture',
    'onPointerOut',
    'onPointerOutCapture',
    'onGotPointerCapture',
    'onGotPointerCaptureCapture',
    'onLostPointerCapture',
    'onLostPointerCaptureCapture',
    'onScroll',
    'onScrollCapture',
    'onWheel',
    'onWheelCapture',
    'onAnimationStart',
    'onAnimationStartCapture',
    'onAnimationEnd',
    'onAnimationEndCapture',
    'onAnimationIteration',
    'onAnimationIterationCapture',
    'onTransitionEnd',
    'onTransitionEndCapture'
];
var adaptEventHandlers = function adaptEventHandlers(props, newHandler) {
    if (!props || typeof props === 'function' || typeof props === 'boolean') return null;
    var inputProps = props;
    if (/*#__PURE__*/ (0, _react.isValidElement)(props)) inputProps = props.props;
    if (!(0, _isObjectDefault.default)(inputProps)) return null;
    var out = {};
    Object.keys(inputProps).forEach(function(key) {
        if (EventKeys.includes(key)) out[key] = newHandler || function(e) {
            return inputProps[key](inputProps, e);
        };
    });
    return out;
};
var getEventHandlerOfChild = function getEventHandlerOfChild(originalHandler, data, index) {
    return function(e) {
        originalHandler(data, index, e);
        return null;
    };
};
var adaptEventsOfChild = function adaptEventsOfChild(props, data, index) {
    if (!(0, _isObjectDefault.default)(props) || _typeof(props) !== 'object') return null;
    var out = null;
    Object.keys(props).forEach(function(key) {
        var item = props[key];
        if (EventKeys.includes(key) && typeof item === 'function') {
            if (!out) out = {};
            out[key] = getEventHandlerOfChild(item, data, index);
        }
    });
    return out;
};

},{"react":"jMk1U","lodash/isObject":"ccoEe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dLJ3P":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Layer", ()=>Layer);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactUtils = require("../util/ReactUtils");
var _excluded = [
    "children",
    "className"
];
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
var Layer = /*#__PURE__*/ (0, _reactDefault.default).forwardRef(function(props, ref) {
    var children = props.children, className = props.className, others = _objectWithoutProperties(props, _excluded);
    var layerClass = (0, _clsxDefault.default)('recharts-layer', className);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("g", _extends({
        className: layerClass
    }, (0, _reactUtils.filterProps)(others, true), {
        ref: ref
    }), children);
});

},{"react":"jMk1U","clsx":"dOSJC","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7BifH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Legend", ()=>Legend);
/**
 * @fileOverview Legend
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _defaultLegendContent = require("./DefaultLegendContent");
var _dataUtils = require("../util/DataUtils");
var _getUniqPayload = require("../util/payload/getUniqPayload");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var _excluded = [
    "ref"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function defaultUniqBy(entry) {
    return entry.value;
}
function renderContent(content, props) {
    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(content)) return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(content, props);
    if (typeof content === 'function') return /*#__PURE__*/ (0, _reactDefault.default).createElement(content, props);
    var ref = props.ref, otherProps = _objectWithoutProperties(props, _excluded);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _defaultLegendContent.DefaultLegendContent), otherProps);
}
var EPS = 1;
var Legend = /*#__PURE__*/ function(_PureComponent) {
    function Legend() {
        var _this;
        _classCallCheck(this, Legend);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, Legend, [].concat(args));
        _defineProperty(_this, "lastBoundingBox", {
            width: -1,
            height: -1
        });
        return _this;
    }
    _inherits(Legend, _PureComponent);
    return _createClass(Legend, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.updateBBox();
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate() {
                this.updateBBox();
            }
        },
        {
            key: "getBBox",
            value: function getBBox() {
                if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
                    var box = this.wrapperNode.getBoundingClientRect();
                    box.height = this.wrapperNode.offsetHeight;
                    box.width = this.wrapperNode.offsetWidth;
                    return box;
                }
                return null;
            }
        },
        {
            key: "updateBBox",
            value: function updateBBox() {
                var onBBoxUpdate = this.props.onBBoxUpdate;
                var box = this.getBBox();
                if (box) {
                    if (Math.abs(box.width - this.lastBoundingBox.width) > EPS || Math.abs(box.height - this.lastBoundingBox.height) > EPS) {
                        this.lastBoundingBox.width = box.width;
                        this.lastBoundingBox.height = box.height;
                        if (onBBoxUpdate) onBBoxUpdate(box);
                    }
                } else if (this.lastBoundingBox.width !== -1 || this.lastBoundingBox.height !== -1) {
                    this.lastBoundingBox.width = -1;
                    this.lastBoundingBox.height = -1;
                    if (onBBoxUpdate) onBBoxUpdate(null);
                }
            }
        },
        {
            key: "getBBoxSnapshot",
            value: function getBBoxSnapshot() {
                if (this.lastBoundingBox.width >= 0 && this.lastBoundingBox.height >= 0) return _objectSpread({}, this.lastBoundingBox);
                return {
                    width: 0,
                    height: 0
                };
            }
        },
        {
            key: "getDefaultPosition",
            value: function getDefaultPosition(style) {
                var _this$props = this.props, layout = _this$props.layout, align = _this$props.align, verticalAlign = _this$props.verticalAlign, margin = _this$props.margin, chartWidth = _this$props.chartWidth, chartHeight = _this$props.chartHeight;
                var hPos, vPos;
                if (!style || (style.left === undefined || style.left === null) && (style.right === undefined || style.right === null)) {
                    if (align === 'center' && layout === 'vertical') {
                        var box = this.getBBoxSnapshot();
                        hPos = {
                            left: ((chartWidth || 0) - box.width) / 2
                        };
                    } else hPos = align === 'right' ? {
                        right: margin && margin.right || 0
                    } : {
                        left: margin && margin.left || 0
                    };
                }
                if (!style || (style.top === undefined || style.top === null) && (style.bottom === undefined || style.bottom === null)) {
                    if (verticalAlign === 'middle') {
                        var _box = this.getBBoxSnapshot();
                        vPos = {
                            top: ((chartHeight || 0) - _box.height) / 2
                        };
                    } else vPos = verticalAlign === 'bottom' ? {
                        bottom: margin && margin.bottom || 0
                    } : {
                        top: margin && margin.top || 0
                    };
                }
                return _objectSpread(_objectSpread({}, hPos), vPos);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this2 = this;
                var _this$props2 = this.props, content = _this$props2.content, width = _this$props2.width, height = _this$props2.height, wrapperStyle = _this$props2.wrapperStyle, payloadUniqBy = _this$props2.payloadUniqBy, payload = _this$props2.payload;
                var outerStyle = _objectSpread(_objectSpread({
                    position: 'absolute',
                    width: width || 'auto',
                    height: height || 'auto'
                }, this.getDefaultPosition(wrapperStyle)), wrapperStyle);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
                    className: "recharts-legend-wrapper",
                    style: outerStyle,
                    ref: function ref(node) {
                        _this2.wrapperNode = node;
                    }
                }, renderContent(content, _objectSpread(_objectSpread({}, this.props), {}, {
                    payload: (0, _getUniqPayload.getUniqPayload)(payload, payloadUniqBy, defaultUniqBy)
                })));
            }
        }
    ], [
        {
            key: "getWithHeight",
            value: function getWithHeight(item, chartWidth) {
                var _this$defaultProps$it = _objectSpread(_objectSpread({}, this.defaultProps), item.props), layout = _this$defaultProps$it.layout;
                if (layout === 'vertical' && (0, _dataUtils.isNumber)(item.props.height)) return {
                    height: item.props.height
                };
                if (layout === 'horizontal') return {
                    width: item.props.width || chartWidth
                };
                return null;
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(Legend, "displayName", 'Legend');
_defineProperty(Legend, "defaultProps", {
    iconSize: 14,
    layout: 'horizontal',
    align: 'center',
    verticalAlign: 'bottom'
});

},{"react":"jMk1U","./DefaultLegendContent":"j4I7J","../util/DataUtils":"sgnJK","../util/payload/getUniqPayload":"45HUG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j4I7J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DefaultLegendContent", ()=>DefaultLegendContent);
/**
 * @fileOverview Default Legend Content
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _logUtils = require("../util/LogUtils");
var _surface = require("../container/Surface");
var _symbols = require("../shape/Symbols");
var _types = require("../util/types");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var SIZE = 32;
var DefaultLegendContent = /*#__PURE__*/ function(_PureComponent) {
    function DefaultLegendContent() {
        _classCallCheck(this, DefaultLegendContent);
        return _callSuper(this, DefaultLegendContent, arguments);
    }
    _inherits(DefaultLegendContent, _PureComponent);
    return _createClass(DefaultLegendContent, [
        {
            key: "renderIcon",
            value: /**
     * Render the path of icon
     * @param {Object} data Data of each legend item
     * @return {String} Path element
     */ function renderIcon(data) {
                var inactiveColor = this.props.inactiveColor;
                var halfSize = SIZE / 2;
                var sixthSize = SIZE / 6;
                var thirdSize = SIZE / 3;
                var color = data.inactive ? inactiveColor : data.color;
                if (data.type === 'plainline') return /*#__PURE__*/ (0, _reactDefault.default).createElement("line", {
                    strokeWidth: 4,
                    fill: "none",
                    stroke: color,
                    strokeDasharray: data.payload.strokeDasharray,
                    x1: 0,
                    y1: halfSize,
                    x2: SIZE,
                    y2: halfSize,
                    className: "recharts-legend-icon"
                });
                if (data.type === 'line') return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", {
                    strokeWidth: 4,
                    fill: "none",
                    stroke: color,
                    d: "M0,".concat(halfSize, "h").concat(thirdSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(2 * thirdSize, ",").concat(halfSize, "\n            H").concat(SIZE, "M").concat(2 * thirdSize, ",").concat(halfSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(thirdSize, ",").concat(halfSize),
                    className: "recharts-legend-icon"
                });
                if (data.type === 'rect') return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", {
                    stroke: "none",
                    fill: color,
                    d: "M0,".concat(SIZE / 8, "h").concat(SIZE, "v").concat(SIZE * 3 / 4, "h").concat(-SIZE, "z"),
                    className: "recharts-legend-icon"
                });
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(data.legendIcon)) {
                    var iconProps = _objectSpread({}, data);
                    delete iconProps.legendIcon;
                    return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(data.legendIcon, iconProps);
                }
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _symbols.Symbols), {
                    fill: color,
                    cx: halfSize,
                    cy: halfSize,
                    size: SIZE,
                    sizeType: "diameter",
                    type: data.type
                });
            }
        },
        {
            key: "renderItems",
            value: function renderItems() {
                var _this = this;
                var _this$props = this.props, payload = _this$props.payload, iconSize = _this$props.iconSize, layout = _this$props.layout, formatter = _this$props.formatter, inactiveColor = _this$props.inactiveColor;
                var viewBox = {
                    x: 0,
                    y: 0,
                    width: SIZE,
                    height: SIZE
                };
                var itemStyle = {
                    display: layout === 'horizontal' ? 'inline-block' : 'block',
                    marginRight: 10
                };
                var svgStyle = {
                    display: 'inline-block',
                    verticalAlign: 'middle',
                    marginRight: 4
                };
                return payload.map(function(entry, i) {
                    var finalFormatter = entry.formatter || formatter;
                    var className = (0, _clsxDefault.default)(_defineProperty(_defineProperty({
                        'recharts-legend-item': true
                    }, "legend-item-".concat(i), true), "inactive", entry.inactive));
                    if (entry.type === 'none') return null;
                    // Do not render entry.value as functions. Always require static string properties.
                    var entryValue = !(0, _isFunctionDefault.default)(entry.value) ? entry.value : null;
                    (0, _logUtils.warn)(!(0, _isFunctionDefault.default)(entry.value), "The name property is also required when using a function for the dataKey of a chart's cartesian components. Ex: <Bar name=\"Name of my Data\"/>" // eslint-disable-line max-len
                    );
                    var color = entry.inactive ? inactiveColor : entry.color;
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement("li", _extends({
                        className: className,
                        style: itemStyle,
                        key: "legend-item-".concat(i)
                    }, (0, _types.adaptEventsOfChild)(_this.props, entry, i)), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _surface.Surface), {
                        width: iconSize,
                        height: iconSize,
                        viewBox: viewBox,
                        style: svgStyle
                    }, _this.renderIcon(entry)), /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
                        className: "recharts-legend-item-text",
                        style: {
                            color: color
                        }
                    }, finalFormatter ? finalFormatter(entryValue, entry, i) : entryValue));
                });
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props2 = this.props, payload = _this$props2.payload, layout = _this$props2.layout, align = _this$props2.align;
                if (!payload || !payload.length) return null;
                var finalStyle = {
                    padding: 0,
                    margin: 0,
                    textAlign: layout === 'horizontal' ? align : 'left'
                };
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("ul", {
                    className: "recharts-default-legend",
                    style: finalStyle
                }, this.renderItems());
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(DefaultLegendContent, "displayName", 'Legend');
_defineProperty(DefaultLegendContent, "defaultProps", {
    iconSize: 14,
    layout: 'horizontal',
    align: 'center',
    verticalAlign: 'middle',
    inactiveColor: '#ccc'
});

},{"react":"jMk1U","lodash/isFunction":"6aeG3","clsx":"dOSJC","../util/LogUtils":"2q6MA","../container/Surface":"8sWIv","../shape/Symbols":"alAWK","../util/types":"j2YO8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2q6MA":[function(require,module,exports,__globalThis) {
/* eslint no-console: 0 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "warn", ()=>warn);
var isDev = true;
var warn = function warn(condition, format) {
    for(var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++)args[_key - 2] = arguments[_key];
    if (isDev && typeof console !== 'undefined' && console.warn) {
        if (format === undefined) console.warn('LogUtils requires an error message argument');
        if (!condition) {
            if (format === undefined) console.warn("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
                var argIndex = 0;
                console.warn(format.replace(/%s/g, function() {
                    return args[argIndex++];
                }));
            }
        }
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"alAWK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Symbols", ()=>Symbols);
/**
 * @fileOverview Curve
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _upperFirst = require("lodash/upperFirst");
var _upperFirstDefault = parcelHelpers.interopDefault(_upperFirst);
var _d3Shape = require("victory-vendor/d3-shape");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var _excluded = [
    "type",
    "size",
    "sizeType"
];
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
var symbolFactories = {
    symbolCircle: (0, _d3Shape.symbolCircle),
    symbolCross: (0, _d3Shape.symbolCross),
    symbolDiamond: (0, _d3Shape.symbolDiamond),
    symbolSquare: (0, _d3Shape.symbolSquare),
    symbolStar: (0, _d3Shape.symbolStar),
    symbolTriangle: (0, _d3Shape.symbolTriangle),
    symbolWye: (0, _d3Shape.symbolWye)
};
var RADIAN = Math.PI / 180;
var getSymbolFactory = function getSymbolFactory(type) {
    var name = "symbol".concat((0, _upperFirstDefault.default)(type));
    return symbolFactories[name] || (0, _d3Shape.symbolCircle);
};
var calculateAreaSize = function calculateAreaSize(size, sizeType, type) {
    if (sizeType === 'area') return size;
    switch(type){
        case 'cross':
            return 5 * size * size / 9;
        case 'diamond':
            return 0.5 * size * size / Math.sqrt(3);
        case 'square':
            return size * size;
        case 'star':
            var angle = 18 * RADIAN;
            return 1.25 * size * size * (Math.tan(angle) - Math.tan(angle * 2) * Math.pow(Math.tan(angle), 2));
        case 'triangle':
            return Math.sqrt(3) * size * size / 4;
        case 'wye':
            return (21 - 10 * Math.sqrt(3)) * size * size / 8;
        default:
            return Math.PI * size * size / 4;
    }
};
var registerSymbol = function registerSymbol(key, factory) {
    symbolFactories["symbol".concat((0, _upperFirstDefault.default)(key))] = factory;
};
var Symbols = function Symbols(_ref) {
    var _ref$type = _ref.type, type = _ref$type === void 0 ? 'circle' : _ref$type, _ref$size = _ref.size, size = _ref$size === void 0 ? 64 : _ref$size, _ref$sizeType = _ref.sizeType, sizeType = _ref$sizeType === void 0 ? 'area' : _ref$sizeType, rest = _objectWithoutProperties(_ref, _excluded);
    var props = _objectSpread(_objectSpread({}, rest), {}, {
        type: type,
        size: size,
        sizeType: sizeType
    });
    /**
   * Calculate the path of curve
   * @return {String} path
   */ var getPath = function getPath() {
        var symbolFactory = getSymbolFactory(type);
        var symbol = (0, _d3Shape.symbol)().type(symbolFactory).size(calculateAreaSize(size, sizeType, type));
        return symbol();
    };
    var className = props.className, cx = props.cx, cy = props.cy;
    var filteredProps = (0, _reactUtils.filterProps)(props, true);
    if (cx === +cx && cy === +cy && size === +size) return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, filteredProps, {
        className: (0, _clsxDefault.default)('recharts-symbols', className),
        transform: "translate(".concat(cx, ", ").concat(cy, ")"),
        d: getPath()
    }));
    return null;
};
Symbols.registerSymbol = registerSymbol;

},{"react":"jMk1U","lodash/upperFirst":"f6YEf","victory-vendor/d3-shape":"dyxsw","clsx":"dOSJC","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f6YEf":[function(require,module,exports,__globalThis) {
var createCaseFirst = require("9f71ec962d19127");
/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */ var upperFirst = createCaseFirst('toUpperCase');
module.exports = upperFirst;

},{"9f71ec962d19127":"c4cVZ"}],"c4cVZ":[function(require,module,exports,__globalThis) {
var castSlice = require("6cc0e53be1623a5f"), hasUnicode = require("e28707473345265"), stringToArray = require("32980b84821a53a0"), toString = require("e00796f8e204e98");
/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */ function createCaseFirst(methodName) {
    return function(string) {
        string = toString(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
        return chr[methodName]() + trailing;
    };
}
module.exports = createCaseFirst;

},{"6cc0e53be1623a5f":"9AxmZ","e28707473345265":"brvUI","32980b84821a53a0":"9DfZW","e00796f8e204e98":"boV58"}],"9AxmZ":[function(require,module,exports,__globalThis) {
var baseSlice = require("19fbc2ab8fa927cd");
/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */ function castSlice(array, start, end) {
    var length = array.length;
    end = end === undefined ? length : end;
    return !start && end >= length ? array : baseSlice(array, start, end);
}
module.exports = castSlice;

},{"19fbc2ab8fa927cd":"lSP5f"}],"lSP5f":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */ function baseSlice(array, start, end) {
    var index = -1, length = array.length;
    if (start < 0) start = -start > length ? 0 : length + start;
    end = end > length ? length : end;
    if (end < 0) end += length;
    length = start > end ? 0 : end - start >>> 0;
    start >>>= 0;
    var result = Array(length);
    while(++index < length)result[index] = array[index + start];
    return result;
}
module.exports = baseSlice;

},{}],"brvUI":[function(require,module,exports,__globalThis) {
/** Used to compose unicode character classes. */ var rsAstralRange = '\\ud800-\\udfff', rsComboMarksRange = '\\u0300-\\u036f', reComboHalfMarksRange = '\\ufe20-\\ufe2f', rsComboSymbolsRange = '\\u20d0-\\u20ff', rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsVarRange = '\\ufe0e\\ufe0f';
/** Used to compose unicode capture groups. */ var rsZWJ = '\\u200d';
/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */ var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */ function hasUnicode(string) {
    return reHasUnicode.test(string);
}
module.exports = hasUnicode;

},{}],"9DfZW":[function(require,module,exports,__globalThis) {
var asciiToArray = require("55ec07d60faf873c"), hasUnicode = require("d3e31b390208b2ca"), unicodeToArray = require("2a468ebcd49732b9");
/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */ function stringToArray(string) {
    return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
}
module.exports = stringToArray;

},{"55ec07d60faf873c":"5cYRM","d3e31b390208b2ca":"brvUI","2a468ebcd49732b9":"43pBp"}],"5cYRM":[function(require,module,exports,__globalThis) {
/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */ function asciiToArray(string) {
    return string.split('');
}
module.exports = asciiToArray;

},{}],"43pBp":[function(require,module,exports,__globalThis) {
/** Used to compose unicode character classes. */ var rsAstralRange = '\\ud800-\\udfff', rsComboMarksRange = '\\u0300-\\u036f', reComboHalfMarksRange = '\\ufe20-\\ufe2f', rsComboSymbolsRange = '\\u20d0-\\u20ff', rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsVarRange = '\\ufe0e\\ufe0f';
/** Used to compose unicode capture groups. */ var rsAstral = '[' + rsAstralRange + ']', rsCombo = '[' + rsComboRange + ']', rsFitz = '\\ud83c[\\udffb-\\udfff]', rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')', rsNonAstral = '[^' + rsAstralRange + ']', rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}', rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]', rsZWJ = '\\u200d';
/** Used to compose unicode regexes. */ var reOptMod = rsModifier + '?', rsOptVar = '[' + rsVarRange + ']?', rsOptJoin = '(?:' + rsZWJ + '(?:' + [
    rsNonAstral,
    rsRegional,
    rsSurrPair
].join('|') + ')' + rsOptVar + reOptMod + ')*', rsSeq = rsOptVar + reOptMod + rsOptJoin, rsSymbol = '(?:' + [
    rsNonAstral + rsCombo + '?',
    rsCombo,
    rsRegional,
    rsSurrPair,
    rsAstral
].join('|') + ')';
/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */ var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */ function unicodeToArray(string) {
    return string.match(reUnicode) || [];
}
module.exports = unicodeToArray;

},{}],"dyxsw":[function(require,module,exports,__globalThis) {
// `victory-vendor/d3-shape` (CommonJS)
// See upstream license: https://github.com/d3/d3-shape/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("19271802296fa753");

},{"19271802296fa753":"9SxZj"}],"9SxZj":[function(require,module,exports,__globalThis) {
// `victory-vendor/d3-shape` (CommonJS)
// See upstream license: https://github.com/d3/d3-shape/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-shape`
module.exports = require("176bd3ee52fdecae");

},{"176bd3ee52fdecae":"hUFIu"}],"hUFIu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "arc", {
    enumerable: true,
    get: function() {
        return _arc.default;
    }
});
Object.defineProperty(exports, "area", {
    enumerable: true,
    get: function() {
        return _area.default;
    }
});
Object.defineProperty(exports, "areaRadial", {
    enumerable: true,
    get: function() {
        return _areaRadial.default;
    }
});
Object.defineProperty(exports, "curveBasis", {
    enumerable: true,
    get: function() {
        return _basis.default;
    }
});
Object.defineProperty(exports, "curveBasisClosed", {
    enumerable: true,
    get: function() {
        return _basisClosed.default;
    }
});
Object.defineProperty(exports, "curveBasisOpen", {
    enumerable: true,
    get: function() {
        return _basisOpen.default;
    }
});
Object.defineProperty(exports, "curveBumpX", {
    enumerable: true,
    get: function() {
        return _bump.bumpX;
    }
});
Object.defineProperty(exports, "curveBumpY", {
    enumerable: true,
    get: function() {
        return _bump.bumpY;
    }
});
Object.defineProperty(exports, "curveBundle", {
    enumerable: true,
    get: function() {
        return _bundle.default;
    }
});
Object.defineProperty(exports, "curveCardinal", {
    enumerable: true,
    get: function() {
        return _cardinal.default;
    }
});
Object.defineProperty(exports, "curveCardinalClosed", {
    enumerable: true,
    get: function() {
        return _cardinalClosed.default;
    }
});
Object.defineProperty(exports, "curveCardinalOpen", {
    enumerable: true,
    get: function() {
        return _cardinalOpen.default;
    }
});
Object.defineProperty(exports, "curveCatmullRom", {
    enumerable: true,
    get: function() {
        return _catmullRom.default;
    }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
    enumerable: true,
    get: function() {
        return _catmullRomClosed.default;
    }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
    enumerable: true,
    get: function() {
        return _catmullRomOpen.default;
    }
});
Object.defineProperty(exports, "curveLinear", {
    enumerable: true,
    get: function() {
        return _linear.default;
    }
});
Object.defineProperty(exports, "curveLinearClosed", {
    enumerable: true,
    get: function() {
        return _linearClosed.default;
    }
});
Object.defineProperty(exports, "curveMonotoneX", {
    enumerable: true,
    get: function() {
        return _monotone.monotoneX;
    }
});
Object.defineProperty(exports, "curveMonotoneY", {
    enumerable: true,
    get: function() {
        return _monotone.monotoneY;
    }
});
Object.defineProperty(exports, "curveNatural", {
    enumerable: true,
    get: function() {
        return _natural.default;
    }
});
Object.defineProperty(exports, "curveStep", {
    enumerable: true,
    get: function() {
        return _step.default;
    }
});
Object.defineProperty(exports, "curveStepAfter", {
    enumerable: true,
    get: function() {
        return _step.stepAfter;
    }
});
Object.defineProperty(exports, "curveStepBefore", {
    enumerable: true,
    get: function() {
        return _step.stepBefore;
    }
});
Object.defineProperty(exports, "line", {
    enumerable: true,
    get: function() {
        return _line.default;
    }
});
Object.defineProperty(exports, "lineRadial", {
    enumerable: true,
    get: function() {
        return _lineRadial.default;
    }
});
Object.defineProperty(exports, "link", {
    enumerable: true,
    get: function() {
        return _link.link;
    }
});
Object.defineProperty(exports, "linkHorizontal", {
    enumerable: true,
    get: function() {
        return _link.linkHorizontal;
    }
});
Object.defineProperty(exports, "linkRadial", {
    enumerable: true,
    get: function() {
        return _link.linkRadial;
    }
});
Object.defineProperty(exports, "linkVertical", {
    enumerable: true,
    get: function() {
        return _link.linkVertical;
    }
});
Object.defineProperty(exports, "pie", {
    enumerable: true,
    get: function() {
        return _pie.default;
    }
});
Object.defineProperty(exports, "pointRadial", {
    enumerable: true,
    get: function() {
        return _pointRadial.default;
    }
});
Object.defineProperty(exports, "radialArea", {
    enumerable: true,
    get: function() {
        return _areaRadial.default;
    }
});
Object.defineProperty(exports, "radialLine", {
    enumerable: true,
    get: function() {
        return _lineRadial.default;
    }
});
Object.defineProperty(exports, "stack", {
    enumerable: true,
    get: function() {
        return _stack.default;
    }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
    enumerable: true,
    get: function() {
        return _diverging.default;
    }
});
Object.defineProperty(exports, "stackOffsetExpand", {
    enumerable: true,
    get: function() {
        return _expand.default;
    }
});
Object.defineProperty(exports, "stackOffsetNone", {
    enumerable: true,
    get: function() {
        return _none.default;
    }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
    enumerable: true,
    get: function() {
        return _silhouette.default;
    }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
    enumerable: true,
    get: function() {
        return _wiggle.default;
    }
});
Object.defineProperty(exports, "stackOrderAppearance", {
    enumerable: true,
    get: function() {
        return _appearance.default;
    }
});
Object.defineProperty(exports, "stackOrderAscending", {
    enumerable: true,
    get: function() {
        return _ascending.default;
    }
});
Object.defineProperty(exports, "stackOrderDescending", {
    enumerable: true,
    get: function() {
        return _descending.default;
    }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
    enumerable: true,
    get: function() {
        return _insideOut.default;
    }
});
Object.defineProperty(exports, "stackOrderNone", {
    enumerable: true,
    get: function() {
        return _none2.default;
    }
});
Object.defineProperty(exports, "stackOrderReverse", {
    enumerable: true,
    get: function() {
        return _reverse.default;
    }
});
Object.defineProperty(exports, "symbol", {
    enumerable: true,
    get: function() {
        return _symbol.default;
    }
});
Object.defineProperty(exports, "symbolAsterisk", {
    enumerable: true,
    get: function() {
        return _asterisk.default;
    }
});
Object.defineProperty(exports, "symbolCircle", {
    enumerable: true,
    get: function() {
        return _circle.default;
    }
});
Object.defineProperty(exports, "symbolCross", {
    enumerable: true,
    get: function() {
        return _cross.default;
    }
});
Object.defineProperty(exports, "symbolDiamond", {
    enumerable: true,
    get: function() {
        return _diamond.default;
    }
});
Object.defineProperty(exports, "symbolDiamond2", {
    enumerable: true,
    get: function() {
        return _diamond2.default;
    }
});
Object.defineProperty(exports, "symbolPlus", {
    enumerable: true,
    get: function() {
        return _plus.default;
    }
});
Object.defineProperty(exports, "symbolSquare", {
    enumerable: true,
    get: function() {
        return _square.default;
    }
});
Object.defineProperty(exports, "symbolSquare2", {
    enumerable: true,
    get: function() {
        return _square2.default;
    }
});
Object.defineProperty(exports, "symbolStar", {
    enumerable: true,
    get: function() {
        return _star.default;
    }
});
Object.defineProperty(exports, "symbolTriangle", {
    enumerable: true,
    get: function() {
        return _triangle.default;
    }
});
Object.defineProperty(exports, "symbolTriangle2", {
    enumerable: true,
    get: function() {
        return _triangle2.default;
    }
});
Object.defineProperty(exports, "symbolWye", {
    enumerable: true,
    get: function() {
        return _wye.default;
    }
});
Object.defineProperty(exports, "symbolX", {
    enumerable: true,
    get: function() {
        return _x.default;
    }
});
Object.defineProperty(exports, "symbols", {
    enumerable: true,
    get: function() {
        return _symbol.symbolsFill;
    }
});
Object.defineProperty(exports, "symbolsFill", {
    enumerable: true,
    get: function() {
        return _symbol.symbolsFill;
    }
});
Object.defineProperty(exports, "symbolsStroke", {
    enumerable: true,
    get: function() {
        return _symbol.symbolsStroke;
    }
});
var _arc = _interopRequireDefault(require("2d3f5974235d4d97"));
var _area = _interopRequireDefault(require("e7d6d9d0e4901d2e"));
var _line = _interopRequireDefault(require("bce35bc16739dbe5"));
var _pie = _interopRequireDefault(require("74b9b0848a30f56d"));
var _areaRadial = _interopRequireDefault(require("795a4987e33fc84"));
var _lineRadial = _interopRequireDefault(require("b1ce66d1195c070b"));
var _pointRadial = _interopRequireDefault(require("18b93f5355310e1c"));
var _link = require("661c14c96c31c97d");
var _symbol = _interopRequireWildcard(require("974cd54b219b5407"));
var _asterisk = _interopRequireDefault(require("3237a04f4f14fca5"));
var _circle = _interopRequireDefault(require("d06ad8106b0de21c"));
var _cross = _interopRequireDefault(require("871a2983fe1eb51f"));
var _diamond = _interopRequireDefault(require("d1ef85359a4dd212"));
var _diamond2 = _interopRequireDefault(require("3dea65984f117ec1"));
var _plus = _interopRequireDefault(require("1565ec3cf1a7613a"));
var _square = _interopRequireDefault(require("9285c34ad7b613e4"));
var _square2 = _interopRequireDefault(require("c6e9c9d35fa5b5cb"));
var _star = _interopRequireDefault(require("815abfb8fc8798e0"));
var _triangle = _interopRequireDefault(require("431e53334965b545"));
var _triangle2 = _interopRequireDefault(require("64d0ff16b783fd6c"));
var _wye = _interopRequireDefault(require("6bcb4260ac11e7b8"));
var _x = _interopRequireDefault(require("f8ed4fd677a8b4d9"));
var _basisClosed = _interopRequireDefault(require("91e47160fd76a75d"));
var _basisOpen = _interopRequireDefault(require("3cfac39a85530a37"));
var _basis = _interopRequireDefault(require("f697ba81082957cf"));
var _bump = require("2bea78dcacfdca47");
var _bundle = _interopRequireDefault(require("e82aff58f59c7695"));
var _cardinalClosed = _interopRequireDefault(require("c72e75e517eac392"));
var _cardinalOpen = _interopRequireDefault(require("9217e81617e05b4"));
var _cardinal = _interopRequireDefault(require("1dd79a3764c6f2bf"));
var _catmullRomClosed = _interopRequireDefault(require("aee7da70ecf7456b"));
var _catmullRomOpen = _interopRequireDefault(require("6d5f31fa960dcbe2"));
var _catmullRom = _interopRequireDefault(require("3a4d3052f18b3d40"));
var _linearClosed = _interopRequireDefault(require("46142d6a54d00966"));
var _linear = _interopRequireDefault(require("e55fce1282a99ed7"));
var _monotone = require("fad9762fa89b7933");
var _natural = _interopRequireDefault(require("188623ab79fe5f6b"));
var _step = _interopRequireWildcard(require("48bb2877ede27508"));
var _stack = _interopRequireDefault(require("39fd6af83767c8b0"));
var _expand = _interopRequireDefault(require("17e05ad95922030d"));
var _diverging = _interopRequireDefault(require("a216beddff4c3a08"));
var _none = _interopRequireDefault(require("b09a2130bd13b1e0"));
var _silhouette = _interopRequireDefault(require("70400e7acef40477"));
var _wiggle = _interopRequireDefault(require("b9b44fd8f75e0415"));
var _appearance = _interopRequireDefault(require("fd3023466e7ac9e7"));
var _ascending = _interopRequireDefault(require("46c02ef8fc93b026"));
var _descending = _interopRequireDefault(require("a5a0ae33dd14b3b0"));
var _insideOut = _interopRequireDefault(require("43469f5cea84b12e"));
var _none2 = _interopRequireDefault(require("68f36eef1efe200b"));
var _reverse = _interopRequireDefault(require("a5f086840207a549"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"2d3f5974235d4d97":"6zEdu","e7d6d9d0e4901d2e":"4qSII","bce35bc16739dbe5":"69aLj","74b9b0848a30f56d":"hOGU6","795a4987e33fc84":"bn94D","b1ce66d1195c070b":"cYimI","18b93f5355310e1c":"nj7BG","661c14c96c31c97d":"8kQy2","974cd54b219b5407":"7Q8Nu","3237a04f4f14fca5":"2X9Db","d06ad8106b0de21c":"56cmE","871a2983fe1eb51f":"biOl5","d1ef85359a4dd212":"c3OBX","3dea65984f117ec1":"6hbZh","1565ec3cf1a7613a":"9gtds","9285c34ad7b613e4":"2aq0z","c6e9c9d35fa5b5cb":"gSPwv","815abfb8fc8798e0":"5PFzP","431e53334965b545":"8FPPT","64d0ff16b783fd6c":"2ko5s","6bcb4260ac11e7b8":"fx65J","f8ed4fd677a8b4d9":"2qDzt","91e47160fd76a75d":"faChm","3cfac39a85530a37":"iiHHC","f697ba81082957cf":"iLbOi","2bea78dcacfdca47":"8VoBu","e82aff58f59c7695":"bOnQe","c72e75e517eac392":"iZXAx","9217e81617e05b4":"ltjJE","1dd79a3764c6f2bf":"fvuHZ","aee7da70ecf7456b":"9ZXsY","6d5f31fa960dcbe2":"ZLEyv","3a4d3052f18b3d40":"btXN8","46142d6a54d00966":"jlynz","e55fce1282a99ed7":"4RbSw","fad9762fa89b7933":"kq4Ha","188623ab79fe5f6b":"55mEH","48bb2877ede27508":"6vGLt","39fd6af83767c8b0":"2onme","17e05ad95922030d":"jfxeB","a216beddff4c3a08":"bCAnS","b09a2130bd13b1e0":"g0HLU","70400e7acef40477":"6GF1k","b9b44fd8f75e0415":"2gxnP","fd3023466e7ac9e7":"8lIgM","46c02ef8fc93b026":"e9mzm","a5a0ae33dd14b3b0":"2QtdT","43469f5cea84b12e":"ch8eA","68f36eef1efe200b":"iJxDC","a5f086840207a549":"1eQrS"}],"6zEdu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _index = require("9b71135f97bb0843");
var _constant = _interopRequireDefault(require("b66d56b93af4da33"));
var _math = require("53b6f54f25927f26");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function arcInnerRadius(d) {
    return d.innerRadius;
}
function arcOuterRadius(d) {
    return d.outerRadius;
}
function arcStartAngle(d) {
    return d.startAngle;
}
function arcEndAngle(d) {
    return d.endAngle;
}
function arcPadAngle(d) {
    return d && d.padAngle; // Note: optional!
}
function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
    var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x2, y32 = y3 - y2, t = y32 * x10 - x32 * y10;
    if (t * t < _math.epsilon) return;
    t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
    return [
        x0 + t * x10,
        y0 + t * y10
    ];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
    var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00; // Pick the closer of the two intersection points.
    // TODO Is there a faster way to determine which intersection to use?
    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
    return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
    };
}
function _default() {
    var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = (0, _constant.default)(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
    function arc() {
        var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - _math.halfPi, a1 = endAngle.apply(this, arguments) - _math.halfPi, da = (0, _math.abs)(a1 - a0), cw = a1 > a0;
        if (!context) context = buffer = (0, _index.path)(); // Ensure that the outer radius is always larger than the inner radius.
        if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?
        if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
        else if (da > _math.tau - _math.epsilon) {
            context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
            context.arc(0, 0, r1, a0, a1, !cw);
            if (r0 > _math.epsilon) {
                context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
                context.arc(0, 0, r0, a1, a0, cw);
            }
        } else {
            var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)), rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t0, t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
            if (rp > _math.epsilon) {
                var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)), p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
                if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
                else da0 = 0, a00 = a10 = (a0 + a1) / 2;
                if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
                else da1 = 0, a01 = a11 = (a0 + a1) / 2;
            }
            var x01 = r1 * (0, _math.cos)(a01), y01 = r1 * (0, _math.sin)(a01), x10 = r0 * (0, _math.cos)(a10), y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?
            if (rc > _math.epsilon) {
                var x11 = r1 * (0, _math.cos)(a11), y11 = r1 * (0, _math.sin)(a11), x00 = r0 * (0, _math.cos)(a00), y00 = r0 * (0, _math.sin)(a00), oc; // Restrict the corner radius according to the sector angle.
                if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
                    var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2), lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
                    rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
                    rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
                }
            } // Is the sector collapsed to a line?
            if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
            else if (rc1 > _math.epsilon) {
                t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
                t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
                context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?
                if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
                else {
                    context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                    context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                    context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
            // Or perhaps it’s an annular sector collapsed due to padding?
            if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
            else if (rc0 > _math.epsilon) {
                t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
                t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
                context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?
                if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
                else {
                    context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                    context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                    context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } else context.arc(0, 0, r0, a10, a00, cw);
        }
        context.closePath();
        if (buffer) return context = null, buffer + "" || null;
    }
    arc.centroid = function() {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
        return [
            (0, _math.cos)(a) * r,
            (0, _math.sin)(a) * r
        ];
    };
    arc.innerRadius = function(_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
    };
    arc.outerRadius = function(_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
    };
    arc.cornerRadius = function(_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
    };
    arc.padRadius = function(_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
    };
    arc.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
    };
    arc.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
    };
    arc.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
    };
    arc.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, arc) : context;
    };
    return arc;
}

},{"9b71135f97bb0843":"6tKHf","b66d56b93af4da33":"kn48N","53b6f54f25927f26":"hgBod"}],"6tKHf":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "path", {
    enumerable: true,
    get: function() {
        return _path.default;
    }
});
var _path = _interopRequireDefault(require("3b0cf72f61f38e1e"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"3b0cf72f61f38e1e":"dNMYk"}],"dNMYk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
const pi = Math.PI, tau = 2 * pi, epsilon = 1e-6, tauEpsilon = tau - epsilon;
function Path() {
    this._x0 = this._y0 = this._x1 = this._y1 = null; // end of current subpath
    this._ = "";
}
function path() {
    return new Path();
}
Path.prototype = path.prototype = {
    constructor: Path,
    moveTo: function(x, y) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
    },
    closePath: function() {
        if (this._x1 !== null) {
            this._x1 = this._x0, this._y1 = this._y0;
            this._ += "Z";
        }
    },
    lineTo: function(x, y) {
        this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
    },
    quadraticCurveTo: function(x1, y1, x, y) {
        this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
    },
    bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
    },
    arcTo: function(x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        var x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).
        if (this._x1 === null) this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
        else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        else {
            var x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.
            if (Math.abs(t01 - 1) > epsilon) this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
        }
    },
    arc: function(x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r, ccw = !!ccw;
        var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x + dx, y0 = y + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).
        if (this._x1 === null) this._ += "M" + x0 + "," + y0;
        else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += "L" + x0 + "," + y0;
         // Is this arc empty? We’re done.
        if (!r) return; // Does the angle go the wrong way? Flip the direction.
        if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.
        if (da > tauEpsilon) this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
        else if (da > epsilon) this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    },
    rect: function(x, y, w, h) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
    },
    toString: function() {
        return this._;
    }
};
var _default = path;
exports.default = _default;

},{}],"kn48N":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(x) {
    return function constant() {
        return x;
    };
}

},{}],"hgBod":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.abs = void 0;
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.sqrt = exports.sin = exports.pi = exports.min = exports.max = exports.halfPi = exports.epsilon = exports.cos = exports.atan2 = void 0;
const abs = Math.abs;
exports.abs = abs;
const atan2 = Math.atan2;
exports.atan2 = atan2;
const cos = Math.cos;
exports.cos = cos;
const max = Math.max;
exports.max = max;
const min = Math.min;
exports.min = min;
const sin = Math.sin;
exports.sin = sin;
const sqrt = Math.sqrt;
exports.sqrt = sqrt;
const epsilon = 1e-12;
exports.epsilon = epsilon;
const pi = Math.PI;
exports.pi = pi;
const halfPi = pi / 2;
exports.halfPi = halfPi;
const tau = 2 * pi;
exports.tau = tau;
function acos(x) {
    return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}
function asin(x) {
    return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}

},{}],"4qSII":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _index = require("500493761fddc3b8");
var _array = _interopRequireDefault(require("bbf8fdbd92f1ebcd"));
var _constant = _interopRequireDefault(require("a5b783eee5be8fa0"));
var _linear = _interopRequireDefault(require("f4129b2496ff7a8b"));
var _line = _interopRequireDefault(require("b3caf3b68a2e9f58"));
var _point = require("ea923553657b0095");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(x0, y0, y1) {
    var x1 = null, defined = (0, _constant.default)(true), context = null, curve = _linear.default, output = null;
    x0 = typeof x0 === "function" ? x0 : x0 === undefined ? _point.x : (0, _constant.default)(+x0);
    y0 = typeof y0 === "function" ? y0 : y0 === undefined ? (0, _constant.default)(0) : (0, _constant.default)(+y0);
    y1 = typeof y1 === "function" ? y1 : y1 === undefined ? _point.y : (0, _constant.default)(+y1);
    function area(data) {
        var i, j, k, n = (data = (0, _array.default)(data)).length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
        if (context == null) output = curve(buffer = (0, _index.path)());
        for(i = 0; i <= n; ++i){
            if (!(i < n && defined(d = data[i], i, data)) === defined0) {
                if (defined0 = !defined0) {
                    j = i;
                    output.areaStart();
                    output.lineStart();
                } else {
                    output.lineEnd();
                    output.lineStart();
                    for(k = i - 1; k >= j; --k)output.point(x0z[k], y0z[k]);
                    output.lineEnd();
                    output.areaEnd();
                }
            }
            if (defined0) {
                x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
                output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
            }
        }
        if (buffer) return output = null, buffer + "" || null;
    }
    function arealine() {
        return (0, _line.default)().defined(defined).curve(curve).context(context);
    }
    area.x = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
    };
    area.x0 = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
    };
    area.x1 = function(_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
    };
    area.y = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
    };
    area.y0 = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
    };
    area.y1 = function(_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
    };
    area.lineX0 = area.lineY0 = function() {
        return arealine().x(x0).y(y0);
    };
    area.lineY1 = function() {
        return arealine().x(x0).y(y1);
    };
    area.lineX1 = function() {
        return arealine().x(x1).y(y0);
    };
    area.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
    };
    area.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
    };
    area.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
    };
    return area;
}

},{"500493761fddc3b8":"6tKHf","bbf8fdbd92f1ebcd":"7rPZm","a5b783eee5be8fa0":"kn48N","f4129b2496ff7a8b":"4RbSw","b3caf3b68a2e9f58":"69aLj","ea923553657b0095":"fSpDV"}],"7rPZm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
function _default(x) {
    return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
     : Array.from(x); // Map, Set, iterable, string, or anything else
}

},{}],"4RbSw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function Linear(context) {
    this._context = context;
}
Linear.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
            // falls through
            default:
                this._context.lineTo(x, y);
                break;
        }
    }
};
function _default(context) {
    return new Linear(context);
}

},{}],"69aLj":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _index = require("98710a8cd2690312");
var _array = _interopRequireDefault(require("71eeea1751dcd149"));
var _constant = _interopRequireDefault(require("9083cb1503140862"));
var _linear = _interopRequireDefault(require("c81bc5ab811126a3"));
var _point = require("552145ba71b64707");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(x, y) {
    var defined = (0, _constant.default)(true), context = null, curve = _linear.default, output = null;
    x = typeof x === "function" ? x : x === undefined ? _point.x : (0, _constant.default)(x);
    y = typeof y === "function" ? y : y === undefined ? _point.y : (0, _constant.default)(y);
    function line(data) {
        var i, n = (data = (0, _array.default)(data)).length, d, defined0 = false, buffer;
        if (context == null) output = curve(buffer = (0, _index.path)());
        for(i = 0; i <= n; ++i){
            if (!(i < n && defined(d = data[i], i, data)) === defined0) {
                if (defined0 = !defined0) output.lineStart();
                else output.lineEnd();
            }
            if (defined0) output.point(+x(d, i, data), +y(d, i, data));
        }
        if (buffer) return output = null, buffer + "" || null;
    }
    line.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
    };
    line.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
    };
    line.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
    };
    line.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
    };
    line.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
    };
    return line;
}

},{"98710a8cd2690312":"6tKHf","71eeea1751dcd149":"7rPZm","9083cb1503140862":"kn48N","c81bc5ab811126a3":"4RbSw","552145ba71b64707":"fSpDV"}],"fSpDV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.x = x;
exports.y = y;
function x(p) {
    return p[0];
}
function y(p) {
    return p[1];
}

},{}],"hOGU6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _array = _interopRequireDefault(require("b67e0ae37b57d123"));
var _constant = _interopRequireDefault(require("37710d2df9ce0c7a"));
var _descending = _interopRequireDefault(require("a28172d9eab0febf"));
var _identity = _interopRequireDefault(require("e5c1f58030d4bf4f"));
var _math = require("496c2d9cd8d2f75c");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default() {
    var value = _identity.default, sortValues = _descending.default, sort = null, startAngle = (0, _constant.default)(0), endAngle = (0, _constant.default)(_math.tau), padAngle = (0, _constant.default)(0);
    function pie(data) {
        var i, n = (data = (0, _array.default)(data)).length, j, k, sum = 0, index = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
        for(i = 0; i < n; ++i)if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) sum += v;
         // Optionally sort the arcs by previously-computed values or by data.
        if (sortValues != null) index.sort(function(i, j) {
            return sortValues(arcs[i], arcs[j]);
        });
        else if (sort != null) index.sort(function(i, j) {
            return sort(data[i], data[j]);
        }); // Compute the arcs! They are stored in the original data's order.
        for(i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1)j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
        };
        return arcs;
    }
    pie.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
    };
    pie.sortValues = function(_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
    };
    pie.sort = function(_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
    };
    pie.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
    };
    pie.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
    };
    pie.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
    };
    return pie;
}

},{"b67e0ae37b57d123":"7rPZm","37710d2df9ce0c7a":"kn48N","a28172d9eab0febf":"auVKI","e5c1f58030d4bf4f":"7t94G","496c2d9cd8d2f75c":"hgBod"}],"auVKI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

},{}],"7t94G":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(d) {
    return d;
}

},{}],"bn94D":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _radial = _interopRequireWildcard(require("d5f2199be7e4428"));
var _area = _interopRequireDefault(require("9fd6b69a882b62b9"));
var _lineRadial = require("4727a97bf0f56e5e");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _default() {
    var a = (0, _area.default)().curve(_radial.curveRadialLinear), c = a.curve, x0 = a.lineX0, x1 = a.lineX1, y0 = a.lineY0, y1 = a.lineY1;
    a.angle = a.x, delete a.x;
    a.startAngle = a.x0, delete a.x0;
    a.endAngle = a.x1, delete a.x1;
    a.radius = a.y, delete a.y;
    a.innerRadius = a.y0, delete a.y0;
    a.outerRadius = a.y1, delete a.y1;
    a.lineStartAngle = function() {
        return (0, _lineRadial.lineRadial)(x0());
    }, delete a.lineX0;
    a.lineEndAngle = function() {
        return (0, _lineRadial.lineRadial)(x1());
    }, delete a.lineX1;
    a.lineInnerRadius = function() {
        return (0, _lineRadial.lineRadial)(y0());
    }, delete a.lineY0;
    a.lineOuterRadius = function() {
        return (0, _lineRadial.lineRadial)(y1());
    }, delete a.lineY1;
    a.curve = function(_) {
        return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
    };
    return a;
}

},{"d5f2199be7e4428":"hcR2H","9fd6b69a882b62b9":"4qSII","4727a97bf0f56e5e":"cYimI"}],"hcR2H":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.curveRadialLinear = void 0;
exports.default = curveRadial;
var _linear = _interopRequireDefault(require("fcbc4ed98c33ce63"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;
function Radial(curve) {
    this._curve = curve;
}
Radial.prototype = {
    areaStart: function() {
        this._curve.areaStart();
    },
    areaEnd: function() {
        this._curve.areaEnd();
    },
    lineStart: function() {
        this._curve.lineStart();
    },
    lineEnd: function() {
        this._curve.lineEnd();
    },
    point: function(a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
    }
};
function curveRadial(curve) {
    function radial(context) {
        return new Radial(curve(context));
    }
    radial._curve = curve;
    return radial;
}

},{"fcbc4ed98c33ce63":"4RbSw"}],"cYimI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.lineRadial = lineRadial;
var _radial = _interopRequireWildcard(require("467073d1fc4d6144"));
var _line = _interopRequireDefault(require("b165a0178810938"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function lineRadial(l) {
    var c = l.curve;
    l.angle = l.x, delete l.x;
    l.radius = l.y, delete l.y;
    l.curve = function(_) {
        return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
    };
    return l;
}
function _default() {
    return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}

},{"467073d1fc4d6144":"hcR2H","b165a0178810938":"69aLj"}],"nj7BG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(x, y) {
    return [
        (y = +y) * Math.cos(x -= Math.PI / 2),
        y * Math.sin(x)
    ];
}

},{}],"8kQy2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.link = link;
exports.linkHorizontal = linkHorizontal;
exports.linkRadial = linkRadial;
exports.linkVertical = linkVertical;
var _index = require("ae6bae8009c48266");
var _array = require("3bac10be5f465a96");
var _constant = _interopRequireDefault(require("35364e9c346d01b7"));
var _bump = require("ce2d1a2cbddf3802");
var _point = require("be0eb0a3ebd67c05");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function linkSource(d) {
    return d.source;
}
function linkTarget(d) {
    return d.target;
}
function link(curve) {
    let source = linkSource;
    let target = linkTarget;
    let x = _point.x;
    let y = _point.y;
    let context = null;
    let output = null;
    function link() {
        let buffer;
        const argv = _array.slice.call(arguments);
        const s = source.apply(this, argv);
        const t = target.apply(this, argv);
        if (context == null) output = curve(buffer = (0, _index.path)());
        output.lineStart();
        argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));
        argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));
        output.lineEnd();
        if (buffer) return output = null, buffer + "" || null;
    }
    link.source = function(_) {
        return arguments.length ? (source = _, link) : source;
    };
    link.target = function(_) {
        return arguments.length ? (target = _, link) : target;
    };
    link.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
    };
    link.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
    };
    link.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;
    };
    return link;
}
function linkHorizontal() {
    return link(_bump.bumpX);
}
function linkVertical() {
    return link(_bump.bumpY);
}
function linkRadial() {
    const l = link(_bump.bumpRadial);
    l.angle = l.x, delete l.x;
    l.radius = l.y, delete l.y;
    return l;
}

},{"ae6bae8009c48266":"6tKHf","3bac10be5f465a96":"7rPZm","35364e9c346d01b7":"kn48N","ce2d1a2cbddf3802":"8VoBu","be0eb0a3ebd67c05":"fSpDV"}],"8VoBu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bumpRadial = bumpRadial;
exports.bumpX = bumpX;
exports.bumpY = bumpY;
var _pointRadial = _interopRequireDefault(require("b619d14f2ed97e73"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
class Bump {
    constructor(context, x){
        this._context = context;
        this._x = x;
    }
    areaStart() {
        this._line = 0;
    }
    areaEnd() {
        this._line = NaN;
    }
    lineStart() {
        this._point = 0;
    }
    lineEnd() {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    }
    point(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                if (this._line) this._context.lineTo(x, y);
                else this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
            // falls through
            default:
                if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);
                else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
                break;
        }
        this._x0 = x, this._y0 = y;
    }
}
class BumpRadial {
    constructor(context){
        this._context = context;
    }
    lineStart() {
        this._point = 0;
    }
    lineEnd() {}
    point(x, y) {
        x = +x, y = +y;
        if (this._point++ === 0) this._x0 = x, this._y0 = y;
        else {
            const p0 = (0, _pointRadial.default)(this._x0, this._y0);
            const p1 = (0, _pointRadial.default)(this._x0, this._y0 = (this._y0 + y) / 2);
            const p2 = (0, _pointRadial.default)(x, this._y0);
            const p3 = (0, _pointRadial.default)(x, y);
            this._context.moveTo(...p0);
            this._context.bezierCurveTo(...p1, ...p2, ...p3);
        }
    }
}
function bumpX(context) {
    return new Bump(context, true);
}
function bumpY(context) {
    return new Bump(context, false);
}
function bumpRadial(context) {
    return new BumpRadial(context);
}

},{"b619d14f2ed97e73":"nj7BG"}],"7Q8Nu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Symbol;
exports.symbolsStroke = exports.symbolsFill = void 0;
var _index = require("ed221954c3cadd8c");
var _constant = _interopRequireDefault(require("a318f579ae289bb4"));
var _asterisk = _interopRequireDefault(require("4f836b828c4aee2"));
var _circle = _interopRequireDefault(require("a3d59dddf62412f7"));
var _cross = _interopRequireDefault(require("b51ad47cf070e0d4"));
var _diamond = _interopRequireDefault(require("a8375ed091b8d08a"));
var _diamond2 = _interopRequireDefault(require("7c0f9eaf6c7614f0"));
var _plus = _interopRequireDefault(require("459ff396a52f1e2d"));
var _square = _interopRequireDefault(require("174dac6271fe5f76"));
var _square2 = _interopRequireDefault(require("444710f2180a0669"));
var _star = _interopRequireDefault(require("1f31f8ec57f98fa6"));
var _triangle = _interopRequireDefault(require("f4d77aaf9ffb5dbd"));
var _triangle2 = _interopRequireDefault(require("80c17c4ac5160020"));
var _wye = _interopRequireDefault(require("2da15e99e0fdb804"));
var _x = _interopRequireDefault(require("67fc72d8d3ef7cbf"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// These symbols are designed to be filled.
const symbolsFill = [
    _circle.default,
    _cross.default,
    _diamond.default,
    _square.default,
    _star.default,
    _triangle.default,
    _wye.default
]; // These symbols are designed to be stroked (with a width of 1.5px and round caps).
exports.symbolsFill = symbolsFill;
const symbolsStroke = [
    _circle.default,
    _plus.default,
    _x.default,
    _triangle2.default,
    _asterisk.default,
    _square2.default,
    _diamond2.default
];
exports.symbolsStroke = symbolsStroke;
function Symbol(type, size) {
    let context = null;
    type = typeof type === "function" ? type : (0, _constant.default)(type || _circle.default);
    size = typeof size === "function" ? size : (0, _constant.default)(size === undefined ? 64 : +size);
    function symbol() {
        let buffer;
        if (!context) context = buffer = (0, _index.path)();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer) return context = null, buffer + "" || null;
    }
    symbol.type = function(_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
    };
    symbol.size = function(_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
    };
    symbol.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
    };
    return symbol;
}

},{"ed221954c3cadd8c":"6tKHf","a318f579ae289bb4":"kn48N","4f836b828c4aee2":"2X9Db","a3d59dddf62412f7":"56cmE","b51ad47cf070e0d4":"biOl5","a8375ed091b8d08a":"c3OBX","7c0f9eaf6c7614f0":"6hbZh","459ff396a52f1e2d":"9gtds","174dac6271fe5f76":"2aq0z","444710f2180a0669":"gSPwv","1f31f8ec57f98fa6":"5PFzP","f4d77aaf9ffb5dbd":"8FPPT","80c17c4ac5160020":"2ko5s","2da15e99e0fdb804":"fx65J","67fc72d8d3ef7cbf":"2qDzt"}],"2X9Db":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("48d3e9f7df1a172c");
const sqrt3 = (0, _math.sqrt)(3);
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size + (0, _math.min)(size / 28, 0.75)) * 0.59436;
        const t = r / 2;
        const u = t * sqrt3;
        context.moveTo(0, r);
        context.lineTo(0, -r);
        context.moveTo(-u, -t);
        context.lineTo(u, t);
        context.moveTo(-u, t);
        context.lineTo(u, -t);
    }
};
exports.default = _default;

},{"48d3e9f7df1a172c":"hgBod"}],"56cmE":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("8ed2e3009b93c9bf");
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size / _math.pi);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, _math.tau);
    }
};
exports.default = _default;

},{"8ed2e3009b93c9bf":"hgBod"}],"biOl5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("69815bae4b0787ae");
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
    }
};
exports.default = _default;

},{"69815bae4b0787ae":"hgBod"}],"c3OBX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("856b74e87be6d6a0");
const tan30 = (0, _math.sqrt)(1 / 3);
const tan30_2 = tan30 * 2;
var _default = {
    draw (context, size) {
        const y = (0, _math.sqrt)(size / tan30_2);
        const x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
    }
};
exports.default = _default;

},{"856b74e87be6d6a0":"hgBod"}],"6hbZh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("c8441956b7ca25b0");
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size) * 0.62625;
        context.moveTo(0, -r);
        context.lineTo(r, 0);
        context.lineTo(0, r);
        context.lineTo(-r, 0);
        context.closePath();
    }
};
exports.default = _default;

},{"c8441956b7ca25b0":"hgBod"}],"9gtds":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("a4abcfa52e8b0f37");
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size - (0, _math.min)(size / 7, 2)) * 0.87559;
        context.moveTo(-r, 0);
        context.lineTo(r, 0);
        context.moveTo(0, r);
        context.lineTo(0, -r);
    }
};
exports.default = _default;

},{"a4abcfa52e8b0f37":"hgBod"}],"2aq0z":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("e72da19a42674d7c");
var _default = {
    draw (context, size) {
        const w = (0, _math.sqrt)(size);
        const x = -w / 2;
        context.rect(x, x, w, w);
    }
};
exports.default = _default;

},{"e72da19a42674d7c":"hgBod"}],"gSPwv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("1c9d5bda227640bf");
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size) * 0.4431;
        context.moveTo(r, r);
        context.lineTo(r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, r);
        context.closePath();
    }
};
exports.default = _default;

},{"1c9d5bda227640bf":"hgBod"}],"5PFzP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("751667ddf3bfbdc1");
const ka = 0.89081309152928522810;
const kr = (0, _math.sin)(_math.pi / 10) / (0, _math.sin)(7 * _math.pi / 10);
const kx = (0, _math.sin)(_math.tau / 10) * kr;
const ky = -(0, _math.cos)(_math.tau / 10) * kr;
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size * ka);
        const x = kx * r;
        const y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for(let i = 1; i < 5; ++i){
            const a = _math.tau * i / 5;
            const c = (0, _math.cos)(a);
            const s = (0, _math.sin)(a);
            context.lineTo(s * r, -c * r);
            context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
    }
};
exports.default = _default;

},{"751667ddf3bfbdc1":"hgBod"}],"8FPPT":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("7bc957b4c8d38817");
const sqrt3 = (0, _math.sqrt)(3);
var _default = {
    draw (context, size) {
        const y = -(0, _math.sqrt)(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
    }
};
exports.default = _default;

},{"7bc957b4c8d38817":"hgBod"}],"2ko5s":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("7e4bb208ad9cf3ec");
const sqrt3 = (0, _math.sqrt)(3);
var _default = {
    draw (context, size) {
        const s = (0, _math.sqrt)(size) * 0.6824;
        const t = s / 2;
        const u = s * sqrt3 / 2; // cos(Math.PI / 6)
        context.moveTo(0, -s);
        context.lineTo(u, t);
        context.lineTo(-u, t);
        context.closePath();
    }
};
exports.default = _default;

},{"7e4bb208ad9cf3ec":"hgBod"}],"fx65J":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("812e1ff9b9a68f0d");
const c = -0.5;
const s = (0, _math.sqrt)(3) / 2;
const k = 1 / (0, _math.sqrt)(12);
const a = (k / 2 + 1) * 3;
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size / a);
        const x0 = r / 2, y0 = r * k;
        const x1 = x0, y1 = r * k + r;
        const x2 = -x1, y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
        context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
        context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
        context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
        context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
        context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
        context.closePath();
    }
};
exports.default = _default;

},{"812e1ff9b9a68f0d":"hgBod"}],"2qDzt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _math = require("6e8e98e197afefc3");
var _default = {
    draw (context, size) {
        const r = (0, _math.sqrt)(size - (0, _math.min)(size / 6, 1.7)) * 0.6189;
        context.moveTo(-r, -r);
        context.lineTo(r, r);
        context.moveTo(-r, r);
        context.lineTo(r, -r);
    }
};
exports.default = _default;

},{"6e8e98e197afefc3":"hgBod"}],"faChm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _noop = _interopRequireDefault(require("8620520ba80e006a"));
var _basis = require("87413069402f4f60");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function BasisClosed(context) {
    this._context = context;
}
BasisClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 1:
                this._context.moveTo(this._x2, this._y2);
                this._context.closePath();
                break;
            case 2:
                this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
                this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
                this._context.closePath();
                break;
            case 3:
                this.point(this._x2, this._y2);
                this.point(this._x3, this._y3);
                this.point(this._x4, this._y4);
                break;
        }
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._x2 = x, this._y2 = y;
                break;
            case 1:
                this._point = 2;
                this._x3 = x, this._y3 = y;
                break;
            case 2:
                this._point = 3;
                this._x4 = x, this._y4 = y;
                this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);
                break;
            default:
                (0, _basis.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
    }
};
function _default(context) {
    return new BasisClosed(context);
}

},{"8620520ba80e006a":"1soRz","87413069402f4f60":"iLbOi"}],"1soRz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default() {}

},{}],"iLbOi":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Basis = Basis;
exports.default = _default;
exports.point = point;
function point(that, x, y) {
    that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}
function Basis(context) {
    this._context = context;
}
Basis.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 3:
                point(this, this._x1, this._y1);
            // falls through
            case 2:
                this._context.lineTo(this._x1, this._y1);
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
            // falls through
            default:
                point(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
    }
};
function _default(context) {
    return new Basis(context);
}

},{}],"iiHHC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _basis = require("580a0e4914be358e");
function BasisOpen(context) {
    this._context = context;
}
BasisOpen.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6;
                this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
                break;
            case 3:
                this._point = 4;
            // falls through
            default:
                (0, _basis.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
    }
};
function _default(context) {
    return new BasisOpen(context);
}

},{"580a0e4914be358e":"iLbOi"}],"bOnQe":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _basis = require("202e66c93596d8c0");
function Bundle(context, beta) {
    this._basis = new _basis.Basis(context);
    this._beta = beta;
}
Bundle.prototype = {
    lineStart: function() {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
    },
    lineEnd: function() {
        var x = this._x, y = this._y, j = x.length - 1;
        if (j > 0) {
            var x0 = x[0], y0 = y[0], dx = x[j] - x0, dy = y[j] - y0, i = -1, t;
            while(++i <= j){
                t = i / j;
                this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
            }
        }
        this._x = this._y = null;
        this._basis.lineEnd();
    },
    point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
    }
};
var _default = function custom(beta) {
    function bundle(context) {
        return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
    }
    bundle.beta = function(beta) {
        return custom(+beta);
    };
    return bundle;
}(0.85);
exports.default = _default;

},{"202e66c93596d8c0":"iLbOi"}],"iZXAx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;
var _noop = _interopRequireDefault(require("3ac7c5e1248dc9ae"));
var _cardinal = require("cfbcda1bc3207e7e");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function CardinalClosed(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 1:
                this._context.moveTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 2:
                this._context.lineTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 3:
                this.point(this._x3, this._y3);
                this.point(this._x4, this._y4);
                this.point(this._x5, this._y5);
                break;
        }
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._x3 = x, this._y3 = y;
                break;
            case 1:
                this._point = 2;
                this._context.moveTo(this._x4 = x, this._y4 = y);
                break;
            case 2:
                this._point = 3;
                this._x5 = x, this._y5 = y;
                break;
            default:
                (0, _cardinal.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = function custom(tension) {
    function cardinal(context) {
        return new CardinalClosed(context, tension);
    }
    cardinal.tension = function(tension) {
        return custom(+tension);
    };
    return cardinal;
}(0);
exports.default = _default;

},{"3ac7c5e1248dc9ae":"1soRz","cfbcda1bc3207e7e":"fvuHZ"}],"fvuHZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cardinal = Cardinal;
exports.default = void 0;
exports.point = point;
function point(that, x, y) {
    that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}
function Cardinal(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 2:
                this._context.lineTo(this._x2, this._y2);
                break;
            case 3:
                point(this, this._x1, this._y1);
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                this._x1 = x, this._y1 = y;
                break;
            case 2:
                this._point = 3;
            // falls through
            default:
                point(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = function custom(tension) {
    function cardinal(context) {
        return new Cardinal(context, tension);
    }
    cardinal.tension = function(tension) {
        return custom(+tension);
    };
    return cardinal;
}(0);
exports.default = _default;

},{}],"ltjJE":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;
var _cardinal = require("cf4363a3b836d23a");
function CardinalOpen(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
                break;
            case 3:
                this._point = 4;
            // falls through
            default:
                (0, _cardinal.point)(this, x, y);
                break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = function custom(tension) {
    function cardinal(context) {
        return new CardinalOpen(context, tension);
    }
    cardinal.tension = function(tension) {
        return custom(+tension);
    };
    return cardinal;
}(0);
exports.default = _default;

},{"cf4363a3b836d23a":"fvuHZ"}],"9ZXsY":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _cardinalClosed = require("f5ae01d2345d4943");
var _noop = _interopRequireDefault(require("82484b434a1d31db"));
var _catmullRom = require("3bd3d5af820e50ff");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function CatmullRomClosed(context, alpha) {
    this._context = context;
    this._alpha = alpha;
}
CatmullRomClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 1:
                this._context.moveTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 2:
                this._context.lineTo(this._x3, this._y3);
                this._context.closePath();
                break;
            case 3:
                this.point(this._x3, this._y3);
                this.point(this._x4, this._y4);
                this.point(this._x5, this._y5);
                break;
        }
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
            var x23 = this._x2 - x, y23 = this._y2 - y;
            this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch(this._point){
            case 0:
                this._point = 1;
                this._x3 = x, this._y3 = y;
                break;
            case 1:
                this._point = 2;
                this._context.moveTo(this._x4 = x, this._y4 = y);
                break;
            case 2:
                this._point = 3;
                this._x5 = x, this._y5 = y;
                break;
            default:
                (0, _catmullRom.point)(this, x, y);
                break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = function custom(alpha) {
    function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
    }
    catmullRom.alpha = function(alpha) {
        return custom(+alpha);
    };
    return catmullRom;
}(0.5);
exports.default = _default;

},{"f5ae01d2345d4943":"iZXAx","82484b434a1d31db":"1soRz","3bd3d5af820e50ff":"btXN8"}],"btXN8":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.point = point;
var _math = require("d464c344292067de");
var _cardinal = require("2f2af409b067cecd");
function point(that, x, y) {
    var x1 = that._x1, y1 = that._y1, x2 = that._x2, y2 = that._y2;
    if (that._l01_a > _math.epsilon) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
    }
    if (that._l23_a > _math.epsilon) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
    }
    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}
function CatmullRom(context, alpha) {
    this._context = context;
    this._alpha = alpha;
}
CatmullRom.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 2:
                this._context.lineTo(this._x2, this._y2);
                break;
            case 3:
                this.point(this._x2, this._y2);
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
            var x23 = this._x2 - x, y23 = this._y2 - y;
            this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
            // falls through
            default:
                point(this, x, y);
                break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = function custom(alpha) {
    function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
    }
    catmullRom.alpha = function(alpha) {
        return custom(+alpha);
    };
    return catmullRom;
}(0.5);
exports.default = _default;

},{"d464c344292067de":"hgBod","2f2af409b067cecd":"fvuHZ"}],"ZLEyv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _cardinalOpen = require("97b1c5692429330d");
var _catmullRom = require("9847de9b9e7ea36b");
function CatmullRomOpen(context, alpha) {
    this._context = context;
    this._alpha = alpha;
}
CatmullRomOpen.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
            var x23 = this._x2 - x, y23 = this._y2 - y;
            this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch(this._point){
            case 0:
                this._point = 1;
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
                break;
            case 3:
                this._point = 4;
            // falls through
            default:
                (0, _catmullRom.point)(this, x, y);
                break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
    }
};
var _default = function custom(alpha) {
    function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
    }
    catmullRom.alpha = function(alpha) {
        return custom(+alpha);
    };
    return catmullRom;
}(0.5);
exports.default = _default;

},{"97b1c5692429330d":"ltjJE","9847de9b9e7ea36b":"btXN8"}],"jlynz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _noop = _interopRequireDefault(require("bb3255f3276eba36"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function LinearClosed(context) {
    this._context = context;
}
LinearClosed.prototype = {
    areaStart: _noop.default,
    areaEnd: _noop.default,
    lineStart: function() {
        this._point = 0;
    },
    lineEnd: function() {
        if (this._point) this._context.closePath();
    },
    point: function(x, y) {
        x = +x, y = +y;
        if (this._point) this._context.lineTo(x, y);
        else this._point = 1, this._context.moveTo(x, y);
    }
};
function _default(context) {
    return new LinearClosed(context);
}

},{"bb3255f3276eba36":"1soRz"}],"kq4Ha":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;
function sign(x) {
    return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
    var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.
function slope2(that, t) {
    var h = that._x1 - that._x0;
    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function point(that, t0, t1) {
    var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}
function MonotoneX(context) {
    this._context = context;
}
MonotoneX.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        switch(this._point){
            case 2:
                this._context.lineTo(this._x1, this._y1);
                break;
            case 3:
                point(this, this._t0, slope2(this, this._t0));
                break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
    },
    point: function(x, y) {
        var t1 = NaN;
        x = +x, y = +y;
        if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
                break;
            case 2:
                this._point = 3;
                point(this, slope2(this, t1 = slope3(this, x, y)), t1);
                break;
            default:
                point(this, this._t0, t1 = slope3(this, x, y));
                break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
    }
};
function MonotoneY(context) {
    this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
    MonotoneX.prototype.point.call(this, y, x);
};
function ReflectContext(context) {
    this._context = context;
}
ReflectContext.prototype = {
    moveTo: function(x, y) {
        this._context.moveTo(y, x);
    },
    closePath: function() {
        this._context.closePath();
    },
    lineTo: function(x, y) {
        this._context.lineTo(y, x);
    },
    bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
    }
};
function monotoneX(context) {
    return new MonotoneX(context);
}
function monotoneY(context) {
    return new MonotoneY(context);
}

},{}],"55mEH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function Natural(context) {
    this._context = context;
}
Natural.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x = [];
        this._y = [];
    },
    lineEnd: function() {
        var x = this._x, y = this._y, n = x.length;
        if (n) {
            this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
            if (n === 2) this._context.lineTo(x[1], y[1]);
            else {
                var px = controlPoints(x), py = controlPoints(y);
                for(var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1)this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
        }
        if (this._line || this._line !== 0 && n === 1) this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
    },
    point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
    }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
    var i, n = x.length - 1, m, a = new Array(n), b = new Array(n), r = new Array(n);
    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
    for(i = 1; i < n - 1; ++i)a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
    for(i = 1; i < n; ++i)m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
    a[n - 1] = r[n - 1] / b[n - 1];
    for(i = n - 2; i >= 0; --i)a[i] = (r[i] - a[i + 1]) / b[i];
    b[n - 1] = (x[n] + a[n - 1]) / 2;
    for(i = 0; i < n - 1; ++i)b[i] = 2 * x[i + 1] - a[i + 1];
    return [
        a,
        b
    ];
}
function _default(context) {
    return new Natural(context);
}

},{}],"6vGLt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.stepAfter = stepAfter;
exports.stepBefore = stepBefore;
function Step(context, t) {
    this._context = context;
    this._t = t;
}
Step.prototype = {
    areaStart: function() {
        this._line = 0;
    },
    areaEnd: function() {
        this._line = NaN;
    },
    lineStart: function() {
        this._x = this._y = NaN;
        this._point = 0;
    },
    lineEnd: function() {
        if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
    },
    point: function(x, y) {
        x = +x, y = +y;
        switch(this._point){
            case 0:
                this._point = 1;
                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
                break;
            case 1:
                this._point = 2;
            // falls through
            default:
                if (this._t <= 0) {
                    this._context.lineTo(this._x, y);
                    this._context.lineTo(x, y);
                } else {
                    var x1 = this._x * (1 - this._t) + x * this._t;
                    this._context.lineTo(x1, this._y);
                    this._context.lineTo(x1, y);
                }
                break;
        }
        this._x = x, this._y = y;
    }
};
function _default(context) {
    return new Step(context, 0.5);
}
function stepBefore(context) {
    return new Step(context, 0);
}
function stepAfter(context) {
    return new Step(context, 1);
}

},{}],"2onme":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _array = _interopRequireDefault(require("8b3b605fa9e4fac5"));
var _constant = _interopRequireDefault(require("e744701481d85f49"));
var _none = _interopRequireDefault(require("e54b6b0ae39944a2"));
var _none2 = _interopRequireDefault(require("e9814568a9c80598"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function stackValue(d, key) {
    return d[key];
}
function stackSeries(key) {
    const series = [];
    series.key = key;
    return series;
}
function _default() {
    var keys = (0, _constant.default)([]), order = _none2.default, offset = _none.default, value = stackValue;
    function stack(data) {
        var sz = Array.from(keys.apply(this, arguments), stackSeries), i, n = sz.length, j = -1, oz;
        for (const d of data)for(i = 0, ++j; i < n; ++i)(sz[i][j] = [
            0,
            +value(d, sz[i].key, j, data)
        ]).data = d;
        for(i = 0, oz = (0, _array.default)(order(sz)); i < n; ++i)sz[oz[i]].index = i;
        offset(sz, oz);
        return sz;
    }
    stack.keys = function(_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : keys;
    };
    stack.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
    };
    stack.order = function(_) {
        return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : order;
    };
    stack.offset = function(_) {
        return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
    };
    return stack;
}

},{"8b3b605fa9e4fac5":"7rPZm","e744701481d85f49":"kn48N","e54b6b0ae39944a2":"g0HLU","e9814568a9c80598":"iJxDC"}],"g0HLU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(series, order) {
    if (!((n = series.length) > 1)) return;
    for(var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i){
        s0 = s1, s1 = series[order[i]];
        for(j = 0; j < m; ++j)s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
}

},{}],"iJxDC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(series) {
    var n = series.length, o = new Array(n);
    while(--n >= 0)o[n] = n;
    return o;
}

},{}],"jfxeB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("d8cdcff221711407"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series, order) {
    if (!((n = series.length) > 0)) return;
    for(var i, n, j = 0, m = series[0].length, y; j < m; ++j){
        for(y = i = 0; i < n; ++i)y += series[i][j][1] || 0;
        if (y) for(i = 0; i < n; ++i)series[i][j][1] /= y;
    }
    (0, _none.default)(series, order);
}

},{"d8cdcff221711407":"g0HLU"}],"bCAnS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(series, order) {
    if (!((n = series.length) > 0)) return;
    for(var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j)for(yp = yn = 0, i = 0; i < n; ++i){
        if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) d[0] = yp, d[1] = yp += dy;
        else if (dy < 0) d[1] = yn, d[0] = yn += dy;
        else d[0] = 0, d[1] = dy;
    }
}

},{}],"6GF1k":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("af9c5fa37c1b1d9e"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series, order) {
    if (!((n = series.length) > 0)) return;
    for(var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j){
        for(var i = 0, y = 0; i < n; ++i)y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
    }
    (0, _none.default)(series, order);
}

},{"af9c5fa37c1b1d9e":"g0HLU"}],"2gxnP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("56eb12e1b2174aaf"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series, order) {
    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
    for(var y = 0, j = 1, s0, m, n; j < m; ++j){
        for(var i = 0, s1 = 0, s2 = 0; i < n; ++i){
            var si = series[order[i]], sij0 = si[j][1] || 0, sij1 = si[j - 1][1] || 0, s3 = (sij0 - sij1) / 2;
            for(var k = 0; k < i; ++k){
                var sk = series[order[k]], skj0 = sk[j][1] || 0, skj1 = sk[j - 1][1] || 0;
                s3 += skj0 - skj1;
            }
            s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1) y -= s2 / s1;
    }
    s0[j - 1][1] += s0[j - 1][0] = y;
    (0, _none.default)(series, order);
}

},{"56eb12e1b2174aaf":"g0HLU"}],"8lIgM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("4494c675f3e20319"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series) {
    var peaks = series.map(peak);
    return (0, _none.default)(series).sort(function(a, b) {
        return peaks[a] - peaks[b];
    });
}
function peak(series) {
    var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
    while(++i < n)if ((vi = +series[i][1]) > vj) vj = vi, j = i;
    return j;
}

},{"4494c675f3e20319":"iJxDC"}],"e9mzm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.sum = sum;
var _none = _interopRequireDefault(require("4a7d728f9a184a25"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series) {
    var sums = series.map(sum);
    return (0, _none.default)(series).sort(function(a, b) {
        return sums[a] - sums[b];
    });
}
function sum(series) {
    var s = 0, i = -1, n = series.length, v;
    while(++i < n)if (v = +series[i][1]) s += v;
    return s;
}

},{"4a7d728f9a184a25":"iJxDC"}],"2QtdT":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _ascending = _interopRequireDefault(require("d39a3ba1232418c4"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series) {
    return (0, _ascending.default)(series).reverse();
}

},{"d39a3ba1232418c4":"e9mzm"}],"ch8eA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _appearance = _interopRequireDefault(require("7e770dfcdf2ff59a"));
var _ascending = require("12f0fe8581e206");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series) {
    var n = series.length, i, j, sums = series.map(_ascending.sum), order = (0, _appearance.default)(series), top = 0, bottom = 0, tops = [], bottoms = [];
    for(i = 0; i < n; ++i){
        j = order[i];
        if (top < bottom) {
            top += sums[j];
            tops.push(j);
        } else {
            bottom += sums[j];
            bottoms.push(j);
        }
    }
    return bottoms.reverse().concat(tops);
}

},{"7e770dfcdf2ff59a":"8lIgM","12f0fe8581e206":"e9mzm"}],"1eQrS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _none = _interopRequireDefault(require("175f4f386d8ceefb"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(series) {
    return (0, _none.default)(series).reverse();
}

},{"175f4f386d8ceefb":"iJxDC"}],"45HUG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * This is configuration option that decides how to filter for unique values only:
 *
 * - `false` means "no filter"
 * - `true` means "use recharts default filter"
 * - function means "use return of this function as the default key"
 */ parcelHelpers.export(exports, "getUniqPayload", ()=>getUniqPayload);
var _uniqBy = require("lodash/uniqBy");
var _uniqByDefault = parcelHelpers.interopDefault(_uniqBy);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
function getUniqPayload(payload, option, defaultUniqBy) {
    if (option === true) return (0, _uniqByDefault.default)(payload, defaultUniqBy);
    if ((0, _isFunctionDefault.default)(option)) return (0, _uniqByDefault.default)(payload, option);
    return payload;
}

},{"lodash/uniqBy":"gqBoT","lodash/isFunction":"6aeG3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gqBoT":[function(require,module,exports,__globalThis) {
var baseIteratee = require("ce9604aad32f97ab"), baseUniq = require("9fbd8e46e11f49c4");
/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */ function uniqBy(array, iteratee) {
    return array && array.length ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
}
module.exports = uniqBy;

},{"ce9604aad32f97ab":"e6QHA","9fbd8e46e11f49c4":"2uaYl"}],"e6QHA":[function(require,module,exports,__globalThis) {
var baseMatches = require("30aeab910fab669"), baseMatchesProperty = require("4f010869f7b63154"), identity = require("28f06147d1eb9502"), isArray = require("3c56f88c4debf449"), property = require("aee920e0ef5bf111");
/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */ function baseIteratee(value) {
    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
    if (typeof value == 'function') return value;
    if (value == null) return identity;
    if (typeof value == 'object') return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
    return property(value);
}
module.exports = baseIteratee;

},{"30aeab910fab669":"fJ5xl","4f010869f7b63154":"ae8Hw","28f06147d1eb9502":"kD3aq","3c56f88c4debf449":"gqOzR","aee920e0ef5bf111":"a3BjP"}],"fJ5xl":[function(require,module,exports,__globalThis) {
var baseIsMatch = require("e45515c903dc8f87"), getMatchData = require("89e9034a8071e297"), matchesStrictComparable = require("782598b150762386");
/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */ function baseMatches(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
    return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
    };
}
module.exports = baseMatches;

},{"e45515c903dc8f87":"ek6e3","89e9034a8071e297":"l64wq","782598b150762386":"16Lnl"}],"ek6e3":[function(require,module,exports,__globalThis) {
var Stack = require("ae43062900bf7e4d"), baseIsEqual = require("9003c0cc8ac007b6");
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */ function baseIsMatch(object, source, matchData, customizer) {
    var index = matchData.length, length = index, noCustomizer = !customizer;
    if (object == null) return !length;
    object = Object(object);
    while(index--){
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
    }
    while(++index < length){
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
            if (objValue === undefined && !(key in object)) return false;
        } else {
            var stack = new Stack;
            if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
            if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
        }
    }
    return true;
}
module.exports = baseIsMatch;

},{"ae43062900bf7e4d":"6gi9h","9003c0cc8ac007b6":"eRGen"}],"6gi9h":[function(require,module,exports,__globalThis) {
var ListCache = require("cfb30a39eead9e7e"), stackClear = require("ceda2a63c77c915"), stackDelete = require("91ee1b348d9d7172"), stackGet = require("3fe28318f65b9332"), stackHas = require("724ca4def8b84e06"), stackSet = require("e9ceacb40d9582bd");
/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
}
// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
module.exports = Stack;

},{"cfb30a39eead9e7e":"l16M9","ceda2a63c77c915":"7REZ5","91ee1b348d9d7172":"iX18s","3fe28318f65b9332":"6IOGn","724ca4def8b84e06":"dJfnV","e9ceacb40d9582bd":"90f9i"}],"7REZ5":[function(require,module,exports,__globalThis) {
var ListCache = require("8a0350213da984ae");
/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */ function stackClear() {
    this.__data__ = new ListCache;
    this.size = 0;
}
module.exports = stackClear;

},{"8a0350213da984ae":"l16M9"}],"iX18s":[function(require,module,exports,__globalThis) {
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function stackDelete(key) {
    var data = this.__data__, result = data['delete'](key);
    this.size = data.size;
    return result;
}
module.exports = stackDelete;

},{}],"6IOGn":[function(require,module,exports,__globalThis) {
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function stackGet(key) {
    return this.__data__.get(key);
}
module.exports = stackGet;

},{}],"dJfnV":[function(require,module,exports,__globalThis) {
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function stackHas(key) {
    return this.__data__.has(key);
}
module.exports = stackHas;

},{}],"90f9i":[function(require,module,exports,__globalThis) {
var ListCache = require("4737651e99b917d2"), Map = require("1494efbafafa9552"), MapCache = require("6049e8027fe9407f");
/** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */ function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([
                key,
                value
            ]);
            this.size = ++data.size;
            return this;
        }
        data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
}
module.exports = stackSet;

},{"4737651e99b917d2":"l16M9","1494efbafafa9552":"hdiCB","6049e8027fe9407f":"hVYkX"}],"eRGen":[function(require,module,exports,__globalThis) {
var baseIsEqualDeep = require("bd1d38ebd4028e5a"), isObjectLike = require("809bbb0c20650dbc");
/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */ function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) return true;
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}
module.exports = baseIsEqual;

},{"bd1d38ebd4028e5a":"x77QA","809bbb0c20650dbc":"KdN4G"}],"x77QA":[function(require,module,exports,__globalThis) {
var Stack = require("60c73bca87468e58"), equalArrays = require("96bc8a1825db53a5"), equalByTag = require("8bdece495e87fb69"), equalObjects = require("bb94920432a68eca"), getTag = require("45495edff98e5837"), isArray = require("18256411ae9e2858"), isBuffer = require("e5ba7abf54247fc5"), isTypedArray = require("50d786bb5c7366af");
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1;
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', objectTag = '[object Object]';
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) return false;
        objIsArr = true;
        objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'), othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
        if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack);
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
    }
    if (!isSameTag) return false;
    stack || (stack = new Stack);
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
module.exports = baseIsEqualDeep;

},{"60c73bca87468e58":"6gi9h","96bc8a1825db53a5":"aFfoS","8bdece495e87fb69":"e8LN1","bb94920432a68eca":"51QMQ","45495edff98e5837":"cBeXf","18256411ae9e2858":"gqOzR","e5ba7abf54247fc5":"dk9te","50d786bb5c7366af":"bdrMm"}],"aFfoS":[function(require,module,exports,__globalThis) {
var SetCache = require("9b110ce138e67ce5"), arraySome = require("1ee20de911db0cb0"), cacheHas = require("defff3d81be91b23");
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
    // Check that cyclic values are equal.
    var arrStacked = stack.get(array);
    var othStacked = stack.get(other);
    if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
    stack.set(array, other);
    stack.set(other, array);
    // Ignore non-index properties.
    while(++index < arrLength){
        var arrValue = array[index], othValue = other[index];
        if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        if (compared !== undefined) {
            if (compared) continue;
            result = false;
            break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
            if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
            })) {
                result = false;
                break;
            }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
        }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
}
module.exports = equalArrays;

},{"9b110ce138e67ce5":"15Cou","1ee20de911db0cb0":"3qKIL","defff3d81be91b23":"9HMVa"}],"15Cou":[function(require,module,exports,__globalThis) {
var MapCache = require("10fe37252553d0bd"), setCacheAdd = require("9a831e81e9a1f98c"), setCacheHas = require("1a2b6c8a7399c39f");
/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */ function SetCache(values) {
    var index = -1, length = values == null ? 0 : values.length;
    this.__data__ = new MapCache;
    while(++index < length)this.add(values[index]);
}
// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
module.exports = SetCache;

},{"10fe37252553d0bd":"hVYkX","9a831e81e9a1f98c":"eW8kY","1a2b6c8a7399c39f":"1y8d5"}],"eW8kY":[function(require,module,exports,__globalThis) {
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */ function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
}
module.exports = setCacheAdd;

},{}],"1y8d5":[function(require,module,exports,__globalThis) {
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */ function setCacheHas(value) {
    return this.__data__.has(value);
}
module.exports = setCacheHas;

},{}],"3qKIL":[function(require,module,exports,__globalThis) {
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */ function arraySome(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length;
    while(++index < length){
        if (predicate(array[index], index, array)) return true;
    }
    return false;
}
module.exports = arraySome;

},{}],"9HMVa":[function(require,module,exports,__globalThis) {
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function cacheHas(cache, key) {
    return cache.has(key);
}
module.exports = cacheHas;

},{}],"e8LN1":[function(require,module,exports,__globalThis) {
var Symbol = require("474c1df4fc722b40"), Uint8Array = require("dbf6aa5033a0f48"), eq = require("539966708f906e61"), equalArrays = require("8142d4017f0a425f"), mapToArray = require("48cddf732eff33ba"), setToArray = require("9dc78b26c5daba20");
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/** `Object#toString` result references. */ var boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', mapTag = '[object Map]', numberTag = '[object Number]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]';
/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch(tag){
        case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
            object = object.buffer;
            other = other.buffer;
        case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
            return true;
        case boolTag:
        case dateTag:
        case numberTag:
            // Coerce booleans to `1` or `0` and dates to milliseconds.
            // Invalid dates are coerced to `NaN`.
            return eq(+object, +other);
        case errorTag:
            return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
            // Coerce regexes to strings and treat strings, primitives and objects,
            // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
            // for more details.
            return object == other + '';
        case mapTag:
            var convert = mapToArray;
        case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) return false;
            // Assume cyclic values are equal.
            var stacked = stack.get(object);
            if (stacked) return stacked == other;
            bitmask |= COMPARE_UNORDERED_FLAG;
            // Recursively compare objects (susceptible to call stack limits).
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;
        case symbolTag:
            if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
    }
    return false;
}
module.exports = equalByTag;

},{"474c1df4fc722b40":"6PrIA","dbf6aa5033a0f48":"eDfTk","539966708f906e61":"2pSvI","8142d4017f0a425f":"aFfoS","48cddf732eff33ba":"lOEME","9dc78b26c5daba20":"5WU0M"}],"eDfTk":[function(require,module,exports,__globalThis) {
var root = require("f755339301d6568f");
/** Built-in value references. */ var Uint8Array = root.Uint8Array;
module.exports = Uint8Array;

},{"f755339301d6568f":"dNdcr"}],"lOEME":[function(require,module,exports,__globalThis) {
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */ function mapToArray(map) {
    var index = -1, result = Array(map.size);
    map.forEach(function(value, key) {
        result[++index] = [
            key,
            value
        ];
    });
    return result;
}
module.exports = mapToArray;

},{}],"5WU0M":[function(require,module,exports,__globalThis) {
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */ function setToArray(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value) {
        result[++index] = value;
    });
    return result;
}
module.exports = setToArray;

},{}],"51QMQ":[function(require,module,exports,__globalThis) {
var getAllKeys = require("b911593d305cf4a2");
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1;
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) return false;
    var index = objLength;
    while(index--){
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
    }
    // Check that cyclic values are equal.
    var objStacked = stack.get(object);
    var othStacked = stack.get(other);
    if (objStacked && othStacked) return objStacked == other && othStacked == object;
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while(++index < objLength){
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
        }
        skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) result = false;
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
}
module.exports = equalObjects;

},{"b911593d305cf4a2":"b4qEN"}],"b4qEN":[function(require,module,exports,__globalThis) {
var baseGetAllKeys = require("c3dbe402f6996a21"), getSymbols = require("aa79b69a13f924db"), keys = require("e3ad83e53433bc8a");
/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */ function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
}
module.exports = getAllKeys;

},{"c3dbe402f6996a21":"7UK2c","aa79b69a13f924db":"bQcuc","e3ad83e53433bc8a":"gS1Pz"}],"7UK2c":[function(require,module,exports,__globalThis) {
var arrayPush = require("abfc70b400ed76c2"), isArray = require("148b85918856c33a");
/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}
module.exports = baseGetAllKeys;

},{"abfc70b400ed76c2":"95jMd","148b85918856c33a":"gqOzR"}],"95jMd":[function(require,module,exports,__globalThis) {
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */ function arrayPush(array, values) {
    var index = -1, length = values.length, offset = array.length;
    while(++index < length)array[offset + index] = values[index];
    return array;
}
module.exports = arrayPush;

},{}],"bQcuc":[function(require,module,exports,__globalThis) {
var arrayFilter = require("7fe025254f0b7e4a"), stubArray = require("6b1c62cea92cdb9");
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Built-in value references. */ var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
    if (object == null) return [];
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
    });
};
module.exports = getSymbols;

},{"7fe025254f0b7e4a":"n21pb","6b1c62cea92cdb9":"2AXEr"}],"n21pb":[function(require,module,exports,__globalThis) {
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */ function arrayFilter(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
    while(++index < length){
        var value = array[index];
        if (predicate(value, index, array)) result[resIndex++] = value;
    }
    return result;
}
module.exports = arrayFilter;

},{}],"2AXEr":[function(require,module,exports,__globalThis) {
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */ function stubArray() {
    return [];
}
module.exports = stubArray;

},{}],"gS1Pz":[function(require,module,exports,__globalThis) {
var arrayLikeKeys = require("4c73ca42c789e5ab"), baseKeys = require("e8453365fdacc8da"), isArrayLike = require("7760b47b02971dfa");
/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */ function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
module.exports = keys;

},{"4c73ca42c789e5ab":"ifjFc","e8453365fdacc8da":"67Pd9","7760b47b02971dfa":"fm2W9"}],"ifjFc":[function(require,module,exports,__globalThis) {
var baseTimes = require("7ed875a0e67be76f"), isArguments = require("9cdb51ffa56f149b"), isArray = require("38cd49f1e493b3d7"), isBuffer = require("b379831fe1873fed"), isIndex = require("f362a34cd8321bb7"), isTypedArray = require("c019db5297494469");
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */ function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
    isIndex(key, length)))) result.push(key);
    return result;
}
module.exports = arrayLikeKeys;

},{"7ed875a0e67be76f":"2M1bT","9cdb51ffa56f149b":"6s2sj","38cd49f1e493b3d7":"gqOzR","b379831fe1873fed":"dk9te","f362a34cd8321bb7":"ixTe5","c019db5297494469":"bdrMm"}],"2M1bT":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */ function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while(++index < n)result[index] = iteratee(index);
    return result;
}
module.exports = baseTimes;

},{}],"6s2sj":[function(require,module,exports,__globalThis) {
var baseIsArguments = require("b56e5b7d86069686"), isObjectLike = require("bead821d6af018b5");
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references. */ var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */ var isArguments = baseIsArguments(function() {
    return arguments;
}()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
module.exports = isArguments;

},{"b56e5b7d86069686":"1MsPT","bead821d6af018b5":"KdN4G"}],"1MsPT":[function(require,module,exports,__globalThis) {
var baseGetTag = require("7e8612a4a451f2cc"), isObjectLike = require("b6cdbe52dcf709f8");
/** `Object#toString` result references. */ var argsTag = '[object Arguments]';
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */ function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
}
module.exports = baseIsArguments;

},{"7e8612a4a451f2cc":"ikiSI","b6cdbe52dcf709f8":"KdN4G"}],"dk9te":[function(require,module,exports,__globalThis) {
var root = require("cef5ec6f0da1ab00"), stubFalse = require("a1e87b138cf75d1d");
/** Detect free variable `exports`. */ var freeExports = exports && !exports.nodeType && exports;
/** Detect free variable `module`. */ var freeModule = freeExports && true && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */ var Buffer = moduleExports ? root.Buffer : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */ var isBuffer = nativeIsBuffer || stubFalse;
module.exports = isBuffer;

},{"cef5ec6f0da1ab00":"dNdcr","a1e87b138cf75d1d":"6TzU4"}],"6TzU4":[function(require,module,exports,__globalThis) {
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */ function stubFalse() {
    return false;
}
module.exports = stubFalse;

},{}],"ixTe5":[function(require,module,exports,__globalThis) {
/** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */ function isIndex(value, length) {
    var type = typeof value;
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}
module.exports = isIndex;

},{}],"bdrMm":[function(require,module,exports,__globalThis) {
var baseIsTypedArray = require("75a26f037e65be61"), baseUnary = require("903f50eb1c16d257"), nodeUtil = require("fa49853a82034c30");
/* Node.js helper references. */ var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
module.exports = isTypedArray;

},{"75a26f037e65be61":"4ybDj","903f50eb1c16d257":"7Icl7","fa49853a82034c30":"asBfS"}],"4ybDj":[function(require,module,exports,__globalThis) {
var baseGetTag = require("67544c3df364a802"), isLength = require("f661b3a120d7a4cb"), isObjectLike = require("cdd86c83797c0618");
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */ function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}
module.exports = baseIsTypedArray;

},{"67544c3df364a802":"ikiSI","f661b3a120d7a4cb":"6pej6","cdd86c83797c0618":"KdN4G"}],"6pej6":[function(require,module,exports,__globalThis) {
/** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */ function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
module.exports = isLength;

},{}],"7Icl7":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */ function baseUnary(func) {
    return function(value) {
        return func(value);
    };
}
module.exports = baseUnary;

},{}],"asBfS":[function(require,module,exports,__globalThis) {
var freeGlobal = require("94e753dfbe54816e");
/** Detect free variable `exports`. */ var freeExports = exports && !exports.nodeType && exports;
/** Detect free variable `module`. */ var freeModule = freeExports && true && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
/** Used to access faster Node.js helpers. */ var nodeUtil = function() {
    try {
        // Use `util.types` for Node.js 10+.
        var types = freeModule && freeModule.require && freeModule.require('util').types;
        if (types) return types;
        // Legacy `process.binding('util')` for Node.js < 10.
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
}();
module.exports = nodeUtil;

},{"94e753dfbe54816e":"7MscQ"}],"67Pd9":[function(require,module,exports,__globalThis) {
var isPrototype = require("7da6298814f9bd95"), nativeKeys = require("3ec652610d8dd5d3");
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */ function baseKeys(object) {
    if (!isPrototype(object)) return nativeKeys(object);
    var result = [];
    for(var key in Object(object))if (hasOwnProperty.call(object, key) && key != 'constructor') result.push(key);
    return result;
}
module.exports = baseKeys;

},{"7da6298814f9bd95":"aZkmo","3ec652610d8dd5d3":"j1VAv"}],"aZkmo":[function(require,module,exports,__globalThis) {
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */ function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
}
module.exports = isPrototype;

},{}],"j1VAv":[function(require,module,exports,__globalThis) {
var overArg = require("aa3357c7a3889df");
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeKeys = overArg(Object.keys, Object);
module.exports = nativeKeys;

},{"aa3357c7a3889df":"4zaL2"}],"4zaL2":[function(require,module,exports,__globalThis) {
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */ function overArg(func, transform) {
    return function(arg) {
        return func(transform(arg));
    };
}
module.exports = overArg;

},{}],"fm2W9":[function(require,module,exports,__globalThis) {
var isFunction = require("bb060d4356645330"), isLength = require("f3db08d4d1110aaf");
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */ function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
}
module.exports = isArrayLike;

},{"bb060d4356645330":"6aeG3","f3db08d4d1110aaf":"6pej6"}],"cBeXf":[function(require,module,exports,__globalThis) {
var DataView = require("7f038695b2fdb86e"), Map = require("28e3344aae951f13"), Promise = require("b286298be5b1d9a4"), Set = require("3ae50c158f89813"), WeakMap = require("9f458755f627d456"), baseGetTag = require("8e9160b373d7fe66"), toSource = require("b210627dd951641f");
/** `Object#toString` result references. */ var mapTag = '[object Map]', objectTag = '[object Object]', promiseTag = '[object Promise]', setTag = '[object Set]', weakMapTag = '[object WeakMap]';
var dataViewTag = '[object DataView]';
/** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ var getTag = baseGetTag;
// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) getTag = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : '';
    if (ctorString) switch(ctorString){
        case dataViewCtorString:
            return dataViewTag;
        case mapCtorString:
            return mapTag;
        case promiseCtorString:
            return promiseTag;
        case setCtorString:
            return setTag;
        case weakMapCtorString:
            return weakMapTag;
    }
    return result;
};
module.exports = getTag;

},{"7f038695b2fdb86e":"9sOjC","28e3344aae951f13":"hdiCB","b286298be5b1d9a4":"8REYa","3ae50c158f89813":"aucIf","9f458755f627d456":"20EkW","8e9160b373d7fe66":"ikiSI","b210627dd951641f":"75ZSW"}],"9sOjC":[function(require,module,exports,__globalThis) {
var getNative = require("a6517d0448dad786"), root = require("f83c375075418382");
/* Built-in method references that are verified to be native. */ var DataView = getNative(root, 'DataView');
module.exports = DataView;

},{"a6517d0448dad786":"9Gozr","f83c375075418382":"dNdcr"}],"8REYa":[function(require,module,exports,__globalThis) {
var getNative = require("6940648d854355b5"), root = require("a5c6637bac681a0");
/* Built-in method references that are verified to be native. */ var Promise = getNative(root, 'Promise');
module.exports = Promise;

},{"6940648d854355b5":"9Gozr","a5c6637bac681a0":"dNdcr"}],"aucIf":[function(require,module,exports,__globalThis) {
var getNative = require("56b792d64741a4ff"), root = require("ca486d41cdf819d4");
/* Built-in method references that are verified to be native. */ var Set = getNative(root, 'Set');
module.exports = Set;

},{"56b792d64741a4ff":"9Gozr","ca486d41cdf819d4":"dNdcr"}],"20EkW":[function(require,module,exports,__globalThis) {
var getNative = require("4507415bd8810d3c"), root = require("7a9a6581834a8452");
/* Built-in method references that are verified to be native. */ var WeakMap = getNative(root, 'WeakMap');
module.exports = WeakMap;

},{"4507415bd8810d3c":"9Gozr","7a9a6581834a8452":"dNdcr"}],"l64wq":[function(require,module,exports,__globalThis) {
var isStrictComparable = require("8ba18052e16e94fb"), keys = require("94ffded3a85af2f6");
/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */ function getMatchData(object) {
    var result = keys(object), length = result.length;
    while(length--){
        var key = result[length], value = object[key];
        result[length] = [
            key,
            value,
            isStrictComparable(value)
        ];
    }
    return result;
}
module.exports = getMatchData;

},{"8ba18052e16e94fb":"19ZvG","94ffded3a85af2f6":"gS1Pz"}],"19ZvG":[function(require,module,exports,__globalThis) {
var isObject = require("be1941f960bbf057");
/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */ function isStrictComparable(value) {
    return value === value && !isObject(value);
}
module.exports = isStrictComparable;

},{"be1941f960bbf057":"ccoEe"}],"16Lnl":[function(require,module,exports,__globalThis) {
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */ function matchesStrictComparable(key, srcValue) {
    return function(object) {
        if (object == null) return false;
        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
    };
}
module.exports = matchesStrictComparable;

},{}],"ae8Hw":[function(require,module,exports,__globalThis) {
var baseIsEqual = require("cebe22f5ca0827a7"), get = require("d5ca180f7d6f956a"), hasIn = require("3462bb3f546fa1f7"), isKey = require("f5fef07966a1c4ee"), isStrictComparable = require("2a1cd212d48516"), matchesStrictComparable = require("885e72ee7fc6d296"), toKey = require("cd65eaf4a3af29f6");
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */ function baseMatchesProperty(path, srcValue) {
    if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
    return function(object) {
        var objValue = get(object, path);
        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
}
module.exports = baseMatchesProperty;

},{"cebe22f5ca0827a7":"eRGen","d5ca180f7d6f956a":"ce8mt","3462bb3f546fa1f7":"48whY","f5fef07966a1c4ee":"5htJX","2a1cd212d48516":"19ZvG","885e72ee7fc6d296":"16Lnl","cd65eaf4a3af29f6":"3WUuc"}],"48whY":[function(require,module,exports,__globalThis) {
var baseHasIn = require("9fbd4bb192f3f572"), hasPath = require("b0aefd36de99e579");
/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */ function hasIn(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
}
module.exports = hasIn;

},{"9fbd4bb192f3f572":"gr4go","b0aefd36de99e579":"hTGLO"}],"gr4go":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */ function baseHasIn(object, key) {
    return object != null && key in Object(object);
}
module.exports = baseHasIn;

},{}],"hTGLO":[function(require,module,exports,__globalThis) {
var castPath = require("bdbd2cfd212d36f7"), isArguments = require("47ffafdab3ba0d6f"), isArray = require("93ebd263ff0131c1"), isIndex = require("252ef74480e01958"), isLength = require("23c2f64e75e90a2"), toKey = require("af5ade297cb685ee");
/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */ function hasPath(object, path, hasFunc) {
    path = castPath(path, object);
    var index = -1, length = path.length, result = false;
    while(++index < length){
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) break;
        object = object[key];
    }
    if (result || ++index != length) return result;
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}
module.exports = hasPath;

},{"bdbd2cfd212d36f7":"lAgsO","47ffafdab3ba0d6f":"6s2sj","93ebd263ff0131c1":"gqOzR","252ef74480e01958":"ixTe5","23c2f64e75e90a2":"6pej6","af5ade297cb685ee":"3WUuc"}],"kD3aq":[function(require,module,exports,__globalThis) {
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */ function identity(value) {
    return value;
}
module.exports = identity;

},{}],"a3BjP":[function(require,module,exports,__globalThis) {
var baseProperty = require("c7f2d79ee4b1c16a"), basePropertyDeep = require("abf31da39349df22"), isKey = require("a387ef4a4373de2c"), toKey = require("9315973458389ae7");
/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */ function property(path) {
    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}
module.exports = property;

},{"c7f2d79ee4b1c16a":"ckV9a","abf31da39349df22":"hZHpl","a387ef4a4373de2c":"5htJX","9315973458389ae7":"3WUuc"}],"ckV9a":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */ function baseProperty(key) {
    return function(object) {
        return object == null ? undefined : object[key];
    };
}
module.exports = baseProperty;

},{}],"hZHpl":[function(require,module,exports,__globalThis) {
var baseGet = require("f0f9f03bc3030d02");
/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */ function basePropertyDeep(path) {
    return function(object) {
        return baseGet(object, path);
    };
}
module.exports = basePropertyDeep;

},{"f0f9f03bc3030d02":"hDpQB"}],"2uaYl":[function(require,module,exports,__globalThis) {
var SetCache = require("56c8470806d11628"), arrayIncludes = require("a1d85be956e037a9"), arrayIncludesWith = require("8cd18f86a4a2c118"), cacheHas = require("3acf9f4a3a78c511"), createSet = require("19b77385b4f7775a"), setToArray = require("4568580f7416eb83");
/** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */ function baseUniq(array, iteratee, comparator) {
    var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
    if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
    } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) return setToArray(set);
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
    } else seen = iteratee ? [] : result;
    outer: while(++index < length){
        var value = array[index], computed = iteratee ? iteratee(value) : value;
        value = comparator || value !== 0 ? value : 0;
        if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while(seenIndex--){
                if (seen[seenIndex] === computed) continue outer;
            }
            if (iteratee) seen.push(computed);
            result.push(value);
        } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) seen.push(computed);
            result.push(value);
        }
    }
    return result;
}
module.exports = baseUniq;

},{"56c8470806d11628":"15Cou","a1d85be956e037a9":"eYhj5","8cd18f86a4a2c118":"44suz","3acf9f4a3a78c511":"9HMVa","19b77385b4f7775a":"1eKjL","4568580f7416eb83":"5WU0M"}],"eYhj5":[function(require,module,exports,__globalThis) {
var baseIndexOf = require("277b2d1a618f2b2f");
/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */ function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
}
module.exports = arrayIncludes;

},{"277b2d1a618f2b2f":"dMKuZ"}],"dMKuZ":[function(require,module,exports,__globalThis) {
var baseFindIndex = require("badcebec79c8cd4"), baseIsNaN = require("c991ed2b82d165b"), strictIndexOf = require("c0bb8190b05a00a5");
/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function baseIndexOf(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
}
module.exports = baseIndexOf;

},{"badcebec79c8cd4":"aEebD","c991ed2b82d165b":"4GLEz","c0bb8190b05a00a5":"hbU8R"}],"aEebD":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
    while(fromRight ? index-- : ++index < length){
        if (predicate(array[index], index, array)) return index;
    }
    return -1;
}
module.exports = baseFindIndex;

},{}],"4GLEz":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */ function baseIsNaN(value) {
    return value !== value;
}
module.exports = baseIsNaN;

},{}],"hbU8R":[function(require,module,exports,__globalThis) {
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1, length = array.length;
    while(++index < length){
        if (array[index] === value) return index;
    }
    return -1;
}
module.exports = strictIndexOf;

},{}],"44suz":[function(require,module,exports,__globalThis) {
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */ function arrayIncludesWith(array, value, comparator) {
    var index = -1, length = array == null ? 0 : array.length;
    while(++index < length){
        if (comparator(value, array[index])) return true;
    }
    return false;
}
module.exports = arrayIncludesWith;

},{}],"1eKjL":[function(require,module,exports,__globalThis) {
var Set = require("17777365baf8e16"), noop = require("a02c367b3608ccee"), setToArray = require("cd8d0af6a14b2f7d");
/** Used as references for various `Number` constants. */ var INFINITY = 1 / 0;
/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */ var createSet = !(Set && 1 / setToArray(new Set([
    ,
    -0
]))[1] == INFINITY) ? noop : function(values) {
    return new Set(values);
};
module.exports = createSet;

},{"17777365baf8e16":"aucIf","a02c367b3608ccee":"29Y7e","cd8d0af6a14b2f7d":"5WU0M"}],"29Y7e":[function(require,module,exports,__globalThis) {
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */ function noop() {
// No operation performed.
}
module.exports = noop;

},{}],"hVtpG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tooltip", ()=>Tooltip);
/**
 * @fileOverview Tooltip
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _defaultTooltipContent = require("./DefaultTooltipContent");
var _tooltipBoundingBox = require("./TooltipBoundingBox");
var _global = require("../util/Global");
var _getUniqPayload = require("../util/payload/getUniqPayload");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function defaultUniqBy(entry) {
    return entry.dataKey;
}
function renderContent(content, props) {
    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(content)) return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(content, props);
    if (typeof content === 'function') return /*#__PURE__*/ (0, _reactDefault.default).createElement(content, props);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _defaultTooltipContent.DefaultTooltipContent), props);
}
var Tooltip = /*#__PURE__*/ function(_PureComponent) {
    function Tooltip() {
        _classCallCheck(this, Tooltip);
        return _callSuper(this, Tooltip, arguments);
    }
    _inherits(Tooltip, _PureComponent);
    return _createClass(Tooltip, [
        {
            key: "render",
            value: function render() {
                var _this = this;
                var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, content = _this$props.content, coordinate = _this$props.coordinate, filterNull = _this$props.filterNull, isAnimationActive = _this$props.isAnimationActive, offset = _this$props.offset, payload = _this$props.payload, payloadUniqBy = _this$props.payloadUniqBy, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;
                var finalPayload = payload !== null && payload !== void 0 ? payload : [];
                if (filterNull && finalPayload.length) finalPayload = (0, _getUniqPayload.getUniqPayload)(payload.filter(function(entry) {
                    return entry.value != null && (entry.hide !== true || _this.props.includeHidden);
                }), payloadUniqBy, defaultUniqBy);
                var hasPayload = finalPayload.length > 0;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tooltipBoundingBox.TooltipBoundingBox), {
                    allowEscapeViewBox: allowEscapeViewBox,
                    animationDuration: animationDuration,
                    animationEasing: animationEasing,
                    isAnimationActive: isAnimationActive,
                    active: active,
                    coordinate: coordinate,
                    hasPayload: hasPayload,
                    offset: offset,
                    position: position,
                    reverseDirection: reverseDirection,
                    useTranslate3d: useTranslate3d,
                    viewBox: viewBox,
                    wrapperStyle: wrapperStyle
                }, renderContent(content, _objectSpread(_objectSpread({}, this.props), {}, {
                    payload: finalPayload
                })));
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(Tooltip, "displayName", 'Tooltip');
_defineProperty(Tooltip, "defaultProps", {
    accessibilityLayer: false,
    allowEscapeViewBox: {
        x: false,
        y: false
    },
    animationDuration: 400,
    animationEasing: 'ease',
    contentStyle: {},
    coordinate: {
        x: 0,
        y: 0
    },
    cursor: true,
    cursorStyle: {},
    filterNull: true,
    isAnimationActive: !(0, _global.Global).isSsr,
    itemStyle: {},
    labelStyle: {},
    offset: 10,
    reverseDirection: {
        x: false,
        y: false
    },
    separator: ' : ',
    trigger: 'hover',
    useTranslate3d: false,
    viewBox: {
        x: 0,
        y: 0,
        height: 0,
        width: 0
    },
    wrapperStyle: {}
});

},{"react":"jMk1U","./DefaultTooltipContent":"3afn8","./TooltipBoundingBox":"aGEDL","../util/Global":"7oO43","../util/payload/getUniqPayload":"45HUG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3afn8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DefaultTooltipContent", ()=>DefaultTooltipContent);
/**
 * @fileOverview Default Tooltip Content
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _sortBy = require("lodash/sortBy");
var _sortByDefault = parcelHelpers.interopDefault(_sortBy);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _dataUtils = require("../util/DataUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function defaultFormatter(value) {
    return Array.isArray(value) && (0, _dataUtils.isNumOrStr)(value[0]) && (0, _dataUtils.isNumOrStr)(value[1]) ? value.join(' ~ ') : value;
}
var DefaultTooltipContent = function DefaultTooltipContent(props) {
    var _props$separator = props.separator, separator = _props$separator === void 0 ? ' : ' : _props$separator, _props$contentStyle = props.contentStyle, contentStyle = _props$contentStyle === void 0 ? {} : _props$contentStyle, _props$itemStyle = props.itemStyle, itemStyle = _props$itemStyle === void 0 ? {} : _props$itemStyle, _props$labelStyle = props.labelStyle, labelStyle = _props$labelStyle === void 0 ? {} : _props$labelStyle, payload = props.payload, formatter = props.formatter, itemSorter = props.itemSorter, wrapperClassName = props.wrapperClassName, labelClassName = props.labelClassName, label = props.label, labelFormatter = props.labelFormatter, _props$accessibilityL = props.accessibilityLayer, accessibilityLayer = _props$accessibilityL === void 0 ? false : _props$accessibilityL;
    var renderContent = function renderContent() {
        if (payload && payload.length) {
            var listStyle = {
                padding: 0,
                margin: 0
            };
            var items = (itemSorter ? (0, _sortByDefault.default)(payload, itemSorter) : payload).map(function(entry, i) {
                if (entry.type === 'none') return null;
                var finalItemStyle = _objectSpread({
                    display: 'block',
                    paddingTop: 4,
                    paddingBottom: 4,
                    color: entry.color || '#000'
                }, itemStyle);
                var finalFormatter = entry.formatter || formatter || defaultFormatter;
                var value = entry.value, name = entry.name;
                var finalValue = value;
                var finalName = name;
                if (finalFormatter && finalValue != null && finalName != null) {
                    var formatted = finalFormatter(value, name, entry, i, payload);
                    if (Array.isArray(formatted)) {
                        var _formatted = _slicedToArray(formatted, 2);
                        finalValue = _formatted[0];
                        finalName = _formatted[1];
                    } else finalValue = formatted;
                }
                return(/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key
                (0, _reactDefault.default).createElement("li", {
                    className: "recharts-tooltip-item",
                    key: "tooltip-item-".concat(i),
                    style: finalItemStyle
                }, (0, _dataUtils.isNumOrStr)(finalName) ? /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
                    className: "recharts-tooltip-item-name"
                }, finalName) : null, (0, _dataUtils.isNumOrStr)(finalName) ? /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
                    className: "recharts-tooltip-item-separator"
                }, separator) : null, /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
                    className: "recharts-tooltip-item-value"
                }, finalValue), /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
                    className: "recharts-tooltip-item-unit"
                }, entry.unit || '')));
            });
            return /*#__PURE__*/ (0, _reactDefault.default).createElement("ul", {
                className: "recharts-tooltip-item-list",
                style: listStyle
            }, items);
        }
        return null;
    };
    var finalStyle = _objectSpread({
        margin: 0,
        padding: 10,
        backgroundColor: '#fff',
        border: '1px solid #ccc',
        whiteSpace: 'nowrap'
    }, contentStyle);
    var finalLabelStyle = _objectSpread({
        margin: 0
    }, labelStyle);
    var hasLabel = !(0, _isNilDefault.default)(label);
    var finalLabel = hasLabel ? label : '';
    var wrapperCN = (0, _clsxDefault.default)('recharts-default-tooltip', wrapperClassName);
    var labelCN = (0, _clsxDefault.default)('recharts-tooltip-label', labelClassName);
    if (hasLabel && labelFormatter && payload !== undefined && payload !== null) finalLabel = labelFormatter(label, payload);
    var accessibilityAttributes = accessibilityLayer ? {
        role: 'status',
        'aria-live': 'assertive'
    } : {};
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", _extends({
        className: wrapperCN,
        style: finalStyle
    }, accessibilityAttributes), /*#__PURE__*/ (0, _reactDefault.default).createElement("p", {
        className: labelCN,
        style: finalLabelStyle
    }, /*#__PURE__*/ (0, _reactDefault.default).isValidElement(finalLabel) ? finalLabel : "".concat(finalLabel)), renderContent());
};

},{"react":"jMk1U","lodash/sortBy":"8hEur","lodash/isNil":"66cvp","clsx":"dOSJC","../util/DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8hEur":[function(require,module,exports,__globalThis) {
var baseFlatten = require("7dd3b18d381f1f29"), baseOrderBy = require("2553e45e897c3cba"), baseRest = require("9df1e918b0eea173"), isIterateeCall = require("36218471fd8f4dda");
/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 30 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
 */ var sortBy = baseRest(function(collection, iteratees) {
    if (collection == null) return [];
    var length = iteratees.length;
    if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) iteratees = [];
    else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) iteratees = [
        iteratees[0]
    ];
    return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});
module.exports = sortBy;

},{"7dd3b18d381f1f29":"1mGUy","2553e45e897c3cba":"ihu9S","9df1e918b0eea173":"gTvrH","36218471fd8f4dda":"bJ7Iv"}],"1mGUy":[function(require,module,exports,__globalThis) {
var arrayPush = require("d752582e5b174691"), isFlattenable = require("ec5f080ebf5764e8");
/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */ function baseFlatten(array, depth, predicate, isStrict, result) {
    var index = -1, length = array.length;
    predicate || (predicate = isFlattenable);
    result || (result = []);
    while(++index < length){
        var value = array[index];
        if (depth > 0 && predicate(value)) {
            if (depth > 1) // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
            else arrayPush(result, value);
        } else if (!isStrict) result[result.length] = value;
    }
    return result;
}
module.exports = baseFlatten;

},{"d752582e5b174691":"95jMd","ec5f080ebf5764e8":"5Ohqr"}],"5Ohqr":[function(require,module,exports,__globalThis) {
var Symbol = require("dde07f6ab8ba5eb5"), isArguments = require("ee6f325d7f5309b1"), isArray = require("ff8d93236e335297");
/** Built-in value references. */ var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */ function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
module.exports = isFlattenable;

},{"dde07f6ab8ba5eb5":"6PrIA","ee6f325d7f5309b1":"6s2sj","ff8d93236e335297":"gqOzR"}],"ihu9S":[function(require,module,exports,__globalThis) {
var arrayMap = require("8b3be8ab05c5c021"), baseGet = require("56eb179604ce4d19"), baseIteratee = require("41950d167c7e12b5"), baseMap = require("b09740a39499ec43"), baseSortBy = require("35a9013ca73ef017"), baseUnary = require("b387a5b76e29e664"), compareMultiple = require("2ab709818f44804c"), identity = require("5cb379329c706719"), isArray = require("8acdbb462385356c");
/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */ function baseOrderBy(collection, iteratees, orders) {
    if (iteratees.length) iteratees = arrayMap(iteratees, function(iteratee) {
        if (isArray(iteratee)) return function(value) {
            return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        };
        return iteratee;
    });
    else iteratees = [
        identity
    ];
    var index = -1;
    iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
    var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
            return iteratee(value);
        });
        return {
            'criteria': criteria,
            'index': ++index,
            'value': value
        };
    });
    return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
    });
}
module.exports = baseOrderBy;

},{"8b3be8ab05c5c021":"2bz49","56eb179604ce4d19":"hDpQB","41950d167c7e12b5":"e6QHA","b09740a39499ec43":"iEnUh","35a9013ca73ef017":"7Sq9G","b387a5b76e29e664":"7Icl7","2ab709818f44804c":"8qT1S","5cb379329c706719":"kD3aq","8acdbb462385356c":"gqOzR"}],"iEnUh":[function(require,module,exports,__globalThis) {
var baseEach = require("488df795cf6fe570"), isArrayLike = require("2924e2db4bb5430d");
/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */ function baseMap(collection, iteratee) {
    var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
    baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
    });
    return result;
}
module.exports = baseMap;

},{"488df795cf6fe570":"hslDV","2924e2db4bb5430d":"fm2W9"}],"hslDV":[function(require,module,exports,__globalThis) {
var baseForOwn = require("ee57d32bcdc873cb"), createBaseEach = require("f1e3fc84161ef3ec");
/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */ var baseEach = createBaseEach(baseForOwn);
module.exports = baseEach;

},{"ee57d32bcdc873cb":"9iUkC","f1e3fc84161ef3ec":"7M9Rf"}],"9iUkC":[function(require,module,exports,__globalThis) {
var baseFor = require("c7da20818a5fe3d6"), keys = require("1fb77c53defe5720");
/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */ function baseForOwn(object, iteratee) {
    return object && baseFor(object, iteratee, keys);
}
module.exports = baseForOwn;

},{"c7da20818a5fe3d6":"2rv34","1fb77c53defe5720":"gS1Pz"}],"2rv34":[function(require,module,exports,__globalThis) {
var createBaseFor = require("178c767a7be60d59");
/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */ var baseFor = createBaseFor();
module.exports = baseFor;

},{"178c767a7be60d59":"guMS0"}],"guMS0":[function(require,module,exports,__globalThis) {
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */ function createBaseFor(fromRight) {
    return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while(length--){
            var key = props[fromRight ? length : ++index];
            if (iteratee(iterable[key], key, iterable) === false) break;
        }
        return object;
    };
}
module.exports = createBaseFor;

},{}],"7M9Rf":[function(require,module,exports,__globalThis) {
var isArrayLike = require("49bbd11cbf093bb1");
/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */ function createBaseEach(eachFunc, fromRight) {
    return function(collection, iteratee) {
        if (collection == null) return collection;
        if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while(fromRight ? index-- : ++index < length){
            if (iteratee(iterable[index], index, iterable) === false) break;
        }
        return collection;
    };
}
module.exports = createBaseEach;

},{"49bbd11cbf093bb1":"fm2W9"}],"7Sq9G":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */ function baseSortBy(array, comparer) {
    var length = array.length;
    array.sort(comparer);
    while(length--)array[length] = array[length].value;
    return array;
}
module.exports = baseSortBy;

},{}],"8qT1S":[function(require,module,exports,__globalThis) {
var compareAscending = require("dd5e23e02b1cd726");
/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */ function compareMultiple(object, other, orders) {
    var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
    while(++index < length){
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
            if (index >= ordersLength) return result;
            var order = orders[index];
            return result * (order == 'desc' ? -1 : 1);
        }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to provide the same value for
    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
    // for more details.
    //
    // This also ensures a stable sort in V8 and other engines.
    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
    return object.index - other.index;
}
module.exports = compareMultiple;

},{"dd5e23e02b1cd726":"2bPEX"}],"2bPEX":[function(require,module,exports,__globalThis) {
var isSymbol = require("a51b63ee8daeecee");
/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */ function compareAscending(value, other) {
    if (value !== other) {
        var valIsDefined = value !== undefined, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
        var othIsDefined = other !== undefined, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
    }
    return 0;
}
module.exports = compareAscending;

},{"a51b63ee8daeecee":"k7Ns0"}],"gTvrH":[function(require,module,exports,__globalThis) {
var identity = require("3b2979bd51a0f85f"), overRest = require("ff7d23ff2a2ea6f8"), setToString = require("a11d545e809d14f7");
/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */ function baseRest(func, start) {
    return setToString(overRest(func, start, identity), func + '');
}
module.exports = baseRest;

},{"3b2979bd51a0f85f":"kD3aq","ff7d23ff2a2ea6f8":"6tyEW","a11d545e809d14f7":"hk4xO"}],"6tyEW":[function(require,module,exports,__globalThis) {
var apply = require("6f683b05f63ed25a");
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max;
/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */ function overRest(func, start, transform) {
    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
    return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while(++index < length)array[index] = args[start + index];
        index = -1;
        var otherArgs = Array(start + 1);
        while(++index < start)otherArgs[index] = args[index];
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
    };
}
module.exports = overRest;

},{"6f683b05f63ed25a":"98p0o"}],"98p0o":[function(require,module,exports,__globalThis) {
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */ function apply(func, thisArg, args) {
    switch(args.length){
        case 0:
            return func.call(thisArg);
        case 1:
            return func.call(thisArg, args[0]);
        case 2:
            return func.call(thisArg, args[0], args[1]);
        case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
}
module.exports = apply;

},{}],"hk4xO":[function(require,module,exports,__globalThis) {
var baseSetToString = require("eebd487fbab521b6"), shortOut = require("9114f59293388d49");
/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */ var setToString = shortOut(baseSetToString);
module.exports = setToString;

},{"eebd487fbab521b6":"hlSxH","9114f59293388d49":"2fygk"}],"hlSxH":[function(require,module,exports,__globalThis) {
var constant = require("706929c7b4749485"), defineProperty = require("eff1240bc0447727"), identity = require("b00d1e57326793e1");
/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */ var baseSetToString = !defineProperty ? identity : function(func, string) {
    return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
    });
};
module.exports = baseSetToString;

},{"706929c7b4749485":"hOI8G","eff1240bc0447727":"2rWew","b00d1e57326793e1":"kD3aq"}],"hOI8G":[function(require,module,exports,__globalThis) {
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */ function constant(value) {
    return function() {
        return value;
    };
}
module.exports = constant;

},{}],"2rWew":[function(require,module,exports,__globalThis) {
var getNative = require("7565accd8c33cb8b");
var defineProperty = function() {
    try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
    } catch (e) {}
}();
module.exports = defineProperty;

},{"7565accd8c33cb8b":"9Gozr"}],"2fygk":[function(require,module,exports,__globalThis) {
/** Used to detect hot functions by number of calls within a span of milliseconds. */ var HOT_COUNT = 800, HOT_SPAN = 16;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeNow = Date.now;
/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */ function shortOut(func) {
    var count = 0, lastCalled = 0;
    return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
            if (++count >= HOT_COUNT) return arguments[0];
        } else count = 0;
        return func.apply(undefined, arguments);
    };
}
module.exports = shortOut;

},{}],"bJ7Iv":[function(require,module,exports,__globalThis) {
var eq = require("a8ec2a011d2eca69"), isArrayLike = require("616bc732534dffe0"), isIndex = require("e781332a36d1bd7"), isObject = require("c8548bf6929b8a5d");
/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */ function isIterateeCall(value, index, object) {
    if (!isObject(object)) return false;
    var type = typeof index;
    if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) return eq(object[index], value);
    return false;
}
module.exports = isIterateeCall;

},{"a8ec2a011d2eca69":"2pSvI","616bc732534dffe0":"fm2W9","e781332a36d1bd7":"ixTe5","c8548bf6929b8a5d":"ccoEe"}],"aGEDL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TooltipBoundingBox", ()=>TooltipBoundingBox);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _translate = require("../util/tooltip/translate");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var EPSILON = 1;
var TooltipBoundingBox = /*#__PURE__*/ function(_PureComponent) {
    function TooltipBoundingBox() {
        var _this;
        _classCallCheck(this, TooltipBoundingBox);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, TooltipBoundingBox, [].concat(args));
        _defineProperty(_this, "state", {
            dismissed: false,
            dismissedAtCoordinate: {
                x: 0,
                y: 0
            },
            lastBoundingBox: {
                width: -1,
                height: -1
            }
        });
        _defineProperty(_this, "handleKeyDown", function(event) {
            if (event.key === 'Escape') {
                var _this$props$coordinat, _this$props$coordinat2, _this$props$coordinat3, _this$props$coordinat4;
                _this.setState({
                    dismissed: true,
                    dismissedAtCoordinate: {
                        x: (_this$props$coordinat = (_this$props$coordinat2 = _this.props.coordinate) === null || _this$props$coordinat2 === void 0 ? void 0 : _this$props$coordinat2.x) !== null && _this$props$coordinat !== void 0 ? _this$props$coordinat : 0,
                        y: (_this$props$coordinat3 = (_this$props$coordinat4 = _this.props.coordinate) === null || _this$props$coordinat4 === void 0 ? void 0 : _this$props$coordinat4.y) !== null && _this$props$coordinat3 !== void 0 ? _this$props$coordinat3 : 0
                    }
                });
            }
        });
        return _this;
    }
    _inherits(TooltipBoundingBox, _PureComponent);
    return _createClass(TooltipBoundingBox, [
        {
            key: "updateBBox",
            value: function updateBBox() {
                if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
                    var box = this.wrapperNode.getBoundingClientRect();
                    if (Math.abs(box.width - this.state.lastBoundingBox.width) > EPSILON || Math.abs(box.height - this.state.lastBoundingBox.height) > EPSILON) this.setState({
                        lastBoundingBox: {
                            width: box.width,
                            height: box.height
                        }
                    });
                } else if (this.state.lastBoundingBox.width !== -1 || this.state.lastBoundingBox.height !== -1) this.setState({
                    lastBoundingBox: {
                        width: -1,
                        height: -1
                    }
                });
            }
        },
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                document.addEventListener('keydown', this.handleKeyDown);
                this.updateBBox();
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                document.removeEventListener('keydown', this.handleKeyDown);
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate() {
                var _this$props$coordinat5, _this$props$coordinat6;
                if (this.props.active) this.updateBBox();
                if (!this.state.dismissed) return;
                if (((_this$props$coordinat5 = this.props.coordinate) === null || _this$props$coordinat5 === void 0 ? void 0 : _this$props$coordinat5.x) !== this.state.dismissedAtCoordinate.x || ((_this$props$coordinat6 = this.props.coordinate) === null || _this$props$coordinat6 === void 0 ? void 0 : _this$props$coordinat6.y) !== this.state.dismissedAtCoordinate.y) this.state.dismissed = false;
            }
        },
        {
            key: "render",
            value: function render() {
                var _this2 = this;
                var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, children = _this$props.children, coordinate = _this$props.coordinate, hasPayload = _this$props.hasPayload, isAnimationActive = _this$props.isAnimationActive, offset = _this$props.offset, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;
                var _getTooltipTranslate = (0, _translate.getTooltipTranslate)({
                    allowEscapeViewBox: allowEscapeViewBox,
                    coordinate: coordinate,
                    offsetTopLeft: offset,
                    position: position,
                    reverseDirection: reverseDirection,
                    tooltipBox: this.state.lastBoundingBox,
                    useTranslate3d: useTranslate3d,
                    viewBox: viewBox
                }), cssClasses = _getTooltipTranslate.cssClasses, cssProperties = _getTooltipTranslate.cssProperties;
                var outerStyle = _objectSpread(_objectSpread({
                    transition: isAnimationActive && active ? "transform ".concat(animationDuration, "ms ").concat(animationEasing) : undefined
                }, cssProperties), {}, {
                    pointerEvents: 'none',
                    visibility: !this.state.dismissed && active && hasPayload ? 'visible' : 'hidden',
                    position: 'absolute',
                    top: 0,
                    left: 0
                }, wrapperStyle);
                return(/*#__PURE__*/ // This element allow listening to the `Escape` key.
                // See https://github.com/recharts/recharts/pull/2925
                (0, _reactDefault.default).createElement("div", {
                    tabIndex: -1,
                    className: cssClasses,
                    style: outerStyle,
                    ref: function ref(node) {
                        _this2.wrapperNode = node;
                    }
                }, children));
            }
        }
    ]);
}((0, _react.PureComponent));

},{"react":"jMk1U","../util/tooltip/translate":"67U7i","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"67U7i":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTooltipCSSClassName", ()=>getTooltipCSSClassName);
parcelHelpers.export(exports, "getTooltipTranslateXY", ()=>getTooltipTranslateXY);
parcelHelpers.export(exports, "getTransformStyle", ()=>getTransformStyle);
parcelHelpers.export(exports, "getTooltipTranslate", ()=>getTooltipTranslate);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _dataUtils = require("../DataUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var CSS_CLASS_PREFIX = 'recharts-tooltip-wrapper';
var TOOLTIP_HIDDEN = {
    visibility: 'hidden'
};
function getTooltipCSSClassName(_ref) {
    var coordinate = _ref.coordinate, translateX = _ref.translateX, translateY = _ref.translateY;
    return (0, _clsxDefault.default)(CSS_CLASS_PREFIX, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(CSS_CLASS_PREFIX, "-right"), (0, _dataUtils.isNumber)(translateX) && coordinate && (0, _dataUtils.isNumber)(coordinate.x) && translateX >= coordinate.x), "".concat(CSS_CLASS_PREFIX, "-left"), (0, _dataUtils.isNumber)(translateX) && coordinate && (0, _dataUtils.isNumber)(coordinate.x) && translateX < coordinate.x), "".concat(CSS_CLASS_PREFIX, "-bottom"), (0, _dataUtils.isNumber)(translateY) && coordinate && (0, _dataUtils.isNumber)(coordinate.y) && translateY >= coordinate.y), "".concat(CSS_CLASS_PREFIX, "-top"), (0, _dataUtils.isNumber)(translateY) && coordinate && (0, _dataUtils.isNumber)(coordinate.y) && translateY < coordinate.y));
}
function getTooltipTranslateXY(_ref2) {
    var allowEscapeViewBox = _ref2.allowEscapeViewBox, coordinate = _ref2.coordinate, key = _ref2.key, offsetTopLeft = _ref2.offsetTopLeft, position = _ref2.position, reverseDirection = _ref2.reverseDirection, tooltipDimension = _ref2.tooltipDimension, viewBox = _ref2.viewBox, viewBoxDimension = _ref2.viewBoxDimension;
    if (position && (0, _dataUtils.isNumber)(position[key])) return position[key];
    var negative = coordinate[key] - tooltipDimension - offsetTopLeft;
    var positive = coordinate[key] + offsetTopLeft;
    if (allowEscapeViewBox[key]) return reverseDirection[key] ? negative : positive;
    if (reverseDirection[key]) {
        var _tooltipBoundary = negative;
        var _viewBoxBoundary = viewBox[key];
        if (_tooltipBoundary < _viewBoxBoundary) return Math.max(positive, viewBox[key]);
        return Math.max(negative, viewBox[key]);
    }
    var tooltipBoundary = positive + tooltipDimension;
    var viewBoxBoundary = viewBox[key] + viewBoxDimension;
    if (tooltipBoundary > viewBoxBoundary) return Math.max(negative, viewBox[key]);
    return Math.max(positive, viewBox[key]);
}
function getTransformStyle(_ref3) {
    var translateX = _ref3.translateX, translateY = _ref3.translateY, useTranslate3d = _ref3.useTranslate3d;
    return {
        transform: useTranslate3d ? "translate3d(".concat(translateX, "px, ").concat(translateY, "px, 0)") : "translate(".concat(translateX, "px, ").concat(translateY, "px)")
    };
}
function getTooltipTranslate(_ref4) {
    var allowEscapeViewBox = _ref4.allowEscapeViewBox, coordinate = _ref4.coordinate, offsetTopLeft = _ref4.offsetTopLeft, position = _ref4.position, reverseDirection = _ref4.reverseDirection, tooltipBox = _ref4.tooltipBox, useTranslate3d = _ref4.useTranslate3d, viewBox = _ref4.viewBox;
    var cssProperties, translateX, translateY;
    if (tooltipBox.height > 0 && tooltipBox.width > 0 && coordinate) {
        translateX = getTooltipTranslateXY({
            allowEscapeViewBox: allowEscapeViewBox,
            coordinate: coordinate,
            key: 'x',
            offsetTopLeft: offsetTopLeft,
            position: position,
            reverseDirection: reverseDirection,
            tooltipDimension: tooltipBox.width,
            viewBox: viewBox,
            viewBoxDimension: viewBox.width
        });
        translateY = getTooltipTranslateXY({
            allowEscapeViewBox: allowEscapeViewBox,
            coordinate: coordinate,
            key: 'y',
            offsetTopLeft: offsetTopLeft,
            position: position,
            reverseDirection: reverseDirection,
            tooltipDimension: tooltipBox.height,
            viewBox: viewBox,
            viewBoxDimension: viewBox.height
        });
        cssProperties = getTransformStyle({
            translateX: translateX,
            translateY: translateY,
            useTranslate3d: useTranslate3d
        });
    } else cssProperties = TOOLTIP_HIDDEN;
    return {
        cssProperties: cssProperties,
        cssClasses: getTooltipCSSClassName({
            translateX: translateX,
            translateY: translateY,
            coordinate: coordinate
        })
    };
}

},{"clsx":"dOSJC","../DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7oO43":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Global", ()=>Global);
var parseIsSsrByDefault = function parseIsSsrByDefault() {
    return !(typeof window !== 'undefined' && window.document && window.document.createElement && window.setTimeout);
};
var Global = {
    isSsr: parseIsSsrByDefault(),
    get: function get(key) {
        return Global[key];
    },
    set: function set(key, value) {
        if (typeof key === 'string') Global[key] = value;
        else {
            var keys = Object.keys(key);
            if (keys && keys.length) keys.forEach(function(k) {
                Global[k] = key[k];
            });
        }
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Nzfy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResponsiveContainer", ()=>ResponsiveContainer);
/**
 * @fileOverview Wrapper component to make charts adapt to the size of parent * DOM
 */ var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _throttle = require("lodash/throttle");
var _throttleDefault = parcelHelpers.interopDefault(_throttle);
var _dataUtils = require("../util/DataUtils");
var _logUtils = require("../util/LogUtils");
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
var ResponsiveContainer = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var aspect = _ref.aspect, _ref$initialDimension = _ref.initialDimension, initialDimension = _ref$initialDimension === void 0 ? {
        width: -1,
        height: -1
    } : _ref$initialDimension, _ref$width = _ref.width, width = _ref$width === void 0 ? '100%' : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? '100%' : _ref$height, _ref$minWidth = _ref.minWidth, minWidth = _ref$minWidth === void 0 ? 0 : _ref$minWidth, minHeight = _ref.minHeight, maxHeight = _ref.maxHeight, children = _ref.children, _ref$debounce = _ref.debounce, debounce = _ref$debounce === void 0 ? 0 : _ref$debounce, id = _ref.id, className = _ref.className, onResize = _ref.onResize, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style;
    var containerRef = (0, _react.useRef)(null);
    var onResizeRef = (0, _react.useRef)();
    onResizeRef.current = onResize;
    (0, _react.useImperativeHandle)(ref, function() {
        return Object.defineProperty(containerRef.current, 'current', {
            get: function get() {
                // eslint-disable-next-line no-console
                console.warn('The usage of ref.current.current is deprecated and will no longer be supported.');
                return containerRef.current;
            },
            configurable: true
        });
    });
    var _useState = (0, _react.useState)({
        containerWidth: initialDimension.width,
        containerHeight: initialDimension.height
    }), _useState2 = _slicedToArray(_useState, 2), sizes = _useState2[0], setSizes = _useState2[1];
    var setContainerSize = (0, _react.useCallback)(function(newWidth, newHeight) {
        setSizes(function(prevState) {
            var roundedWidth = Math.round(newWidth);
            var roundedHeight = Math.round(newHeight);
            if (prevState.containerWidth === roundedWidth && prevState.containerHeight === roundedHeight) return prevState;
            return {
                containerWidth: roundedWidth,
                containerHeight: roundedHeight
            };
        });
    }, []);
    (0, _react.useEffect)(function() {
        var callback = function callback(entries) {
            var _onResizeRef$current;
            var _entries$0$contentRec = entries[0].contentRect, containerWidth = _entries$0$contentRec.width, containerHeight = _entries$0$contentRec.height;
            setContainerSize(containerWidth, containerHeight);
            (_onResizeRef$current = onResizeRef.current) === null || _onResizeRef$current === void 0 || _onResizeRef$current.call(onResizeRef, containerWidth, containerHeight);
        };
        if (debounce > 0) callback = (0, _throttleDefault.default)(callback, debounce, {
            trailing: true,
            leading: false
        });
        var observer = new ResizeObserver(callback);
        var _containerRef$current = containerRef.current.getBoundingClientRect(), containerWidth = _containerRef$current.width, containerHeight = _containerRef$current.height;
        setContainerSize(containerWidth, containerHeight);
        observer.observe(containerRef.current);
        return function() {
            observer.disconnect();
        };
    }, [
        setContainerSize,
        debounce
    ]);
    var chartContent = (0, _react.useMemo)(function() {
        var containerWidth = sizes.containerWidth, containerHeight = sizes.containerHeight;
        if (containerWidth < 0 || containerHeight < 0) return null;
        (0, _logUtils.warn)((0, _dataUtils.isPercent)(width) || (0, _dataUtils.isPercent)(height), "The width(%s) and height(%s) are both fixed numbers,\n       maybe you don't need to use a ResponsiveContainer.", width, height);
        (0, _logUtils.warn)(!aspect || aspect > 0, 'The aspect(%s) must be greater than zero.', aspect);
        var calculatedWidth = (0, _dataUtils.isPercent)(width) ? containerWidth : width;
        var calculatedHeight = (0, _dataUtils.isPercent)(height) ? containerHeight : height;
        if (aspect && aspect > 0) {
            // Preserve the desired aspect ratio
            if (calculatedWidth) // Will default to using width for aspect ratio
            calculatedHeight = calculatedWidth / aspect;
            else if (calculatedHeight) // But we should also take height into consideration
            calculatedWidth = calculatedHeight * aspect;
            // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight
            if (maxHeight && calculatedHeight > maxHeight) calculatedHeight = maxHeight;
        }
        (0, _logUtils.warn)(calculatedWidth > 0 || calculatedHeight > 0, "The width(%s) and height(%s) of chart should be greater than 0,\n       please check the style of container, or the props width(%s) and height(%s),\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\n       height and width.", calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);
        var isCharts = !Array.isArray(children) && (0, _reactUtils.getDisplayName)(children.type).endsWith('Chart');
        return (0, _reactDefault.default).Children.map(children, function(child) {
            if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(child)) return /*#__PURE__*/ (0, _react.cloneElement)(child, _objectSpread({
                width: calculatedWidth,
                height: calculatedHeight
            }, isCharts ? {
                style: _objectSpread({
                    height: '100%',
                    width: '100%',
                    maxHeight: calculatedHeight,
                    maxWidth: calculatedWidth
                }, child.props.style)
            } : {}));
            return child;
        });
    }, [
        aspect,
        children,
        height,
        maxHeight,
        minHeight,
        minWidth,
        sizes,
        width
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        id: id ? "".concat(id) : undefined,
        className: (0, _clsxDefault.default)('recharts-responsive-container', className),
        style: _objectSpread(_objectSpread({}, style), {}, {
            width: width,
            height: height,
            minWidth: minWidth,
            minHeight: minHeight,
            maxHeight: maxHeight
        }),
        ref: containerRef
    }, chartContent);
});

},{"clsx":"dOSJC","react":"jMk1U","lodash/throttle":"v3vhH","../util/DataUtils":"sgnJK","../util/LogUtils":"2q6MA","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"v3vhH":[function(require,module,exports,__globalThis) {
var debounce = require("5b383646e2c7b4c6"), isObject = require("a29ce0b3e78d037d");
/** Error message constants. */ var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */ function throttle(func, wait, options) {
    var leading = true, trailing = true;
    if (typeof func != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
    });
}
module.exports = throttle;

},{"5b383646e2c7b4c6":"6vflm","a29ce0b3e78d037d":"ccoEe"}],"6vflm":[function(require,module,exports,__globalThis) {
var isObject = require("3b174a999d6a40ac"), now = require("575b2317167ce20d"), toNumber = require("a13332670c5c0f63");
/** Error message constants. */ var FUNC_ERROR_TEXT = 'Expected a function';
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max, nativeMin = Math.min;
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */ function debounce(func, wait, options) {
    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    wait = toNumber(wait) || 0;
    if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
    }
    function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
    }
    function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    }
    function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) return trailingEdge(time);
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
        timerId = undefined;
        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) return invokeFunc(time);
        lastArgs = lastThis = undefined;
        return result;
    }
    function cancel() {
        if (timerId !== undefined) clearTimeout(timerId);
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
    }
    function flush() {
        return timerId === undefined ? result : trailingEdge(now());
    }
    function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
            if (timerId === undefined) return leadingEdge(lastCallTime);
            if (maxing) {
                // Handle invocations in a tight loop.
                clearTimeout(timerId);
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
            }
        }
        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
        return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
}
module.exports = debounce;

},{"3b174a999d6a40ac":"ccoEe","575b2317167ce20d":"d0MFi","a13332670c5c0f63":"l3rQb"}],"d0MFi":[function(require,module,exports,__globalThis) {
var root = require("6439589d9d88d885");
/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */ var now = function() {
    return root.Date.now();
};
module.exports = now;

},{"6439589d9d88d885":"dNdcr"}],"l3rQb":[function(require,module,exports,__globalThis) {
var baseTrim = require("261e89907fb89d78"), isObject = require("faaa289d287a34a5"), isSymbol = require("47b3bd23f771891");
/** Used as references for various `Number` constants. */ var NAN = 0 / 0;
/** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */ var freeParseInt = parseInt;
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */ function toNumber(value) {
    if (typeof value == 'number') return value;
    if (isSymbol(value)) return NAN;
    if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
    }
    if (typeof value != 'string') return value === 0 ? value : +value;
    value = baseTrim(value);
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
module.exports = toNumber;

},{"261e89907fb89d78":"6fvFE","faaa289d287a34a5":"ccoEe","47b3bd23f771891":"k7Ns0"}],"6fvFE":[function(require,module,exports,__globalThis) {
var trimmedEndIndex = require("985d3c9be7b51937");
/** Used to match leading whitespace. */ var reTrimStart = /^\s+/;
/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */ function baseTrim(string) {
    return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
}
module.exports = baseTrim;

},{"985d3c9be7b51937":"buRsh"}],"buRsh":[function(require,module,exports,__globalThis) {
/** Used to match a single whitespace character. */ var reWhitespace = /\s/;
/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */ function trimmedEndIndex(string) {
    var index = string.length;
    while(index-- && reWhitespace.test(string.charAt(index)));
    return index;
}
module.exports = trimmedEndIndex;

},{}],"fGup7":[function(require,module,exports,__globalThis) {
/**
 * @fileOverview Cross
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Cell", ()=>Cell);
var Cell = function Cell(_props) {
    return null;
};
Cell.displayName = 'Cell';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9kjUm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Text", ()=>Text);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _dataUtils = require("../util/DataUtils");
var _global = require("../util/Global");
var _reactUtils = require("../util/ReactUtils");
var _domutils = require("../util/DOMUtils");
var _reduceCSSCalc = require("../util/ReduceCSSCalc");
var _excluded = [
    "x",
    "y",
    "lineHeight",
    "capHeight",
    "scaleToFit",
    "textAnchor",
    "verticalAnchor",
    "fill"
], _excluded2 = [
    "dx",
    "dy",
    "angle",
    "className",
    "breakAll"
];
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
var BREAKING_SPACES = /[ \f\n\r\t\v\u2028\u2029]+/;
var calculateWordWidths = function calculateWordWidths(_ref) {
    var children = _ref.children, breakAll = _ref.breakAll, style = _ref.style;
    try {
        var words = [];
        if (!(0, _isNilDefault.default)(children)) {
            if (breakAll) words = children.toString().split('');
            else words = children.toString().split(BREAKING_SPACES);
        }
        var wordsWithComputedWidth = words.map(function(word) {
            return {
                word: word,
                width: (0, _domutils.getStringSize)(word, style).width
            };
        });
        var spaceWidth = breakAll ? 0 : (0, _domutils.getStringSize)("\xA0", style).width;
        return {
            wordsWithComputedWidth: wordsWithComputedWidth,
            spaceWidth: spaceWidth
        };
    } catch (e) {
        return null;
    }
};
var calculateWordsByLines = function calculateWordsByLines(_ref2, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {
    var maxLines = _ref2.maxLines, children = _ref2.children, style = _ref2.style, breakAll = _ref2.breakAll;
    var shouldLimitLines = (0, _dataUtils.isNumber)(maxLines);
    var text = children;
    var calculate = function calculate() {
        var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        return words.reduce(function(result, _ref3) {
            var word = _ref3.word, width = _ref3.width;
            var currentLine = result[result.length - 1];
            if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < Number(lineWidth))) {
                // Word can be added to an existing line
                currentLine.words.push(word);
                currentLine.width += width + spaceWidth;
            } else {
                // Add first word to line or word is too long to scaleToFit on existing line
                var newLine = {
                    words: [
                        word
                    ],
                    width: width
                };
                result.push(newLine);
            }
            return result;
        }, []);
    };
    var originalResult = calculate(initialWordsWithComputedWith);
    var findLongestLine = function findLongestLine(words) {
        return words.reduce(function(a, b) {
            return a.width > b.width ? a : b;
        });
    };
    if (!shouldLimitLines) return originalResult;
    var suffix = "\u2026";
    var checkOverflow = function checkOverflow(index) {
        var tempText = text.slice(0, index);
        var words = calculateWordWidths({
            breakAll: breakAll,
            style: style,
            children: tempText + suffix
        }).wordsWithComputedWidth;
        var result = calculate(words);
        var doesOverflow = result.length > maxLines || findLongestLine(result).width > Number(lineWidth);
        return [
            doesOverflow,
            result
        ];
    };
    var start = 0;
    var end = text.length - 1;
    var iterations = 0;
    var trimmedResult;
    while(start <= end && iterations <= text.length - 1){
        var middle = Math.floor((start + end) / 2);
        var prev = middle - 1;
        var _checkOverflow = checkOverflow(prev), _checkOverflow2 = _slicedToArray(_checkOverflow, 2), doesPrevOverflow = _checkOverflow2[0], result = _checkOverflow2[1];
        var _checkOverflow3 = checkOverflow(middle), _checkOverflow4 = _slicedToArray(_checkOverflow3, 1), doesMiddleOverflow = _checkOverflow4[0];
        if (!doesPrevOverflow && !doesMiddleOverflow) start = middle + 1;
        if (doesPrevOverflow && doesMiddleOverflow) end = middle - 1;
        if (!doesPrevOverflow && doesMiddleOverflow) {
            trimmedResult = result;
            break;
        }
        iterations++;
    }
    // Fallback to originalResult (result without trimming) if we cannot find the
    // where to trim.  This should not happen :tm:
    return trimmedResult || originalResult;
};
var getWordsWithoutCalculate = function getWordsWithoutCalculate(children) {
    var words = !(0, _isNilDefault.default)(children) ? children.toString().split(BREAKING_SPACES) : [];
    return [
        {
            words: words
        }
    ];
};
var getWordsByLines = function getWordsByLines(_ref4) {
    var width = _ref4.width, scaleToFit = _ref4.scaleToFit, children = _ref4.children, style = _ref4.style, breakAll = _ref4.breakAll, maxLines = _ref4.maxLines;
    // Only perform calculations if using features that require them (multiline, scaleToFit)
    if ((width || scaleToFit) && !(0, _global.Global).isSsr) {
        var wordsWithComputedWidth, spaceWidth;
        var wordWidths = calculateWordWidths({
            breakAll: breakAll,
            children: children,
            style: style
        });
        if (wordWidths) {
            var wcw = wordWidths.wordsWithComputedWidth, sw = wordWidths.spaceWidth;
            wordsWithComputedWidth = wcw;
            spaceWidth = sw;
        } else return getWordsWithoutCalculate(children);
        return calculateWordsByLines({
            breakAll: breakAll,
            children: children,
            maxLines: maxLines,
            style: style
        }, wordsWithComputedWidth, spaceWidth, width, scaleToFit);
    }
    return getWordsWithoutCalculate(children);
};
var DEFAULT_FILL = '#808080';
var Text = function Text(_ref5) {
    var _ref5$x = _ref5.x, propsX = _ref5$x === void 0 ? 0 : _ref5$x, _ref5$y = _ref5.y, propsY = _ref5$y === void 0 ? 0 : _ref5$y, _ref5$lineHeight = _ref5.lineHeight, lineHeight = _ref5$lineHeight === void 0 ? '1em' : _ref5$lineHeight, _ref5$capHeight = _ref5.capHeight, capHeight = _ref5$capHeight === void 0 ? '0.71em' : _ref5$capHeight, _ref5$scaleToFit = _ref5.scaleToFit, scaleToFit = _ref5$scaleToFit === void 0 ? false : _ref5$scaleToFit, _ref5$textAnchor = _ref5.textAnchor, textAnchor = _ref5$textAnchor === void 0 ? 'start' : _ref5$textAnchor, _ref5$verticalAnchor = _ref5.verticalAnchor, verticalAnchor = _ref5$verticalAnchor === void 0 ? 'end' : _ref5$verticalAnchor, _ref5$fill = _ref5.fill, fill = _ref5$fill === void 0 ? DEFAULT_FILL : _ref5$fill, props = _objectWithoutProperties(_ref5, _excluded);
    var wordsByLines = (0, _react.useMemo)(function() {
        return getWordsByLines({
            breakAll: props.breakAll,
            children: props.children,
            maxLines: props.maxLines,
            scaleToFit: scaleToFit,
            style: props.style,
            width: props.width
        });
    }, [
        props.breakAll,
        props.children,
        props.maxLines,
        scaleToFit,
        props.style,
        props.width
    ]);
    var dx = props.dx, dy = props.dy, angle = props.angle, className = props.className, breakAll = props.breakAll, textProps = _objectWithoutProperties(props, _excluded2);
    if (!(0, _dataUtils.isNumOrStr)(propsX) || !(0, _dataUtils.isNumOrStr)(propsY)) return null;
    var x = propsX + ((0, _dataUtils.isNumber)(dx) ? dx : 0);
    var y = propsY + ((0, _dataUtils.isNumber)(dy) ? dy : 0);
    var startDy;
    switch(verticalAnchor){
        case 'start':
            startDy = (0, _reduceCSSCalc.reduceCSSCalc)("calc(".concat(capHeight, ")"));
            break;
        case 'middle':
            startDy = (0, _reduceCSSCalc.reduceCSSCalc)("calc(".concat((wordsByLines.length - 1) / 2, " * -").concat(lineHeight, " + (").concat(capHeight, " / 2))"));
            break;
        default:
            startDy = (0, _reduceCSSCalc.reduceCSSCalc)("calc(".concat(wordsByLines.length - 1, " * -").concat(lineHeight, ")"));
            break;
    }
    var transforms = [];
    if (scaleToFit) {
        var lineWidth = wordsByLines[0].width;
        var width = props.width;
        transforms.push("scale(".concat(((0, _dataUtils.isNumber)(width) ? width / lineWidth : 1) / lineWidth, ")"));
    }
    if (angle) transforms.push("rotate(".concat(angle, ", ").concat(x, ", ").concat(y, ")"));
    if (transforms.length) textProps.transform = transforms.join(' ');
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("text", _extends({}, (0, _reactUtils.filterProps)(textProps, true), {
        x: x,
        y: y,
        className: (0, _clsxDefault.default)('recharts-text', className),
        textAnchor: textAnchor,
        fill: fill.includes('url') ? DEFAULT_FILL : fill
    }), wordsByLines.map(function(line, index) {
        var words = line.words.join(breakAll ? '' : ' ');
        return(/*#__PURE__*/ // duplicate words will cause duplicate keys
        // eslint-disable-next-line react/no-array-index-key
        (0, _reactDefault.default).createElement("tspan", {
            x: x,
            dy: index === 0 ? startDy : lineHeight,
            key: "".concat(words, "-").concat(index)
        }, words));
    }));
};

},{"react":"jMk1U","lodash/isNil":"66cvp","clsx":"dOSJC","../util/DataUtils":"sgnJK","../util/Global":"7oO43","../util/ReactUtils":"dvc7w","../util/DOMUtils":"b9RVO","../util/ReduceCSSCalc":"9AdBA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b9RVO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getStyleString", ()=>getStyleString);
parcelHelpers.export(exports, "getStringSize", ()=>getStringSize);
parcelHelpers.export(exports, "getOffset", ()=>getOffset);
var _global = require("./Global");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
var stringCache = {
    widthCache: {},
    cacheCount: 0
};
var MAX_CACHE_NUM = 2000;
var SPAN_STYLE = {
    position: 'absolute',
    top: '-20000px',
    left: 0,
    padding: 0,
    margin: 0,
    border: 'none',
    whiteSpace: 'pre'
};
var STYLE_LIST = [
    'minWidth',
    'maxWidth',
    'width',
    'minHeight',
    'maxHeight',
    'height',
    'top',
    'left',
    'fontSize',
    'lineHeight',
    'padding',
    'margin',
    'paddingLeft',
    'paddingRight',
    'paddingTop',
    'paddingBottom',
    'marginLeft',
    'marginRight',
    'marginTop',
    'marginBottom'
];
var MEASUREMENT_SPAN_ID = 'recharts_measurement_span';
function autoCompleteStyle(name, value) {
    if (STYLE_LIST.indexOf(name) >= 0 && value === +value) return "".concat(value, "px");
    return value;
}
function camelToMiddleLine(text) {
    var strs = text.split('');
    var formatStrs = strs.reduce(function(result, entry) {
        if (entry === entry.toUpperCase()) return [].concat(_toConsumableArray(result), [
            '-',
            entry.toLowerCase()
        ]);
        return [].concat(_toConsumableArray(result), [
            entry
        ]);
    }, []);
    return formatStrs.join('');
}
var getStyleString = function getStyleString(style) {
    return Object.keys(style).reduce(function(result, s) {
        return "".concat(result).concat(camelToMiddleLine(s), ":").concat(autoCompleteStyle(s, style[s]), ";");
    }, '');
};
function removeInvalidKeys(obj) {
    var copyObj = _objectSpread({}, obj);
    Object.keys(copyObj).forEach(function(key) {
        if (!copyObj[key]) delete copyObj[key];
    });
    return copyObj;
}
var getStringSize = function getStringSize(text) {
    var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (text === undefined || text === null || (0, _global.Global).isSsr) return {
        width: 0,
        height: 0
    };
    var copyStyle = removeInvalidKeys(style);
    var cacheKey = JSON.stringify({
        text: text,
        copyStyle: copyStyle
    });
    if (stringCache.widthCache[cacheKey]) return stringCache.widthCache[cacheKey];
    try {
        var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
        if (!measurementSpan) {
            measurementSpan = document.createElement('span');
            measurementSpan.setAttribute('id', MEASUREMENT_SPAN_ID);
            measurementSpan.setAttribute('aria-hidden', 'true');
            document.body.appendChild(measurementSpan);
        }
        // Need to use CSS Object Model (CSSOM) to be able to comply with Content Security Policy (CSP)
        // https://en.wikipedia.org/wiki/Content_Security_Policy
        var measurementSpanStyle = _objectSpread(_objectSpread({}, SPAN_STYLE), copyStyle);
        Object.assign(measurementSpan.style, measurementSpanStyle);
        measurementSpan.textContent = "".concat(text);
        var rect = measurementSpan.getBoundingClientRect();
        var result = {
            width: rect.width,
            height: rect.height
        };
        stringCache.widthCache[cacheKey] = result;
        if (++stringCache.cacheCount > MAX_CACHE_NUM) {
            stringCache.cacheCount = 0;
            stringCache.widthCache = {};
        }
        return result;
    } catch (e) {
        return {
            width: 0,
            height: 0
        };
    }
};
var getOffset = function getOffset(rect) {
    return {
        top: rect.top + window.scrollY - document.documentElement.clientTop,
        left: rect.left + window.scrollX - document.documentElement.clientLeft
    };
};

},{"./Global":"7oO43","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9AdBA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "safeEvaluateExpression", ()=>safeEvaluateExpression);
parcelHelpers.export(exports, "reduceCSSCalc", ()=>reduceCSSCalc);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var MULTIPLY_OR_DIVIDE_REGEX = /(-?\d+(?:\.\d+)?[a-zA-Z%]*)([*/])(-?\d+(?:\.\d+)?[a-zA-Z%]*)/;
var ADD_OR_SUBTRACT_REGEX = /(-?\d+(?:\.\d+)?[a-zA-Z%]*)([+-])(-?\d+(?:\.\d+)?[a-zA-Z%]*)/;
var CSS_LENGTH_UNIT_REGEX = /^px|cm|vh|vw|em|rem|%|mm|in|pt|pc|ex|ch|vmin|vmax|Q$/;
var NUM_SPLIT_REGEX = /(-?\d+(?:\.\d+)?)([a-zA-Z%]+)?/;
var CONVERSION_RATES = {
    cm: 96 / 2.54,
    mm: 96 / 25.4,
    pt: 96 / 72,
    pc: 16,
    "in": 96,
    Q: 96 / 101.6,
    px: 1
};
var FIXED_CSS_LENGTH_UNITS = Object.keys(CONVERSION_RATES);
var STR_NAN = 'NaN';
function convertToPx(value, unit) {
    return value * CONVERSION_RATES[unit];
}
var DecimalCSS = /*#__PURE__*/ function() {
    function DecimalCSS(num, unit) {
        _classCallCheck(this, DecimalCSS);
        this.num = num;
        this.unit = unit;
        this.num = num;
        this.unit = unit;
        if (Number.isNaN(num)) this.unit = '';
        if (unit !== '' && !CSS_LENGTH_UNIT_REGEX.test(unit)) {
            this.num = NaN;
            this.unit = '';
        }
        if (FIXED_CSS_LENGTH_UNITS.includes(unit)) {
            this.num = convertToPx(num, unit);
            this.unit = 'px';
        }
    }
    return _createClass(DecimalCSS, [
        {
            key: "add",
            value: function add(other) {
                if (this.unit !== other.unit) return new DecimalCSS(NaN, '');
                return new DecimalCSS(this.num + other.num, this.unit);
            }
        },
        {
            key: "subtract",
            value: function subtract(other) {
                if (this.unit !== other.unit) return new DecimalCSS(NaN, '');
                return new DecimalCSS(this.num - other.num, this.unit);
            }
        },
        {
            key: "multiply",
            value: function multiply(other) {
                if (this.unit !== '' && other.unit !== '' && this.unit !== other.unit) return new DecimalCSS(NaN, '');
                return new DecimalCSS(this.num * other.num, this.unit || other.unit);
            }
        },
        {
            key: "divide",
            value: function divide(other) {
                if (this.unit !== '' && other.unit !== '' && this.unit !== other.unit) return new DecimalCSS(NaN, '');
                return new DecimalCSS(this.num / other.num, this.unit || other.unit);
            }
        },
        {
            key: "toString",
            value: function toString() {
                return "".concat(this.num).concat(this.unit);
            }
        },
        {
            key: "isNaN",
            value: function isNaN() {
                return Number.isNaN(this.num);
            }
        }
    ], [
        {
            key: "parse",
            value: function parse(str) {
                var _NUM_SPLIT_REGEX$exec;
                var _ref = (_NUM_SPLIT_REGEX$exec = NUM_SPLIT_REGEX.exec(str)) !== null && _NUM_SPLIT_REGEX$exec !== void 0 ? _NUM_SPLIT_REGEX$exec : [], _ref2 = _slicedToArray(_ref, 3), numStr = _ref2[1], unit = _ref2[2];
                return new DecimalCSS(parseFloat(numStr), unit !== null && unit !== void 0 ? unit : '');
            }
        }
    ]);
}();
function calculateArithmetic(expr) {
    if (expr.includes(STR_NAN)) return STR_NAN;
    var newExpr = expr;
    while(newExpr.includes('*') || newExpr.includes('/')){
        var _MULTIPLY_OR_DIVIDE_R;
        var _ref3 = (_MULTIPLY_OR_DIVIDE_R = MULTIPLY_OR_DIVIDE_REGEX.exec(newExpr)) !== null && _MULTIPLY_OR_DIVIDE_R !== void 0 ? _MULTIPLY_OR_DIVIDE_R : [], _ref4 = _slicedToArray(_ref3, 4), leftOperand = _ref4[1], operator = _ref4[2], rightOperand = _ref4[3];
        var lTs = DecimalCSS.parse(leftOperand !== null && leftOperand !== void 0 ? leftOperand : '');
        var rTs = DecimalCSS.parse(rightOperand !== null && rightOperand !== void 0 ? rightOperand : '');
        var result = operator === '*' ? lTs.multiply(rTs) : lTs.divide(rTs);
        if (result.isNaN()) return STR_NAN;
        newExpr = newExpr.replace(MULTIPLY_OR_DIVIDE_REGEX, result.toString());
    }
    while(newExpr.includes('+') || /.-\d+(?:\.\d+)?/.test(newExpr)){
        var _ADD_OR_SUBTRACT_REGE;
        var _ref5 = (_ADD_OR_SUBTRACT_REGE = ADD_OR_SUBTRACT_REGEX.exec(newExpr)) !== null && _ADD_OR_SUBTRACT_REGE !== void 0 ? _ADD_OR_SUBTRACT_REGE : [], _ref6 = _slicedToArray(_ref5, 4), _leftOperand = _ref6[1], _operator = _ref6[2], _rightOperand = _ref6[3];
        var _lTs = DecimalCSS.parse(_leftOperand !== null && _leftOperand !== void 0 ? _leftOperand : '');
        var _rTs = DecimalCSS.parse(_rightOperand !== null && _rightOperand !== void 0 ? _rightOperand : '');
        var _result = _operator === '+' ? _lTs.add(_rTs) : _lTs.subtract(_rTs);
        if (_result.isNaN()) return STR_NAN;
        newExpr = newExpr.replace(ADD_OR_SUBTRACT_REGEX, _result.toString());
    }
    return newExpr;
}
var PARENTHESES_REGEX = /\(([^()]*)\)/;
function calculateParentheses(expr) {
    var newExpr = expr;
    while(newExpr.includes('(')){
        var _PARENTHESES_REGEX$ex = PARENTHESES_REGEX.exec(newExpr), _PARENTHESES_REGEX$ex2 = _slicedToArray(_PARENTHESES_REGEX$ex, 2), parentheticalExpression = _PARENTHESES_REGEX$ex2[1];
        newExpr = newExpr.replace(PARENTHESES_REGEX, calculateArithmetic(parentheticalExpression));
    }
    return newExpr;
}
function evaluateExpression(expression) {
    var newExpr = expression.replace(/\s+/g, '');
    newExpr = calculateParentheses(newExpr);
    newExpr = calculateArithmetic(newExpr);
    return newExpr;
}
function safeEvaluateExpression(expression) {
    try {
        return evaluateExpression(expression);
    } catch (e) {
        /* istanbul ignore next */ return STR_NAN;
    }
}
function reduceCSSCalc(expression) {
    var result = safeEvaluateExpression(expression.slice(5, -1));
    if (result === STR_NAN) // notify the user
    return '';
    return result;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b8wtn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Label", ()=>Label);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _isObject = require("lodash/isObject");
var _isObjectDefault = parcelHelpers.interopDefault(_isObject);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _text = require("./Text");
var _reactUtils = require("../util/ReactUtils");
var _dataUtils = require("../util/DataUtils");
var _polarUtils = require("../util/PolarUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var _excluded = [
    "offset"
];
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
var getLabel = function getLabel(props) {
    var value = props.value, formatter = props.formatter;
    var label = (0, _isNilDefault.default)(props.children) ? value : props.children;
    if ((0, _isFunctionDefault.default)(formatter)) return formatter(label);
    return label;
};
var getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {
    var sign = (0, _dataUtils.mathSign)(endAngle - startAngle);
    var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
    return sign * deltaAngle;
};
var renderRadialLabel = function renderRadialLabel(labelProps, label, attrs) {
    var position = labelProps.position, viewBox = labelProps.viewBox, offset = labelProps.offset, className = labelProps.className;
    var _ref = viewBox, cx = _ref.cx, cy = _ref.cy, innerRadius = _ref.innerRadius, outerRadius = _ref.outerRadius, startAngle = _ref.startAngle, endAngle = _ref.endAngle, clockWise = _ref.clockWise;
    var radius = (innerRadius + outerRadius) / 2;
    var deltaAngle = getDeltaAngle(startAngle, endAngle);
    var sign = deltaAngle >= 0 ? 1 : -1;
    var labelAngle, direction;
    if (position === 'insideStart') {
        labelAngle = startAngle + sign * offset;
        direction = clockWise;
    } else if (position === 'insideEnd') {
        labelAngle = endAngle - sign * offset;
        direction = !clockWise;
    } else if (position === 'end') {
        labelAngle = endAngle + sign * offset;
        direction = clockWise;
    }
    direction = deltaAngle <= 0 ? direction : !direction;
    var startPoint = (0, _polarUtils.polarToCartesian)(cx, cy, radius, labelAngle);
    var endPoint = (0, _polarUtils.polarToCartesian)(cx, cy, radius, labelAngle + (direction ? 1 : -1) * 359);
    var path = "M".concat(startPoint.x, ",").concat(startPoint.y, "\n    A").concat(radius, ",").concat(radius, ",0,1,").concat(direction ? 0 : 1, ",\n    ").concat(endPoint.x, ",").concat(endPoint.y);
    var id = (0, _isNilDefault.default)(labelProps.id) ? (0, _dataUtils.uniqueId)('recharts-radial-line-') : labelProps.id;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("text", _extends({}, attrs, {
        dominantBaseline: "central",
        className: (0, _clsxDefault.default)('recharts-radial-bar-label', className)
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement("defs", null, /*#__PURE__*/ (0, _reactDefault.default).createElement("path", {
        id: id,
        d: path
    })), /*#__PURE__*/ (0, _reactDefault.default).createElement("textPath", {
        xlinkHref: "#".concat(id)
    }, label));
};
var getAttrsOfPolarLabel = function getAttrsOfPolarLabel(props) {
    var viewBox = props.viewBox, offset = props.offset, position = props.position;
    var _ref2 = viewBox, cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
    var midAngle = (startAngle + endAngle) / 2;
    if (position === 'outside') {
        var _polarToCartesian = (0, _polarUtils.polarToCartesian)(cx, cy, outerRadius + offset, midAngle), _x = _polarToCartesian.x, _y = _polarToCartesian.y;
        return {
            x: _x,
            y: _y,
            textAnchor: _x >= cx ? 'start' : 'end',
            verticalAnchor: 'middle'
        };
    }
    if (position === 'center') return {
        x: cx,
        y: cy,
        textAnchor: 'middle',
        verticalAnchor: 'middle'
    };
    if (position === 'centerTop') return {
        x: cx,
        y: cy,
        textAnchor: 'middle',
        verticalAnchor: 'start'
    };
    if (position === 'centerBottom') return {
        x: cx,
        y: cy,
        textAnchor: 'middle',
        verticalAnchor: 'end'
    };
    var r = (innerRadius + outerRadius) / 2;
    var _polarToCartesian2 = (0, _polarUtils.polarToCartesian)(cx, cy, r, midAngle), x = _polarToCartesian2.x, y = _polarToCartesian2.y;
    return {
        x: x,
        y: y,
        textAnchor: 'middle',
        verticalAnchor: 'middle'
    };
};
var getAttrsOfCartesianLabel = function getAttrsOfCartesianLabel(props) {
    var viewBox = props.viewBox, parentViewBox = props.parentViewBox, offset = props.offset, position = props.position;
    var _ref3 = viewBox, x = _ref3.x, y = _ref3.y, width = _ref3.width, height = _ref3.height;
    // Define vertical offsets and position inverts based on the value being positive or negative
    var verticalSign = height >= 0 ? 1 : -1;
    var verticalOffset = verticalSign * offset;
    var verticalEnd = verticalSign > 0 ? 'end' : 'start';
    var verticalStart = verticalSign > 0 ? 'start' : 'end';
    // Define horizontal offsets and position inverts based on the value being positive or negative
    var horizontalSign = width >= 0 ? 1 : -1;
    var horizontalOffset = horizontalSign * offset;
    var horizontalEnd = horizontalSign > 0 ? 'end' : 'start';
    var horizontalStart = horizontalSign > 0 ? 'start' : 'end';
    if (position === 'top') {
        var attrs = {
            x: x + width / 2,
            y: y - verticalSign * offset,
            textAnchor: 'middle',
            verticalAnchor: verticalEnd
        };
        return _objectSpread(_objectSpread({}, attrs), parentViewBox ? {
            height: Math.max(y - parentViewBox.y, 0),
            width: width
        } : {});
    }
    if (position === 'bottom') {
        var _attrs = {
            x: x + width / 2,
            y: y + height + verticalOffset,
            textAnchor: 'middle',
            verticalAnchor: verticalStart
        };
        return _objectSpread(_objectSpread({}, _attrs), parentViewBox ? {
            height: Math.max(parentViewBox.y + parentViewBox.height - (y + height), 0),
            width: width
        } : {});
    }
    if (position === 'left') {
        var _attrs2 = {
            x: x - horizontalOffset,
            y: y + height / 2,
            textAnchor: horizontalEnd,
            verticalAnchor: 'middle'
        };
        return _objectSpread(_objectSpread({}, _attrs2), parentViewBox ? {
            width: Math.max(_attrs2.x - parentViewBox.x, 0),
            height: height
        } : {});
    }
    if (position === 'right') {
        var _attrs3 = {
            x: x + width + horizontalOffset,
            y: y + height / 2,
            textAnchor: horizontalStart,
            verticalAnchor: 'middle'
        };
        return _objectSpread(_objectSpread({}, _attrs3), parentViewBox ? {
            width: Math.max(parentViewBox.x + parentViewBox.width - _attrs3.x, 0),
            height: height
        } : {});
    }
    var sizeAttrs = parentViewBox ? {
        width: width,
        height: height
    } : {};
    if (position === 'insideLeft') return _objectSpread({
        x: x + horizontalOffset,
        y: y + height / 2,
        textAnchor: horizontalStart,
        verticalAnchor: 'middle'
    }, sizeAttrs);
    if (position === 'insideRight') return _objectSpread({
        x: x + width - horizontalOffset,
        y: y + height / 2,
        textAnchor: horizontalEnd,
        verticalAnchor: 'middle'
    }, sizeAttrs);
    if (position === 'insideTop') return _objectSpread({
        x: x + width / 2,
        y: y + verticalOffset,
        textAnchor: 'middle',
        verticalAnchor: verticalStart
    }, sizeAttrs);
    if (position === 'insideBottom') return _objectSpread({
        x: x + width / 2,
        y: y + height - verticalOffset,
        textAnchor: 'middle',
        verticalAnchor: verticalEnd
    }, sizeAttrs);
    if (position === 'insideTopLeft') return _objectSpread({
        x: x + horizontalOffset,
        y: y + verticalOffset,
        textAnchor: horizontalStart,
        verticalAnchor: verticalStart
    }, sizeAttrs);
    if (position === 'insideTopRight') return _objectSpread({
        x: x + width - horizontalOffset,
        y: y + verticalOffset,
        textAnchor: horizontalEnd,
        verticalAnchor: verticalStart
    }, sizeAttrs);
    if (position === 'insideBottomLeft') return _objectSpread({
        x: x + horizontalOffset,
        y: y + height - verticalOffset,
        textAnchor: horizontalStart,
        verticalAnchor: verticalEnd
    }, sizeAttrs);
    if (position === 'insideBottomRight') return _objectSpread({
        x: x + width - horizontalOffset,
        y: y + height - verticalOffset,
        textAnchor: horizontalEnd,
        verticalAnchor: verticalEnd
    }, sizeAttrs);
    if ((0, _isObjectDefault.default)(position) && ((0, _dataUtils.isNumber)(position.x) || (0, _dataUtils.isPercent)(position.x)) && ((0, _dataUtils.isNumber)(position.y) || (0, _dataUtils.isPercent)(position.y))) return _objectSpread({
        x: x + (0, _dataUtils.getPercentValue)(position.x, width),
        y: y + (0, _dataUtils.getPercentValue)(position.y, height),
        textAnchor: 'end',
        verticalAnchor: 'end'
    }, sizeAttrs);
    return _objectSpread({
        x: x + width / 2,
        y: y + height / 2,
        textAnchor: 'middle',
        verticalAnchor: 'middle'
    }, sizeAttrs);
};
var isPolar = function isPolar(viewBox) {
    return 'cx' in viewBox && (0, _dataUtils.isNumber)(viewBox.cx);
};
function Label(_ref4) {
    var _ref4$offset = _ref4.offset, offset = _ref4$offset === void 0 ? 5 : _ref4$offset, restProps = _objectWithoutProperties(_ref4, _excluded);
    var props = _objectSpread({
        offset: offset
    }, restProps);
    var viewBox = props.viewBox, position = props.position, value = props.value, children = props.children, content = props.content, _props$className = props.className, className = _props$className === void 0 ? '' : _props$className, textBreakAll = props.textBreakAll;
    if (!viewBox || (0, _isNilDefault.default)(value) && (0, _isNilDefault.default)(children) && !/*#__PURE__*/ (0, _react.isValidElement)(content) && !(0, _isFunctionDefault.default)(content)) return null;
    if (/*#__PURE__*/ (0, _react.isValidElement)(content)) return /*#__PURE__*/ (0, _react.cloneElement)(content, props);
    var label;
    if ((0, _isFunctionDefault.default)(content)) {
        label = /*#__PURE__*/ (0, _react.createElement)(content, props);
        if (/*#__PURE__*/ (0, _react.isValidElement)(label)) return label;
    } else label = getLabel(props);
    var isPolarLabel = isPolar(viewBox);
    var attrs = (0, _reactUtils.filterProps)(props, true);
    if (isPolarLabel && (position === 'insideStart' || position === 'insideEnd' || position === 'end')) return renderRadialLabel(props, label, attrs);
    var positionAttrs = isPolarLabel ? getAttrsOfPolarLabel(props) : getAttrsOfCartesianLabel(props);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({
        className: (0, _clsxDefault.default)('recharts-label', className)
    }, attrs, positionAttrs, {
        breakAll: textBreakAll
    }), label);
}
Label.displayName = 'Label';
var parseViewBox = function parseViewBox(props) {
    var cx = props.cx, cy = props.cy, angle = props.angle, startAngle = props.startAngle, endAngle = props.endAngle, r = props.r, radius = props.radius, innerRadius = props.innerRadius, outerRadius = props.outerRadius, x = props.x, y = props.y, top = props.top, left = props.left, width = props.width, height = props.height, clockWise = props.clockWise, labelViewBox = props.labelViewBox;
    if (labelViewBox) return labelViewBox;
    if ((0, _dataUtils.isNumber)(width) && (0, _dataUtils.isNumber)(height)) {
        if ((0, _dataUtils.isNumber)(x) && (0, _dataUtils.isNumber)(y)) return {
            x: x,
            y: y,
            width: width,
            height: height
        };
        if ((0, _dataUtils.isNumber)(top) && (0, _dataUtils.isNumber)(left)) return {
            x: top,
            y: left,
            width: width,
            height: height
        };
    }
    if ((0, _dataUtils.isNumber)(x) && (0, _dataUtils.isNumber)(y)) return {
        x: x,
        y: y,
        width: 0,
        height: 0
    };
    if ((0, _dataUtils.isNumber)(cx) && (0, _dataUtils.isNumber)(cy)) return {
        cx: cx,
        cy: cy,
        startAngle: startAngle || angle || 0,
        endAngle: endAngle || angle || 0,
        innerRadius: innerRadius || 0,
        outerRadius: outerRadius || radius || r || 0,
        clockWise: clockWise
    };
    if (props.viewBox) return props.viewBox;
    return {};
};
var parseLabel = function parseLabel(label, viewBox) {
    if (!label) return null;
    if (label === true) return /*#__PURE__*/ (0, _reactDefault.default).createElement(Label, {
        key: "label-implicit",
        viewBox: viewBox
    });
    if ((0, _dataUtils.isNumOrStr)(label)) return /*#__PURE__*/ (0, _reactDefault.default).createElement(Label, {
        key: "label-implicit",
        viewBox: viewBox,
        value: label
    });
    if (/*#__PURE__*/ (0, _react.isValidElement)(label)) {
        if (label.type === Label) return /*#__PURE__*/ (0, _react.cloneElement)(label, {
            key: 'label-implicit',
            viewBox: viewBox
        });
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(Label, {
            key: "label-implicit",
            content: label,
            viewBox: viewBox
        });
    }
    if ((0, _isFunctionDefault.default)(label)) return /*#__PURE__*/ (0, _reactDefault.default).createElement(Label, {
        key: "label-implicit",
        content: label,
        viewBox: viewBox
    });
    if ((0, _isObjectDefault.default)(label)) return /*#__PURE__*/ (0, _reactDefault.default).createElement(Label, _extends({
        viewBox: viewBox
    }, label, {
        key: "label-implicit"
    }));
    return null;
};
var renderCallByParent = function renderCallByParent(parentProps, viewBox) {
    var checkPropsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) return null;
    var children = parentProps.children;
    var parentViewBox = parseViewBox(parentProps);
    var explicitChildren = (0, _reactUtils.findAllByType)(children, Label).map(function(child, index) {
        return /*#__PURE__*/ (0, _react.cloneElement)(child, {
            viewBox: viewBox || parentViewBox,
            // eslint-disable-next-line react/no-array-index-key
            key: "label-".concat(index)
        });
    });
    if (!checkPropsLabel) return explicitChildren;
    var implicitLabel = parseLabel(parentProps.label, viewBox || parentViewBox);
    return [
        implicitLabel
    ].concat(_toConsumableArray(explicitChildren));
};
Label.parseViewBox = parseViewBox;
Label.renderCallByParent = renderCallByParent;

},{"react":"jMk1U","lodash/isNil":"66cvp","lodash/isFunction":"6aeG3","lodash/isObject":"ccoEe","clsx":"dOSJC","./Text":"9kjUm","../util/ReactUtils":"dvc7w","../util/DataUtils":"sgnJK","../util/PolarUtils":"4krqZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4krqZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RADIAN", ()=>RADIAN);
parcelHelpers.export(exports, "degreeToRadian", ()=>degreeToRadian);
parcelHelpers.export(exports, "radianToDegree", ()=>radianToDegree);
parcelHelpers.export(exports, "polarToCartesian", ()=>polarToCartesian);
parcelHelpers.export(exports, "getMaxRadius", ()=>getMaxRadius);
parcelHelpers.export(exports, "formatAxisMap", ()=>formatAxisMap);
parcelHelpers.export(exports, "distanceBetweenPoints", ()=>distanceBetweenPoints);
parcelHelpers.export(exports, "getAngleOfPoint", ()=>getAngleOfPoint);
parcelHelpers.export(exports, "formatAngleOfSector", ()=>formatAngleOfSector);
parcelHelpers.export(exports, "inRangeOfSector", ()=>inRangeOfSector);
parcelHelpers.export(exports, "getTickClassName", ()=>getTickClassName);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _react = require("react");
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _dataUtils = require("./DataUtils");
var _chartUtils = require("./ChartUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
var RADIAN = Math.PI / 180;
var degreeToRadian = function degreeToRadian(angle) {
    return angle * Math.PI / 180;
};
var radianToDegree = function radianToDegree(angleInRadian) {
    return angleInRadian * 180 / Math.PI;
};
var polarToCartesian = function polarToCartesian(cx, cy, radius, angle) {
    return {
        x: cx + Math.cos(-RADIAN * angle) * radius,
        y: cy + Math.sin(-RADIAN * angle) * radius
    };
};
var getMaxRadius = function getMaxRadius(width, height) {
    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    };
    return Math.min(Math.abs(width - (offset.left || 0) - (offset.right || 0)), Math.abs(height - (offset.top || 0) - (offset.bottom || 0))) / 2;
};
var formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {
    var width = props.width, height = props.height;
    var startAngle = props.startAngle, endAngle = props.endAngle;
    var cx = (0, _dataUtils.getPercentValue)(props.cx, width, width / 2);
    var cy = (0, _dataUtils.getPercentValue)(props.cy, height, height / 2);
    var maxRadius = getMaxRadius(width, height, offset);
    var innerRadius = (0, _dataUtils.getPercentValue)(props.innerRadius, maxRadius, 0);
    var outerRadius = (0, _dataUtils.getPercentValue)(props.outerRadius, maxRadius, maxRadius * 0.8);
    var ids = Object.keys(axisMap);
    return ids.reduce(function(result, id) {
        var axis = axisMap[id];
        var domain = axis.domain, reversed = axis.reversed;
        var range;
        if ((0, _isNilDefault.default)(axis.range)) {
            if (axisType === 'angleAxis') range = [
                startAngle,
                endAngle
            ];
            else if (axisType === 'radiusAxis') range = [
                innerRadius,
                outerRadius
            ];
            if (reversed) range = [
                range[1],
                range[0]
            ];
        } else {
            range = axis.range;
            var _range = range;
            var _range2 = _slicedToArray(_range, 2);
            startAngle = _range2[0];
            endAngle = _range2[1];
        }
        var _parseScale = (0, _chartUtils.parseScale)(axis, chartName), realScaleType = _parseScale.realScaleType, scale = _parseScale.scale;
        scale.domain(domain).range(range);
        (0, _chartUtils.checkDomainOfScale)(scale);
        var ticks = (0, _chartUtils.getTicksOfScale)(scale, _objectSpread(_objectSpread({}, axis), {}, {
            realScaleType: realScaleType
        }));
        var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {
            range: range,
            radius: outerRadius,
            realScaleType: realScaleType,
            scale: scale,
            cx: cx,
            cy: cy,
            innerRadius: innerRadius,
            outerRadius: outerRadius,
            startAngle: startAngle,
            endAngle: endAngle
        });
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));
    }, {});
};
var distanceBetweenPoints = function distanceBetweenPoints(point, anotherPoint) {
    var x1 = point.x, y1 = point.y;
    var x2 = anotherPoint.x, y2 = anotherPoint.y;
    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
};
var getAngleOfPoint = function getAngleOfPoint(_ref, _ref2) {
    var x = _ref.x, y = _ref.y;
    var cx = _ref2.cx, cy = _ref2.cy;
    var radius = distanceBetweenPoints({
        x: x,
        y: y
    }, {
        x: cx,
        y: cy
    });
    if (radius <= 0) return {
        radius: radius
    };
    var cos = (x - cx) / radius;
    var angleInRadian = Math.acos(cos);
    if (y > cy) angleInRadian = 2 * Math.PI - angleInRadian;
    return {
        radius: radius,
        angle: radianToDegree(angleInRadian),
        angleInRadian: angleInRadian
    };
};
var formatAngleOfSector = function formatAngleOfSector(_ref3) {
    var startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
    var startCnt = Math.floor(startAngle / 360);
    var endCnt = Math.floor(endAngle / 360);
    var min = Math.min(startCnt, endCnt);
    return {
        startAngle: startAngle - min * 360,
        endAngle: endAngle - min * 360
    };
};
var reverseFormatAngleOfSetor = function reverseFormatAngleOfSetor(angle, _ref4) {
    var startAngle = _ref4.startAngle, endAngle = _ref4.endAngle;
    var startCnt = Math.floor(startAngle / 360);
    var endCnt = Math.floor(endAngle / 360);
    var min = Math.min(startCnt, endCnt);
    return angle + min * 360;
};
var inRangeOfSector = function inRangeOfSector(_ref5, sector) {
    var x = _ref5.x, y = _ref5.y;
    var _getAngleOfPoint = getAngleOfPoint({
        x: x,
        y: y
    }, sector), radius = _getAngleOfPoint.radius, angle = _getAngleOfPoint.angle;
    var innerRadius = sector.innerRadius, outerRadius = sector.outerRadius;
    if (radius < innerRadius || radius > outerRadius) return false;
    if (radius === 0) return true;
    var _formatAngleOfSector = formatAngleOfSector(sector), startAngle = _formatAngleOfSector.startAngle, endAngle = _formatAngleOfSector.endAngle;
    var formatAngle = angle;
    var inRange;
    if (startAngle <= endAngle) {
        while(formatAngle > endAngle)formatAngle -= 360;
        while(formatAngle < startAngle)formatAngle += 360;
        inRange = formatAngle >= startAngle && formatAngle <= endAngle;
    } else {
        while(formatAngle > startAngle)formatAngle -= 360;
        while(formatAngle < endAngle)formatAngle += 360;
        inRange = formatAngle >= endAngle && formatAngle <= startAngle;
    }
    if (inRange) return _objectSpread(_objectSpread({}, sector), {}, {
        radius: radius,
        angle: reverseFormatAngleOfSetor(formatAngle, sector)
    });
    return null;
};
var getTickClassName = function getTickClassName(tick) {
    return !/*#__PURE__*/ (0, _react.isValidElement)(tick) && !(0, _isFunctionDefault.default)(tick) && typeof tick !== 'boolean' ? tick.className : '';
};

},{"lodash/isNil":"66cvp","react":"jMk1U","lodash/isFunction":"6aeG3","./DataUtils":"sgnJK","./ChartUtils":"58wJX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"58wJX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Exported for backwards compatibility
parcelHelpers.export(exports, "getLegendProps", ()=>(0, _getLegendProps.getLegendProps));
parcelHelpers.export(exports, "getValueByDataKey", ()=>getValueByDataKey);
/**
 * Get domain of data by key.
 * @param  {Array}   data      The data displayed in the chart
 * @param  {String}  key       The unique key of a group of data
 * @param  {String}  type      The type of axis
 * @param  {Boolean} filterNil Whether or not filter nil values
 * @return {Array} Domain of data
 */ parcelHelpers.export(exports, "getDomainOfDataByKey", ()=>getDomainOfDataByKey);
parcelHelpers.export(exports, "calculateActiveTickIndex", ()=>calculateActiveTickIndex);
parcelHelpers.export(exports, "getMainColorOfGraphicItem", ()=>getMainColorOfGraphicItem);
parcelHelpers.export(exports, "getBarSizeList", ()=>getBarSizeList);
parcelHelpers.export(exports, "getBarPosition", ()=>getBarPosition);
parcelHelpers.export(exports, "appendOffsetOfLegend", ()=>appendOffsetOfLegend);
parcelHelpers.export(exports, "getDomainOfErrorBars", ()=>getDomainOfErrorBars);
parcelHelpers.export(exports, "parseErrorBarsOfAxis", ()=>parseErrorBarsOfAxis);
parcelHelpers.export(exports, "getDomainOfItemsWithSameAxis", ()=>getDomainOfItemsWithSameAxis);
parcelHelpers.export(exports, "isCategoricalAxis", ()=>isCategoricalAxis);
parcelHelpers.export(exports, "getCoordinatesOfGrid", ()=>getCoordinatesOfGrid);
parcelHelpers.export(exports, "getTicksOfAxis", ()=>getTicksOfAxis);
parcelHelpers.export(exports, "combineEventHandlers", ()=>combineEventHandlers);
parcelHelpers.export(exports, "parseScale", ()=>parseScale);
parcelHelpers.export(exports, "checkDomainOfScale", ()=>checkDomainOfScale);
parcelHelpers.export(exports, "findPositionOfBar", ()=>findPositionOfBar);
parcelHelpers.export(exports, "truncateByDomain", ()=>truncateByDomain);
parcelHelpers.export(exports, "offsetSign", ()=>offsetSign);
parcelHelpers.export(exports, "offsetPositive", ()=>offsetPositive);
parcelHelpers.export(exports, "getStackedData", ()=>getStackedData);
parcelHelpers.export(exports, "getStackGroupsByAxisId", ()=>getStackGroupsByAxisId);
parcelHelpers.export(exports, "getTicksOfScale", ()=>getTicksOfScale);
parcelHelpers.export(exports, "getCateCoordinateOfLine", ()=>getCateCoordinateOfLine);
parcelHelpers.export(exports, "getCateCoordinateOfBar", ()=>getCateCoordinateOfBar);
parcelHelpers.export(exports, "getBaseValueOfBar", ()=>getBaseValueOfBar);
parcelHelpers.export(exports, "getStackedDataOfItem", ()=>getStackedDataOfItem);
parcelHelpers.export(exports, "getDomainOfStackGroups", ()=>getDomainOfStackGroups);
parcelHelpers.export(exports, "MIN_VALUE_REG", ()=>MIN_VALUE_REG);
parcelHelpers.export(exports, "MAX_VALUE_REG", ()=>MAX_VALUE_REG);
parcelHelpers.export(exports, "parseSpecifiedDomain", ()=>parseSpecifiedDomain);
parcelHelpers.export(exports, "getBandSizeOfAxis", ()=>getBandSizeOfAxis);
parcelHelpers.export(exports, "parseDomainOfCategoryAxis", ()=>parseDomainOfCategoryAxis);
parcelHelpers.export(exports, "getTooltipItem", ()=>getTooltipItem);
var _d3Scale = require("victory-vendor/d3-scale");
var _d3Shape = require("victory-vendor/d3-shape");
var _max = require("lodash/max");
var _maxDefault = parcelHelpers.interopDefault(_max);
var _min = require("lodash/min");
var _minDefault = parcelHelpers.interopDefault(_min);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _isString = require("lodash/isString");
var _isStringDefault = parcelHelpers.interopDefault(_isString);
var _get = require("lodash/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _flatMap = require("lodash/flatMap");
var _flatMapDefault = parcelHelpers.interopDefault(_flatMap);
var _isNaN = require("lodash/isNaN");
var _isNaNDefault = parcelHelpers.interopDefault(_isNaN);
var _upperFirst = require("lodash/upperFirst");
var _upperFirstDefault = parcelHelpers.interopDefault(_upperFirst);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _sortBy = require("lodash/sortBy");
var _sortByDefault = parcelHelpers.interopDefault(_sortBy);
var _rechartsScale = require("recharts-scale");
var _errorBar = require("../cartesian/ErrorBar");
var _dataUtils = require("./DataUtils");
var _reactUtils = require("./ReactUtils");
// TODO: Cause of circular dependency. Needs refactor.
// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';
var _getLegendProps = require("./getLegendProps");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function getValueByDataKey(obj, dataKey, defaultValue) {
    if ((0, _isNilDefault.default)(obj) || (0, _isNilDefault.default)(dataKey)) return defaultValue;
    if ((0, _dataUtils.isNumOrStr)(dataKey)) return (0, _getDefault.default)(obj, dataKey, defaultValue);
    if ((0, _isFunctionDefault.default)(dataKey)) return dataKey(obj);
    return defaultValue;
}
function getDomainOfDataByKey(data, key, type, filterNil) {
    var flattenData = (0, _flatMapDefault.default)(data, function(entry) {
        return getValueByDataKey(entry, key);
    });
    if (type === 'number') {
        // @ts-expect-error parseFloat type only accepts strings
        var domain = flattenData.filter(function(entry) {
            return (0, _dataUtils.isNumber)(entry) || parseFloat(entry);
        });
        return domain.length ? [
            (0, _minDefault.default)(domain),
            (0, _maxDefault.default)(domain)
        ] : [
            Infinity,
            -Infinity
        ];
    }
    var validateData = filterNil ? flattenData.filter(function(entry) {
        return !(0, _isNilDefault.default)(entry);
    }) : flattenData;
    // Supports x-axis of Date type
    return validateData.map(function(entry) {
        return (0, _dataUtils.isNumOrStr)(entry) || entry instanceof Date ? entry : '';
    });
}
var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate) {
    var _ticks$length;
    var ticks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var unsortedTicks = arguments.length > 2 ? arguments[2] : undefined;
    var axis = arguments.length > 3 ? arguments[3] : undefined;
    var index = -1;
    var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;
    // if there are 1 or less ticks ticks then the active tick is at index 0
    if (len <= 1) return 0;
    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {
        var range = axis.range;
        // ticks are distributed in a circle
        for(var i = 0; i < len; i++){
            var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;
            var cur = unsortedTicks[i].coordinate;
            var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;
            var sameDirectionCoord = void 0;
            if ((0, _dataUtils.mathSign)(cur - before) !== (0, _dataUtils.mathSign)(after - cur)) {
                var diffInterval = [];
                if ((0, _dataUtils.mathSign)(after - cur) === (0, _dataUtils.mathSign)(range[1] - range[0])) {
                    sameDirectionCoord = after;
                    var curInRange = cur + range[1] - range[0];
                    diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);
                    diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);
                } else {
                    sameDirectionCoord = before;
                    var afterInRange = after + range[1] - range[0];
                    diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);
                    diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);
                }
                var sameInterval = [
                    Math.min(cur, (sameDirectionCoord + cur) / 2),
                    Math.max(cur, (sameDirectionCoord + cur) / 2)
                ];
                if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {
                    index = unsortedTicks[i].index;
                    break;
                }
            } else {
                var minValue = Math.min(before, after);
                var maxValue = Math.max(before, after);
                if (coordinate > (minValue + cur) / 2 && coordinate <= (maxValue + cur) / 2) {
                    index = unsortedTicks[i].index;
                    break;
                }
            }
        }
    } else {
        // ticks are distributed in a single direction
        for(var _i = 0; _i < len; _i++)if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {
            index = ticks[_i].index;
            break;
        }
    }
    return index;
};
var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {
    var _item$type;
    var _ref = item, displayName = _ref.type.displayName; // TODO: check if displayName is valid.
    var defaultedProps = (_item$type = item.type) !== null && _item$type !== void 0 && _item$type.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
    var stroke = defaultedProps.stroke, fill = defaultedProps.fill;
    var result;
    switch(displayName){
        case 'Line':
            result = stroke;
            break;
        case 'Area':
        case 'Radar':
            result = stroke && stroke !== 'none' ? stroke : fill;
            break;
        default:
            result = fill;
            break;
    }
    return result;
};
var getBarSizeList = function getBarSizeList(_ref2) {
    var globalSize = _ref2.barSize, totalSize = _ref2.totalSize, _ref2$stackGroups = _ref2.stackGroups, stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;
    if (!stackGroups) return {};
    var result = {};
    var numericAxisIds = Object.keys(stackGroups);
    for(var i = 0, len = numericAxisIds.length; i < len; i++){
        var sgs = stackGroups[numericAxisIds[i]].stackGroups;
        var stackIds = Object.keys(sgs);
        for(var j = 0, sLen = stackIds.length; j < sLen; j++){
            var _sgs$stackIds$j = sgs[stackIds[j]], items = _sgs$stackIds$j.items, cateAxisId = _sgs$stackIds$j.cateAxisId;
            var barItems = items.filter(function(item) {
                return (0, _reactUtils.getDisplayName)(item.type).indexOf('Bar') >= 0;
            });
            if (barItems && barItems.length) {
                var barItemDefaultProps = barItems[0].type.defaultProps;
                var barItemProps = barItemDefaultProps !== undefined ? _objectSpread(_objectSpread({}, barItemDefaultProps), barItems[0].props) : barItems[0].props;
                var selfSize = barItemProps.barSize;
                var cateId = barItemProps[cateAxisId];
                if (!result[cateId]) result[cateId] = [];
                var barSize = (0, _isNilDefault.default)(selfSize) ? globalSize : selfSize;
                result[cateId].push({
                    item: barItems[0],
                    stackList: barItems.slice(1),
                    barSize: (0, _isNilDefault.default)(barSize) ? undefined : (0, _dataUtils.getPercentValue)(barSize, totalSize, 0)
                });
            }
        }
    }
    return result;
};
var getBarPosition = function getBarPosition(_ref3) {
    var barGap = _ref3.barGap, barCategoryGap = _ref3.barCategoryGap, bandSize = _ref3.bandSize, _ref3$sizeList = _ref3.sizeList, sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList, maxBarSize = _ref3.maxBarSize;
    var len = sizeList.length;
    if (len < 1) return null;
    var realBarGap = (0, _dataUtils.getPercentValue)(barGap, bandSize, 0, true);
    var result;
    var initialValue = [];
    // whether or not is barSize setted by user
    if (sizeList[0].barSize === +sizeList[0].barSize) {
        var useFull = false;
        var fullBarSize = bandSize / len;
        // @ts-expect-error the type check above does not check for type number explicitly
        var sum = sizeList.reduce(function(res, entry) {
            return res + entry.barSize || 0;
        }, 0);
        sum += (len - 1) * realBarGap;
        if (sum >= bandSize) {
            sum -= (len - 1) * realBarGap;
            realBarGap = 0;
        }
        if (sum >= bandSize && fullBarSize > 0) {
            useFull = true;
            fullBarSize *= 0.9;
            sum = len * fullBarSize;
        }
        var offset = (bandSize - sum) / 2 >> 0;
        var prev = {
            offset: offset - realBarGap,
            size: 0
        };
        result = sizeList.reduce(function(res, entry) {
            var newPosition = {
                item: entry.item,
                position: {
                    offset: prev.offset + prev.size + realBarGap,
                    // @ts-expect-error the type check above does not check for type number explicitly
                    size: useFull ? fullBarSize : entry.barSize
                }
            };
            var newRes = [].concat(_toConsumableArray(res), [
                newPosition
            ]);
            prev = newRes[newRes.length - 1].position;
            if (entry.stackList && entry.stackList.length) entry.stackList.forEach(function(item) {
                newRes.push({
                    item: item,
                    position: prev
                });
            });
            return newRes;
        }, initialValue);
    } else {
        var _offset = (0, _dataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);
        if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) realBarGap = 0;
        var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;
        if (originalSize > 1) originalSize >>= 0;
        var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;
        result = sizeList.reduce(function(res, entry, i) {
            var newRes = [].concat(_toConsumableArray(res), [
                {
                    item: entry.item,
                    position: {
                        offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,
                        size: size
                    }
                }
            ]);
            if (entry.stackList && entry.stackList.length) entry.stackList.forEach(function(item) {
                newRes.push({
                    item: item,
                    position: newRes[newRes.length - 1].position
                });
            });
            return newRes;
        }, initialValue);
    }
    return result;
};
var appendOffsetOfLegend = function appendOffsetOfLegend(offset, _unused, props, legendBox) {
    var children = props.children, width = props.width, margin = props.margin;
    var legendWidth = width - (margin.left || 0) - (margin.right || 0);
    var legendProps = (0, _getLegendProps.getLegendProps)({
        children: children,
        legendWidth: legendWidth
    });
    if (legendProps) {
        var _ref4 = legendBox || {}, boxWidth = _ref4.width, boxHeight = _ref4.height;
        var align = legendProps.align, verticalAlign = legendProps.verticalAlign, layout = legendProps.layout;
        if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'middle') && align !== 'center' && (0, _dataUtils.isNumber)(offset[align])) return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));
        if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && verticalAlign !== 'middle' && (0, _dataUtils.isNumber)(offset[verticalAlign])) return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));
    }
    return offset;
};
var isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis(layout, axisType, direction) {
    if ((0, _isNilDefault.default)(axisType)) return true;
    if (layout === 'horizontal') return axisType === 'yAxis';
    if (layout === 'vertical') return axisType === 'xAxis';
    if (direction === 'x') return axisType === 'xAxis';
    if (direction === 'y') return axisType === 'yAxis';
    return true;
};
var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, layout, axisType) {
    var children = item.props.children;
    var errorBars = (0, _reactUtils.findAllByType)(children, (0, _errorBar.ErrorBar)).filter(function(errorBarChild) {
        return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);
    });
    if (errorBars && errorBars.length) {
        var keys = errorBars.map(function(errorBarChild) {
            return errorBarChild.props.dataKey;
        });
        return data.reduce(function(result, entry) {
            var entryValue = getValueByDataKey(entry, dataKey);
            if ((0, _isNilDefault.default)(entryValue)) return result;
            var mainValue = Array.isArray(entryValue) ? [
                (0, _minDefault.default)(entryValue),
                (0, _maxDefault.default)(entryValue)
            ] : [
                entryValue,
                entryValue
            ];
            var errorDomain = keys.reduce(function(prevErrorArr, k) {
                var errorValue = getValueByDataKey(entry, k, 0);
                var lowerValue = mainValue[0] - Math.abs(Array.isArray(errorValue) ? errorValue[0] : errorValue);
                var upperValue = mainValue[1] + Math.abs(Array.isArray(errorValue) ? errorValue[1] : errorValue);
                return [
                    Math.min(lowerValue, prevErrorArr[0]),
                    Math.max(upperValue, prevErrorArr[1])
                ];
            }, [
                Infinity,
                -Infinity
            ]);
            return [
                Math.min(errorDomain[0], result[0]),
                Math.max(errorDomain[1], result[1])
            ];
        }, [
            Infinity,
            -Infinity
        ]);
    }
    return null;
};
var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType, layout) {
    var domains = items.map(function(item) {
        return getDomainOfErrorBars(data, item, dataKey, layout, axisType);
    }).filter(function(entry) {
        return !(0, _isNilDefault.default)(entry);
    });
    if (domains && domains.length) return domains.reduce(function(result, entry) {
        return [
            Math.min(result[0], entry[0]),
            Math.max(result[1], entry[1])
        ];
    }, [
        Infinity,
        -Infinity
    ]);
    return null;
};
var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, layout, filterNil) {
    var domains = items.map(function(item) {
        var dataKey = item.props.dataKey;
        if (type === 'number' && dataKey) return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);
        return getDomainOfDataByKey(data, dataKey, type, filterNil);
    });
    if (type === 'number') // Calculate the domain of number axis
    return domains.reduce(// @ts-expect-error if (type === number) means that the domain is numerical type
    // - but this link is missing in the type definition
    function(result, entry) {
        return [
            Math.min(result[0], entry[0]),
            Math.max(result[1], entry[1])
        ];
    }, [
        Infinity,
        -Infinity
    ]);
    var tag = {};
    // Get the union set of category axis
    return domains.reduce(function(result, entry) {
        for(var i = 0, len = entry.length; i < len; i++)// @ts-expect-error Date cannot index an object
        if (!tag[entry[i]]) {
            // @ts-expect-error Date cannot index an object
            tag[entry[i]] = true;
            // @ts-expect-error Date cannot index an object
            result.push(entry[i]);
        }
        return result;
    }, []);
};
var isCategoricalAxis = function isCategoricalAxis(layout, axisType) {
    return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';
};
var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, minValue, maxValue, syncWithTicks) {
    if (syncWithTicks) return ticks.map(function(entry) {
        return entry.coordinate;
    });
    var hasMin, hasMax;
    var values = ticks.map(function(entry) {
        if (entry.coordinate === minValue) hasMin = true;
        if (entry.coordinate === maxValue) hasMax = true;
        return entry.coordinate;
    });
    if (!hasMin) values.push(minValue);
    if (!hasMax) values.push(maxValue);
    return values;
};
var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {
    if (!axis) return null;
    var scale = axis.scale;
    var duplicateDomain = axis.duplicateDomain, type = axis.type, range = axis.range;
    var offsetForBand = axis.realScaleType === 'scaleBand' ? scale.bandwidth() / 2 : 2;
    var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;
    offset = axis.axisType === 'angleAxis' && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? (0, _dataUtils.mathSign)(range[0] - range[1]) * 2 * offset : offset;
    // The ticks set by user should only affect the ticks adjacent to axis line
    if (isGrid && (axis.ticks || axis.niceTicks)) {
        var result = (axis.ticks || axis.niceTicks).map(function(entry) {
            var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;
            return {
                // If the scaleContent is not a number, the coordinate will be NaN.
                // That could be the case for example with a PointScale and a string as domain.
                coordinate: scale(scaleContent) + offset,
                value: entry,
                offset: offset
            };
        });
        return result.filter(function(row) {
            return !(0, _isNaNDefault.default)(row.coordinate);
        });
    }
    // When axis is a categorial axis, but the type of axis is number or the scale of axis is not "auto"
    if (axis.isCategorical && axis.categoricalDomain) return axis.categoricalDomain.map(function(entry, index) {
        return {
            coordinate: scale(entry) + offset,
            value: entry,
            index: index,
            offset: offset
        };
    });
    if (scale.ticks && !isAll) return scale.ticks(axis.tickCount).map(function(entry) {
        return {
            coordinate: scale(entry) + offset,
            value: entry,
            offset: offset
        };
    });
    // When axis has duplicated text, serial numbers are used to generate scale
    return scale.domain().map(function(entry, index) {
        return {
            coordinate: scale(entry) + offset,
            value: duplicateDomain ? duplicateDomain[entry] : entry,
            index: index,
            offset: offset
        };
    });
};
/**
 * combine the handlers
 * @param  {Function} defaultHandler Internal private handler
 * @param  {Function} childHandler Handler function specified in child component
 * @return {Function}                The combined handler
 */ var handlerWeakMap = new WeakMap();
var combineEventHandlers = function combineEventHandlers(defaultHandler, childHandler) {
    if (typeof childHandler !== 'function') return defaultHandler;
    if (!handlerWeakMap.has(defaultHandler)) handlerWeakMap.set(defaultHandler, new WeakMap());
    var childWeakMap = handlerWeakMap.get(defaultHandler);
    if (childWeakMap.has(childHandler)) return childWeakMap.get(childHandler);
    var combineHandler = function combineHandler() {
        defaultHandler.apply(void 0, arguments);
        childHandler.apply(void 0, arguments);
    };
    childWeakMap.set(childHandler, combineHandler);
    return combineHandler;
};
var parseScale = function parseScale(axis, chartType, hasBar) {
    var scale = axis.scale, type = axis.type, layout = axis.layout, axisType = axis.axisType;
    if (scale === 'auto') {
        if (layout === 'radial' && axisType === 'radiusAxis') return {
            scale: _d3Scale.scaleBand(),
            realScaleType: 'band'
        };
        if (layout === 'radial' && axisType === 'angleAxis') return {
            scale: _d3Scale.scaleLinear(),
            realScaleType: 'linear'
        };
        if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0 && !hasBar)) return {
            scale: _d3Scale.scalePoint(),
            realScaleType: 'point'
        };
        if (type === 'category') return {
            scale: _d3Scale.scaleBand(),
            realScaleType: 'band'
        };
        return {
            scale: _d3Scale.scaleLinear(),
            realScaleType: 'linear'
        };
    }
    if ((0, _isStringDefault.default)(scale)) {
        var name = "scale".concat((0, _upperFirstDefault.default)(scale));
        return {
            scale: (_d3Scale[name] || _d3Scale.scalePoint)(),
            realScaleType: _d3Scale[name] ? name : 'point'
        };
    }
    return (0, _isFunctionDefault.default)(scale) ? {
        scale: scale
    } : {
        scale: _d3Scale.scalePoint(),
        realScaleType: 'point'
    };
};
var EPS = 1e-4;
var checkDomainOfScale = function checkDomainOfScale(scale) {
    var domain = scale.domain();
    if (!domain || domain.length <= 2) return;
    var len = domain.length;
    var range = scale.range();
    var minValue = Math.min(range[0], range[1]) - EPS;
    var maxValue = Math.max(range[0], range[1]) + EPS;
    var first = scale(domain[0]);
    var last = scale(domain[len - 1]);
    if (first < minValue || first > maxValue || last < minValue || last > maxValue) scale.domain([
        domain[0],
        domain[len - 1]
    ]);
};
var findPositionOfBar = function findPositionOfBar(barPosition, child) {
    if (!barPosition) return null;
    for(var i = 0, len = barPosition.length; i < len; i++){
        if (barPosition[i].item === child) return barPosition[i].position;
    }
    return null;
};
var truncateByDomain = function truncateByDomain(value, domain) {
    if (!domain || domain.length !== 2 || !(0, _dataUtils.isNumber)(domain[0]) || !(0, _dataUtils.isNumber)(domain[1])) return value;
    var minValue = Math.min(domain[0], domain[1]);
    var maxValue = Math.max(domain[0], domain[1]);
    var result = [
        value[0],
        value[1]
    ];
    if (!(0, _dataUtils.isNumber)(value[0]) || value[0] < minValue) result[0] = minValue;
    if (!(0, _dataUtils.isNumber)(value[1]) || value[1] > maxValue) result[1] = maxValue;
    if (result[0] > maxValue) result[0] = maxValue;
    if (result[1] < minValue) result[1] = minValue;
    return result;
};
var offsetSign = function offsetSign(series) {
    var n = series.length;
    if (n <= 0) return;
    for(var j = 0, m = series[0].length; j < m; ++j){
        var positive = 0;
        var negative = 0;
        for(var i = 0; i < n; ++i){
            var value = (0, _isNaNDefault.default)(series[i][j][1]) ? series[i][j][0] : series[i][j][1];
            /* eslint-disable prefer-destructuring, no-param-reassign */ if (value >= 0) {
                series[i][j][0] = positive;
                series[i][j][1] = positive + value;
                positive = series[i][j][1];
            } else {
                series[i][j][0] = negative;
                series[i][j][1] = negative + value;
                negative = series[i][j][1];
            }
        /* eslint-enable prefer-destructuring, no-param-reassign */ }
    }
};
var offsetPositive = function offsetPositive(series) {
    var n = series.length;
    if (n <= 0) return;
    for(var j = 0, m = series[0].length; j < m; ++j){
        var positive = 0;
        for(var i = 0; i < n; ++i){
            var value = (0, _isNaNDefault.default)(series[i][j][1]) ? series[i][j][0] : series[i][j][1];
            /* eslint-disable prefer-destructuring, no-param-reassign */ if (value >= 0) {
                series[i][j][0] = positive;
                series[i][j][1] = positive + value;
                positive = series[i][j][1];
            } else {
                series[i][j][0] = 0;
                series[i][j][1] = 0;
            }
        /* eslint-enable prefer-destructuring, no-param-reassign */ }
    }
};
/**
 * Function type to compute offset for stacked data.
 *
 * d3-shape has something fishy going on with its types.
 * In @definitelytyped/d3-shape, this function (the offset accessor) is typed as Series<> => void.
 * However! When I actually open the storybook I can see that the offset accessor actually receives Array<Series<>>.
 * The same I can see in the source code itself:
 * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042
 * That one unfortunately has no types but we can tell it passes three-dimensional array.
 *
 * Which leads me to believe that definitelytyped is wrong on this one.
 * There's open discussion on this topic without much attention:
 * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042
 */ var STACK_OFFSET_MAP = {
    sign: offsetSign,
    // @ts-expect-error definitelytyped types are incorrect
    expand: (0, _d3Shape.stackOffsetExpand),
    // @ts-expect-error definitelytyped types are incorrect
    none: (0, _d3Shape.stackOffsetNone),
    // @ts-expect-error definitelytyped types are incorrect
    silhouette: (0, _d3Shape.stackOffsetSilhouette),
    // @ts-expect-error definitelytyped types are incorrect
    wiggle: (0, _d3Shape.stackOffsetWiggle),
    positive: offsetPositive
};
var getStackedData = function getStackedData(data, stackItems, offsetType) {
    var dataKeys = stackItems.map(function(item) {
        return item.props.dataKey;
    });
    var offsetAccessor = STACK_OFFSET_MAP[offsetType];
    var stack = (0, _d3Shape.stack)()// @ts-expect-error stack.keys type wants an array of strings, but we provide array of DataKeys
    .keys(dataKeys).value(function(d, key) {
        return +getValueByDataKey(d, key, 0);
    }).order((0, _d3Shape.stackOrderNone))// @ts-expect-error definitelytyped types are incorrect
    .offset(offsetAccessor);
    return stack(data);
};
var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {
    if (!data) return null;
    // reversing items to affect render order (for layering)
    var items = reverseStackOrder ? _items.reverse() : _items;
    var parentStackGroupsInitialValue = {};
    var stackGroups = items.reduce(function(result, item) {
        var _item$type2;
        var defaultedProps = (_item$type2 = item.type) !== null && _item$type2 !== void 0 && _item$type2.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
        var stackId = defaultedProps.stackId, hide = defaultedProps.hide;
        if (hide) return result;
        var axisId = defaultedProps[numericAxisId];
        var parentGroup = result[axisId] || {
            hasStack: false,
            stackGroups: {}
        };
        if ((0, _dataUtils.isNumOrStr)(stackId)) {
            var childGroup = parentGroup.stackGroups[stackId] || {
                numericAxisId: numericAxisId,
                cateAxisId: cateAxisId,
                items: []
            };
            childGroup.items.push(item);
            parentGroup.hasStack = true;
            parentGroup.stackGroups[stackId] = childGroup;
        } else parentGroup.stackGroups[(0, _dataUtils.uniqueId)('_stackId_')] = {
            numericAxisId: numericAxisId,
            cateAxisId: cateAxisId,
            items: [
                item
            ]
        };
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));
    }, parentStackGroupsInitialValue);
    var axisStackGroupsInitialValue = {};
    return Object.keys(stackGroups).reduce(function(result, axisId) {
        var group = stackGroups[axisId];
        if (group.hasStack) {
            var stackGroupsInitialValue = {};
            group.stackGroups = Object.keys(group.stackGroups).reduce(function(res, stackId) {
                var g = group.stackGroups[stackId];
                return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {
                    numericAxisId: numericAxisId,
                    cateAxisId: cateAxisId,
                    items: g.items,
                    stackedData: getStackedData(data, g.items, offsetType)
                }));
            }, stackGroupsInitialValue);
        }
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));
    }, axisStackGroupsInitialValue);
};
var getTicksOfScale = function getTicksOfScale(scale, opts) {
    var realScaleType = opts.realScaleType, type = opts.type, tickCount = opts.tickCount, originalDomain = opts.originalDomain, allowDecimals = opts.allowDecimals;
    var scaleType = realScaleType || opts.scale;
    if (scaleType !== 'auto' && scaleType !== 'linear') return null;
    if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {
        // Calculate the ticks by the number of grid when the axis is a number axis
        var domain = scale.domain();
        if (!domain.length) return null;
        var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);
        scale.domain([
            (0, _minDefault.default)(tickValues),
            (0, _maxDefault.default)(tickValues)
        ]);
        return {
            niceTicks: tickValues
        };
    }
    if (tickCount && type === 'number') {
        var _domain = scale.domain();
        var _tickValues = (0, _rechartsScale.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);
        return {
            niceTicks: _tickValues
        };
    }
    return null;
};
function getCateCoordinateOfLine(_ref5) {
    var axis = _ref5.axis, ticks = _ref5.ticks, bandSize = _ref5.bandSize, entry = _ref5.entry, index = _ref5.index, dataKey = _ref5.dataKey;
    if (axis.type === 'category') {
        // find coordinate of category axis by the value of category
        // @ts-expect-error why does this use direct object access instead of getValueByDataKey?
        if (!axis.allowDuplicatedCategory && axis.dataKey && !(0, _isNilDefault.default)(entry[axis.dataKey])) {
            // @ts-expect-error why does this use direct object access instead of getValueByDataKey?
            var matchedTick = (0, _dataUtils.findEntryInArray)(ticks, 'value', entry[axis.dataKey]);
            if (matchedTick) return matchedTick.coordinate + bandSize / 2;
        }
        return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;
    }
    var value = getValueByDataKey(entry, !(0, _isNilDefault.default)(dataKey) ? dataKey : axis.dataKey);
    return !(0, _isNilDefault.default)(value) ? axis.scale(value) : null;
}
var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref6) {
    var axis = _ref6.axis, ticks = _ref6.ticks, offset = _ref6.offset, bandSize = _ref6.bandSize, entry = _ref6.entry, index = _ref6.index;
    if (axis.type === 'category') return ticks[index] ? ticks[index].coordinate + offset : null;
    var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);
    return !(0, _isNilDefault.default)(value) ? axis.scale(value) - bandSize / 2 + offset : null;
};
var getBaseValueOfBar = function getBaseValueOfBar(_ref7) {
    var numericAxis = _ref7.numericAxis;
    var domain = numericAxis.scale.domain();
    if (numericAxis.type === 'number') {
        var minValue = Math.min(domain[0], domain[1]);
        var maxValue = Math.max(domain[0], domain[1]);
        if (minValue <= 0 && maxValue >= 0) return 0;
        if (maxValue < 0) return maxValue;
        return minValue;
    }
    return domain[0];
};
var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {
    var _item$type3;
    var defaultedProps = (_item$type3 = item.type) !== null && _item$type3 !== void 0 && _item$type3.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
    var stackId = defaultedProps.stackId;
    if ((0, _dataUtils.isNumOrStr)(stackId)) {
        var group = stackGroups[stackId];
        if (group) {
            var itemIndex = group.items.indexOf(item);
            return itemIndex >= 0 ? group.stackedData[itemIndex] : null;
        }
    }
    return null;
};
var getDomainOfSingle = function getDomainOfSingle(data) {
    return data.reduce(function(result, entry) {
        return [
            (0, _minDefault.default)(entry.concat([
                result[0]
            ]).filter((0, _dataUtils.isNumber))),
            (0, _maxDefault.default)(entry.concat([
                result[1]
            ]).filter((0, _dataUtils.isNumber)))
        ];
    }, [
        Infinity,
        -Infinity
    ]);
};
var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {
    return Object.keys(stackGroups).reduce(function(result, stackId) {
        var group = stackGroups[stackId];
        var stackedData = group.stackedData;
        var domain = stackedData.reduce(function(res, entry) {
            var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));
            return [
                Math.min(res[0], s[0]),
                Math.max(res[1], s[1])
            ];
        }, [
            Infinity,
            -Infinity
        ]);
        return [
            Math.min(domain[0], result[0]),
            Math.max(domain[1], result[1])
        ];
    }, [
        Infinity,
        -Infinity
    ]).map(function(result) {
        return result === Infinity || result === -Infinity ? 0 : result;
    });
};
var MIN_VALUE_REG = /^dataMin[\s]*-[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
var MAX_VALUE_REG = /^dataMax[\s]*\+[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {
    if ((0, _isFunctionDefault.default)(specifiedDomain)) return specifiedDomain(dataDomain, allowDataOverflow);
    if (!Array.isArray(specifiedDomain)) return dataDomain;
    var domain = [];
    /* eslint-disable prefer-destructuring */ if ((0, _dataUtils.isNumber)(specifiedDomain[0])) domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);
    else if (MIN_VALUE_REG.test(specifiedDomain[0])) {
        var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];
        domain[0] = dataDomain[0] - value;
    } else if ((0, _isFunctionDefault.default)(specifiedDomain[0])) domain[0] = specifiedDomain[0](dataDomain[0]);
    else domain[0] = dataDomain[0];
    if ((0, _dataUtils.isNumber)(specifiedDomain[1])) domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);
    else if (MAX_VALUE_REG.test(specifiedDomain[1])) {
        var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];
        domain[1] = dataDomain[1] + _value;
    } else if ((0, _isFunctionDefault.default)(specifiedDomain[1])) domain[1] = specifiedDomain[1](dataDomain[1]);
    else domain[1] = dataDomain[1];
    /* eslint-enable prefer-destructuring */ return domain;
};
var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {
    // @ts-expect-error we need to rethink scale type
    if (axis && axis.scale && axis.scale.bandwidth) {
        // @ts-expect-error we need to rethink scale type
        var bandWidth = axis.scale.bandwidth();
        if (!isBar || bandWidth > 0) return bandWidth;
    }
    if (axis && ticks && ticks.length >= 2) {
        var orderedTicks = (0, _sortByDefault.default)(ticks, function(o) {
            return o.coordinate;
        });
        var bandSize = Infinity;
        for(var i = 1, len = orderedTicks.length; i < len; i++){
            var cur = orderedTicks[i];
            var prev = orderedTicks[i - 1];
            bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);
        }
        return bandSize === Infinity ? 0 : bandSize;
    }
    return isBar ? undefined : 0;
};
var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {
    if (!specifiedDomain || !specifiedDomain.length) return calculatedDomain;
    if ((0, _isEqualDefault.default)(specifiedDomain, (0, _getDefault.default)(axisChild, 'type.defaultProps.domain'))) return calculatedDomain;
    return specifiedDomain;
};
var getTooltipItem = function getTooltipItem(graphicalItem, payload) {
    var defaultedProps = graphicalItem.type.defaultProps ? _objectSpread(_objectSpread({}, graphicalItem.type.defaultProps), graphicalItem.props) : graphicalItem.props;
    var dataKey = defaultedProps.dataKey, name = defaultedProps.name, unit = defaultedProps.unit, formatter = defaultedProps.formatter, tooltipType = defaultedProps.tooltipType, chartType = defaultedProps.chartType, hide = defaultedProps.hide;
    return _objectSpread(_objectSpread({}, (0, _reactUtils.filterProps)(graphicalItem, false)), {}, {
        dataKey: dataKey,
        unit: unit,
        formatter: formatter,
        name: name || dataKey,
        color: getMainColorOfGraphicItem(graphicalItem),
        value: getValueByDataKey(payload, dataKey),
        type: tooltipType,
        payload: payload,
        chartType: chartType,
        hide: hide
    });
};

},{"victory-vendor/d3-scale":"9qNmw","victory-vendor/d3-shape":"dyxsw","lodash/max":"1lVUh","lodash/min":"i6R0X","lodash/isNil":"66cvp","lodash/isFunction":"6aeG3","lodash/isString":"clHJ8","lodash/get":"ce8mt","lodash/flatMap":"6Cndj","lodash/isNaN":"f3jyo","lodash/upperFirst":"f6YEf","lodash/isEqual":"ep5zv","lodash/sortBy":"8hEur","recharts-scale":"8pIjU","../cartesian/ErrorBar":"exPuO","./DataUtils":"sgnJK","./ReactUtils":"dvc7w","./getLegendProps":"4qtvc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9qNmw":[function(require,module,exports,__globalThis) {
// `victory-vendor/d3-scale` (CommonJS)
// See upstream license: https://github.com/d3/d3-scale/blob/main/LICENSE
//
// This file only exists for tooling that doesn't work yet with package.json:exports
// by proxying through the CommonJS version.
module.exports = require("ea85efe7e401a98a");

},{"ea85efe7e401a98a":"jSi6f"}],"jSi6f":[function(require,module,exports,__globalThis) {
// `victory-vendor/d3-scale` (CommonJS)
// See upstream license: https://github.com/d3/d3-scale/blob/main/LICENSE
//
// Our CommonJS package relies on transpiled vendor files in `lib-vendor/d3-scale`
module.exports = require("9f3e91243b64b1b0");

},{"9f3e91243b64b1b0":"cqvGL"}],"cqvGL":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "scaleBand", {
    enumerable: true,
    get: function() {
        return _band.default;
    }
});
Object.defineProperty(exports, "scaleDiverging", {
    enumerable: true,
    get: function() {
        return _diverging.default;
    }
});
Object.defineProperty(exports, "scaleDivergingLog", {
    enumerable: true,
    get: function() {
        return _diverging.divergingLog;
    }
});
Object.defineProperty(exports, "scaleDivergingPow", {
    enumerable: true,
    get: function() {
        return _diverging.divergingPow;
    }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
    enumerable: true,
    get: function() {
        return _diverging.divergingSqrt;
    }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
    enumerable: true,
    get: function() {
        return _diverging.divergingSymlog;
    }
});
Object.defineProperty(exports, "scaleIdentity", {
    enumerable: true,
    get: function() {
        return _identity.default;
    }
});
Object.defineProperty(exports, "scaleImplicit", {
    enumerable: true,
    get: function() {
        return _ordinal.implicit;
    }
});
Object.defineProperty(exports, "scaleLinear", {
    enumerable: true,
    get: function() {
        return _linear.default;
    }
});
Object.defineProperty(exports, "scaleLog", {
    enumerable: true,
    get: function() {
        return _log.default;
    }
});
Object.defineProperty(exports, "scaleOrdinal", {
    enumerable: true,
    get: function() {
        return _ordinal.default;
    }
});
Object.defineProperty(exports, "scalePoint", {
    enumerable: true,
    get: function() {
        return _band.point;
    }
});
Object.defineProperty(exports, "scalePow", {
    enumerable: true,
    get: function() {
        return _pow.default;
    }
});
Object.defineProperty(exports, "scaleQuantile", {
    enumerable: true,
    get: function() {
        return _quantile.default;
    }
});
Object.defineProperty(exports, "scaleQuantize", {
    enumerable: true,
    get: function() {
        return _quantize.default;
    }
});
Object.defineProperty(exports, "scaleRadial", {
    enumerable: true,
    get: function() {
        return _radial.default;
    }
});
Object.defineProperty(exports, "scaleSequential", {
    enumerable: true,
    get: function() {
        return _sequential.default;
    }
});
Object.defineProperty(exports, "scaleSequentialLog", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialLog;
    }
});
Object.defineProperty(exports, "scaleSequentialPow", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialPow;
    }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
    enumerable: true,
    get: function() {
        return _sequentialQuantile.default;
    }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialSqrt;
    }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
    enumerable: true,
    get: function() {
        return _sequential.sequentialSymlog;
    }
});
Object.defineProperty(exports, "scaleSqrt", {
    enumerable: true,
    get: function() {
        return _pow.sqrt;
    }
});
Object.defineProperty(exports, "scaleSymlog", {
    enumerable: true,
    get: function() {
        return _symlog.default;
    }
});
Object.defineProperty(exports, "scaleThreshold", {
    enumerable: true,
    get: function() {
        return _threshold.default;
    }
});
Object.defineProperty(exports, "scaleTime", {
    enumerable: true,
    get: function() {
        return _time.default;
    }
});
Object.defineProperty(exports, "scaleUtc", {
    enumerable: true,
    get: function() {
        return _utcTime.default;
    }
});
Object.defineProperty(exports, "tickFormat", {
    enumerable: true,
    get: function() {
        return _tickFormat.default;
    }
});
var _band = _interopRequireWildcard(require("b63efb80eb4f3997"));
var _identity = _interopRequireDefault(require("599666f8569781e"));
var _linear = _interopRequireDefault(require("81a646a660f644b0"));
var _log = _interopRequireDefault(require("86d5f4344a349716"));
var _symlog = _interopRequireDefault(require("b710ccde4c0e48a2"));
var _ordinal = _interopRequireWildcard(require("64b86754e86644bb"));
var _pow = _interopRequireWildcard(require("b1b95f640cc918be"));
var _radial = _interopRequireDefault(require("a92c7cfb56bc5881"));
var _quantile = _interopRequireDefault(require("592c2efd5d96bbdb"));
var _quantize = _interopRequireDefault(require("e52ffbce45f03bde"));
var _threshold = _interopRequireDefault(require("d72c59b81e30fbb0"));
var _time = _interopRequireDefault(require("8a3bda0d92036416"));
var _utcTime = _interopRequireDefault(require("889651fd1a77d2be"));
var _sequential = _interopRequireWildcard(require("fd5b5906f4fcb1c8"));
var _sequentialQuantile = _interopRequireDefault(require("4430958b59fb539b"));
var _diverging = _interopRequireWildcard(require("f8014e5ceaa878fb"));
var _tickFormat = _interopRequireDefault(require("1391cb83b35daafe"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}

},{"b63efb80eb4f3997":"6ckak","599666f8569781e":"1XHs0","81a646a660f644b0":"4NohP","86d5f4344a349716":"169cR","b710ccde4c0e48a2":"fx5B6","64b86754e86644bb":"jOEGM","b1b95f640cc918be":"fkIxl","a92c7cfb56bc5881":"5JZ1D","592c2efd5d96bbdb":"alCqN","e52ffbce45f03bde":"jDbzM","d72c59b81e30fbb0":"96aDC","8a3bda0d92036416":"3GkXQ","889651fd1a77d2be":"2vSCH","fd5b5906f4fcb1c8":"lTYqO","4430958b59fb539b":"h7AuZ","f8014e5ceaa878fb":"1rUzv","1391cb83b35daafe":"31ukt"}],"6ckak":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = band;
exports.point = point;
var _index = require("c83c4aaf4d4f3e6c");
var _init = require("691f3ba4feec551a");
var _ordinal = _interopRequireDefault(require("933dd1d51fe58981"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function band() {
    var scale = (0, _ordinal.default)().unknown(undefined), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
    delete scale.unknown;
    function rescale() {
        var n = domain().length, reverse = r1 < r0, start = reverse ? r1 : r0, stop = reverse ? r0 : r1;
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round) step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = (0, _index.range)(n).map(function(i) {
            return start + step * i;
        });
        return ordinalRange(reverse ? values.reverse() : values);
    }
    scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale.range = function(_) {
        return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [
            r0,
            r1
        ];
    };
    scale.rangeRound = function(_) {
        return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
    };
    scale.bandwidth = function() {
        return bandwidth;
    };
    scale.step = function() {
        return step;
    };
    scale.round = function(_) {
        return arguments.length ? (round = !!_, rescale()) : round;
    };
    scale.padding = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
    };
    scale.paddingInner = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
    };
    scale.paddingOuter = function(_) {
        return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
    };
    scale.align = function(_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
    };
    scale.copy = function() {
        return band(domain(), [
            r0,
            r1
        ]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
    };
    return _init.initRange.apply(rescale(), arguments);
}
function pointish(scale) {
    var copy = scale.copy;
    scale.padding = scale.paddingOuter;
    delete scale.paddingInner;
    delete scale.paddingOuter;
    scale.copy = function() {
        return pointish(copy());
    };
    return scale;
}
function point() {
    return pointish(band.apply(null, arguments).paddingInner(1));
}

},{"c83c4aaf4d4f3e6c":"5l2OL","691f3ba4feec551a":"dMFaU","933dd1d51fe58981":"jOEGM"}],"5l2OL":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Adder", {
    enumerable: true,
    get: function() {
        return _fsum.Adder;
    }
});
Object.defineProperty(exports, "InternMap", {
    enumerable: true,
    get: function() {
        return _index.InternMap;
    }
});
Object.defineProperty(exports, "InternSet", {
    enumerable: true,
    get: function() {
        return _index.InternSet;
    }
});
Object.defineProperty(exports, "ascending", {
    enumerable: true,
    get: function() {
        return _ascending.default;
    }
});
Object.defineProperty(exports, "bin", {
    enumerable: true,
    get: function() {
        return _bin.default;
    }
});
Object.defineProperty(exports, "bisect", {
    enumerable: true,
    get: function() {
        return _bisect.default;
    }
});
Object.defineProperty(exports, "bisectCenter", {
    enumerable: true,
    get: function() {
        return _bisect.bisectCenter;
    }
});
Object.defineProperty(exports, "bisectLeft", {
    enumerable: true,
    get: function() {
        return _bisect.bisectLeft;
    }
});
Object.defineProperty(exports, "bisectRight", {
    enumerable: true,
    get: function() {
        return _bisect.bisectRight;
    }
});
Object.defineProperty(exports, "bisector", {
    enumerable: true,
    get: function() {
        return _bisector.default;
    }
});
Object.defineProperty(exports, "count", {
    enumerable: true,
    get: function() {
        return _count.default;
    }
});
Object.defineProperty(exports, "cross", {
    enumerable: true,
    get: function() {
        return _cross.default;
    }
});
Object.defineProperty(exports, "cumsum", {
    enumerable: true,
    get: function() {
        return _cumsum.default;
    }
});
Object.defineProperty(exports, "descending", {
    enumerable: true,
    get: function() {
        return _descending.default;
    }
});
Object.defineProperty(exports, "deviation", {
    enumerable: true,
    get: function() {
        return _deviation.default;
    }
});
Object.defineProperty(exports, "difference", {
    enumerable: true,
    get: function() {
        return _difference.default;
    }
});
Object.defineProperty(exports, "disjoint", {
    enumerable: true,
    get: function() {
        return _disjoint.default;
    }
});
Object.defineProperty(exports, "every", {
    enumerable: true,
    get: function() {
        return _every.default;
    }
});
Object.defineProperty(exports, "extent", {
    enumerable: true,
    get: function() {
        return _extent.default;
    }
});
Object.defineProperty(exports, "fcumsum", {
    enumerable: true,
    get: function() {
        return _fsum.fcumsum;
    }
});
Object.defineProperty(exports, "filter", {
    enumerable: true,
    get: function() {
        return _filter.default;
    }
});
Object.defineProperty(exports, "flatGroup", {
    enumerable: true,
    get: function() {
        return _group.flatGroup;
    }
});
Object.defineProperty(exports, "flatRollup", {
    enumerable: true,
    get: function() {
        return _group.flatRollup;
    }
});
Object.defineProperty(exports, "fsum", {
    enumerable: true,
    get: function() {
        return _fsum.fsum;
    }
});
Object.defineProperty(exports, "greatest", {
    enumerable: true,
    get: function() {
        return _greatest.default;
    }
});
Object.defineProperty(exports, "greatestIndex", {
    enumerable: true,
    get: function() {
        return _greatestIndex.default;
    }
});
Object.defineProperty(exports, "group", {
    enumerable: true,
    get: function() {
        return _group.default;
    }
});
Object.defineProperty(exports, "groupSort", {
    enumerable: true,
    get: function() {
        return _groupSort.default;
    }
});
Object.defineProperty(exports, "groups", {
    enumerable: true,
    get: function() {
        return _group.groups;
    }
});
Object.defineProperty(exports, "histogram", {
    enumerable: true,
    get: function() {
        return _bin.default;
    }
});
Object.defineProperty(exports, "index", {
    enumerable: true,
    get: function() {
        return _group.index;
    }
});
Object.defineProperty(exports, "indexes", {
    enumerable: true,
    get: function() {
        return _group.indexes;
    }
});
Object.defineProperty(exports, "intersection", {
    enumerable: true,
    get: function() {
        return _intersection.default;
    }
});
Object.defineProperty(exports, "least", {
    enumerable: true,
    get: function() {
        return _least.default;
    }
});
Object.defineProperty(exports, "leastIndex", {
    enumerable: true,
    get: function() {
        return _leastIndex.default;
    }
});
Object.defineProperty(exports, "map", {
    enumerable: true,
    get: function() {
        return _map.default;
    }
});
Object.defineProperty(exports, "max", {
    enumerable: true,
    get: function() {
        return _max.default;
    }
});
Object.defineProperty(exports, "maxIndex", {
    enumerable: true,
    get: function() {
        return _maxIndex.default;
    }
});
Object.defineProperty(exports, "mean", {
    enumerable: true,
    get: function() {
        return _mean.default;
    }
});
Object.defineProperty(exports, "median", {
    enumerable: true,
    get: function() {
        return _median.default;
    }
});
Object.defineProperty(exports, "merge", {
    enumerable: true,
    get: function() {
        return _merge.default;
    }
});
Object.defineProperty(exports, "min", {
    enumerable: true,
    get: function() {
        return _min.default;
    }
});
Object.defineProperty(exports, "minIndex", {
    enumerable: true,
    get: function() {
        return _minIndex.default;
    }
});
Object.defineProperty(exports, "mode", {
    enumerable: true,
    get: function() {
        return _mode.default;
    }
});
Object.defineProperty(exports, "nice", {
    enumerable: true,
    get: function() {
        return _nice.default;
    }
});
Object.defineProperty(exports, "pairs", {
    enumerable: true,
    get: function() {
        return _pairs.default;
    }
});
Object.defineProperty(exports, "permute", {
    enumerable: true,
    get: function() {
        return _permute.default;
    }
});
Object.defineProperty(exports, "quantile", {
    enumerable: true,
    get: function() {
        return _quantile.default;
    }
});
Object.defineProperty(exports, "quantileSorted", {
    enumerable: true,
    get: function() {
        return _quantile.quantileSorted;
    }
});
Object.defineProperty(exports, "quickselect", {
    enumerable: true,
    get: function() {
        return _quickselect.default;
    }
});
Object.defineProperty(exports, "range", {
    enumerable: true,
    get: function() {
        return _range.default;
    }
});
Object.defineProperty(exports, "rank", {
    enumerable: true,
    get: function() {
        return _rank.default;
    }
});
Object.defineProperty(exports, "reduce", {
    enumerable: true,
    get: function() {
        return _reduce.default;
    }
});
Object.defineProperty(exports, "reverse", {
    enumerable: true,
    get: function() {
        return _reverse.default;
    }
});
Object.defineProperty(exports, "rollup", {
    enumerable: true,
    get: function() {
        return _group.rollup;
    }
});
Object.defineProperty(exports, "rollups", {
    enumerable: true,
    get: function() {
        return _group.rollups;
    }
});
Object.defineProperty(exports, "scan", {
    enumerable: true,
    get: function() {
        return _scan.default;
    }
});
Object.defineProperty(exports, "shuffle", {
    enumerable: true,
    get: function() {
        return _shuffle.default;
    }
});
Object.defineProperty(exports, "shuffler", {
    enumerable: true,
    get: function() {
        return _shuffle.shuffler;
    }
});
Object.defineProperty(exports, "some", {
    enumerable: true,
    get: function() {
        return _some.default;
    }
});
Object.defineProperty(exports, "sort", {
    enumerable: true,
    get: function() {
        return _sort.default;
    }
});
Object.defineProperty(exports, "subset", {
    enumerable: true,
    get: function() {
        return _subset.default;
    }
});
Object.defineProperty(exports, "sum", {
    enumerable: true,
    get: function() {
        return _sum.default;
    }
});
Object.defineProperty(exports, "superset", {
    enumerable: true,
    get: function() {
        return _superset.default;
    }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
    enumerable: true,
    get: function() {
        return _freedmanDiaconis.default;
    }
});
Object.defineProperty(exports, "thresholdScott", {
    enumerable: true,
    get: function() {
        return _scott.default;
    }
});
Object.defineProperty(exports, "thresholdSturges", {
    enumerable: true,
    get: function() {
        return _sturges.default;
    }
});
Object.defineProperty(exports, "tickIncrement", {
    enumerable: true,
    get: function() {
        return _ticks.tickIncrement;
    }
});
Object.defineProperty(exports, "tickStep", {
    enumerable: true,
    get: function() {
        return _ticks.tickStep;
    }
});
Object.defineProperty(exports, "ticks", {
    enumerable: true,
    get: function() {
        return _ticks.default;
    }
});
Object.defineProperty(exports, "transpose", {
    enumerable: true,
    get: function() {
        return _transpose.default;
    }
});
Object.defineProperty(exports, "union", {
    enumerable: true,
    get: function() {
        return _union.default;
    }
});
Object.defineProperty(exports, "variance", {
    enumerable: true,
    get: function() {
        return _variance.default;
    }
});
Object.defineProperty(exports, "zip", {
    enumerable: true,
    get: function() {
        return _zip.default;
    }
});
var _bisect = _interopRequireWildcard(require("30e30fd80e01d017"));
var _ascending = _interopRequireDefault(require("ba6e167afdeaab0b"));
var _bisector = _interopRequireDefault(require("a8afbc207886cfe5"));
var _count = _interopRequireDefault(require("1ec4d87c2d530b17"));
var _cross = _interopRequireDefault(require("e60cb580083b63b4"));
var _cumsum = _interopRequireDefault(require("2ed7a3899076eb06"));
var _descending = _interopRequireDefault(require("b44226224b8ee28a"));
var _deviation = _interopRequireDefault(require("3bfdfde74e5e3893"));
var _extent = _interopRequireDefault(require("e0c64cb1665c42fc"));
var _fsum = require("8239d81e924c7f9b");
var _group = _interopRequireWildcard(require("e133ef73b59e280f"));
var _groupSort = _interopRequireDefault(require("3c1ee14e652a9a74"));
var _bin = _interopRequireDefault(require("1c3fea00392fd51a"));
var _freedmanDiaconis = _interopRequireDefault(require("39d93dd913508747"));
var _scott = _interopRequireDefault(require("876933b3acb155ad"));
var _sturges = _interopRequireDefault(require("d1e08dd0d72014d7"));
var _max = _interopRequireDefault(require("5653c1d333b623cc"));
var _maxIndex = _interopRequireDefault(require("e384106528492a4"));
var _mean = _interopRequireDefault(require("e8829bf9149c3ef0"));
var _median = _interopRequireDefault(require("d00dfb19fe2fa3dd"));
var _merge = _interopRequireDefault(require("f8db612b317ca902"));
var _min = _interopRequireDefault(require("23890540251f6e67"));
var _minIndex = _interopRequireDefault(require("b9d42ff8895c4de8"));
var _mode = _interopRequireDefault(require("85fe3d40f6f5138d"));
var _nice = _interopRequireDefault(require("e8d14d9a3dedafe6"));
var _pairs = _interopRequireDefault(require("177b2ef4b4963970"));
var _permute = _interopRequireDefault(require("365c2a51c1482713"));
var _quantile = _interopRequireWildcard(require("1d56df0071525856"));
var _quickselect = _interopRequireDefault(require("1d2b63add15610db"));
var _range = _interopRequireDefault(require("879f1890a7517024"));
var _rank = _interopRequireDefault(require("912567809e44cbf8"));
var _least = _interopRequireDefault(require("c6b4300bede89d14"));
var _leastIndex = _interopRequireDefault(require("38f5be9e3fad1ac0"));
var _greatest = _interopRequireDefault(require("7fdad0a7cfab2520"));
var _greatestIndex = _interopRequireDefault(require("acba90bb290c79e9"));
var _scan = _interopRequireDefault(require("4a0a3c353076d5f7"));
var _shuffle = _interopRequireWildcard(require("ca2fb5eb530363f6"));
var _sum = _interopRequireDefault(require("fcc170790ec9f19b"));
var _ticks = _interopRequireWildcard(require("cd372a8370da3735"));
var _transpose = _interopRequireDefault(require("fece81f7cb114699"));
var _variance = _interopRequireDefault(require("68a6cbe5f6ed9d0b"));
var _zip = _interopRequireDefault(require("a43b4c003dde8ae5"));
var _every = _interopRequireDefault(require("aa419cb489a22141"));
var _some = _interopRequireDefault(require("2d20a8f791fd5767"));
var _filter = _interopRequireDefault(require("32260c06b0e9256d"));
var _map = _interopRequireDefault(require("6071cde151b05eb9"));
var _reduce = _interopRequireDefault(require("12d8fb254953b9bd"));
var _reverse = _interopRequireDefault(require("a0b2aacd1379b178"));
var _sort = _interopRequireDefault(require("68390ceda5e75df5"));
var _difference = _interopRequireDefault(require("e3b896de066f5364"));
var _disjoint = _interopRequireDefault(require("a4315b63bcb13bca"));
var _intersection = _interopRequireDefault(require("9f70d47eae5d7300"));
var _subset = _interopRequireDefault(require("56df3047d82ddba3"));
var _superset = _interopRequireDefault(require("f70ec3fe7b14f6c5"));
var _union = _interopRequireDefault(require("7c20e02710d1b117"));
var _index = require("5307d8bb084e9ec1");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}

},{"30e30fd80e01d017":"jrxhQ","ba6e167afdeaab0b":"1oBNz","a8afbc207886cfe5":"3IpzH","1ec4d87c2d530b17":"b8NHK","e60cb580083b63b4":"bpNhk","2ed7a3899076eb06":"4Ptde","b44226224b8ee28a":"fRQiJ","3bfdfde74e5e3893":"aVQYH","e0c64cb1665c42fc":"jF1vs","8239d81e924c7f9b":"dLpxS","e133ef73b59e280f":"Lk8Jm","3c1ee14e652a9a74":"lQuME","1c3fea00392fd51a":"7TR1Y","39d93dd913508747":"drArw","876933b3acb155ad":"faFde","d1e08dd0d72014d7":"11JTX","5653c1d333b623cc":"5nNZt","e384106528492a4":"7x6ye","e8829bf9149c3ef0":"a6Fb0","d00dfb19fe2fa3dd":"5X4aB","f8db612b317ca902":"8LaLX","23890540251f6e67":"bEIqY","b9d42ff8895c4de8":"2MHk6","85fe3d40f6f5138d":"iR2ml","e8d14d9a3dedafe6":"jIoxe","177b2ef4b4963970":"8b7hy","365c2a51c1482713":"66i2c","1d56df0071525856":"hD22k","1d2b63add15610db":"g5MN9","879f1890a7517024":"kTnph","912567809e44cbf8":"dLlt6","c6b4300bede89d14":"jmBzO","38f5be9e3fad1ac0":"kEmh0","7fdad0a7cfab2520":"2kQNC","acba90bb290c79e9":"dGr1j","4a0a3c353076d5f7":"4pARw","ca2fb5eb530363f6":"6DYbw","fcc170790ec9f19b":"1Xrcq","cd372a8370da3735":"jMFQk","fece81f7cb114699":"7tOLI","68a6cbe5f6ed9d0b":"2vwqS","a43b4c003dde8ae5":"3iBmu","aa419cb489a22141":"jLBMf","2d20a8f791fd5767":"7XWdL","32260c06b0e9256d":"5xoOV","6071cde151b05eb9":"chfgD","12d8fb254953b9bd":"5enBm","a0b2aacd1379b178":"1wHbv","68390ceda5e75df5":"44LMj","e3b896de066f5364":"aKO0S","a4315b63bcb13bca":"651GQ","9f70d47eae5d7300":"iEsCQ","56df3047d82ddba3":"jJ9TO","f70ec3fe7b14f6c5":"czG3l","7c20e02710d1b117":"5qSl5","5307d8bb084e9ec1":"aJjVS"}],"jrxhQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.bisectRight = exports.bisectLeft = exports.bisectCenter = void 0;
var _ascending = _interopRequireDefault(require("c1f158b330aaa13c"));
var _bisector = _interopRequireDefault(require("ae9e5922ca82e11d"));
var _number = _interopRequireDefault(require("7b6cc53664acedc3"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const ascendingBisect = (0, _bisector.default)(_ascending.default);
const bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
const bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
const bisectCenter = (0, _bisector.default)(_number.default).center;
exports.bisectCenter = bisectCenter;
var _default = bisectRight;
exports.default = _default;

},{"c1f158b330aaa13c":"1oBNz","ae9e5922ca82e11d":"3IpzH","7b6cc53664acedc3":"1pKx6"}],"1oBNz":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ascending;
function ascending(a, b) {
    return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

},{}],"3IpzH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = bisector;
var _ascending = _interopRequireDefault(require("7cbc9edd390ae8bb"));
var _descending = _interopRequireDefault(require("bbf176e93324968c"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function bisector(f) {
    let compare1, compare2, delta; // If an accessor is specified, promote it to a comparator. In this case we
    // can test whether the search value is (self-) comparable. We can’t do this
    // for a comparator (except for specific, known comparators) because we can’t
    // tell if the comparator is symmetric, and an asymmetric comparator can’t be
    // used to test whether a single value is comparable.
    if (f.length !== 2) {
        compare1 = _ascending.default;
        compare2 = (d, x)=>(0, _ascending.default)(f(d), x);
        delta = (d, x)=>f(d) - x;
    } else {
        compare1 = f === _ascending.default || f === _descending.default ? f : zero;
        compare2 = f;
        delta = f;
    }
    function left(a, x, lo = 0, hi = a.length) {
        if (lo < hi) {
            if (compare1(x, x) !== 0) return hi;
            do {
                const mid = lo + hi >>> 1;
                if (compare2(a[mid], x) < 0) lo = mid + 1;
                else hi = mid;
            }while (lo < hi);
        }
        return lo;
    }
    function right(a, x, lo = 0, hi = a.length) {
        if (lo < hi) {
            if (compare1(x, x) !== 0) return hi;
            do {
                const mid = lo + hi >>> 1;
                if (compare2(a[mid], x) <= 0) lo = mid + 1;
                else hi = mid;
            }while (lo < hi);
        }
        return lo;
    }
    function center(a, x, lo = 0, hi = a.length) {
        const i = left(a, x, lo, hi - 1);
        return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
    }
    return {
        left,
        center,
        right
    };
}
function zero() {
    return 0;
}

},{"7cbc9edd390ae8bb":"1oBNz","bbf176e93324968c":"fRQiJ"}],"fRQiJ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = descending;
function descending(a, b) {
    return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

},{}],"1pKx6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = number;
exports.numbers = numbers;
function number(x) {
    return x === null ? NaN : +x;
}
function* numbers(values, valueof) {
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) yield value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) yield value;
    }
}

},{}],"b8NHK":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = count;
function count(values, valueof) {
    let count = 0;
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) ++count;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) ++count;
    }
    return count;
}

},{}],"bpNhk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = cross;
function length(array) {
    return array.length | 0;
}
function empty(length) {
    return !(length > 0);
}
function arrayify(values) {
    return typeof values !== "object" || "length" in values ? values : Array.from(values);
}
function reducer(reduce) {
    return (values)=>reduce(...values);
}
function cross(...values) {
    const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
    values = values.map(arrayify);
    const lengths = values.map(length);
    const j = values.length - 1;
    const index = new Array(j + 1).fill(0);
    const product = [];
    if (j < 0 || lengths.some(empty)) return product;
    while(true){
        product.push(index.map((j, i)=>values[i][j]));
        let i = j;
        while(++index[i] === lengths[i]){
            if (i === 0) return reduce ? product.map(reduce) : product;
            index[i--] = 0;
        }
    }
}

},{}],"4Ptde":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = cumsum;
function cumsum(values, valueof) {
    var sum = 0, index = 0;
    return Float64Array.from(values, valueof === undefined ? (v)=>sum += +v || 0 : (v)=>sum += +valueof(v, index++, values) || 0);
}

},{}],"aVQYH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = deviation;
var _variance = _interopRequireDefault(require("51ae5f4f20d14175"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function deviation(values, valueof) {
    const v = (0, _variance.default)(values, valueof);
    return v ? Math.sqrt(v) : v;
}

},{"51ae5f4f20d14175":"2vwqS"}],"2vwqS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = variance;
function variance(values, valueof) {
    let count = 0;
    let delta;
    let mean = 0;
    let sum = 0;
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
        }
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
        }
    }
    if (count > 1) return sum / (count - 1);
}

},{}],"jF1vs":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = extent;
function extent(values, valueof) {
    let min;
    let max;
    if (valueof === undefined) {
        for (const value of values)if (value != null) {
            if (min === undefined) {
                if (value >= value) min = max = value;
            } else {
                if (min > value) min = value;
                if (max < value) max = value;
            }
        }
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null) {
            if (min === undefined) {
                if (value >= value) min = max = value;
            } else {
                if (min > value) min = value;
                if (max < value) max = value;
            }
        }
    }
    return [
        min,
        max
    ];
}

},{}],"dLpxS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Adder = void 0;
exports.fcumsum = fcumsum;
exports.fsum = fsum;
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
    constructor(){
        this._partials = new Float64Array(32);
        this._n = 0;
    }
    add(x) {
        const p = this._partials;
        let i = 0;
        for(let j = 0; j < this._n && j < 32; j++){
            const y = p[j], hi = x + y, lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
            if (lo) p[i++] = lo;
            x = hi;
        }
        p[i] = x;
        this._n = i + 1;
        return this;
    }
    valueOf() {
        const p = this._partials;
        let n = this._n, x, y, lo, hi = 0;
        if (n > 0) {
            hi = p[--n];
            while(n > 0){
                x = hi;
                y = p[--n];
                hi = x + y;
                lo = y - (hi - x);
                if (lo) break;
            }
            if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {
                y = lo * 2;
                x = hi + y;
                if (y == x - hi) hi = x;
            }
        }
        return hi;
    }
}
exports.Adder = Adder;
function fsum(values, valueof) {
    const adder = new Adder();
    if (valueof === undefined) {
        for (let value of values)if (value = +value) adder.add(value);
    } else {
        let index = -1;
        for (let value of values)if (value = +valueof(value, ++index, values)) adder.add(value);
    }
    return +adder;
}
function fcumsum(values, valueof) {
    const adder = new Adder();
    let index = -1;
    return Float64Array.from(values, valueof === undefined ? (v)=>adder.add(+v || 0) : (v)=>adder.add(+valueof(v, ++index, values) || 0));
}

},{}],"Lk8Jm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = group;
exports.flatGroup = flatGroup;
exports.flatRollup = flatRollup;
exports.groups = groups;
exports.index = index;
exports.indexes = indexes;
exports.rollup = rollup;
exports.rollups = rollups;
var _index = require("48004d0dfe52b7a6");
var _identity = _interopRequireDefault(require("3cf6030d781ef6b2"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function group(values, ...keys) {
    return nest(values, _identity.default, _identity.default, keys);
}
function groups(values, ...keys) {
    return nest(values, Array.from, _identity.default, keys);
}
function flatten(groups, keys) {
    for(let i = 1, n = keys.length; i < n; ++i)groups = groups.flatMap((g)=>g.pop().map(([key, value])=>[
                ...g,
                key,
                value
            ]));
    return groups;
}
function flatGroup(values, ...keys) {
    return flatten(groups(values, ...keys), keys);
}
function flatRollup(values, reduce, ...keys) {
    return flatten(rollups(values, reduce, ...keys), keys);
}
function rollup(values, reduce, ...keys) {
    return nest(values, _identity.default, reduce, keys);
}
function rollups(values, reduce, ...keys) {
    return nest(values, Array.from, reduce, keys);
}
function index(values, ...keys) {
    return nest(values, _identity.default, unique, keys);
}
function indexes(values, ...keys) {
    return nest(values, Array.from, unique, keys);
}
function unique(values) {
    if (values.length !== 1) throw new Error("duplicate key");
    return values[0];
}
function nest(values, map, reduce, keys) {
    return function regroup(values, i) {
        if (i >= keys.length) return reduce(values);
        const groups = new _index.InternMap();
        const keyof = keys[i++];
        let index = -1;
        for (const value of values){
            const key = keyof(value, ++index, values);
            const group = groups.get(key);
            if (group) group.push(value);
            else groups.set(key, [
                value
            ]);
        }
        for (const [key, values] of groups)groups.set(key, regroup(values, i));
        return map(groups);
    }(values, 0);
}

},{"48004d0dfe52b7a6":"aJjVS","3cf6030d781ef6b2":"j2F17"}],"aJjVS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InternSet = exports.InternMap = void 0;
class InternMap extends Map {
    constructor(entries, key = keyof){
        super();
        Object.defineProperties(this, {
            _intern: {
                value: new Map()
            },
            _key: {
                value: key
            }
        });
        if (entries != null) for (const [key, value] of entries)this.set(key, value);
    }
    get(key) {
        return super.get(intern_get(this, key));
    }
    has(key) {
        return super.has(intern_get(this, key));
    }
    set(key, value) {
        return super.set(intern_set(this, key), value);
    }
    delete(key) {
        return super.delete(intern_delete(this, key));
    }
}
exports.InternMap = InternMap;
class InternSet extends Set {
    constructor(values, key = keyof){
        super();
        Object.defineProperties(this, {
            _intern: {
                value: new Map()
            },
            _key: {
                value: key
            }
        });
        if (values != null) for (const value of values)this.add(value);
    }
    has(value) {
        return super.has(intern_get(this, value));
    }
    add(value) {
        return super.add(intern_set(this, value));
    }
    delete(value) {
        return super.delete(intern_delete(this, value));
    }
}
exports.InternSet = InternSet;
function intern_get({ _intern, _key }, value) {
    const key = _key(value);
    return _intern.has(key) ? _intern.get(key) : value;
}
function intern_set({ _intern, _key }, value) {
    const key = _key(value);
    if (_intern.has(key)) return _intern.get(key);
    _intern.set(key, value);
    return value;
}
function intern_delete({ _intern, _key }, value) {
    const key = _key(value);
    if (_intern.has(key)) {
        value = _intern.get(key);
        _intern.delete(key);
    }
    return value;
}
function keyof(value) {
    return value !== null && typeof value === "object" ? value.valueOf() : value;
}

},{}],"j2F17":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = identity;
function identity(x) {
    return x;
}

},{}],"lQuME":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = groupSort;
var _ascending = _interopRequireDefault(require("325640508c2e43b"));
var _group = _interopRequireWildcard(require("57a8d19e7d7a16cf"));
var _sort = _interopRequireDefault(require("a759bcb922f07eb1"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function groupSort(values, reduce, key) {
    return (reduce.length !== 2 ? (0, _sort.default)((0, _group.rollup)(values, reduce, key), ([ak, av], [bk, bv])=>(0, _ascending.default)(av, bv) || (0, _ascending.default)(ak, bk)) : (0, _sort.default)((0, _group.default)(values, key), ([ak, av], [bk, bv])=>reduce(av, bv) || (0, _ascending.default)(ak, bk))).map(([key])=>key);
}

},{"325640508c2e43b":"1oBNz","57a8d19e7d7a16cf":"Lk8Jm","a759bcb922f07eb1":"44LMj"}],"44LMj":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ascendingDefined = ascendingDefined;
exports.compareDefined = compareDefined;
exports.default = sort;
var _ascending = _interopRequireDefault(require("17dda5769044e4af"));
var _permute = _interopRequireDefault(require("45ed8435c3fc2fdf"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function sort(values, ...F) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    values = Array.from(values);
    let [f] = F;
    if (f && f.length !== 2 || F.length > 1) {
        const index = Uint32Array.from(values, (d, i)=>i);
        if (F.length > 1) {
            F = F.map((f)=>values.map(f));
            index.sort((i, j)=>{
                for (const f of F){
                    const c = ascendingDefined(f[i], f[j]);
                    if (c) return c;
                }
            });
        } else {
            f = values.map(f);
            index.sort((i, j)=>ascendingDefined(f[i], f[j]));
        }
        return (0, _permute.default)(values, index);
    }
    return values.sort(compareDefined(f));
}
function compareDefined(compare = _ascending.default) {
    if (compare === _ascending.default) return ascendingDefined;
    if (typeof compare !== "function") throw new TypeError("compare is not a function");
    return (a, b)=>{
        const x = compare(a, b);
        if (x || x === 0) return x;
        return (compare(b, b) === 0) - (compare(a, a) === 0);
    };
}
function ascendingDefined(a, b) {
    return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);
}

},{"17dda5769044e4af":"1oBNz","45ed8435c3fc2fdf":"66i2c"}],"66i2c":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = permute;
function permute(source, keys) {
    return Array.from(keys, (key)=>source[key]);
}

},{}],"7TR1Y":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = bin;
var _array = require("2e045be59e43c77");
var _bisect = _interopRequireDefault(require("319eb924a032034c"));
var _constant = _interopRequireDefault(require("2d6358dd303eb77c"));
var _extent = _interopRequireDefault(require("b715ed473e0ab15b"));
var _identity = _interopRequireDefault(require("f9340ffc2d80b8ca"));
var _nice = _interopRequireDefault(require("c13788fe41624795"));
var _ticks = _interopRequireWildcard(require("b122967555bb47b9"));
var _sturges = _interopRequireDefault(require("3587d7f4446a1fc2"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function bin() {
    var value = _identity.default, domain = _extent.default, threshold = _sturges.default;
    function histogram(data) {
        if (!Array.isArray(data)) data = Array.from(data);
        var i, n = data.length, x, step, values = new Array(n);
        for(i = 0; i < n; ++i)values[i] = value(data[i], i, data);
        var xz = domain(values), x0 = xz[0], x1 = xz[1], tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds, and nice the
        // default domain accordingly.
        if (!Array.isArray(tz)) {
            const max = x1, tn = +tz;
            if (domain === _extent.default) [x0, x1] = (0, _nice.default)(x0, x1, tn);
            tz = (0, _ticks.default)(x0, x1, tn); // If the domain is aligned with the first tick (which it will by
            // default), then we can use quantization rather than bisection to bin
            // values, which is substantially faster.
            if (tz[0] <= x0) step = (0, _ticks.tickIncrement)(x0, x1, tn); // If the last threshold is coincident with the domain’s upper bound, the
            // last bin will be zero-width. If the default domain is used, and this
            // last threshold is coincident with the maximum input value, we can
            // extend the niced upper bound by one tick to ensure uniform bin widths;
            // otherwise, we simply remove the last threshold. Note that we don’t
            // coerce values or the domain to numbers, and thus must be careful to
            // compare order (>=) rather than strict equality (===)!
            if (tz[tz.length - 1] >= x1) {
                if (max >= x1 && domain === _extent.default) {
                    const step = (0, _ticks.tickIncrement)(x0, x1, tn);
                    if (isFinite(step)) {
                        if (step > 0) x1 = (Math.floor(x1 / step) + 1) * step;
                        else if (step < 0) x1 = (Math.ceil(x1 * -step) + 1) / -step;
                    }
                } else tz.pop();
            }
        } // Remove any thresholds outside the domain.
        var m = tz.length;
        while(tz[0] <= x0)tz.shift(), --m;
        while(tz[m - 1] > x1)tz.pop(), --m;
        var bins = new Array(m + 1), bin; // Initialize bins.
        for(i = 0; i <= m; ++i){
            bin = bins[i] = [];
            bin.x0 = i > 0 ? tz[i - 1] : x0;
            bin.x1 = i < m ? tz[i] : x1;
        } // Assign data to bins by value, ignoring any outside the domain.
        if (isFinite(step)) {
            if (step > 0) {
                for(i = 0; i < n; ++i)if ((x = values[i]) != null && x0 <= x && x <= x1) bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);
            } else if (step < 0) {
                for(i = 0; i < n; ++i)if ((x = values[i]) != null && x0 <= x && x <= x1) {
                    const j = Math.floor((x0 - x) * step);
                    bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding
                }
            }
        } else {
            for(i = 0; i < n; ++i)if ((x = values[i]) != null && x0 <= x && x <= x1) bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
        }
        return bins;
    }
    histogram.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
    };
    histogram.domain = function(_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([
            _[0],
            _[1]
        ]), histogram) : domain;
    };
    histogram.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
    };
    return histogram;
}

},{"2e045be59e43c77":"cuDJN","319eb924a032034c":"jrxhQ","2d6358dd303eb77c":"5yp8V","b715ed473e0ab15b":"jF1vs","f9340ffc2d80b8ca":"j2F17","c13788fe41624795":"jIoxe","b122967555bb47b9":"jMFQk","3587d7f4446a1fc2":"11JTX"}],"cuDJN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;

},{}],"5yp8V":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = constant;
function constant(x) {
    return ()=>x;
}

},{}],"jIoxe":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nice;
var _ticks = require("82883d5f91d2ba9");
function nice(start, stop, count) {
    let prestep;
    while(true){
        const step = (0, _ticks.tickIncrement)(start, stop, count);
        if (step === prestep || step === 0 || !isFinite(step)) return [
            start,
            stop
        ];
        else if (step > 0) {
            start = Math.floor(start / step) * step;
            stop = Math.ceil(stop / step) * step;
        } else if (step < 0) {
            start = Math.ceil(start * step) / step;
            stop = Math.floor(stop * step) / step;
        }
        prestep = step;
    }
}

},{"82883d5f91d2ba9":"jMFQk"}],"jMFQk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ticks;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50), e5 = Math.sqrt(10), e2 = Math.sqrt(2);
function ticks(start, stop, count) {
    var reverse, i = -1, n, ticks, step;
    stop = +stop, start = +start, count = +count;
    if (start === stop && count > 0) return [
        start
    ];
    if (reverse = stop < start) n = start, start = stop, stop = n;
    if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];
    if (step > 0) {
        let r0 = Math.round(start / step), r1 = Math.round(stop / step);
        if (r0 * step < start) ++r0;
        if (r1 * step > stop) --r1;
        ticks = new Array(n = r1 - r0 + 1);
        while(++i < n)ticks[i] = (r0 + i) * step;
    } else {
        step = -step;
        let r0 = Math.round(start * step), r1 = Math.round(stop * step);
        if (r0 / step < start) ++r0;
        if (r1 / step > stop) --r1;
        ticks = new Array(n = r1 - r0 + 1);
        while(++i < n)ticks[i] = (r0 + i) / step;
    }
    if (reverse) ticks.reverse();
    return ticks;
}
function tickIncrement(start, stop, count) {
    var step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
    return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start, stop, count) {
    var step0 = Math.abs(stop - start) / Math.max(0, count), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
    if (error >= e10) step1 *= 10;
    else if (error >= e5) step1 *= 5;
    else if (error >= e2) step1 *= 2;
    return stop < start ? -step1 : step1;
}

},{}],"11JTX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = thresholdSturges;
var _count = _interopRequireDefault(require("d856b0d375bb9b61"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function thresholdSturges(values) {
    return Math.ceil(Math.log((0, _count.default)(values)) / Math.LN2) + 1;
}

},{"d856b0d375bb9b61":"b8NHK"}],"drArw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = thresholdFreedmanDiaconis;
var _count = _interopRequireDefault(require("84a2a08734413081"));
var _quantile = _interopRequireDefault(require("b453688def319e0"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function thresholdFreedmanDiaconis(values, min, max) {
    return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow((0, _count.default)(values), -1 / 3)));
}

},{"84a2a08734413081":"b8NHK","b453688def319e0":"hD22k"}],"hD22k":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quantile;
exports.quantileSorted = quantileSorted;
var _max = _interopRequireDefault(require("6377896bac51b475"));
var _min = _interopRequireDefault(require("7403c617ea3dc723"));
var _quickselect = _interopRequireDefault(require("fa6451b912e13124"));
var _number = _interopRequireWildcard(require("de13410c4756be71"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function quantile(values, p, valueof) {
    values = Float64Array.from((0, _number.numbers)(values, valueof));
    if (!(n = values.length)) return;
    if ((p = +p) <= 0 || n < 2) return (0, _min.default)(values);
    if (p >= 1) return (0, _max.default)(values);
    var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = (0, _max.default)((0, _quickselect.default)(values, i0).subarray(0, i0 + 1)), value1 = (0, _min.default)(values.subarray(i0 + 1));
    return value0 + (value1 - value0) * (i - i0);
}
function quantileSorted(values, p, valueof = _number.default) {
    if (!(n = values.length)) return;
    if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
    if (p >= 1) return +valueof(values[n - 1], n - 1, values);
    var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = +valueof(values[i0], i0, values), value1 = +valueof(values[i0 + 1], i0 + 1, values);
    return value0 + (value1 - value0) * (i - i0);
}

},{"6377896bac51b475":"5nNZt","7403c617ea3dc723":"bEIqY","fa6451b912e13124":"g5MN9","de13410c4756be71":"1pKx6"}],"5nNZt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = max;
function max(values, valueof) {
    let max;
    if (valueof === undefined) {
        for (const value of values)if (value != null && (max < value || max === undefined && value >= value)) max = value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) max = value;
    }
    return max;
}

},{}],"bEIqY":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = min;
function min(values, valueof) {
    let min;
    if (valueof === undefined) {
        for (const value of values)if (value != null && (min > value || min === undefined && value >= value)) min = value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) min = value;
    }
    return min;
}

},{}],"g5MN9":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quickselect;
var _sort = require("c4d7054457278972");
// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare) {
    compare = compare === undefined ? _sort.ascendingDefined : (0, _sort.compareDefined)(compare);
    while(right > left){
        if (right - left > 600) {
            const n = right - left + 1;
            const m = k - left + 1;
            const z = Math.log(n);
            const s = 0.5 * Math.exp(2 * z / 3);
            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
            quickselect(array, k, newLeft, newRight, compare);
        }
        const t = array[k];
        let i = left;
        let j = right;
        swap(array, left, k);
        if (compare(array[right], t) > 0) swap(array, left, right);
        while(i < j){
            swap(array, i, j), ++i, --j;
            while(compare(array[i], t) < 0)++i;
            while(compare(array[j], t) > 0)--j;
        }
        if (compare(array[left], t) === 0) swap(array, left, j);
        else ++j, swap(array, j, right);
        if (j <= k) left = j + 1;
        if (k <= j) right = j - 1;
    }
    return array;
}
function swap(array, i, j) {
    const t = array[i];
    array[i] = array[j];
    array[j] = t;
}

},{"c4d7054457278972":"44LMj"}],"faFde":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = thresholdScott;
var _count = _interopRequireDefault(require("544301f03b7cfef6"));
var _deviation = _interopRequireDefault(require("9c084667c87040d5"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function thresholdScott(values, min, max) {
    return Math.ceil((max - min) * Math.cbrt((0, _count.default)(values)) / (3.49 * (0, _deviation.default)(values)));
}

},{"544301f03b7cfef6":"b8NHK","9c084667c87040d5":"aVQYH"}],"7x6ye":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = maxIndex;
function maxIndex(values, valueof) {
    let max;
    let maxIndex = -1;
    let index = -1;
    if (valueof === undefined) for (const value of values){
        ++index;
        if (value != null && (max < value || max === undefined && value >= value)) max = value, maxIndex = index;
    }
    else {
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) max = value, maxIndex = index;
    }
    return maxIndex;
}

},{}],"a6Fb0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = mean;
function mean(values, valueof) {
    let count = 0;
    let sum = 0;
    if (valueof === undefined) {
        for (let value of values)if (value != null && (value = +value) >= value) ++count, sum += value;
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) ++count, sum += value;
    }
    if (count) return sum / count;
}

},{}],"5X4aB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = median;
var _quantile = _interopRequireDefault(require("73b253d4e179eac9"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function median(values, valueof) {
    return (0, _quantile.default)(values, 0.5, valueof);
}

},{"73b253d4e179eac9":"hD22k"}],"8LaLX":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = merge;
function* flatten(arrays) {
    for (const array of arrays)yield* array;
}
function merge(arrays) {
    return Array.from(flatten(arrays));
}

},{}],"2MHk6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = minIndex;
function minIndex(values, valueof) {
    let min;
    let minIndex = -1;
    let index = -1;
    if (valueof === undefined) for (const value of values){
        ++index;
        if (value != null && (min > value || min === undefined && value >= value)) min = value, minIndex = index;
    }
    else {
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) min = value, minIndex = index;
    }
    return minIndex;
}

},{}],"iR2ml":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = mode;
var _index = require("cc79d9604cb49161");
function mode(values, valueof) {
    const counts = new _index.InternMap();
    if (valueof === undefined) {
        for (let value of values)if (value != null && value >= value) counts.set(value, (counts.get(value) || 0) + 1);
    } else {
        let index = -1;
        for (let value of values)if ((value = valueof(value, ++index, values)) != null && value >= value) counts.set(value, (counts.get(value) || 0) + 1);
    }
    let modeValue;
    let modeCount = 0;
    for (const [value, count] of counts)if (count > modeCount) {
        modeCount = count;
        modeValue = value;
    }
    return modeValue;
}

},{"cc79d9604cb49161":"aJjVS"}],"8b7hy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = pairs;
exports.pair = pair;
function pairs(values, pairof = pair) {
    const pairs1 = [];
    let previous;
    let first = false;
    for (const value of values){
        if (first) pairs1.push(pairof(previous, value));
        previous = value;
        first = true;
    }
    return pairs1;
}
function pair(a, b) {
    return [
        a,
        b
    ];
}

},{}],"kTnph":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = range;
function range(start, stop, step) {
    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
    var i = -1, n = Math.max(0, Math.ceil((stop - start) / step)) | 0, range = new Array(n);
    while(++i < n)range[i] = start + i * step;
    return range;
}

},{}],"dLlt6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = rank;
var _ascending = _interopRequireDefault(require("3d6b2e0137da2f5f"));
var _sort = require("baf9f3a118e8a4c3");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function rank(values, valueof = _ascending.default) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    let V = Array.from(values);
    const R = new Float64Array(V.length);
    if (valueof.length !== 2) V = V.map(valueof), valueof = _ascending.default;
    const compareIndex = (i, j)=>valueof(V[i], V[j]);
    let k, r;
    Uint32Array.from(V, (_, i)=>i).sort(valueof === _ascending.default ? (i, j)=>(0, _sort.ascendingDefined)(V[i], V[j]) : (0, _sort.compareDefined)(compareIndex)).forEach((j, i)=>{
        const c = compareIndex(j, k === undefined ? j : k);
        if (c >= 0) {
            if (k === undefined || c > 0) k = j, r = i;
            R[j] = r;
        } else R[j] = NaN;
    });
    return R;
}

},{"3d6b2e0137da2f5f":"1oBNz","baf9f3a118e8a4c3":"44LMj"}],"jmBzO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = least;
var _ascending = _interopRequireDefault(require("86cd41303b4be24c"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function least(values, compare = _ascending.default) {
    let min;
    let defined = false;
    if (compare.length === 1) {
        let minValue;
        for (const element of values){
            const value = compare(element);
            if (defined ? (0, _ascending.default)(value, minValue) < 0 : (0, _ascending.default)(value, value) === 0) {
                min = element;
                minValue = value;
                defined = true;
            }
        }
    } else {
        for (const value of values)if (defined ? compare(value, min) < 0 : compare(value, value) === 0) {
            min = value;
            defined = true;
        }
    }
    return min;
}

},{"86cd41303b4be24c":"1oBNz"}],"kEmh0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = leastIndex;
var _ascending = _interopRequireDefault(require("3a70505afbae26e3"));
var _minIndex = _interopRequireDefault(require("7863dae356808098"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function leastIndex(values, compare = _ascending.default) {
    if (compare.length === 1) return (0, _minIndex.default)(values, compare);
    let minValue;
    let min = -1;
    let index = -1;
    for (const value of values){
        ++index;
        if (min < 0 ? compare(value, value) === 0 : compare(value, minValue) < 0) {
            minValue = value;
            min = index;
        }
    }
    return min;
}

},{"3a70505afbae26e3":"1oBNz","7863dae356808098":"2MHk6"}],"2kQNC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = greatest;
var _ascending = _interopRequireDefault(require("7e4721a4d28ff20a"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function greatest(values, compare = _ascending.default) {
    let max;
    let defined = false;
    if (compare.length === 1) {
        let maxValue;
        for (const element of values){
            const value = compare(element);
            if (defined ? (0, _ascending.default)(value, maxValue) > 0 : (0, _ascending.default)(value, value) === 0) {
                max = element;
                maxValue = value;
                defined = true;
            }
        }
    } else {
        for (const value of values)if (defined ? compare(value, max) > 0 : compare(value, value) === 0) {
            max = value;
            defined = true;
        }
    }
    return max;
}

},{"7e4721a4d28ff20a":"1oBNz"}],"dGr1j":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = greatestIndex;
var _ascending = _interopRequireDefault(require("a08614b50d783d7f"));
var _maxIndex = _interopRequireDefault(require("c1f809321f205561"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function greatestIndex(values, compare = _ascending.default) {
    if (compare.length === 1) return (0, _maxIndex.default)(values, compare);
    let maxValue;
    let max = -1;
    let index = -1;
    for (const value of values){
        ++index;
        if (max < 0 ? compare(value, value) === 0 : compare(value, maxValue) > 0) {
            maxValue = value;
            max = index;
        }
    }
    return max;
}

},{"a08614b50d783d7f":"1oBNz","c1f809321f205561":"7x6ye"}],"4pARw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = scan;
var _leastIndex = _interopRequireDefault(require("620579109956e518"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function scan(values, compare) {
    const index = (0, _leastIndex.default)(values, compare);
    return index < 0 ? undefined : index;
}

},{"620579109956e518":"kEmh0"}],"6DYbw":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
exports.shuffler = shuffler;
var _default = shuffler(Math.random);
exports.default = _default;
function shuffler(random) {
    return function shuffle(array, i0 = 0, i1 = array.length) {
        let m = i1 - (i0 = +i0);
        while(m){
            const i = random() * m-- | 0, t = array[m + i0];
            array[m + i0] = array[i + i0];
            array[i + i0] = t;
        }
        return array;
    };
}

},{}],"1Xrcq":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = sum;
function sum(values, valueof) {
    let sum = 0;
    if (valueof === undefined) {
        for (let value of values)if (value = +value) sum += value;
    } else {
        let index = -1;
        for (let value of values)if (value = +valueof(value, ++index, values)) sum += value;
    }
    return sum;
}

},{}],"7tOLI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = transpose;
var _min = _interopRequireDefault(require("e91a8bba11a65cd"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function transpose(matrix) {
    if (!(n = matrix.length)) return [];
    for(var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;)for(var j = -1, n, row = transpose[i] = new Array(n); ++j < n;)row[j] = matrix[j][i];
    return transpose;
}
function length(d) {
    return d.length;
}

},{"e91a8bba11a65cd":"bEIqY"}],"3iBmu":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = zip;
var _transpose = _interopRequireDefault(require("f5cee9197fcba405"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function zip() {
    return (0, _transpose.default)(arguments);
}

},{"f5cee9197fcba405":"7tOLI"}],"jLBMf":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = every;
function every(values, test) {
    if (typeof test !== "function") throw new TypeError("test is not a function");
    let index = -1;
    for (const value of values){
        if (!test(value, ++index, values)) return false;
    }
    return true;
}

},{}],"7XWdL":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = some;
function some(values, test) {
    if (typeof test !== "function") throw new TypeError("test is not a function");
    let index = -1;
    for (const value of values){
        if (test(value, ++index, values)) return true;
    }
    return false;
}

},{}],"5xoOV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = filter;
function filter(values, test) {
    if (typeof test !== "function") throw new TypeError("test is not a function");
    const array = [];
    let index = -1;
    for (const value of values)if (test(value, ++index, values)) array.push(value);
    return array;
}

},{}],"chfgD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = map;
function map(values, mapper) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
    return Array.from(values, (value, index)=>mapper(value, index, values));
}

},{}],"5enBm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = reduce;
function reduce(values, reducer, value) {
    if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
    const iterator = values[Symbol.iterator]();
    let done, next, index = -1;
    if (arguments.length < 3) {
        ({ done, value } = iterator.next());
        if (done) return;
        ++index;
    }
    while({ done, value: next } = iterator.next(), !done)value = reducer(value, next, ++index, values);
    return value;
}

},{}],"1wHbv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = reverse;
function reverse(values) {
    if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
    return Array.from(values).reverse();
}

},{}],"aKO0S":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = difference;
var _index = require("53f785431e2265c8");
function difference(values, ...others) {
    values = new _index.InternSet(values);
    for (const other of others)for (const value of other)values.delete(value);
    return values;
}

},{"53f785431e2265c8":"aJjVS"}],"651GQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = disjoint;
var _index = require("fd3ab907acc87368");
function disjoint(values, other) {
    const iterator = other[Symbol.iterator](), set = new _index.InternSet();
    for (const v of values){
        if (set.has(v)) return false;
        let value, done;
        while({ value, done } = iterator.next()){
            if (done) break;
            if (Object.is(v, value)) return false;
            set.add(value);
        }
    }
    return true;
}

},{"fd3ab907acc87368":"aJjVS"}],"iEsCQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = intersection;
var _index = require("57400e6933e84289");
function intersection(values, ...others) {
    values = new _index.InternSet(values);
    others = others.map(set);
    out: for (const value of values){
        for (const other of others)if (!other.has(value)) {
            values.delete(value);
            continue out;
        }
    }
    return values;
}
function set(values) {
    return values instanceof _index.InternSet ? values : new _index.InternSet(values);
}

},{"57400e6933e84289":"aJjVS"}],"jJ9TO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = subset;
var _superset = _interopRequireDefault(require("642286ff2d84a077"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function subset(values, other) {
    return (0, _superset.default)(other, values);
}

},{"642286ff2d84a077":"czG3l"}],"czG3l":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = superset;
function superset(values, other) {
    const iterator = values[Symbol.iterator](), set = new Set();
    for (const o of other){
        const io = intern(o);
        if (set.has(io)) continue;
        let value, done;
        while({ value, done } = iterator.next()){
            if (done) return false;
            const ivalue = intern(value);
            set.add(ivalue);
            if (Object.is(io, ivalue)) break;
        }
    }
    return true;
}
function intern(value) {
    return value !== null && typeof value === "object" ? value.valueOf() : value;
}

},{}],"5qSl5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = union;
var _index = require("c01638dea2a1bd81");
function union(...others) {
    const set = new _index.InternSet();
    for (const other of others)for (const o of other)set.add(o);
    return set;
}

},{"c01638dea2a1bd81":"aJjVS"}],"dMFaU":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.initInterpolator = initInterpolator;
exports.initRange = initRange;
function initRange(domain, range) {
    switch(arguments.length){
        case 0:
            break;
        case 1:
            this.range(domain);
            break;
        default:
            this.range(range).domain(domain);
            break;
    }
    return this;
}
function initInterpolator(domain, interpolator) {
    switch(arguments.length){
        case 0:
            break;
        case 1:
            if (typeof domain === "function") this.interpolator(domain);
            else this.range(domain);
            break;
        default:
            this.domain(domain);
            if (typeof interpolator === "function") this.interpolator(interpolator);
            else this.range(interpolator);
            break;
    }
    return this;
}

},{}],"jOEGM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ordinal;
exports.implicit = void 0;
var _index = require("fcba4401bac5bf73");
var _init = require("cc7553c4008fe238");
const implicit = Symbol("implicit");
exports.implicit = implicit;
function ordinal() {
    var index = new _index.InternMap(), domain = [], range = [], unknown = implicit;
    function scale(d) {
        let i = index.get(d);
        if (i === undefined) {
            if (unknown !== implicit) return unknown;
            index.set(d, i = domain.push(d) - 1);
        }
        return range[i % range.length];
    }
    scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [], index = new _index.InternMap();
        for (const value of _){
            if (index.has(value)) continue;
            index.set(value, domain.push(value) - 1);
        }
        return scale;
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), scale) : range.slice();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return ordinal(domain, range).unknown(unknown);
    };
    _init.initRange.apply(scale, arguments);
    return scale;
}

},{"fcba4401bac5bf73":"5l2OL","cc7553c4008fe238":"dMFaU"}],"1XHs0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = identity;
var _linear = require("f84b1fa17c06395b");
var _number = _interopRequireDefault(require("b36082d6f802f397"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function identity(domain) {
    var unknown;
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : x;
    }
    scale.invert = scale;
    scale.domain = scale.range = function(_) {
        return arguments.length ? (domain = Array.from(_, _number.default), scale) : domain.slice();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return identity(domain).unknown(unknown);
    };
    domain = arguments.length ? Array.from(domain, _number.default) : [
        0,
        1
    ];
    return (0, _linear.linearish)(scale);
}

},{"f84b1fa17c06395b":"4NohP","b36082d6f802f397":"k1D80"}],"4NohP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = linear;
exports.linearish = linearish;
var _index = require("1483cc73fade9a0f");
var _continuous = _interopRequireWildcard(require("b89b32e6dad66d07"));
var _init = require("a628a2e1a79e7cdb");
var _tickFormat = _interopRequireDefault(require("a55604f9dbd11e62"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function linearish(scale) {
    var domain = scale.domain;
    scale.ticks = function(count) {
        var d = domain();
        return (0, _index.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
    };
    scale.tickFormat = function(count, specifier) {
        var d = domain();
        return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
    };
    scale.nice = function(count) {
        if (count == null) count = 10;
        var d = domain();
        var i0 = 0;
        var i1 = d.length - 1;
        var start = d[i0];
        var stop = d[i1];
        var prestep;
        var step;
        var maxIter = 10;
        if (stop < start) {
            step = start, start = stop, stop = step;
            step = i0, i0 = i1, i1 = step;
        }
        while(maxIter-- > 0){
            step = (0, _index.tickIncrement)(start, stop, count);
            if (step === prestep) {
                d[i0] = start;
                d[i1] = stop;
                return domain(d);
            } else if (step > 0) {
                start = Math.floor(start / step) * step;
                stop = Math.ceil(stop / step) * step;
            } else if (step < 0) {
                start = Math.ceil(start * step) / step;
                stop = Math.floor(stop * step) / step;
            } else break;
            prestep = step;
        }
        return scale;
    };
    return scale;
}
function linear() {
    var scale = (0, _continuous.default)();
    scale.copy = function() {
        return (0, _continuous.copy)(scale, linear());
    };
    _init.initRange.apply(scale, arguments);
    return linearish(scale);
}

},{"1483cc73fade9a0f":"5l2OL","b89b32e6dad66d07":"6CY1S","a628a2e1a79e7cdb":"dMFaU","a55604f9dbd11e62":"31ukt"}],"6CY1S":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.copy = copy;
exports.default = continuous;
exports.identity = identity;
exports.transformer = transformer;
var _index = require("b27e55bf39279c79");
var _index2 = require("ba6b5a0092937a29");
var _constant = _interopRequireDefault(require("e75211b791b964e7"));
var _number = _interopRequireDefault(require("d695e4a3f96a954d"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var unit = [
    0,
    1
];
function identity(x) {
    return x;
}
function normalize(a, b) {
    return (b -= a = +a) ? function(x) {
        return (x - a) / b;
    } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}
function clamper(a, b) {
    var t;
    if (a > b) t = a, a = b, b = t;
    return function(x) {
        return Math.max(a, Math.min(b, x));
    };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
    if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
    else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
    return function(x) {
        return r0(d0(x));
    };
}
function polymap(domain, range, interpolate) {
    var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1; // Reverse descending domains.
    if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
    }
    while(++i < j){
        d[i] = normalize(domain[i], domain[i + 1]);
        r[i] = interpolate(range[i], range[i + 1]);
    }
    return function(x) {
        var i = (0, _index.bisect)(domain, x, 1, j) - 1;
        return r[i](d[i](x));
    };
}
function copy(source, target) {
    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
    var domain = unit, range = unit, interpolate = _index2.interpolate, transform, untransform, unknown, clamp = identity, piecewise, output, input;
    function rescale() {
        var n = Math.min(domain.length, range.length);
        if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);
        piecewise = n > 2 ? polymap : bimap;
        output = input = null;
        return scale;
    }
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
    }
    scale.invert = function(y) {
        return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _index2.interpolateNumber)))(y)));
    };
    scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
    };
    scale.rangeRound = function(_) {
        return range = Array.from(_), interpolate = _index2.interpolateRound, rescale();
    };
    scale.clamp = function(_) {
        return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;
    };
    scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t, u) {
        transform = t, untransform = u;
        return rescale();
    };
}
function continuous() {
    return transformer()(identity, identity);
}

},{"b27e55bf39279c79":"5l2OL","ba6b5a0092937a29":"bCEqx","e75211b791b964e7":"9PJFT","d695e4a3f96a954d":"k1D80"}],"bCEqx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "interpolate", {
    enumerable: true,
    get: function() {
        return _value.default;
    }
});
Object.defineProperty(exports, "interpolateArray", {
    enumerable: true,
    get: function() {
        return _array.default;
    }
});
Object.defineProperty(exports, "interpolateBasis", {
    enumerable: true,
    get: function() {
        return _basis.default;
    }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
    enumerable: true,
    get: function() {
        return _basisClosed.default;
    }
});
Object.defineProperty(exports, "interpolateCubehelix", {
    enumerable: true,
    get: function() {
        return _cubehelix.default;
    }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
    enumerable: true,
    get: function() {
        return _cubehelix.cubehelixLong;
    }
});
Object.defineProperty(exports, "interpolateDate", {
    enumerable: true,
    get: function() {
        return _date.default;
    }
});
Object.defineProperty(exports, "interpolateDiscrete", {
    enumerable: true,
    get: function() {
        return _discrete.default;
    }
});
Object.defineProperty(exports, "interpolateHcl", {
    enumerable: true,
    get: function() {
        return _hcl.default;
    }
});
Object.defineProperty(exports, "interpolateHclLong", {
    enumerable: true,
    get: function() {
        return _hcl.hclLong;
    }
});
Object.defineProperty(exports, "interpolateHsl", {
    enumerable: true,
    get: function() {
        return _hsl.default;
    }
});
Object.defineProperty(exports, "interpolateHslLong", {
    enumerable: true,
    get: function() {
        return _hsl.hslLong;
    }
});
Object.defineProperty(exports, "interpolateHue", {
    enumerable: true,
    get: function() {
        return _hue.default;
    }
});
Object.defineProperty(exports, "interpolateLab", {
    enumerable: true,
    get: function() {
        return _lab.default;
    }
});
Object.defineProperty(exports, "interpolateNumber", {
    enumerable: true,
    get: function() {
        return _number.default;
    }
});
Object.defineProperty(exports, "interpolateNumberArray", {
    enumerable: true,
    get: function() {
        return _numberArray.default;
    }
});
Object.defineProperty(exports, "interpolateObject", {
    enumerable: true,
    get: function() {
        return _object.default;
    }
});
Object.defineProperty(exports, "interpolateRgb", {
    enumerable: true,
    get: function() {
        return _rgb.default;
    }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
    enumerable: true,
    get: function() {
        return _rgb.rgbBasis;
    }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
    enumerable: true,
    get: function() {
        return _rgb.rgbBasisClosed;
    }
});
Object.defineProperty(exports, "interpolateRound", {
    enumerable: true,
    get: function() {
        return _round.default;
    }
});
Object.defineProperty(exports, "interpolateString", {
    enumerable: true,
    get: function() {
        return _string.default;
    }
});
Object.defineProperty(exports, "interpolateTransformCss", {
    enumerable: true,
    get: function() {
        return _index.interpolateTransformCss;
    }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
    enumerable: true,
    get: function() {
        return _index.interpolateTransformSvg;
    }
});
Object.defineProperty(exports, "interpolateZoom", {
    enumerable: true,
    get: function() {
        return _zoom.default;
    }
});
Object.defineProperty(exports, "piecewise", {
    enumerable: true,
    get: function() {
        return _piecewise.default;
    }
});
Object.defineProperty(exports, "quantize", {
    enumerable: true,
    get: function() {
        return _quantize.default;
    }
});
var _value = _interopRequireDefault(require("18a1769b74308b38"));
var _array = _interopRequireDefault(require("f99323a27aa06a8c"));
var _basis = _interopRequireDefault(require("66bb1ae08d550d2f"));
var _basisClosed = _interopRequireDefault(require("e0f8689cd9a4ed85"));
var _date = _interopRequireDefault(require("938cc47dd24b27f"));
var _discrete = _interopRequireDefault(require("6ee3a660784662db"));
var _hue = _interopRequireDefault(require("c97b3402df3264f1"));
var _number = _interopRequireDefault(require("c4605d70387a9f89"));
var _numberArray = _interopRequireDefault(require("f5b9681bf316d3c8"));
var _object = _interopRequireDefault(require("2a8363d30def3d49"));
var _round = _interopRequireDefault(require("132735e62b44017c"));
var _string = _interopRequireDefault(require("5f79c0b417d7ffb1"));
var _index = require("9cd31cac42489c2d");
var _zoom = _interopRequireDefault(require("829022ddb9572f68"));
var _rgb = _interopRequireWildcard(require("a08467c6d9046172"));
var _hsl = _interopRequireWildcard(require("1b2f37b38b1c2632"));
var _lab = _interopRequireDefault(require("76284b3c5d04b53e"));
var _hcl = _interopRequireWildcard(require("361bffab7c7a6e6a"));
var _cubehelix = _interopRequireWildcard(require("c6d6249c783d060a"));
var _piecewise = _interopRequireDefault(require("cb02924b4c722e0d"));
var _quantize = _interopRequireDefault(require("d55fda9f4fcff7dd"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"18a1769b74308b38":"b86f5","f99323a27aa06a8c":"1FJ5X","66bb1ae08d550d2f":"bph57","e0f8689cd9a4ed85":"9t31G","938cc47dd24b27f":"gWovO","6ee3a660784662db":"3D77J","c97b3402df3264f1":"lh1VW","c4605d70387a9f89":"dpTwm","f5b9681bf316d3c8":"Cnjz5","2a8363d30def3d49":"bmJdA","132735e62b44017c":"l4C2h","5f79c0b417d7ffb1":"dr90N","9cd31cac42489c2d":"1EI8U","829022ddb9572f68":"5TMOh","a08467c6d9046172":"jlBu7","1b2f37b38b1c2632":"6NfjW","76284b3c5d04b53e":"3RnET","361bffab7c7a6e6a":"gmMNO","c6d6249c783d060a":"d5A71","cb02924b4c722e0d":"gAF1c","d55fda9f4fcff7dd":"hofRc"}],"b86f5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _index = require("6b00cb8a35cd7eca");
var _rgb = _interopRequireDefault(require("2f5b9308d0021b3f"));
var _array = require("858d92aa5fbe2d16");
var _date = _interopRequireDefault(require("3b5f3eaf3c70c4df"));
var _number = _interopRequireDefault(require("7aa3212a6360303f"));
var _object = _interopRequireDefault(require("4512622efcc3e244"));
var _string = _interopRequireDefault(require("4f6ec7c7e2d116a"));
var _constant = _interopRequireDefault(require("49fed36e04134ce7"));
var _numberArray = _interopRequireWildcard(require("7635b225e783f2fb"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(a, b) {
    var t = typeof b, c;
    return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _index.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _index.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}

},{"6b00cb8a35cd7eca":"kaal1","2f5b9308d0021b3f":"jlBu7","858d92aa5fbe2d16":"1FJ5X","3b5f3eaf3c70c4df":"gWovO","7aa3212a6360303f":"dpTwm","4512622efcc3e244":"bmJdA","4f6ec7c7e2d116a":"dr90N","49fed36e04134ce7":"gRzbH","7635b225e783f2fb":"Cnjz5"}],"kaal1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "color", {
    enumerable: true,
    get: function() {
        return _color.default;
    }
});
Object.defineProperty(exports, "cubehelix", {
    enumerable: true,
    get: function() {
        return _cubehelix.default;
    }
});
Object.defineProperty(exports, "gray", {
    enumerable: true,
    get: function() {
        return _lab.gray;
    }
});
Object.defineProperty(exports, "hcl", {
    enumerable: true,
    get: function() {
        return _lab.hcl;
    }
});
Object.defineProperty(exports, "hsl", {
    enumerable: true,
    get: function() {
        return _color.hsl;
    }
});
Object.defineProperty(exports, "lab", {
    enumerable: true,
    get: function() {
        return _lab.default;
    }
});
Object.defineProperty(exports, "lch", {
    enumerable: true,
    get: function() {
        return _lab.lch;
    }
});
Object.defineProperty(exports, "rgb", {
    enumerable: true,
    get: function() {
        return _color.rgb;
    }
});
var _color = _interopRequireWildcard(require("60878dcd6741cbf6"));
var _lab = _interopRequireWildcard(require("19fbdf90fb32e3fb"));
var _cubehelix = _interopRequireDefault(require("84a7e361b17f11ef"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}

},{"60878dcd6741cbf6":"3yWdH","19fbdf90fb32e3fb":"5EMNP","84a7e361b17f11ef":"l9MlA"}],"3yWdH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Color = Color;
exports.Rgb = Rgb;
exports.darker = exports.brighter = void 0;
exports.default = color;
exports.hsl = hsl;
exports.hslConvert = hslConvert;
exports.rgb = rgb;
exports.rgbConvert = rgbConvert;
var _define = _interopRequireWildcard(require("1d30727e3b2969dd"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function Color() {}
var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*", reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", reHex = /^#([0-9a-f]{3,8})$/, reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`), reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`), reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`), reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`), reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`), reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
var named = {
    aliceblue: 0xf0f8ff,
    antiquewhite: 0xfaebd7,
    aqua: 0x00ffff,
    aquamarine: 0x7fffd4,
    azure: 0xf0ffff,
    beige: 0xf5f5dc,
    bisque: 0xffe4c4,
    black: 0x000000,
    blanchedalmond: 0xffebcd,
    blue: 0x0000ff,
    blueviolet: 0x8a2be2,
    brown: 0xa52a2a,
    burlywood: 0xdeb887,
    cadetblue: 0x5f9ea0,
    chartreuse: 0x7fff00,
    chocolate: 0xd2691e,
    coral: 0xff7f50,
    cornflowerblue: 0x6495ed,
    cornsilk: 0xfff8dc,
    crimson: 0xdc143c,
    cyan: 0x00ffff,
    darkblue: 0x00008b,
    darkcyan: 0x008b8b,
    darkgoldenrod: 0xb8860b,
    darkgray: 0xa9a9a9,
    darkgreen: 0x006400,
    darkgrey: 0xa9a9a9,
    darkkhaki: 0xbdb76b,
    darkmagenta: 0x8b008b,
    darkolivegreen: 0x556b2f,
    darkorange: 0xff8c00,
    darkorchid: 0x9932cc,
    darkred: 0x8b0000,
    darksalmon: 0xe9967a,
    darkseagreen: 0x8fbc8f,
    darkslateblue: 0x483d8b,
    darkslategray: 0x2f4f4f,
    darkslategrey: 0x2f4f4f,
    darkturquoise: 0x00ced1,
    darkviolet: 0x9400d3,
    deeppink: 0xff1493,
    deepskyblue: 0x00bfff,
    dimgray: 0x696969,
    dimgrey: 0x696969,
    dodgerblue: 0x1e90ff,
    firebrick: 0xb22222,
    floralwhite: 0xfffaf0,
    forestgreen: 0x228b22,
    fuchsia: 0xff00ff,
    gainsboro: 0xdcdcdc,
    ghostwhite: 0xf8f8ff,
    gold: 0xffd700,
    goldenrod: 0xdaa520,
    gray: 0x808080,
    green: 0x008000,
    greenyellow: 0xadff2f,
    grey: 0x808080,
    honeydew: 0xf0fff0,
    hotpink: 0xff69b4,
    indianred: 0xcd5c5c,
    indigo: 0x4b0082,
    ivory: 0xfffff0,
    khaki: 0xf0e68c,
    lavender: 0xe6e6fa,
    lavenderblush: 0xfff0f5,
    lawngreen: 0x7cfc00,
    lemonchiffon: 0xfffacd,
    lightblue: 0xadd8e6,
    lightcoral: 0xf08080,
    lightcyan: 0xe0ffff,
    lightgoldenrodyellow: 0xfafad2,
    lightgray: 0xd3d3d3,
    lightgreen: 0x90ee90,
    lightgrey: 0xd3d3d3,
    lightpink: 0xffb6c1,
    lightsalmon: 0xffa07a,
    lightseagreen: 0x20b2aa,
    lightskyblue: 0x87cefa,
    lightslategray: 0x778899,
    lightslategrey: 0x778899,
    lightsteelblue: 0xb0c4de,
    lightyellow: 0xffffe0,
    lime: 0x00ff00,
    limegreen: 0x32cd32,
    linen: 0xfaf0e6,
    magenta: 0xff00ff,
    maroon: 0x800000,
    mediumaquamarine: 0x66cdaa,
    mediumblue: 0x0000cd,
    mediumorchid: 0xba55d3,
    mediumpurple: 0x9370db,
    mediumseagreen: 0x3cb371,
    mediumslateblue: 0x7b68ee,
    mediumspringgreen: 0x00fa9a,
    mediumturquoise: 0x48d1cc,
    mediumvioletred: 0xc71585,
    midnightblue: 0x191970,
    mintcream: 0xf5fffa,
    mistyrose: 0xffe4e1,
    moccasin: 0xffe4b5,
    navajowhite: 0xffdead,
    navy: 0x000080,
    oldlace: 0xfdf5e6,
    olive: 0x808000,
    olivedrab: 0x6b8e23,
    orange: 0xffa500,
    orangered: 0xff4500,
    orchid: 0xda70d6,
    palegoldenrod: 0xeee8aa,
    palegreen: 0x98fb98,
    paleturquoise: 0xafeeee,
    palevioletred: 0xdb7093,
    papayawhip: 0xffefd5,
    peachpuff: 0xffdab9,
    peru: 0xcd853f,
    pink: 0xffc0cb,
    plum: 0xdda0dd,
    powderblue: 0xb0e0e6,
    purple: 0x800080,
    rebeccapurple: 0x663399,
    red: 0xff0000,
    rosybrown: 0xbc8f8f,
    royalblue: 0x4169e1,
    saddlebrown: 0x8b4513,
    salmon: 0xfa8072,
    sandybrown: 0xf4a460,
    seagreen: 0x2e8b57,
    seashell: 0xfff5ee,
    sienna: 0xa0522d,
    silver: 0xc0c0c0,
    skyblue: 0x87ceeb,
    slateblue: 0x6a5acd,
    slategray: 0x708090,
    slategrey: 0x708090,
    snow: 0xfffafa,
    springgreen: 0x00ff7f,
    steelblue: 0x4682b4,
    tan: 0xd2b48c,
    teal: 0x008080,
    thistle: 0xd8bfd8,
    tomato: 0xff6347,
    turquoise: 0x40e0d0,
    violet: 0xee82ee,
    wheat: 0xf5deb3,
    white: 0xffffff,
    whitesmoke: 0xf5f5f5,
    yellow: 0xffff00,
    yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
    copy (channels) {
        return Object.assign(new this.constructor(), this, channels);
    },
    displayable () {
        return this.rgb().displayable();
    },
    hex: color_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: color_formatHex,
    formatHex8: color_formatHex8,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
});
function color_formatHex() {
    return this.rgb().formatHex();
}
function color_formatHex8() {
    return this.rgb().formatHex8();
}
function color_formatHsl() {
    return hslConvert(this).formatHsl();
}
function color_formatRgb() {
    return this.rgb().formatRgb();
}
function color(format) {
    var m, l;
    format = (format + "").trim().toLowerCase();
    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
     : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
     : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
     : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
     : null // invalid hex
    ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
     : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
     : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
     : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
     : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
     : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
     : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
     : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}
function rgba(r, g, b, a) {
    if (a <= 0) r = g = b = NaN;
    return new Rgb(r, g, b, a);
}
function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb();
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity;
}
(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
    brighter (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    darker (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    rgb () {
        return this;
    },
    clamp () {
        return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
    },
    displayable () {
        return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
    },
    hex: rgb_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: rgb_formatHex,
    formatHex8: rgb_formatHex8,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
}));
function rgb_formatHex() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
}
function rgb_formatHex8() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function rgb_formatRgb() {
    const a = clampa(this.opacity);
    return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
}
function clampa(opacity) {
    return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
}
function clampi(value) {
    return Math.max(0, Math.min(255, Math.round(value) || 0));
}
function hex(value) {
    value = clampi(value);
    return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s, l, a) {
    if (a <= 0) h = s = l = NaN;
    else if (l <= 0 || l >= 1) h = s = NaN;
    else if (s <= 0) h = NaN;
    return new Hsl(h, s, l, a);
}
function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl();
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;
    if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;
        else if (g === max) h = (b - r) / s + 2;
        else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
    } else s = l > 0 && l < 1 ? 0 : h;
    return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
}
(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
    brighter (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    darker (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    rgb () {
        var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
    },
    clamp () {
        return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
    },
    displayable () {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
    },
    formatHsl () {
        const a = clampa(this.opacity);
        return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
    }
}));
function clamph(value) {
    value = (value || 0) % 360;
    return value < 0 ? value + 360 : value;
}
function clampt(value) {
    return Math.max(0, Math.min(1, value || 0));
}
/* From FvD 13.37, CSS Color Module Level 3 */ function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

},{"1d30727e3b2969dd":"kLJqx"}],"kLJqx":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.extend = extend;
function _default(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
}
function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for(var key in definition)prototype[key] = definition[key];
    return prototype;
}

},{}],"5EMNP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Hcl = Hcl;
exports.Lab = Lab;
exports.default = lab;
exports.gray = gray;
exports.hcl = hcl;
exports.lch = lch;
var _define = _interopRequireWildcard(require("9a3353011f08cad1"));
var _color = require("3650f0b1e5700098");
var _math = require("ef21497f13ac1079");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
// https://observablehq.com/@mbostock/lab-and-rgb
const K = 18, Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1;
function labConvert(o) {
    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
    if (o instanceof Hcl) return hcl2lab(o);
    if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
    var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
    if (r === g && g === b) x = z = y;
    else {
        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
    }
    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}
function gray(l, opacity) {
    return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}
function lab(l, a, b, opacity) {
    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}
function Lab(l, a, b, opacity) {
    this.l = +l;
    this.a = +a;
    this.b = +b;
    this.opacity = +opacity;
}
(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
    brighter (k) {
        return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
    },
    darker (k) {
        return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
    },
    rgb () {
        var y = (this.l + 16) / 116, x = isNaN(this.a) ? y : y + this.a / 500, z = isNaN(this.b) ? y : y - this.b / 200;
        x = Xn * lab2xyz(x);
        y = Yn * lab2xyz(y);
        z = Zn * lab2xyz(z);
        return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
    }
}));
function xyz2lab(t) {
    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}
function lab2xyz(t) {
    return t > t1 ? t * t * t : t2 * (t - t0);
}
function lrgb2rgb(x) {
    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}
function rgb2lrgb(x) {
    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}
function hclConvert(o) {
    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
    if (!(o instanceof Lab)) o = labConvert(o);
    if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
    var h = Math.atan2(o.b, o.a) * _math.degrees;
    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}
function lch(l, c, h, opacity) {
    return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function hcl(h, c, l, opacity) {
    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
    this.h = +h;
    this.c = +c;
    this.l = +l;
    this.opacity = +opacity;
}
function hcl2lab(o) {
    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
    var h = o.h * _math.radians;
    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}
(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
    brighter (k) {
        return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
    },
    darker (k) {
        return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
    },
    rgb () {
        return hcl2lab(this).rgb();
    }
}));

},{"9a3353011f08cad1":"kLJqx","3650f0b1e5700098":"3yWdH","ef21497f13ac1079":"hM50N"}],"hM50N":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.radians = exports.degrees = void 0;
const radians = Math.PI / 180;
exports.radians = radians;
const degrees = 180 / Math.PI;
exports.degrees = degrees;

},{}],"l9MlA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cubehelix = Cubehelix;
exports.default = cubehelix;
var _define = _interopRequireWildcard(require("4abcf1c064e6684a"));
var _color = require("88aa652eacec148e");
var _math = require("7e69901a6e423f00");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
var A = -0.14861, B = 1.78277, C = -0.29227, D = -0.90649, E = 1.97294, ED = E * D, EB = E * B, BC_DA = B * C - D * A;
function cubehelixConvert(o) {
    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB), bl = b - l, k = (E * (g - l) - C * bl) / D, s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
    h = s ? Math.atan2(k, bl) * _math.degrees - 120 : NaN;
    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}
function cubehelix(h, s, l, opacity) {
    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
}
(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
    brighter (k) {
        k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
    },
    darker (k) {
        k = k == null ? _color.darker : Math.pow(_color.darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
    },
    rgb () {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.radians, l = +this.l, a = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh = Math.cos(h), sinh = Math.sin(h);
        return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
    }
}));

},{"4abcf1c064e6684a":"kLJqx","88aa652eacec148e":"3yWdH","7e69901a6e423f00":"hM50N"}],"jlBu7":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;
var _index = require("a71c13c6f95adbd4");
var _basis = _interopRequireDefault(require("6a332a97102860d7"));
var _basisClosed = _interopRequireDefault(require("9304424e5c9a17cf"));
var _color = _interopRequireWildcard(require("7dffa81f3b4437d6"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var _default = function rgbGamma(y) {
    var color = (0, _color.gamma)(y);
    function rgb(start, end) {
        var r = color((start = (0, _index.rgb)(start)).r, (end = (0, _index.rgb)(end)).r), g = color(start.g, end.g), b = color(start.b, end.b), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
            start.r = r(t);
            start.g = g(t);
            start.b = b(t);
            start.opacity = opacity(t);
            return start + "";
        };
    }
    rgb.gamma = rgbGamma;
    return rgb;
}(1);
exports.default = _default;
function rgbSpline(spline) {
    return function(colors) {
        var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color;
        for(i = 0; i < n; ++i){
            color = (0, _index.rgb)(colors[i]);
            r[i] = color.r || 0;
            g[i] = color.g || 0;
            b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
            color.r = r(t);
            color.g = g(t);
            color.b = b(t);
            return color + "";
        };
    };
}
var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;

},{"a71c13c6f95adbd4":"kaal1","6a332a97102860d7":"bph57","9304424e5c9a17cf":"9t31G","7dffa81f3b4437d6":"1N01L"}],"bph57":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.basis = basis;
exports.default = _default;
function basis(t1, v0, v1, v2, v3) {
    var t2 = t1 * t1, t3 = t2 * t1;
    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
function _default(values) {
    var n = values.length - 1;
    return function(t) {
        var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
    };
}

},{}],"9t31G":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _basis = require("fa54a771ab54df01");
function _default(values) {
    var n = values.length;
    return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
        return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
    };
}

},{"fa54a771ab54df01":"bph57"}],"1N01L":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nogamma;
exports.gamma = gamma;
exports.hue = hue;
var _constant = _interopRequireDefault(require("c45f0b08e65bfe9d"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function linear(a, d) {
    return function(t) {
        return a + t * d;
    };
}
function exponential(a, b, y) {
    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
    };
}
function hue(a, b) {
    var d = b - a;
    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}
function gamma(y) {
    return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
    };
}
function nogamma(a, b) {
    var d = b - a;
    return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}

},{"c45f0b08e65bfe9d":"gRzbH"}],"gRzbH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _default = (x)=>()=>x;
exports.default = _default;

},{}],"1FJ5X":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.genericArray = genericArray;
var _value = _interopRequireDefault(require("b86da8c7688bb1d9"));
var _numberArray = _interopRequireWildcard(require("505aa46a393cd613"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(a, b) {
    return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}
function genericArray(a, b) {
    var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;
    for(i = 0; i < na; ++i)x[i] = (0, _value.default)(a[i], b[i]);
    for(; i < nb; ++i)c[i] = b[i];
    return function(t) {
        for(i = 0; i < na; ++i)c[i] = x[i](t);
        return c;
    };
}

},{"b86da8c7688bb1d9":"b86f5","505aa46a393cd613":"Cnjz5"}],"Cnjz5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;
function _default(a, b) {
    if (!b) b = [];
    var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;
    return function(t) {
        for(i = 0; i < n; ++i)c[i] = a[i] * (1 - t) + b[i] * t;
        return c;
    };
}
function isNumberArray(x) {
    return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

},{}],"gWovO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    var d = new Date();
    return a = +a, b = +b, function(t) {
        return d.setTime(a * (1 - t) + b * t), d;
    };
}

},{}],"dpTwm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    return a = +a, b = +b, function(t) {
        return a * (1 - t) + b * t;
    };
}

},{}],"bmJdA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _value = _interopRequireDefault(require("ff3c10c6ba896e53"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(a, b) {
    var i = {}, c = {}, k;
    if (a === null || typeof a !== "object") a = {};
    if (b === null || typeof b !== "object") b = {};
    for(k in b)if (k in a) i[k] = (0, _value.default)(a[k], b[k]);
    else c[k] = b[k];
    return function(t) {
        for(k in i)c[k] = i[k](t);
        return c;
    };
}

},{"ff3c10c6ba896e53":"b86f5"}],"dr90N":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _number = _interopRequireDefault(require("1ec1f242696e82fa"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB = new RegExp(reA.source, "g");
function zero(b) {
    return function() {
        return b;
    };
}
function one(b) {
    return function(t) {
        return b(t) + "";
    };
}
function _default(a, b) {
    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
    am, // current match in a
    bm, // current match in b
    bs, // string preceding current number in b, if any
    i = -1, // index in s
    s = [], // string constants and placeholders
    q = []; // number interpolators
    // Coerce inputs to strings.
    a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.
    while((am = reA.exec(a)) && (bm = reB.exec(b))){
        if ((bs = bm.index) > bi) {
            // a string precedes the next number in b
            bs = b.slice(bi, bs);
            if (s[i]) s[i] += bs; // coalesce with previous string
            else s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) {
            // numbers in a & b match
            if (s[i]) s[i] += bm; // coalesce with previous string
            else s[++i] = bm;
        } else {
            // interpolate non-matching numbers
            s[++i] = null;
            q.push({
                i: i,
                x: (0, _number.default)(am, bm)
            });
        }
        bi = reB.lastIndex;
    } // Add remains of b.
    if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i]) s[i] += bs; // coalesce with previous string
        else s[++i] = bs;
    } // Special optimization for only a single match.
    // Otherwise, interpolate each of the numbers and rejoin the string.
    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
        for(var i = 0, o; i < b; ++i)s[(o = q[i]).i] = o.x(t);
        return s.join("");
    });
}

},{"1ec1f242696e82fa":"dpTwm"}],"3D77J":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(range) {
    var n = range.length;
    return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
    };
}

},{}],"lh1VW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _color = require("f9552f2567e33cad");
function _default(a, b) {
    var i = (0, _color.hue)(+a, +b);
    return function(t) {
        var x = i(t);
        return x - 360 * Math.floor(x / 360);
    };
}

},{"f9552f2567e33cad":"1N01L"}],"l4C2h":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(a, b) {
    return a = +a, b = +b, function(t) {
        return Math.round(a * (1 - t) + b * t);
    };
}

},{}],"1EI8U":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;
var _number = _interopRequireDefault(require("3e2d37e598810190"));
var _parse = require("4b3d6acbd4a3c21a");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function interpolateTransform(parse, pxComma, pxParen, degParen) {
    function pop(s) {
        return s.length ? s.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
            var i = s.push("translate(", null, pxComma, null, pxParen);
            q.push({
                i: i - 4,
                x: (0, _number.default)(xa, xb)
            }, {
                i: i - 2,
                x: (0, _number.default)(ya, yb)
            });
        } else if (xb || yb) s.push("translate(" + xb + pxComma + yb + pxParen);
    }
    function rotate(a, b, s, q) {
        if (a !== b) {
            if (a - b > 180) b += 360;
            else if (b - a > 180) a += 360; // shortest path
            q.push({
                i: s.push(pop(s) + "rotate(", null, degParen) - 2,
                x: (0, _number.default)(a, b)
            });
        } else if (b) s.push(pop(s) + "rotate(" + b + degParen);
    }
    function skewX(a, b, s, q) {
        if (a !== b) q.push({
            i: s.push(pop(s) + "skewX(", null, degParen) - 2,
            x: (0, _number.default)(a, b)
        });
        else if (b) s.push(pop(s) + "skewX(" + b + degParen);
    }
    function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
            var i = s.push(pop(s) + "scale(", null, ",", null, ")");
            q.push({
                i: i - 4,
                x: (0, _number.default)(xa, xb)
            }, {
                i: i - 2,
                x: (0, _number.default)(ya, yb)
            });
        } else if (xb !== 1 || yb !== 1) s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
    return function(a, b) {
        var s = [], // string constants and placeholders
        q = []; // number interpolators
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null; // gc
        return function(t) {
            var i = -1, n = q.length, o;
            while(++i < n)s[(o = q[i]).i] = o.x(t);
            return s.join("");
        };
    };
}
var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;

},{"3e2d37e598810190":"dpTwm","4b3d6acbd4a3c21a":"gwTxM"}],"gwTxM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;
var _decompose = _interopRequireWildcard(require("6801e9b7b9a8c06f"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
var svgNode;
/* eslint-disable no-undef */ function parseCss(value) {
    const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
    return m.isIdentity ? _decompose.identity : (0, _decompose.default)(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value) {
    if (value == null) return _decompose.identity;
    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
    svgNode.setAttribute("transform", value);
    if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
    value = value.matrix;
    return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}

},{"6801e9b7b9a8c06f":"gSWsV"}],"gSWsV":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
    translateX: 0,
    translateY: 0,
    rotate: 0,
    skewX: 0,
    scaleX: 1,
    scaleY: 1
};
exports.identity = identity;
function _default(a, b, c, d, e, f) {
    var scaleX, scaleY, skewX;
    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
    return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees,
        skewX: Math.atan(skewX) * degrees,
        scaleX: scaleX,
        scaleY: scaleY
    };
}

},{}],"5TMOh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var epsilon2 = 1e-12;
function cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
}
function sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
}
function tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}
var _default = function zoomRho(rho, rho2, rho4) {
    // p0 = [ux0, uy0, w0]
    // p1 = [ux1, uy1, w1]
    function zoom(p0, p1) {
        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S; // Special case for u0 ≅ u1.
        if (d2 < epsilon2) {
            S = Math.log(w1 / w0) / rho;
            i = function(t) {
                return [
                    ux0 + t * dx,
                    uy0 + t * dy,
                    w0 * Math.exp(rho * t * S)
                ];
            };
        } else {
            var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
            S = (r1 - r0) / rho;
            i = function(t) {
                var s = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
                return [
                    ux0 + u * dx,
                    uy0 + u * dy,
                    w0 * coshr0 / cosh(rho * s + r0)
                ];
            };
        }
        i.duration = S * 1000 * rho / Math.SQRT2;
        return i;
    }
    zoom.rho = function(_) {
        var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
        return zoomRho(_1, _2, _4);
    };
    return zoom;
}(Math.SQRT2, 2, 4);
exports.default = _default;

},{}],"6NfjW":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hslLong = exports.default = void 0;
var _index = require("8527dae26181d5cf");
var _color = _interopRequireWildcard(require("45faacac073e112a"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function hsl(hue) {
    return function(start, end) {
        var h = hue((start = (0, _index.hsl)(start)).h, (end = (0, _index.hsl)(end)).h), s = (0, _color.default)(start.s, end.s), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(t);
            start.opacity = opacity(t);
            return start + "";
        };
    };
}
var _default = hsl(_color.hue);
exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;

},{"8527dae26181d5cf":"kaal1","45faacac073e112a":"1N01L"}],"3RnET":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = lab;
var _index = require("bb962b0e100409c3");
var _color = _interopRequireDefault(require("39c4c5a5fff46e6a"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function lab(start, end) {
    var l = (0, _color.default)((start = (0, _index.lab)(start)).l, (end = (0, _index.lab)(end)).l), a = (0, _color.default)(start.a, end.a), b = (0, _color.default)(start.b, end.b), opacity = (0, _color.default)(start.opacity, end.opacity);
    return function(t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
    };
}

},{"bb962b0e100409c3":"kaal1","39c4c5a5fff46e6a":"1N01L"}],"gmMNO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hclLong = exports.default = void 0;
var _index = require("5dab9e1ee5c5ab5d");
var _color = _interopRequireWildcard(require("4a63660e3a72d4d2"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function hcl(hue) {
    return function(start, end) {
        var h = hue((start = (0, _index.hcl)(start)).h, (end = (0, _index.hcl)(end)).h), c = (0, _color.default)(start.c, end.c), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
            start.h = h(t);
            start.c = c(t);
            start.l = l(t);
            start.opacity = opacity(t);
            return start + "";
        };
    };
}
var _default = hcl(_color.hue);
exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;

},{"5dab9e1ee5c5ab5d":"kaal1","4a63660e3a72d4d2":"1N01L"}],"d5A71":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.cubehelixLong = void 0;
var _index = require("981aef0afb354b0c");
var _color = _interopRequireWildcard(require("f9336ad633bd893d"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function cubehelix(hue) {
    return function cubehelixGamma(y) {
        y = +y;
        function cubehelix(start, end) {
            var h = hue((start = (0, _index.cubehelix)(start)).h, (end = (0, _index.cubehelix)(end)).h), s = (0, _color.default)(start.s, end.s), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
            return function(t) {
                start.h = h(t);
                start.s = s(t);
                start.l = l(Math.pow(t, y));
                start.opacity = opacity(t);
                return start + "";
            };
        }
        cubehelix.gamma = cubehelixGamma;
        return cubehelix;
    }(1);
}
var _default = cubehelix(_color.hue);
exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;

},{"981aef0afb354b0c":"kaal1","f9336ad633bd893d":"1N01L"}],"gAF1c":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = piecewise;
var _value = _interopRequireDefault(require("5c06b65a4f09269b"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function piecewise(interpolate, values) {
    if (values === undefined) values = interpolate, interpolate = _value.default;
    var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
    while(i < n)I[i] = interpolate(v, v = values[++i]);
    return function(t) {
        var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
        return I[i](t - i);
    };
}

},{"5c06b65a4f09269b":"b86f5"}],"hofRc":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(interpolator, n) {
    var samples = new Array(n);
    for(var i = 0; i < n; ++i)samples[i] = interpolator(i / (n - 1));
    return samples;
}

},{}],"9PJFT":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = constants;
function constants(x) {
    return function() {
        return x;
    };
}

},{}],"k1D80":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = number;
function number(x) {
    return +x;
}

},{}],"31ukt":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = tickFormat;
var _index = require("a4043605242eb496");
var _index2 = require("8da1e3e06f47624b");
function tickFormat(start, stop, count, specifier) {
    var step = (0, _index.tickStep)(start, stop, count), precision;
    specifier = (0, _index2.formatSpecifier)(specifier == null ? ",f" : specifier);
    switch(specifier.type){
        case "s":
            var value = Math.max(Math.abs(start), Math.abs(stop));
            if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionPrefix)(step, value))) specifier.precision = precision;
            return (0, _index2.formatPrefix)(specifier, value);
        case "":
        case "e":
        case "g":
        case "p":
        case "r":
            if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
            break;
        case "f":
        case "%":
            if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
            break;
    }
    return (0, _index2.format)(specifier);
}

},{"a4043605242eb496":"5l2OL","8da1e3e06f47624b":"d0osN"}],"d0osN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FormatSpecifier", {
    enumerable: true,
    get: function() {
        return _formatSpecifier.FormatSpecifier;
    }
});
Object.defineProperty(exports, "format", {
    enumerable: true,
    get: function() {
        return _defaultLocale.format;
    }
});
Object.defineProperty(exports, "formatDefaultLocale", {
    enumerable: true,
    get: function() {
        return _defaultLocale.default;
    }
});
Object.defineProperty(exports, "formatLocale", {
    enumerable: true,
    get: function() {
        return _locale.default;
    }
});
Object.defineProperty(exports, "formatPrefix", {
    enumerable: true,
    get: function() {
        return _defaultLocale.formatPrefix;
    }
});
Object.defineProperty(exports, "formatSpecifier", {
    enumerable: true,
    get: function() {
        return _formatSpecifier.default;
    }
});
Object.defineProperty(exports, "precisionFixed", {
    enumerable: true,
    get: function() {
        return _precisionFixed.default;
    }
});
Object.defineProperty(exports, "precisionPrefix", {
    enumerable: true,
    get: function() {
        return _precisionPrefix.default;
    }
});
Object.defineProperty(exports, "precisionRound", {
    enumerable: true,
    get: function() {
        return _precisionRound.default;
    }
});
var _defaultLocale = _interopRequireWildcard(require("2ee0c7b1a22e44e6"));
var _locale = _interopRequireDefault(require("ff358412e51164cd"));
var _formatSpecifier = _interopRequireWildcard(require("60d6396182b4fde8"));
var _precisionFixed = _interopRequireDefault(require("792b165b9b0bcf2d"));
var _precisionPrefix = _interopRequireDefault(require("f2702d774fe2085c"));
var _precisionRound = _interopRequireDefault(require("492f493218059efd"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}

},{"2ee0c7b1a22e44e6":"5wVLA","ff358412e51164cd":"gtJem","60d6396182b4fde8":"gJIMI","792b165b9b0bcf2d":"jV9zy","f2702d774fe2085c":"lI4Cy","492f493218059efd":"lWbDG"}],"5wVLA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;
var _locale = _interopRequireDefault(require("317c67875ded3d99"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
    thousands: ",",
    grouping: [
        3
    ],
    currency: [
        "$",
        ""
    ]
});
function defaultLocale(definition) {
    locale = (0, _locale.default)(definition);
    exports.format = format = locale.format;
    exports.formatPrefix = formatPrefix = locale.formatPrefix;
    return locale;
}

},{"317c67875ded3d99":"gtJem"}],"gtJem":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("f55671e2db2b86ef"));
var _formatGroup = _interopRequireDefault(require("e366a511ee4b4f2f"));
var _formatNumerals = _interopRequireDefault(require("86155372ae3c6f7e"));
var _formatSpecifier = _interopRequireDefault(require("1b6c7d0076b09661"));
var _formatTrim = _interopRequireDefault(require("8fea1479564cd384"));
var _formatTypes = _interopRequireDefault(require("8cc741dcfb99dfd9"));
var _formatPrefixAuto = require("10cbdd8f7ac88548");
var _identity = _interopRequireDefault(require("efeab53251079183"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var map = Array.prototype.map, prefixes = [
    "y",
    "z",
    "a",
    "f",
    "p",
    "n",
    "\xb5",
    "m",
    "",
    "k",
    "M",
    "G",
    "T",
    "P",
    "E",
    "Z",
    "Y"
];
function _default(locale) {
    var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""), currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "", currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "", decimal = locale.decimal === undefined ? "." : locale.decimal + "", numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)), percent = locale.percent === undefined ? "%" : locale.percent + "", minus = locale.minus === undefined ? "\u2212" : locale.minus + "", nan = locale.nan === undefined ? "NaN" : locale.nan + "";
    function newFormat(specifier) {
        specifier = (0, _formatSpecifier.default)(specifier);
        var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type; // The "n" type is an alias for ",g".
        if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
        else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.
        if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
        // For SI-prefix, the suffix is lazily computed.
        var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
        // Is this an integer type?
        // Can this type generate exponential notation?
        var formatType = _formatTypes.default[type], maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
        // or clamp the specified precision to the supported range.
        // For significant precision, it must be in [1, 21].
        // For fixed precision, it must be in [0, 20].
        precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
        function format(value) {
            var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
            if (type === "c") {
                valueSuffix = formatType(value) + valueSuffix;
                value = "";
            } else {
                value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!
                var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.
                value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.
                if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
                if (valueNegative && +value === 0 && sign !== "+") valueNegative = false; // Compute the prefix and suffix.
                valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
                valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
                // grouped, and fractional or exponential “suffix” part that is not.
                if (maybeSuffix) {
                    i = -1, n = value.length;
                    while(++i < n)if (c = value.charCodeAt(i), 48 > c || c > 57) {
                        valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                        value = value.slice(0, i);
                        break;
                    }
                }
            } // If the fill character is not "0", grouping is applied before padding.
            if (comma && !zero) value = group(value, Infinity); // Compute the padding.
            var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.
            if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.
            switch(align){
                case "<":
                    value = valuePrefix + value + valueSuffix + padding;
                    break;
                case "=":
                    value = valuePrefix + padding + value + valueSuffix;
                    break;
                case "^":
                    value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
                    break;
                default:
                    value = padding + valuePrefix + value + valueSuffix;
                    break;
            }
            return numerals(value);
        }
        format.toString = function() {
            return specifier + "";
        };
        return format;
    }
    function formatPrefix(specifier, value) {
        var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
        return function(value) {
            return f(k * value) + prefix;
        };
    }
    return {
        format: newFormat,
        formatPrefix: formatPrefix
    };
}

},{"f55671e2db2b86ef":"jANn2","e366a511ee4b4f2f":"lxdzb","86155372ae3c6f7e":"1Yudo","1b6c7d0076b09661":"gJIMI","8fea1479564cd384":"7OpE6","8cc741dcfb99dfd9":"Jy7Gl","10cbdd8f7ac88548":"heyL2","efeab53251079183":"flF4L"}],"jANn2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _formatDecimal = require("bc7d6f0e0b7ad989");
function _default(x) {
    return x = (0, _formatDecimal.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;
}

},{"bc7d6f0e0b7ad989":"df4oG"}],"df4oG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.formatDecimalParts = formatDecimalParts;
function _default(x) {
    return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
} // Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
    var i, coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
    // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
    return [
        coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
        +x.slice(i + 1)
    ];
}

},{}],"lxdzb":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(grouping, thousands) {
    return function(value, width) {
        var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
        while(i > 0 && g > 0){
            if (length + g + 1 > width) g = Math.max(1, width - length);
            t.push(value.substring(i -= g, i + g));
            if ((length += g + 1) > width) break;
            g = grouping[j = (j + 1) % grouping.length];
        }
        return t.reverse().join(thousands);
    };
}

},{}],"1Yudo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(numerals) {
    return function(value) {
        return value.replace(/[0-9]/g, function(i) {
            return numerals[+i];
        });
    };
}

},{}],"gJIMI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FormatSpecifier = FormatSpecifier;
exports.default = formatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
    var match;
    return new FormatSpecifier({
        fill: match[1],
        align: match[2],
        sign: match[3],
        symbol: match[4],
        zero: match[5],
        width: match[6],
        comma: match[7],
        precision: match[8] && match[8].slice(1),
        trim: match[9],
        type: match[10]
    });
}
formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof
function FormatSpecifier(specifier) {
    this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
    this.align = specifier.align === undefined ? ">" : specifier.align + "";
    this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
    this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
    this.zero = !!specifier.zero;
    this.width = specifier.width === undefined ? undefined : +specifier.width;
    this.comma = !!specifier.comma;
    this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
    this.trim = !!specifier.trim;
    this.type = specifier.type === undefined ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

},{}],"7OpE6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
    out: for(var n = s.length, i = 1, i0 = -1, i1; i < n; ++i)switch(s[i]){
        case ".":
            i0 = i1 = i;
            break;
        case "0":
            if (i0 === 0) i0 = i;
            i1 = i;
            break;
        default:
            if (!+s[i]) break out;
            if (i0 > 0) i0 = 0;
            break;
    }
    return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

},{}],"Jy7Gl":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _formatDecimal = _interopRequireDefault(require("feafbe2a554fb639"));
var _formatPrefixAuto = _interopRequireDefault(require("8d1082b790377352"));
var _formatRounded = _interopRequireDefault(require("35a9fc35835a2a14"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var _default = {
    "%": (x, p)=>(x * 100).toFixed(p),
    "b": (x)=>Math.round(x).toString(2),
    "c": (x)=>x + "",
    "d": _formatDecimal.default,
    "e": (x, p)=>x.toExponential(p),
    "f": (x, p)=>x.toFixed(p),
    "g": (x, p)=>x.toPrecision(p),
    "o": (x)=>Math.round(x).toString(8),
    "p": (x, p)=>(0, _formatRounded.default)(x * 100, p),
    "r": _formatRounded.default,
    "s": _formatPrefixAuto.default,
    "X": (x)=>Math.round(x).toString(16).toUpperCase(),
    "x": (x)=>Math.round(x).toString(16)
};
exports.default = _default;

},{"feafbe2a554fb639":"df4oG","8d1082b790377352":"heyL2","35a9fc35835a2a14":"8fpqk"}],"heyL2":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
exports.prefixExponent = void 0;
var _formatDecimal = require("c968343e236e1eff");
var prefixExponent;
exports.prefixExponent = prefixExponent;
function _default(x, p) {
    var d = (0, _formatDecimal.formatDecimalParts)(x, p);
    if (!d) return x + "";
    var coefficient = d[0], exponent = d[1], i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.formatDecimalParts)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

},{"c968343e236e1eff":"df4oG"}],"8fpqk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _formatDecimal = require("8a356ace3ecb0657");
function _default(x, p) {
    var d = (0, _formatDecimal.formatDecimalParts)(x, p);
    if (!d) return x + "";
    var coefficient = d[0], exponent = d[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

},{"8a356ace3ecb0657":"df4oG"}],"flF4L":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
function _default(x) {
    return x;
}

},{}],"jV9zy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("10ac7ec4cef9eac2"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(step) {
    return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}

},{"10ac7ec4cef9eac2":"jANn2"}],"lI4Cy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("a74b6430297cf90d"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(step, value) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}

},{"a74b6430297cf90d":"jANn2"}],"lWbDG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _default;
var _exponent = _interopRequireDefault(require("152cf0fffe5db4dc"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _default(step, max) {
    step = Math.abs(step), max = Math.abs(max) - step;
    return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}

},{"152cf0fffe5db4dc":"jANn2"}],"169cR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = log;
exports.loggish = loggish;
var _index = require("c2225ae6830156cb");
var _index2 = require("9fe16242a20f801");
var _nice = _interopRequireDefault(require("e1f7cd4bad5fecf5"));
var _continuous = require("cdd2320c22aee987");
var _init = require("54c81c620622cc22");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function transformLog(x) {
    return Math.log(x);
}
function transformExp(x) {
    return Math.exp(x);
}
function transformLogn(x) {
    return -Math.log(-x);
}
function transformExpn(x) {
    return -Math.exp(-x);
}
function pow10(x) {
    return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}
function powp(base) {
    return base === 10 ? pow10 : base === Math.E ? Math.exp : (x)=>Math.pow(base, x);
}
function logp(base) {
    return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x)=>Math.log(x) / base);
}
function reflect(f) {
    return (x, k)=>-f(-x, k);
}
function loggish(transform) {
    const scale = transform(transformLog, transformExp);
    const domain = scale.domain;
    let base = 10;
    let logs;
    let pows;
    function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0) {
            logs = reflect(logs), pows = reflect(pows);
            transform(transformLogn, transformExpn);
        } else transform(transformLog, transformExp);
        return scale;
    }
    scale.base = function(_) {
        return arguments.length ? (base = +_, rescale()) : base;
    };
    scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale.ticks = (count)=>{
        const d = domain();
        let u = d[0];
        let v = d[d.length - 1];
        const r = v < u;
        if (r) [u, v] = [
            v,
            u
        ];
        let i = logs(u);
        let j = logs(v);
        let k;
        let t;
        const n = count == null ? 10 : +count;
        let z = [];
        if (!(base % 1) && j - i < n) {
            i = Math.floor(i), j = Math.ceil(j);
            if (u > 0) for(; i <= j; ++i)for(k = 1; k < base; ++k){
                t = i < 0 ? k / pows(-i) : k * pows(i);
                if (t < u) continue;
                if (t > v) break;
                z.push(t);
            }
            else for(; i <= j; ++i)for(k = base - 1; k >= 1; --k){
                t = i > 0 ? k / pows(-i) : k * pows(i);
                if (t < u) continue;
                if (t > v) break;
                z.push(t);
            }
            if (z.length * 2 < n) z = (0, _index.ticks)(u, v, n);
        } else z = (0, _index.ticks)(i, j, Math.min(j - i, n)).map(pows);
        return r ? z.reverse() : z;
    };
    scale.tickFormat = (count, specifier)=>{
        if (count == null) count = 10;
        if (specifier == null) specifier = base === 10 ? "s" : ",";
        if (typeof specifier !== "function") {
            if (!(base % 1) && (specifier = (0, _index2.formatSpecifier)(specifier)).precision == null) specifier.trim = true;
            specifier = (0, _index2.format)(specifier);
        }
        if (count === Infinity) return specifier;
        const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
        return (d)=>{
            let i = d / pows(Math.round(logs(d)));
            if (i * base < base - 0.5) i *= base;
            return i <= k ? specifier(d) : "";
        };
    };
    scale.nice = ()=>{
        return domain((0, _nice.default)(domain(), {
            floor: (x)=>pows(Math.floor(logs(x))),
            ceil: (x)=>pows(Math.ceil(logs(x)))
        }));
    };
    return scale;
}
function log() {
    const scale = loggish((0, _continuous.transformer)()).domain([
        1,
        10
    ]);
    scale.copy = ()=>(0, _continuous.copy)(scale, log()).base(scale.base());
    _init.initRange.apply(scale, arguments);
    return scale;
}

},{"c2225ae6830156cb":"5l2OL","9fe16242a20f801":"d0osN","e1f7cd4bad5fecf5":"bezwf","cdd2320c22aee987":"6CY1S","54c81c620622cc22":"dMFaU"}],"bezwf":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nice;
function nice(domain, interval) {
    domain = domain.slice();
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;
    if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
    }
    domain[i0] = interval.floor(x0);
    domain[i1] = interval.ceil(x1);
    return domain;
}

},{}],"fx5B6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = symlog;
exports.symlogish = symlogish;
var _linear = require("6b7bc111d415c072");
var _continuous = require("f781e5664611d9c0");
var _init = require("499d293100f0413a");
function transformSymlog(c) {
    return function(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / c));
    };
}
function transformSymexp(c) {
    return function(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
    };
}
function symlogish(transform) {
    var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));
    scale.constant = function(_) {
        return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
    };
    return (0, _linear.linearish)(scale);
}
function symlog() {
    var scale = symlogish((0, _continuous.transformer)());
    scale.copy = function() {
        return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
    };
    return _init.initRange.apply(scale, arguments);
}

},{"6b7bc111d415c072":"4NohP","f781e5664611d9c0":"6CY1S","499d293100f0413a":"dMFaU"}],"fkIxl":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = pow;
exports.powish = powish;
exports.sqrt = sqrt;
var _linear = require("94b90569504e034e");
var _continuous = require("6297cca891d63c37");
var _init = require("1b7874ad495edb4c");
function transformPow(exponent) {
    return function(x) {
        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
    };
}
function transformSqrt(x) {
    return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}
function transformSquare(x) {
    return x < 0 ? -x * x : x * x;
}
function powish(transform) {
    var scale = transform(_continuous.identity, _continuous.identity), exponent = 1;
    function rescale() {
        return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
    }
    scale.exponent = function(_) {
        return arguments.length ? (exponent = +_, rescale()) : exponent;
    };
    return (0, _linear.linearish)(scale);
}
function pow() {
    var scale = powish((0, _continuous.transformer)());
    scale.copy = function() {
        return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
    };
    _init.initRange.apply(scale, arguments);
    return scale;
}
function sqrt() {
    return pow.apply(null, arguments).exponent(0.5);
}

},{"94b90569504e034e":"4NohP","6297cca891d63c37":"6CY1S","1b7874ad495edb4c":"dMFaU"}],"5JZ1D":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = radial;
var _continuous = _interopRequireDefault(require("9cc3a5098e156c85"));
var _init = require("116f55aac82ec8e9");
var _linear = require("b2719a0a78ca2805");
var _number = _interopRequireDefault(require("aa73717e632c4a05"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function square(x) {
    return Math.sign(x) * x * x;
}
function unsquare(x) {
    return Math.sign(x) * Math.sqrt(Math.abs(x));
}
function radial() {
    var squared = (0, _continuous.default)(), range = [
        0,
        1
    ], round = false, unknown;
    function scale(x) {
        var y = unsquare(squared(x));
        return isNaN(y) ? unknown : round ? Math.round(y) : y;
    }
    scale.invert = function(y) {
        return squared.invert(square(y));
    };
    scale.domain = function(_) {
        return arguments.length ? (squared.domain(_), scale) : squared.domain();
    };
    scale.range = function(_) {
        return arguments.length ? (squared.range((range = Array.from(_, _number.default)).map(square)), scale) : range.slice();
    };
    scale.rangeRound = function(_) {
        return scale.range(_).round(true);
    };
    scale.round = function(_) {
        return arguments.length ? (round = !!_, scale) : round;
    };
    scale.clamp = function(_) {
        return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return radial(squared.domain(), range).round(round).clamp(squared.clamp()).unknown(unknown);
    };
    _init.initRange.apply(scale, arguments);
    return (0, _linear.linearish)(scale);
}

},{"9cc3a5098e156c85":"6CY1S","116f55aac82ec8e9":"dMFaU","b2719a0a78ca2805":"4NohP","aa73717e632c4a05":"k1D80"}],"alCqN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quantile;
var _index = require("1587656407247c17");
var _init = require("e93efb9761f1f003");
function quantile() {
    var domain = [], range = [], thresholds = [], unknown;
    function rescale() {
        var i = 0, n = Math.max(1, range.length);
        thresholds = new Array(n - 1);
        while(++i < n)thresholds[i - 1] = (0, _index.quantileSorted)(domain, i / n);
        return scale;
    }
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : range[(0, _index.bisect)(thresholds, x)];
    }
    scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [
            NaN,
            NaN
        ] : [
            i > 0 ? thresholds[i - 1] : domain[0],
            i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
        ];
    };
    scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _)if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(_index.ascending);
        return rescale();
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.quantiles = function() {
        return thresholds.slice();
    };
    scale.copy = function() {
        return quantile().domain(domain).range(range).unknown(unknown);
    };
    return _init.initRange.apply(scale, arguments);
}

},{"1587656407247c17":"5l2OL","e93efb9761f1f003":"dMFaU"}],"jDbzM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = quantize;
var _index = require("61f3ae9aeeace72a");
var _linear = require("19f450ffb9fe0ee8");
var _init = require("97a4ee1bb0f33f6b");
function quantize() {
    var x0 = 0, x1 = 1, n = 1, domain = [
        0.5
    ], range = [
        0,
        1
    ], unknown;
    function scale(x) {
        return x != null && x <= x ? range[(0, _index.bisect)(domain, x, 0, n)] : unknown;
    }
    function rescale() {
        var i = -1;
        domain = new Array(n);
        while(++i < n)domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
    }
    scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [
            x0,
            x1
        ];
    };
    scale.range = function(_) {
        return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
    };
    scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [
            NaN,
            NaN
        ] : i < 1 ? [
            x0,
            domain[0]
        ] : i >= n ? [
            domain[n - 1],
            x1
        ] : [
            domain[i - 1],
            domain[i]
        ];
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : scale;
    };
    scale.thresholds = function() {
        return domain.slice();
    };
    scale.copy = function() {
        return quantize().domain([
            x0,
            x1
        ]).range(range).unknown(unknown);
    };
    return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}

},{"61f3ae9aeeace72a":"5l2OL","19f450ffb9fe0ee8":"4NohP","97a4ee1bb0f33f6b":"dMFaU"}],"96aDC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = threshold;
var _index = require("4b6954aba910b52b");
var _init = require("5769040792c8fbdc");
function threshold() {
    var domain = [
        0.5
    ], range = [
        0,
        1
    ], unknown, n = 1;
    function scale(x) {
        return x != null && x <= x ? range[(0, _index.bisect)(domain, x, 0, n)] : unknown;
    }
    scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
    };
    scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
    };
    scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return [
            domain[i - 1],
            domain[i]
        ];
    };
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
        return threshold().domain(domain).range(range).unknown(unknown);
    };
    return _init.initRange.apply(scale, arguments);
}

},{"4b6954aba910b52b":"5l2OL","5769040792c8fbdc":"dMFaU"}],"3GkXQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.calendar = calendar;
exports.default = time;
var _index = require("d6f26b6733e27d9f");
var _index2 = require("2c6c21fb5fc82ed8");
var _continuous = _interopRequireWildcard(require("33f8922a5dd4a530"));
var _init = require("2234a07f2ca64e26");
var _nice = _interopRequireDefault(require("c7d75e934f92c19f"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function date(t) {
    return new Date(t);
}
function number(t) {
    return t instanceof Date ? +t : +new Date(+t);
}
function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
    var scale = (0, _continuous.default)(), invert = scale.invert, domain = scale.domain;
    var formatMillisecond = format(".%L"), formatSecond = format(":%S"), formatMinute = format("%I:%M"), formatHour = format("%I %p"), formatDay = format("%a %d"), formatWeek = format("%b %d"), formatMonth = format("%B"), formatYear = format("%Y");
    function tickFormat(date) {
        return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
    }
    scale.invert = function(y) {
        return new Date(invert(y));
    };
    scale.domain = function(_) {
        return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
    };
    scale.ticks = function(interval) {
        var d = domain();
        return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
    };
    scale.tickFormat = function(count, specifier) {
        return specifier == null ? tickFormat : format(specifier);
    };
    scale.nice = function(interval) {
        var d = domain();
        if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
        return interval ? domain((0, _nice.default)(d, interval)) : scale;
    };
    scale.copy = function() {
        return (0, _continuous.copy)(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
    };
    return scale;
}
function time() {
    return _init.initRange.apply(calendar(_index.timeTicks, _index.timeTickInterval, _index.timeYear, _index.timeMonth, _index.timeWeek, _index.timeDay, _index.timeHour, _index.timeMinute, _index.timeSecond, _index2.timeFormat).domain([
        new Date(2000, 0, 1),
        new Date(2000, 0, 2)
    ]), arguments);
}

},{"d6f26b6733e27d9f":"ahTKe","2c6c21fb5fc82ed8":"dicVZ","33f8922a5dd4a530":"6CY1S","2234a07f2ca64e26":"dMFaU","c7d75e934f92c19f":"bezwf"}],"ahTKe":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "timeDay", {
    enumerable: true,
    get: function() {
        return _day.default;
    }
});
Object.defineProperty(exports, "timeDays", {
    enumerable: true,
    get: function() {
        return _day.days;
    }
});
Object.defineProperty(exports, "timeFriday", {
    enumerable: true,
    get: function() {
        return _week.friday;
    }
});
Object.defineProperty(exports, "timeFridays", {
    enumerable: true,
    get: function() {
        return _week.fridays;
    }
});
Object.defineProperty(exports, "timeHour", {
    enumerable: true,
    get: function() {
        return _hour.default;
    }
});
Object.defineProperty(exports, "timeHours", {
    enumerable: true,
    get: function() {
        return _hour.hours;
    }
});
Object.defineProperty(exports, "timeInterval", {
    enumerable: true,
    get: function() {
        return _interval.default;
    }
});
Object.defineProperty(exports, "timeMillisecond", {
    enumerable: true,
    get: function() {
        return _millisecond.default;
    }
});
Object.defineProperty(exports, "timeMilliseconds", {
    enumerable: true,
    get: function() {
        return _millisecond.milliseconds;
    }
});
Object.defineProperty(exports, "timeMinute", {
    enumerable: true,
    get: function() {
        return _minute.default;
    }
});
Object.defineProperty(exports, "timeMinutes", {
    enumerable: true,
    get: function() {
        return _minute.minutes;
    }
});
Object.defineProperty(exports, "timeMonday", {
    enumerable: true,
    get: function() {
        return _week.monday;
    }
});
Object.defineProperty(exports, "timeMondays", {
    enumerable: true,
    get: function() {
        return _week.mondays;
    }
});
Object.defineProperty(exports, "timeMonth", {
    enumerable: true,
    get: function() {
        return _month.default;
    }
});
Object.defineProperty(exports, "timeMonths", {
    enumerable: true,
    get: function() {
        return _month.months;
    }
});
Object.defineProperty(exports, "timeSaturday", {
    enumerable: true,
    get: function() {
        return _week.saturday;
    }
});
Object.defineProperty(exports, "timeSaturdays", {
    enumerable: true,
    get: function() {
        return _week.saturdays;
    }
});
Object.defineProperty(exports, "timeSecond", {
    enumerable: true,
    get: function() {
        return _second.default;
    }
});
Object.defineProperty(exports, "timeSeconds", {
    enumerable: true,
    get: function() {
        return _second.seconds;
    }
});
Object.defineProperty(exports, "timeSunday", {
    enumerable: true,
    get: function() {
        return _week.sunday;
    }
});
Object.defineProperty(exports, "timeSundays", {
    enumerable: true,
    get: function() {
        return _week.sundays;
    }
});
Object.defineProperty(exports, "timeThursday", {
    enumerable: true,
    get: function() {
        return _week.thursday;
    }
});
Object.defineProperty(exports, "timeThursdays", {
    enumerable: true,
    get: function() {
        return _week.thursdays;
    }
});
Object.defineProperty(exports, "timeTickInterval", {
    enumerable: true,
    get: function() {
        return _ticks.timeTickInterval;
    }
});
Object.defineProperty(exports, "timeTicks", {
    enumerable: true,
    get: function() {
        return _ticks.timeTicks;
    }
});
Object.defineProperty(exports, "timeTuesday", {
    enumerable: true,
    get: function() {
        return _week.tuesday;
    }
});
Object.defineProperty(exports, "timeTuesdays", {
    enumerable: true,
    get: function() {
        return _week.tuesdays;
    }
});
Object.defineProperty(exports, "timeWednesday", {
    enumerable: true,
    get: function() {
        return _week.wednesday;
    }
});
Object.defineProperty(exports, "timeWednesdays", {
    enumerable: true,
    get: function() {
        return _week.wednesdays;
    }
});
Object.defineProperty(exports, "timeWeek", {
    enumerable: true,
    get: function() {
        return _week.sunday;
    }
});
Object.defineProperty(exports, "timeWeeks", {
    enumerable: true,
    get: function() {
        return _week.sundays;
    }
});
Object.defineProperty(exports, "timeYear", {
    enumerable: true,
    get: function() {
        return _year.default;
    }
});
Object.defineProperty(exports, "timeYears", {
    enumerable: true,
    get: function() {
        return _year.years;
    }
});
Object.defineProperty(exports, "utcDay", {
    enumerable: true,
    get: function() {
        return _utcDay.default;
    }
});
Object.defineProperty(exports, "utcDays", {
    enumerable: true,
    get: function() {
        return _utcDay.utcDays;
    }
});
Object.defineProperty(exports, "utcFriday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcFriday;
    }
});
Object.defineProperty(exports, "utcFridays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcFridays;
    }
});
Object.defineProperty(exports, "utcHour", {
    enumerable: true,
    get: function() {
        return _utcHour.default;
    }
});
Object.defineProperty(exports, "utcHours", {
    enumerable: true,
    get: function() {
        return _utcHour.utcHours;
    }
});
Object.defineProperty(exports, "utcMillisecond", {
    enumerable: true,
    get: function() {
        return _millisecond.default;
    }
});
Object.defineProperty(exports, "utcMilliseconds", {
    enumerable: true,
    get: function() {
        return _millisecond.milliseconds;
    }
});
Object.defineProperty(exports, "utcMinute", {
    enumerable: true,
    get: function() {
        return _utcMinute.default;
    }
});
Object.defineProperty(exports, "utcMinutes", {
    enumerable: true,
    get: function() {
        return _utcMinute.utcMinutes;
    }
});
Object.defineProperty(exports, "utcMonday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcMonday;
    }
});
Object.defineProperty(exports, "utcMondays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcMondays;
    }
});
Object.defineProperty(exports, "utcMonth", {
    enumerable: true,
    get: function() {
        return _utcMonth.default;
    }
});
Object.defineProperty(exports, "utcMonths", {
    enumerable: true,
    get: function() {
        return _utcMonth.utcMonths;
    }
});
Object.defineProperty(exports, "utcSaturday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcSaturday;
    }
});
Object.defineProperty(exports, "utcSaturdays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcSaturdays;
    }
});
Object.defineProperty(exports, "utcSecond", {
    enumerable: true,
    get: function() {
        return _second.default;
    }
});
Object.defineProperty(exports, "utcSeconds", {
    enumerable: true,
    get: function() {
        return _second.seconds;
    }
});
Object.defineProperty(exports, "utcSunday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcSunday;
    }
});
Object.defineProperty(exports, "utcSundays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcSundays;
    }
});
Object.defineProperty(exports, "utcThursday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcThursday;
    }
});
Object.defineProperty(exports, "utcThursdays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcThursdays;
    }
});
Object.defineProperty(exports, "utcTickInterval", {
    enumerable: true,
    get: function() {
        return _ticks.utcTickInterval;
    }
});
Object.defineProperty(exports, "utcTicks", {
    enumerable: true,
    get: function() {
        return _ticks.utcTicks;
    }
});
Object.defineProperty(exports, "utcTuesday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcTuesday;
    }
});
Object.defineProperty(exports, "utcTuesdays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcTuesdays;
    }
});
Object.defineProperty(exports, "utcWednesday", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcWednesday;
    }
});
Object.defineProperty(exports, "utcWednesdays", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcWednesdays;
    }
});
Object.defineProperty(exports, "utcWeek", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcSunday;
    }
});
Object.defineProperty(exports, "utcWeeks", {
    enumerable: true,
    get: function() {
        return _utcWeek.utcSundays;
    }
});
Object.defineProperty(exports, "utcYear", {
    enumerable: true,
    get: function() {
        return _utcYear.default;
    }
});
Object.defineProperty(exports, "utcYears", {
    enumerable: true,
    get: function() {
        return _utcYear.utcYears;
    }
});
var _interval = _interopRequireDefault(require("792c68a3f8a1926"));
var _millisecond = _interopRequireWildcard(require("2357def356bae18"));
var _second = _interopRequireWildcard(require("1c57489bc0aa2095"));
var _minute = _interopRequireWildcard(require("29ed17b274422d68"));
var _hour = _interopRequireWildcard(require("24ed79de6f4f26d"));
var _day = _interopRequireWildcard(require("82753f475a698669"));
var _week = require("a7e60f089113fd37");
var _month = _interopRequireWildcard(require("340ea3bf33812c65"));
var _year = _interopRequireWildcard(require("e014d3654a0b00fb"));
var _utcMinute = _interopRequireWildcard(require("5ff1ef18d2410f37"));
var _utcHour = _interopRequireWildcard(require("2822e085c5125d78"));
var _utcDay = _interopRequireWildcard(require("ff909be541c31c33"));
var _utcWeek = require("70b57967fcafbaa5");
var _utcMonth = _interopRequireWildcard(require("e41feff472794f13"));
var _utcYear = _interopRequireWildcard(require("9b0775a896f4b4dc"));
var _ticks = require("af413f597619bd05");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"792c68a3f8a1926":"iaKs1","2357def356bae18":"eDWSo","1c57489bc0aa2095":"h8am1","29ed17b274422d68":"fqq5b","24ed79de6f4f26d":"d8pcy","82753f475a698669":"aGK5g","a7e60f089113fd37":"cy6yG","340ea3bf33812c65":"RuQLP","e014d3654a0b00fb":"4kWCy","5ff1ef18d2410f37":"j3ieh","2822e085c5125d78":"j8Gum","ff909be541c31c33":"9ssoR","70b57967fcafbaa5":"5IpdZ","e41feff472794f13":"fPIC0","9b0775a896f4b4dc":"8Rlqe","af413f597619bd05":"d8YoC"}],"iaKs1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = newInterval;
var t0 = new Date(), t1 = new Date();
function newInterval(floori, offseti, count, field) {
    function interval(date) {
        return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
    }
    interval.floor = function(date) {
        return floori(date = new Date(+date)), date;
    };
    interval.ceil = function(date) {
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
    };
    interval.round = function(date) {
        var d0 = interval(date), d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
    };
    interval.offset = function(date, step) {
        return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
    };
    interval.range = function(start, stop, step) {
        var range = [], previous;
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
        do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
        while (previous < start && start < stop);
        return range;
    };
    interval.filter = function(test) {
        return newInterval(function(date) {
            if (date >= date) while(floori(date), !test(date))date.setTime(date - 1);
        }, function(date, step) {
            if (date >= date) {
                if (step < 0) while(++step <= 0){
                    while(offseti(date, -1), !test(date)); // eslint-disable-line no-empty
                }
                else while(--step >= 0){
                    while(offseti(date, 1), !test(date)); // eslint-disable-line no-empty
                }
            }
        });
    };
    if (count) {
        interval.count = function(start, end) {
            t0.setTime(+start), t1.setTime(+end);
            floori(t0), floori(t1);
            return Math.floor(count(t0, t1));
        };
        interval.every = function(step) {
            step = Math.floor(step);
            return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d) {
                return field(d) % step === 0;
            } : function(d) {
                return interval.count(0, d) % step === 0;
            });
        };
    }
    return interval;
}

},{}],"eDWSo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.milliseconds = exports.default = void 0;
var _interval = _interopRequireDefault(require("47fef281020880de"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var millisecond = (0, _interval.default)(function() {}, function(date, step) {
    date.setTime(+date + step);
}, function(start, end) {
    return end - start;
}); // An optimized implementation for this simple case.
millisecond.every = function(k) {
    k = Math.floor(k);
    if (!isFinite(k) || !(k > 0)) return null;
    if (!(k > 1)) return millisecond;
    return (0, _interval.default)(function(date) {
        date.setTime(Math.floor(date / k) * k);
    }, function(date, step) {
        date.setTime(+date + step * k);
    }, function(start, end) {
        return (end - start) / k;
    });
};
var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;

},{"47fef281020880de":"iaKs1"}],"h8am1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.seconds = exports.default = void 0;
var _interval = _interopRequireDefault(require("b059f221ba83fd2b"));
var _duration = require("4b017018381ce3ad");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var second = (0, _interval.default)(function(date) {
    date.setTime(date - date.getMilliseconds());
}, function(date, step) {
    date.setTime(+date + step * _duration.durationSecond);
}, function(start, end) {
    return (end - start) / _duration.durationSecond;
}, function(date) {
    return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;

},{"b059f221ba83fd2b":"iaKs1","4b017018381ce3ad":"hhO7S"}],"hhO7S":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.durationYear = exports.durationWeek = exports.durationSecond = exports.durationMonth = exports.durationMinute = exports.durationHour = exports.durationDay = void 0;
const durationSecond = 1000;
exports.durationSecond = durationSecond;
const durationMinute = durationSecond * 60;
exports.durationMinute = durationMinute;
const durationHour = durationMinute * 60;
exports.durationHour = durationHour;
const durationDay = durationHour * 24;
exports.durationDay = durationDay;
const durationWeek = durationDay * 7;
exports.durationWeek = durationWeek;
const durationMonth = durationDay * 30;
exports.durationMonth = durationMonth;
const durationYear = durationDay * 365;
exports.durationYear = durationYear;

},{}],"fqq5b":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.minutes = exports.default = void 0;
var _interval = _interopRequireDefault(require("5b81b309635f37c2"));
var _duration = require("52c486da961f0d2c");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var minute = (0, _interval.default)(function(date) {
    date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function(date, step) {
    date.setTime(+date + step * _duration.durationMinute);
}, function(start, end) {
    return (end - start) / _duration.durationMinute;
}, function(date) {
    return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;

},{"5b81b309635f37c2":"iaKs1","52c486da961f0d2c":"hhO7S"}],"d8pcy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hours = exports.default = void 0;
var _interval = _interopRequireDefault(require("d36c991e94b8c5d6"));
var _duration = require("b17b3dbdbc5c799e");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var hour = (0, _interval.default)(function(date) {
    date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function(date, step) {
    date.setTime(+date + step * _duration.durationHour);
}, function(start, end) {
    return (end - start) / _duration.durationHour;
}, function(date) {
    return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;

},{"d36c991e94b8c5d6":"iaKs1","b17b3dbdbc5c799e":"hhO7S"}],"aGK5g":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.days = void 0;
var _interval = _interopRequireDefault(require("c559f97c050225d3"));
var _duration = require("93d679bd1def1b3c");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var day = (0, _interval.default)((date)=>date.setHours(0, 0, 0, 0), (date, step)=>date.setDate(date.getDate() + step), (start, end)=>(end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay, (date)=>date.getDate() - 1);
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;

},{"c559f97c050225d3":"iaKs1","93d679bd1def1b3c":"hhO7S"}],"cy6yG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.wednesdays = exports.wednesday = exports.tuesdays = exports.tuesday = exports.thursdays = exports.thursday = exports.sundays = exports.sunday = exports.saturdays = exports.saturday = exports.mondays = exports.monday = exports.fridays = exports.friday = void 0;
var _interval = _interopRequireDefault(require("fb608840fab065f0"));
var _duration = require("136ded3f760de188");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function weekday(i) {
    return (0, _interval.default)(function(date) {
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
        date.setHours(0, 0, 0, 0);
    }, function(date, step) {
        date.setDate(date.getDate() + step * 7);
    }, function(start, end) {
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
    });
}
var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;

},{"fb608840fab065f0":"iaKs1","136ded3f760de188":"hhO7S"}],"RuQLP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.months = exports.default = void 0;
var _interval = _interopRequireDefault(require("7e198ba28f0e25de"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var month = (0, _interval.default)(function(date) {
    date.setDate(1);
    date.setHours(0, 0, 0, 0);
}, function(date, step) {
    date.setMonth(date.getMonth() + step);
}, function(start, end) {
    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
    return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;

},{"7e198ba28f0e25de":"iaKs1"}],"4kWCy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.years = exports.default = void 0;
var _interval = _interopRequireDefault(require("699a5bdfd0c77e2e"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var year = (0, _interval.default)(function(date) {
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
}, function(date, step) {
    date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
    return end.getFullYear() - start.getFullYear();
}, function(date) {
    return date.getFullYear();
}); // An optimized implementation for this simple case.
year.every = function(k) {
    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function(date) {
        date.setFullYear(Math.floor(date.getFullYear() / k) * k);
        date.setMonth(0, 1);
        date.setHours(0, 0, 0, 0);
    }, function(date, step) {
        date.setFullYear(date.getFullYear() + step * k);
    });
};
var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;

},{"699a5bdfd0c77e2e":"iaKs1"}],"j3ieh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcMinutes = exports.default = void 0;
var _interval = _interopRequireDefault(require("64b6a8f5c9bd1c96"));
var _duration = require("32c01369d4e699fb");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var utcMinute = (0, _interval.default)(function(date) {
    date.setUTCSeconds(0, 0);
}, function(date, step) {
    date.setTime(+date + step * _duration.durationMinute);
}, function(start, end) {
    return (end - start) / _duration.durationMinute;
}, function(date) {
    return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;

},{"64b6a8f5c9bd1c96":"iaKs1","32c01369d4e699fb":"hhO7S"}],"j8Gum":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcHours = exports.default = void 0;
var _interval = _interopRequireDefault(require("8c74396d670977a"));
var _duration = require("6c82203e6970a1bc");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var utcHour = (0, _interval.default)(function(date) {
    date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
    date.setTime(+date + step * _duration.durationHour);
}, function(start, end) {
    return (end - start) / _duration.durationHour;
}, function(date) {
    return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;

},{"8c74396d670977a":"iaKs1","6c82203e6970a1bc":"hhO7S"}],"9ssoR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcDays = exports.default = void 0;
var _interval = _interopRequireDefault(require("1f97a562b3e12493"));
var _duration = require("4c0ac820095fab8f");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var utcDay = (0, _interval.default)(function(date) {
    date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
    return (end - start) / _duration.durationDay;
}, function(date) {
    return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;

},{"1f97a562b3e12493":"iaKs1","4c0ac820095fab8f":"hhO7S"}],"5IpdZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcWednesdays = exports.utcWednesday = exports.utcTuesdays = exports.utcTuesday = exports.utcThursdays = exports.utcThursday = exports.utcSundays = exports.utcSunday = exports.utcSaturdays = exports.utcSaturday = exports.utcMondays = exports.utcMonday = exports.utcFridays = exports.utcFriday = void 0;
var _interval = _interopRequireDefault(require("e95c6c72a9a72603"));
var _duration = require("b3779dea703b5e01");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function utcWeekday(i) {
    return (0, _interval.default)(function(date) {
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
        date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
        date.setUTCDate(date.getUTCDate() + step * 7);
    }, function(start, end) {
        return (end - start) / _duration.durationWeek;
    });
}
var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;

},{"e95c6c72a9a72603":"iaKs1","b3779dea703b5e01":"hhO7S"}],"fPIC0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcMonths = exports.default = void 0;
var _interval = _interopRequireDefault(require("9fc54a6c7da64a87"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var utcMonth = (0, _interval.default)(function(date) {
    date.setUTCDate(1);
    date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
    date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
    return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;

},{"9fc54a6c7da64a87":"iaKs1"}],"8Rlqe":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcYears = exports.default = void 0;
var _interval = _interopRequireDefault(require("8be30e72f54134d4"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var utcYear = (0, _interval.default)(function(date) {
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
    return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
    return date.getUTCFullYear();
}); // An optimized implementation for this simple case.
utcYear.every = function(k) {
    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function(date) {
        date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
        date.setUTCFullYear(date.getUTCFullYear() + step * k);
    });
};
var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;

},{"8be30e72f54134d4":"iaKs1"}],"d8YoC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.utcTicks = exports.utcTickInterval = exports.timeTicks = exports.timeTickInterval = void 0;
var _index = require("d7f21fd662cddf99");
var _duration = require("aa18ef34c0be11bc");
var _millisecond = _interopRequireDefault(require("dac51414a1e8276b"));
var _second = _interopRequireDefault(require("d68afea8416c3f1a"));
var _minute = _interopRequireDefault(require("404a139d621a9db2"));
var _hour = _interopRequireDefault(require("9a0bf4314f401b0c"));
var _day = _interopRequireDefault(require("3f04924c68533af9"));
var _week = require("b2b29cfa1ce6c7da");
var _month = _interopRequireDefault(require("5ceb61e7c9c807ec"));
var _year = _interopRequireDefault(require("dd0ef245ed62fdbf"));
var _utcMinute = _interopRequireDefault(require("1e46f3d232f79e5e"));
var _utcHour = _interopRequireDefault(require("3d1ae5dfacd220b4"));
var _utcDay = _interopRequireDefault(require("5fb1b56afb7033e1"));
var _utcWeek = require("536323b8c7eb14e3");
var _utcMonth = _interopRequireDefault(require("856c2c54a9da13b6"));
var _utcYear = _interopRequireDefault(require("f5ebb8abb03b9dec"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ticker(year, month, week, day, hour, minute) {
    const tickIntervals = [
        [
            _second.default,
            1,
            _duration.durationSecond
        ],
        [
            _second.default,
            5,
            5 * _duration.durationSecond
        ],
        [
            _second.default,
            15,
            15 * _duration.durationSecond
        ],
        [
            _second.default,
            30,
            30 * _duration.durationSecond
        ],
        [
            minute,
            1,
            _duration.durationMinute
        ],
        [
            minute,
            5,
            5 * _duration.durationMinute
        ],
        [
            minute,
            15,
            15 * _duration.durationMinute
        ],
        [
            minute,
            30,
            30 * _duration.durationMinute
        ],
        [
            hour,
            1,
            _duration.durationHour
        ],
        [
            hour,
            3,
            3 * _duration.durationHour
        ],
        [
            hour,
            6,
            6 * _duration.durationHour
        ],
        [
            hour,
            12,
            12 * _duration.durationHour
        ],
        [
            day,
            1,
            _duration.durationDay
        ],
        [
            day,
            2,
            2 * _duration.durationDay
        ],
        [
            week,
            1,
            _duration.durationWeek
        ],
        [
            month,
            1,
            _duration.durationMonth
        ],
        [
            month,
            3,
            3 * _duration.durationMonth
        ],
        [
            year,
            1,
            _duration.durationYear
        ]
    ];
    function ticks(start, stop, count) {
        const reverse = stop < start;
        if (reverse) [start, stop] = [
            stop,
            start
        ];
        const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
        const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
        return reverse ? ticks.reverse() : ticks;
    }
    function tickInterval(start, stop, count) {
        const target = Math.abs(stop - start) / count;
        const i = (0, _index.bisector)(([, , step])=>step).right(tickIntervals, target);
        if (i === tickIntervals.length) return year.every((0, _index.tickStep)(start / _duration.durationYear, stop / _duration.durationYear, count));
        if (i === 0) return _millisecond.default.every(Math.max((0, _index.tickStep)(start, stop, count), 1));
        const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        return t.every(step);
    }
    return [
        ticks,
        tickInterval
    ];
}
const [utcTicks, utcTickInterval] = ticker(_utcYear.default, _utcMonth.default, _utcWeek.utcSunday, _utcDay.default, _utcHour.default, _utcMinute.default);
exports.utcTickInterval = utcTickInterval;
exports.utcTicks = utcTicks;
const [timeTicks, timeTickInterval] = ticker(_year.default, _month.default, _week.sunday, _day.default, _hour.default, _minute.default);
exports.timeTickInterval = timeTickInterval;
exports.timeTicks = timeTicks;

},{"d7f21fd662cddf99":"5l2OL","aa18ef34c0be11bc":"hhO7S","dac51414a1e8276b":"eDWSo","d68afea8416c3f1a":"h8am1","404a139d621a9db2":"fqq5b","9a0bf4314f401b0c":"d8pcy","3f04924c68533af9":"aGK5g","b2b29cfa1ce6c7da":"cy6yG","5ceb61e7c9c807ec":"RuQLP","dd0ef245ed62fdbf":"4kWCy","1e46f3d232f79e5e":"j3ieh","3d1ae5dfacd220b4":"j8Gum","5fb1b56afb7033e1":"9ssoR","536323b8c7eb14e3":"5IpdZ","856c2c54a9da13b6":"fPIC0","f5ebb8abb03b9dec":"8Rlqe"}],"dicVZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isoFormat", {
    enumerable: true,
    get: function() {
        return _isoFormat.default;
    }
});
Object.defineProperty(exports, "isoParse", {
    enumerable: true,
    get: function() {
        return _isoParse.default;
    }
});
Object.defineProperty(exports, "timeFormat", {
    enumerable: true,
    get: function() {
        return _defaultLocale.timeFormat;
    }
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
    enumerable: true,
    get: function() {
        return _defaultLocale.default;
    }
});
Object.defineProperty(exports, "timeFormatLocale", {
    enumerable: true,
    get: function() {
        return _locale.default;
    }
});
Object.defineProperty(exports, "timeParse", {
    enumerable: true,
    get: function() {
        return _defaultLocale.timeParse;
    }
});
Object.defineProperty(exports, "utcFormat", {
    enumerable: true,
    get: function() {
        return _defaultLocale.utcFormat;
    }
});
Object.defineProperty(exports, "utcParse", {
    enumerable: true,
    get: function() {
        return _defaultLocale.utcParse;
    }
});
var _defaultLocale = _interopRequireWildcard(require("e254c805352cbe79"));
var _locale = _interopRequireDefault(require("a2049a4646cad099"));
var _isoFormat = _interopRequireDefault(require("8485f996f4dff29b"));
var _isoParse = _interopRequireDefault(require("e2c3ab8c9c293ff5"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}

},{"e254c805352cbe79":"9VSkM","a2049a4646cad099":"ec8YQ","8485f996f4dff29b":"7lErP","e2c3ab8c9c293ff5":"huKar"}],"9VSkM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;
var _locale = _interopRequireDefault(require("8c8d5f4601afc09e"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
    dateTime: "%x, %X",
    date: "%-m/%-d/%Y",
    time: "%-I:%M:%S %p",
    periods: [
        "AM",
        "PM"
    ],
    days: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
    ],
    shortDays: [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
    ],
    months: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    ],
    shortMonths: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
    ]
});
function defaultLocale(definition) {
    locale = (0, _locale.default)(definition);
    exports.timeFormat = timeFormat = locale.format;
    exports.timeParse = timeParse = locale.parse;
    exports.utcFormat = utcFormat = locale.utcFormat;
    exports.utcParse = utcParse = locale.utcParse;
    return locale;
}

},{"8c8d5f4601afc09e":"ec8YQ"}],"ec8YQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = formatLocale;
var _index = require("da76bc1e0eef4658");
function localDate(d) {
    if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
    }
    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}
function utcDate(d) {
    if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
    }
    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}
function newDate(y, m, d) {
    return {
        y: y,
        m: m,
        d: d,
        H: 0,
        M: 0,
        S: 0,
        L: 0
    };
}
function formatLocale(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_weekdays = locale.days, locale_shortWeekdays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
    var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "f": formatMicroseconds,
        "g": formatYearISO,
        "G": formatFullYearISO,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "q": formatQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatSeconds,
        "u": formatWeekdayNumberMonday,
        "U": formatWeekNumberSunday,
        "V": formatWeekNumberISO,
        "w": formatWeekdayNumberSunday,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
    };
    var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "f": formatUTCMicroseconds,
        "g": formatUTCYearISO,
        "G": formatUTCFullYearISO,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "q": formatUTCQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatUTCSeconds,
        "u": formatUTCWeekdayNumberMonday,
        "U": formatUTCWeekNumberSunday,
        "V": formatUTCWeekNumberISO,
        "w": formatUTCWeekdayNumberSunday,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
    };
    var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "f": parseMicroseconds,
        "g": parseYear,
        "G": parseFullYear,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "q": parseQuarter,
        "Q": parseUnixTimestamp,
        "s": parseUnixTimestampSeconds,
        "S": parseSeconds,
        "u": parseWeekdayNumberMonday,
        "U": parseWeekNumberSunday,
        "V": parseWeekNumberISO,
        "w": parseWeekdayNumberSunday,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
    }; // These recursive directive definitions must be deferred.
    formats.x = newFormat(locale_date, formats);
    formats.X = newFormat(locale_time, formats);
    formats.c = newFormat(locale_dateTime, formats);
    utcFormats.x = newFormat(locale_date, utcFormats);
    utcFormats.X = newFormat(locale_time, utcFormats);
    utcFormats.c = newFormat(locale_dateTime, utcFormats);
    function newFormat(specifier, formats) {
        return function(date) {
            var string = [], i = -1, j = 0, n = specifier.length, c, pad, format;
            if (!(date instanceof Date)) date = new Date(+date);
            while(++i < n)if (specifier.charCodeAt(i) === 37) {
                string.push(specifier.slice(j, i));
                if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
                else pad = c === "e" ? " " : "0";
                if (format = formats[c]) c = format(date, pad);
                string.push(c);
                j = i + 1;
            }
            string.push(specifier.slice(j, i));
            return string.join("");
        };
    }
    function newParse(specifier, Z) {
        return function(string) {
            var d = newDate(1900, undefined, 1), i = parseSpecifier(d, specifier, string += "", 0), week, day;
            if (i != string.length) return null; // If a UNIX timestamp is specified, return it.
            if ("Q" in d) return new Date(d.Q);
            if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.
            if (Z && !("Z" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.
            if ("p" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.
            if (d.m === undefined) d.m = "q" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.
            if ("V" in d) {
                if (d.V < 1 || d.V > 53) return null;
                if (!("w" in d)) d.w = 1;
                if ("Z" in d) {
                    week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
                    week = day > 4 || day === 0 ? _index.utcMonday.ceil(week) : (0, _index.utcMonday)(week);
                    week = _index.utcDay.offset(week, (d.V - 1) * 7);
                    d.y = week.getUTCFullYear();
                    d.m = week.getUTCMonth();
                    d.d = week.getUTCDate() + (d.w + 6) % 7;
                } else {
                    week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
                    week = day > 4 || day === 0 ? _index.timeMonday.ceil(week) : (0, _index.timeMonday)(week);
                    week = _index.timeDay.offset(week, (d.V - 1) * 7);
                    d.y = week.getFullYear();
                    d.m = week.getMonth();
                    d.d = week.getDate() + (d.w + 6) % 7;
                }
            } else if ("W" in d || "U" in d) {
                if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
                day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
                d.m = 0;
                d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
            } // If a time zone is specified, all fields are interpreted as UTC and then
            // offset according to the specified time zone.
            if ("Z" in d) {
                d.H += d.Z / 100 | 0;
                d.M += d.Z % 100;
                return utcDate(d);
            } // Otherwise, all fields are in local time.
            return localDate(d);
        };
    }
    function parseSpecifier(d, specifier, string, j) {
        var i = 0, n = specifier.length, m = string.length, c, parse;
        while(i < n){
            if (j >= m) return -1;
            c = specifier.charCodeAt(i++);
            if (c === 37) {
                c = specifier.charAt(i++);
                parse = parses[c in pads ? specifier.charAt(i++) : c];
                if (!parse || (j = parse(d, string, j)) < 0) return -1;
            } else if (c != string.charCodeAt(j++)) return -1;
        }
        return j;
    }
    function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
    }
    function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
    }
    function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
    }
    function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
    }
    function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
    }
    function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
    }
    function formatMonth(d) {
        return locale_months[d.getMonth()];
    }
    function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
    }
    function formatQuarter(d) {
        return 1 + ~~(d.getMonth() / 3);
    }
    function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
    }
    function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
    }
    function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
    }
    function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
    }
    function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
    }
    function formatUTCQuarter(d) {
        return 1 + ~~(d.getUTCMonth() / 3);
    }
    return {
        format: function(specifier) {
            var f = newFormat(specifier += "", formats);
            f.toString = function() {
                return specifier;
            };
            return f;
        },
        parse: function(specifier) {
            var p = newParse(specifier += "", false);
            p.toString = function() {
                return specifier;
            };
            return p;
        },
        utcFormat: function(specifier) {
            var f = newFormat(specifier += "", utcFormats);
            f.toString = function() {
                return specifier;
            };
            return f;
        },
        utcParse: function(specifier) {
            var p = newParse(specifier += "", true);
            p.toString = function() {
                return specifier;
            };
            return p;
        }
    };
}
var pads = {
    "-": "",
    "_": " ",
    "0": "0"
}, numberRe = /^\s*\d+/, // note: ignores next directive
percentRe = /^%/, requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}
function requote(s) {
    return s.replace(requoteRe, "\\$&");
}
function formatRe(names) {
    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
    return new Map(names.map((name, i)=>[
            name.toLowerCase(),
            i
        ]));
}
function parseWeekdayNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.w = +n[0], i + n[0].length) : -1;
}
function parseWeekdayNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.u = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.U = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberISO(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.V = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.W = +n[0], i + n[0].length) : -1;
}
function parseFullYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 4));
    return n ? (d.y = +n[0], i + n[0].length) : -1;
}
function parseYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}
function parseZone(d, string, i) {
    var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}
function parseQuarter(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}
function parseMonthNumber(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}
function parseDayOfMonth(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.d = +n[0], i + n[0].length) : -1;
}
function parseDayOfYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}
function parseHour24(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.H = +n[0], i + n[0].length) : -1;
}
function parseMinutes(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.M = +n[0], i + n[0].length) : -1;
}
function parseSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.S = +n[0], i + n[0].length) : -1;
}
function parseMilliseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.L = +n[0], i + n[0].length) : -1;
}
function parseMicroseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 6));
    return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}
function parseLiteralPercent(d, string, i) {
    var n = percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
}
function parseUnixTimestamp(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.Q = +n[0], i + n[0].length) : -1;
}
function parseUnixTimestampSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.s = +n[0], i + n[0].length) : -1;
}
function formatDayOfMonth(d, p) {
    return pad(d.getDate(), p, 2);
}
function formatHour24(d, p) {
    return pad(d.getHours(), p, 2);
}
function formatHour12(d, p) {
    return pad(d.getHours() % 12 || 12, p, 2);
}
function formatDayOfYear(d, p) {
    return pad(1 + _index.timeDay.count((0, _index.timeYear)(d), d), p, 3);
}
function formatMilliseconds(d, p) {
    return pad(d.getMilliseconds(), p, 3);
}
function formatMicroseconds(d, p) {
    return formatMilliseconds(d, p) + "000";
}
function formatMonthNumber(d, p) {
    return pad(d.getMonth() + 1, p, 2);
}
function formatMinutes(d, p) {
    return pad(d.getMinutes(), p, 2);
}
function formatSeconds(d, p) {
    return pad(d.getSeconds(), p, 2);
}
function formatWeekdayNumberMonday(d) {
    var day = d.getDay();
    return day === 0 ? 7 : day;
}
function formatWeekNumberSunday(d, p) {
    return pad(_index.timeSunday.count((0, _index.timeYear)(d) - 1, d), p, 2);
}
function dISO(d) {
    var day = d.getDay();
    return day >= 4 || day === 0 ? (0, _index.timeThursday)(d) : _index.timeThursday.ceil(d);
}
function formatWeekNumberISO(d, p) {
    d = dISO(d);
    return pad(_index.timeThursday.count((0, _index.timeYear)(d), d) + ((0, _index.timeYear)(d).getDay() === 4), p, 2);
}
function formatWeekdayNumberSunday(d) {
    return d.getDay();
}
function formatWeekNumberMonday(d, p) {
    return pad(_index.timeMonday.count((0, _index.timeYear)(d) - 1, d), p, 2);
}
function formatYear(d, p) {
    return pad(d.getFullYear() % 100, p, 2);
}
function formatYearISO(d, p) {
    d = dISO(d);
    return pad(d.getFullYear() % 100, p, 2);
}
function formatFullYear(d, p) {
    return pad(d.getFullYear() % 10000, p, 4);
}
function formatFullYearISO(d, p) {
    var day = d.getDay();
    d = day >= 4 || day === 0 ? (0, _index.timeThursday)(d) : _index.timeThursday.ceil(d);
    return pad(d.getFullYear() % 10000, p, 4);
}
function formatZone(d) {
    var z = d.getTimezoneOffset();
    return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}
function formatUTCDayOfMonth(d, p) {
    return pad(d.getUTCDate(), p, 2);
}
function formatUTCHour24(d, p) {
    return pad(d.getUTCHours(), p, 2);
}
function formatUTCHour12(d, p) {
    return pad(d.getUTCHours() % 12 || 12, p, 2);
}
function formatUTCDayOfYear(d, p) {
    return pad(1 + _index.utcDay.count((0, _index.utcYear)(d), d), p, 3);
}
function formatUTCMilliseconds(d, p) {
    return pad(d.getUTCMilliseconds(), p, 3);
}
function formatUTCMicroseconds(d, p) {
    return formatUTCMilliseconds(d, p) + "000";
}
function formatUTCMonthNumber(d, p) {
    return pad(d.getUTCMonth() + 1, p, 2);
}
function formatUTCMinutes(d, p) {
    return pad(d.getUTCMinutes(), p, 2);
}
function formatUTCSeconds(d, p) {
    return pad(d.getUTCSeconds(), p, 2);
}
function formatUTCWeekdayNumberMonday(d) {
    var dow = d.getUTCDay();
    return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d, p) {
    return pad(_index.utcSunday.count((0, _index.utcYear)(d) - 1, d), p, 2);
}
function UTCdISO(d) {
    var day = d.getUTCDay();
    return day >= 4 || day === 0 ? (0, _index.utcThursday)(d) : _index.utcThursday.ceil(d);
}
function formatUTCWeekNumberISO(d, p) {
    d = UTCdISO(d);
    return pad(_index.utcThursday.count((0, _index.utcYear)(d), d) + ((0, _index.utcYear)(d).getUTCDay() === 4), p, 2);
}
function formatUTCWeekdayNumberSunday(d) {
    return d.getUTCDay();
}
function formatUTCWeekNumberMonday(d, p) {
    return pad(_index.utcMonday.count((0, _index.utcYear)(d) - 1, d), p, 2);
}
function formatUTCYear(d, p) {
    return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCYearISO(d, p) {
    d = UTCdISO(d);
    return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCFullYear(d, p) {
    return pad(d.getUTCFullYear() % 10000, p, 4);
}
function formatUTCFullYearISO(d, p) {
    var day = d.getUTCDay();
    d = day >= 4 || day === 0 ? (0, _index.utcThursday)(d) : _index.utcThursday.ceil(d);
    return pad(d.getUTCFullYear() % 10000, p, 4);
}
function formatUTCZone() {
    return "+0000";
}
function formatLiteralPercent() {
    return "%";
}
function formatUnixTimestamp(d) {
    return +d;
}
function formatUnixTimestampSeconds(d) {
    return Math.floor(+d / 1000);
}

},{"da76bc1e0eef4658":"ahTKe"}],"7lErP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isoSpecifier = exports.default = void 0;
var _defaultLocale = require("2f8f6a7c55a265a7");
var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;
function formatIsoNative(date) {
    return date.toISOString();
}
var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;

},{"2f8f6a7c55a265a7":"9VSkM"}],"huKar":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _isoFormat = require("c9c0e033b3f4cd7a");
var _defaultLocale = require("717272dfdfdf9f58");
function parseIsoNative(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
}
var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;

},{"c9c0e033b3f4cd7a":"7lErP","717272dfdfdf9f58":"9VSkM"}],"2vSCH":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = utcTime;
var _index = require("ea22621463423769");
var _index2 = require("df08fa54879bdddf");
var _time = require("3d474b4ac409608e");
var _init = require("f5277d460a04562a");
function utcTime() {
    return _init.initRange.apply((0, _time.calendar)(_index.utcTicks, _index.utcTickInterval, _index.utcYear, _index.utcMonth, _index.utcWeek, _index.utcDay, _index.utcHour, _index.utcMinute, _index.utcSecond, _index2.utcFormat).domain([
        Date.UTC(2000, 0, 1),
        Date.UTC(2000, 0, 2)
    ]), arguments);
}

},{"ea22621463423769":"ahTKe","df08fa54879bdddf":"dicVZ","3d474b4ac409608e":"3GkXQ","f5277d460a04562a":"dMFaU"}],"lTYqO":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;
exports.sequentialSymlog = sequentialSymlog;
var _index = require("576a63ed61017ad0");
var _continuous = require("367c19cf7640115e");
var _init = require("4d9ecd8e312987f2");
var _linear = require("7aa8dc079711aa38");
var _log = require("9675a35c284dba6f");
var _symlog = require("e5e6e98809c25bc3");
var _pow = require("814ae7ed84550652");
function transformer() {
    var x0 = 0, x1 = 1, t0, t1, k10, transform, interpolator = _continuous.identity, clamp = false, unknown;
    function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
    }
    scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [
            x0,
            x1
        ];
    };
    scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
    };
    scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    function range(interpolate) {
        return function(_) {
            var r0, r1;
            return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [
                interpolator(0),
                interpolator(1)
            ];
        };
    }
    scale.range = range(_index.interpolate);
    scale.rangeRound = range(_index.interpolateRound);
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
        return scale;
    };
}
function copy(source, target) {
    return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}
function sequential() {
    var scale = (0, _linear.linearish)(transformer()(_continuous.identity));
    scale.copy = function() {
        return copy(scale, sequential());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialLog() {
    var scale = (0, _log.loggish)(transformer()).domain([
        1,
        10
    ]);
    scale.copy = function() {
        return copy(scale, sequentialLog()).base(scale.base());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialSymlog() {
    var scale = (0, _symlog.symlogish)(transformer());
    scale.copy = function() {
        return copy(scale, sequentialSymlog()).constant(scale.constant());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialPow() {
    var scale = (0, _pow.powish)(transformer());
    scale.copy = function() {
        return copy(scale, sequentialPow()).exponent(scale.exponent());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function sequentialSqrt() {
    return sequentialPow.apply(null, arguments).exponent(0.5);
}

},{"576a63ed61017ad0":"bCEqx","367c19cf7640115e":"6CY1S","4d9ecd8e312987f2":"dMFaU","7aa8dc079711aa38":"4NohP","9675a35c284dba6f":"169cR","e5e6e98809c25bc3":"fx5B6","814ae7ed84550652":"fkIxl"}],"h7AuZ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = sequentialQuantile;
var _index = require("eed0055976263d50");
var _continuous = require("21618a239c62366b");
var _init = require("92ad1cf8524c146");
function sequentialQuantile() {
    var domain = [], interpolator = _continuous.identity;
    function scale(x) {
        if (x != null && !isNaN(x = +x)) return interpolator(((0, _index.bisect)(domain, x, 1) - 1) / (domain.length - 1));
    }
    scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _)if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(_index.ascending);
        return scale;
    };
    scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    scale.range = function() {
        return domain.map((d, i)=>interpolator(i / (domain.length - 1)));
    };
    scale.quantiles = function(n) {
        return Array.from({
            length: n + 1
        }, (_, i)=>(0, _index.quantile)(domain, i / n));
    };
    scale.copy = function() {
        return sequentialQuantile(interpolator).domain(domain);
    };
    return _init.initInterpolator.apply(scale, arguments);
}

},{"eed0055976263d50":"5l2OL","21618a239c62366b":"6CY1S","92ad1cf8524c146":"dMFaU"}],"1rUzv":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;
exports.divergingSymlog = divergingSymlog;
var _index = require("915e51d9b913a910");
var _continuous = require("bf6a55aee26f6305");
var _init = require("dafbeaec64c427e8");
var _linear = require("367c88af554f4c81");
var _log = require("f1b41897387bed31");
var _sequential = require("478631d13f9292c0");
var _symlog = require("f1514783e2b3953d");
var _pow = require("2cbbbabc7f04bb29");
function transformer() {
    var x0 = 0, x1 = 0.5, x2 = 1, s = 1, t0, t1, t2, k10, k21, interpolator = _continuous.identity, transform, clamp = false, unknown;
    function scale(x) {
        return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
    }
    scale.domain = function(_) {
        return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [
            x0,
            x1,
            x2
        ];
    };
    scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
    };
    scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    function range(interpolate) {
        return function(_) {
            var r0, r1, r2;
            return arguments.length ? ([r0, r1, r2] = _, interpolator = (0, _index.piecewise)(interpolate, [
                r0,
                r1,
                r2
            ]), scale) : [
                interpolator(0),
                interpolator(0.5),
                interpolator(1)
            ];
        };
    }
    scale.range = range(_index.interpolate);
    scale.rangeRound = range(_index.interpolateRound);
    scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
        return scale;
    };
}
function diverging() {
    var scale = (0, _linear.linearish)(transformer()(_continuous.identity));
    scale.copy = function() {
        return (0, _sequential.copy)(scale, diverging());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingLog() {
    var scale = (0, _log.loggish)(transformer()).domain([
        0.1,
        1,
        10
    ]);
    scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingSymlog() {
    var scale = (0, _symlog.symlogish)(transformer());
    scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingPow() {
    var scale = (0, _pow.powish)(transformer());
    scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
    };
    return _init.initInterpolator.apply(scale, arguments);
}
function divergingSqrt() {
    return divergingPow.apply(null, arguments).exponent(0.5);
}

},{"915e51d9b913a910":"bCEqx","bf6a55aee26f6305":"6CY1S","dafbeaec64c427e8":"dMFaU","367c88af554f4c81":"4NohP","f1b41897387bed31":"169cR","478631d13f9292c0":"lTYqO","f1514783e2b3953d":"fx5B6","2cbbbabc7f04bb29":"fkIxl"}],"1lVUh":[function(require,module,exports,__globalThis) {
var baseExtremum = require("c7d87741ab4129b0"), baseGt = require("dbeef59341d150f4"), identity = require("3c95c3c9fbe3850f");
/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */ function max(array) {
    return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
}
module.exports = max;

},{"c7d87741ab4129b0":"6Wz5x","dbeef59341d150f4":"jjBti","3c95c3c9fbe3850f":"kD3aq"}],"6Wz5x":[function(require,module,exports,__globalThis) {
var isSymbol = require("6a2d056d200c4854");
/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */ function baseExtremum(array, iteratee, comparator) {
    var index = -1, length = array.length;
    while(++index < length){
        var value = array[index], current = iteratee(value);
        if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result = value;
    }
    return result;
}
module.exports = baseExtremum;

},{"6a2d056d200c4854":"k7Ns0"}],"jjBti":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */ function baseGt(value, other) {
    return value > other;
}
module.exports = baseGt;

},{}],"i6R0X":[function(require,module,exports,__globalThis) {
var baseExtremum = require("122393f3e0d791dc"), baseLt = require("8122a719ac68b5c4"), identity = require("3161b76b624de11a");
/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */ function min(array) {
    return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
}
module.exports = min;

},{"122393f3e0d791dc":"6Wz5x","8122a719ac68b5c4":"94huM","3161b76b624de11a":"kD3aq"}],"94huM":[function(require,module,exports,__globalThis) {
/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */ function baseLt(value, other) {
    return value < other;
}
module.exports = baseLt;

},{}],"6Cndj":[function(require,module,exports,__globalThis) {
var baseFlatten = require("727a074274bef45"), map = require("19e2d816e1d885f8");
/**
 * Creates a flattened array of values by running each element in `collection`
 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
 * with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [n, n];
 * }
 *
 * _.flatMap([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */ function flatMap(collection, iteratee) {
    return baseFlatten(map(collection, iteratee), 1);
}
module.exports = flatMap;

},{"727a074274bef45":"1mGUy","19e2d816e1d885f8":"93kZi"}],"93kZi":[function(require,module,exports,__globalThis) {
var arrayMap = require("61518c8bb036dd9b"), baseIteratee = require("8bad46685c8864d"), baseMap = require("51c76ab24fdb66f9"), isArray = require("7cb4cacc4dea406c");
/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */ function map(collection, iteratee) {
    var func = isArray(collection) ? arrayMap : baseMap;
    return func(collection, baseIteratee(iteratee, 3));
}
module.exports = map;

},{"61518c8bb036dd9b":"2bz49","8bad46685c8864d":"e6QHA","51c76ab24fdb66f9":"iEnUh","7cb4cacc4dea406c":"gqOzR"}],"ep5zv":[function(require,module,exports,__globalThis) {
var baseIsEqual = require("7b71d3bc42bb6f3e");
/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */ function isEqual(value, other) {
    return baseIsEqual(value, other);
}
module.exports = isEqual;

},{"7b71d3bc42bb6f3e":"eRGen"}],"8pIjU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTickValues", ()=>(0, _getNiceTickValues.getTickValues));
parcelHelpers.export(exports, "getNiceTickValues", ()=>(0, _getNiceTickValues.getNiceTickValues));
parcelHelpers.export(exports, "getTickValuesFixedDomain", ()=>(0, _getNiceTickValues.getTickValuesFixedDomain));
var _getNiceTickValues = require("./getNiceTickValues");

},{"./getNiceTickValues":"f2U6n","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f2U6n":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getNiceTickValues", ()=>getNiceTickValues);
parcelHelpers.export(exports, "getTickValues", ()=>getTickValues);
parcelHelpers.export(exports, "getTickValuesFixedDomain", ()=>getTickValuesFixedDomain);
/**
 * @fileOverview calculate tick values of scale
 * @author xile611, arcthur
 * @date 2015-09-17
 */ var _decimalJsLight = require("decimal.js-light");
var _decimalJsLightDefault = parcelHelpers.interopDefault(_decimalJsLight);
var _utils = require("./util/utils");
var _arithmetic = require("./util/arithmetic");
var _arithmeticDefault = parcelHelpers.interopDefault(_arithmetic);
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
/**
 * Calculate a interval of a minimum value and a maximum value
 *
 * @param  {Number} min       The minimum value
 * @param  {Number} max       The maximum value
 * @return {Array} An interval
 */ function getValidInterval(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), min = _ref2[0], max = _ref2[1];
    var validMin = min, validMax = max; // exchange
    if (min > max) {
        validMin = max;
        validMax = min;
    }
    return [
        validMin,
        validMax
    ];
}
/**
 * Calculate the step which is easy to understand between ticks, like 10, 20, 25
 *
 * @param  {Decimal} roughStep        The rough step calculated by deviding the
 * difference by the tickCount
 * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not
 * @param  {Integer} correctionFactor A correction factor
 * @return {Decimal} The step which is easy to understand between two ticks
 */ function getFormatStep(roughStep, allowDecimals, correctionFactor) {
    if (roughStep.lte(0)) return new (0, _decimalJsLightDefault.default)(0);
    var digitCount = (0, _arithmeticDefault.default).getDigitCount(roughStep.toNumber()); // The ratio between the rough step and the smallest number which has a bigger
    // order of magnitudes than the rough step
    var digitCountValue = new (0, _decimalJsLightDefault.default)(10).pow(digitCount);
    var stepRatio = roughStep.div(digitCountValue); // When an integer and a float multiplied, the accuracy of result may be wrong
    var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;
    var amendStepRatio = new (0, _decimalJsLightDefault.default)(Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);
    var formatStep = amendStepRatio.mul(digitCountValue);
    return allowDecimals ? formatStep : new (0, _decimalJsLightDefault.default)(Math.ceil(formatStep));
}
/**
 * calculate the ticks when the minimum value equals to the maximum value
 *
 * @param  {Number}  value         The minimum valuue which is also the maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}                 ticks
 */ function getTickOfSingleValue(value, tickCount, allowDecimals) {
    var step = 1; // calculate the middle value of ticks
    var middle = new (0, _decimalJsLightDefault.default)(value);
    if (!middle.isint() && allowDecimals) {
        var absVal = Math.abs(value);
        if (absVal < 1) {
            // The step should be a float number when the difference is smaller than 1
            step = new (0, _decimalJsLightDefault.default)(10).pow((0, _arithmeticDefault.default).getDigitCount(value) - 1);
            middle = new (0, _decimalJsLightDefault.default)(Math.floor(middle.div(step).toNumber())).mul(step);
        } else if (absVal > 1) // Return the maximum integer which is smaller than 'value' when 'value' is greater than 1
        middle = new (0, _decimalJsLightDefault.default)(Math.floor(value));
    } else if (value === 0) middle = new (0, _decimalJsLightDefault.default)(Math.floor((tickCount - 1) / 2));
    else if (!allowDecimals) middle = new (0, _decimalJsLightDefault.default)(Math.floor(value));
    var middleIndex = Math.floor((tickCount - 1) / 2);
    var fn = (0, _utils.compose)((0, _utils.map)(function(n) {
        return middle.add(new (0, _decimalJsLightDefault.default)(n - middleIndex).mul(step)).toNumber();
    }), (0, _utils.range));
    return fn(0, tickCount);
}
/**
 * Calculate the step
 *
 * @param  {Number}  min              The minimum value of an interval
 * @param  {Number}  max              The maximum value of an interval
 * @param  {Integer} tickCount        The count of ticks
 * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not
 * @param  {Number}  correctionFactor A correction factor
 * @return {Object}  The step, minimum value of ticks, maximum value of ticks
 */ function calculateStep(min, max, tickCount, allowDecimals) {
    var correctionFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    // dirty hack (for recharts' test)
    if (!Number.isFinite((max - min) / (tickCount - 1))) return {
        step: new (0, _decimalJsLightDefault.default)(0),
        tickMin: new (0, _decimalJsLightDefault.default)(0),
        tickMax: new (0, _decimalJsLightDefault.default)(0)
    };
     // The step which is easy to understand between two ticks
    var step = getFormatStep(new (0, _decimalJsLightDefault.default)(max).sub(min).div(tickCount - 1), allowDecimals, correctionFactor); // A medial value of ticks
    var middle; // When 0 is inside the interval, 0 should be a tick
    if (min <= 0 && max >= 0) middle = new (0, _decimalJsLightDefault.default)(0);
    else {
        // calculate the middle value
        middle = new (0, _decimalJsLightDefault.default)(min).add(max).div(2); // minus modulo value
        middle = middle.sub(new (0, _decimalJsLightDefault.default)(middle).mod(step));
    }
    var belowCount = Math.ceil(middle.sub(min).div(step).toNumber());
    var upCount = Math.ceil(new (0, _decimalJsLightDefault.default)(max).sub(middle).div(step).toNumber());
    var scaleCount = belowCount + upCount + 1;
    if (scaleCount > tickCount) // When more ticks need to cover the interval, step should be bigger.
    return calculateStep(min, max, tickCount, allowDecimals, correctionFactor + 1);
    if (scaleCount < tickCount) {
        // When less ticks can cover the interval, we should add some additional ticks
        upCount = max > 0 ? upCount + (tickCount - scaleCount) : upCount;
        belowCount = max > 0 ? belowCount : belowCount + (tickCount - scaleCount);
    }
    return {
        step: step,
        tickMin: middle.sub(new (0, _decimalJsLightDefault.default)(belowCount).mul(step)),
        tickMax: middle.add(new (0, _decimalJsLightDefault.default)(upCount).mul(step))
    };
}
/**
 * Calculate the ticks of an interval, the count of ticks will be guraranteed
 *
 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}   ticks
 */ function getNiceTickValuesFn(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), min = _ref4[0], max = _ref4[1];
    var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;
    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    // More than two ticks should be return
    var count = Math.max(tickCount, 2);
    var _getValidInterval = getValidInterval([
        min,
        max
    ]), _getValidInterval2 = _slicedToArray(_getValidInterval, 2), cormin = _getValidInterval2[0], cormax = _getValidInterval2[1];
    if (cormin === -Infinity || cormax === Infinity) {
        var _values = cormax === Infinity ? [
            cormin
        ].concat(_toConsumableArray((0, _utils.range)(0, tickCount - 1).map(function() {
            return Infinity;
        }))) : [].concat(_toConsumableArray((0, _utils.range)(0, tickCount - 1).map(function() {
            return -Infinity;
        })), [
            cormax
        ]);
        return min > max ? (0, _utils.reverse)(_values) : _values;
    }
    if (cormin === cormax) return getTickOfSingleValue(cormin, tickCount, allowDecimals);
     // Get the step between two ticks
    var _calculateStep = calculateStep(cormin, cormax, count, allowDecimals), step = _calculateStep.step, tickMin = _calculateStep.tickMin, tickMax = _calculateStep.tickMax;
    var values = (0, _arithmeticDefault.default).rangeStep(tickMin, tickMax.add(new (0, _decimalJsLightDefault.default)(0.1).mul(step)), step);
    return min > max ? (0, _utils.reverse)(values) : values;
}
/**
 * Calculate the ticks of an interval, the count of ticks won't be guraranteed
 *
 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}   ticks
 */ function getTickValuesFn(_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2), min = _ref6[0], max = _ref6[1];
    var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;
    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    // More than two ticks should be return
    var count = Math.max(tickCount, 2);
    var _getValidInterval3 = getValidInterval([
        min,
        max
    ]), _getValidInterval4 = _slicedToArray(_getValidInterval3, 2), cormin = _getValidInterval4[0], cormax = _getValidInterval4[1];
    if (cormin === -Infinity || cormax === Infinity) return [
        min,
        max
    ];
    if (cormin === cormax) return getTickOfSingleValue(cormin, tickCount, allowDecimals);
    var step = getFormatStep(new (0, _decimalJsLightDefault.default)(cormax).sub(cormin).div(count - 1), allowDecimals, 0);
    var fn = (0, _utils.compose)((0, _utils.map)(function(n) {
        return new (0, _decimalJsLightDefault.default)(cormin).add(new (0, _decimalJsLightDefault.default)(n).mul(step)).toNumber();
    }), (0, _utils.range));
    var values = fn(0, count).filter(function(entry) {
        return entry >= cormin && entry <= cormax;
    });
    return min > max ? (0, _utils.reverse)(values) : values;
}
/**
 * Calculate the ticks of an interval, the count of ticks won't be guraranteed,
 * but the domain will be guaranteed
 *
 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}   ticks
 */ function getTickValuesFixedDomainFn(_ref7, tickCount) {
    var _ref8 = _slicedToArray(_ref7, 2), min = _ref8[0], max = _ref8[1];
    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    // More than two ticks should be return
    var _getValidInterval5 = getValidInterval([
        min,
        max
    ]), _getValidInterval6 = _slicedToArray(_getValidInterval5, 2), cormin = _getValidInterval6[0], cormax = _getValidInterval6[1];
    if (cormin === -Infinity || cormax === Infinity) return [
        min,
        max
    ];
    if (cormin === cormax) return [
        cormin
    ];
    var count = Math.max(tickCount, 2);
    var step = getFormatStep(new (0, _decimalJsLightDefault.default)(cormax).sub(cormin).div(count - 1), allowDecimals, 0);
    var values = [].concat(_toConsumableArray((0, _arithmeticDefault.default).rangeStep(new (0, _decimalJsLightDefault.default)(cormin), new (0, _decimalJsLightDefault.default)(cormax).sub(new (0, _decimalJsLightDefault.default)(0.99).mul(step)), step)), [
        cormax
    ]);
    return min > max ? (0, _utils.reverse)(values) : values;
}
var getNiceTickValues = (0, _utils.memoize)(getNiceTickValuesFn);
var getTickValues = (0, _utils.memoize)(getTickValuesFn);
var getTickValuesFixedDomain = (0, _utils.memoize)(getTickValuesFixedDomainFn);

},{"decimal.js-light":"euX8A","./util/utils":"lEN0v","./util/arithmetic":"jvK1f","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"euX8A":[function(require,module,exports,__globalThis) {
/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */ (function(globalScope) {
    'use strict';
    /*
   *  decimal.js-light v2.5.1
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js-light
   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Expat Licence
   */ // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //
    // The limit on the value of `precision`, and on the value of the first argument to
    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.
    var MAX_DIGITS = 1e9, // The initial configuration properties of the Decimal constructor.
    Decimal = {
        // These values must be integers within the stated ranges (inclusive).
        // Most of these values can be changed during run-time using `Decimal.config`.
        // The maximum number of significant digits of the result of a calculation or base conversion.
        // E.g. `Decimal.config({ precision: 20 });`
        precision: 20,
        // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,
        // `toFixed`, `toPrecision` and `toSignificantDigits`.
        //
        // ROUND_UP         0 Away from zero.
        // ROUND_DOWN       1 Towards zero.
        // ROUND_CEIL       2 Towards +Infinity.
        // ROUND_FLOOR      3 Towards -Infinity.
        // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
        // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
        // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
        // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
        // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
        //
        // E.g.
        // `Decimal.rounding = 4;`
        // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
        rounding: 4,
        // The exponent value at and beneath which `toString` returns exponential notation.
        // JavaScript numbers: -7
        toExpNeg: -7,
        // The exponent value at and above which `toString` returns exponential notation.
        // JavaScript numbers: 21
        toExpPos: 21,
        // The natural logarithm of 10.
        // 115 digits
        LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'
    }, // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //
    external = true, decimalError = '[DecimalError] ', invalidArgument = decimalError + 'Invalid argument: ', exponentOutOfRange = decimalError + 'Exponent out of range: ', mathfloor = Math.floor, mathpow = Math.pow, isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, ONE, BASE = 1e7, LOG_BASE = 7, MAX_SAFE_INTEGER = 9007199254740991, MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE), // Decimal.prototype object
    P = {};
    // Decimal prototype methods
    /*
   *  absoluteValue                       abs
   *  comparedTo                          cmp
   *  decimalPlaces                       dp
   *  dividedBy                           div
   *  dividedToIntegerBy                  idiv
   *  equals                              eq
   *  exponent
   *  greaterThan                         gt
   *  greaterThanOrEqualTo                gte
   *  isInteger                           isint
   *  isNegative                          isneg
   *  isPositive                          ispos
   *  isZero
   *  lessThan                            lt
   *  lessThanOrEqualTo                   lte
   *  logarithm                           log
   *  minus                               sub
   *  modulo                              mod
   *  naturalExponential                  exp
   *  naturalLogarithm                    ln
   *  negated                             neg
   *  plus                                add
   *  precision                           sd
   *  squareRoot                          sqrt
   *  times                               mul
   *  toDecimalPlaces                     todp
   *  toExponential
   *  toFixed
   *  toInteger                           toint
   *  toNumber
   *  toPower                             pow
   *  toPrecision
   *  toSignificantDigits                 tosd
   *  toString
   *  valueOf                             val
   */ /*
   * Return a new Decimal whose value is the absolute value of this Decimal.
   *
   */ P.absoluteValue = P.abs = function() {
        var x = new this.constructor(this);
        if (x.s) x.s = 1;
        return x;
    };
    /*
   * Return
   *   1    if the value of this Decimal is greater than the value of `y`,
   *  -1    if the value of this Decimal is less than the value of `y`,
   *   0    if they have the same value
   *
   */ P.comparedTo = P.cmp = function(y) {
        var i, j, xdL, ydL, x = this;
        y = new x.constructor(y);
        // Signs differ?
        if (x.s !== y.s) return x.s || -y.s;
        // Compare exponents.
        if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;
        xdL = x.d.length;
        ydL = y.d.length;
        // Compare digit by digit.
        for(i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i){
            if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;
        }
        // Compare lengths.
        return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;
    };
    /*
   * Return the number of decimal places of the value of this Decimal.
   *
   */ P.decimalPlaces = P.dp = function() {
        var x = this, w = x.d.length - 1, dp = (w - x.e) * LOG_BASE;
        // Subtract the number of trailing zeros of the last word.
        w = x.d[w];
        if (w) for(; w % 10 == 0; w /= 10)dp--;
        return dp < 0 ? 0 : dp;
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to
   * `precision` significant digits.
   *
   */ P.dividedBy = P.div = function(y) {
        return divide(this, new this.constructor(y));
    };
    /*
   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal
   * by the value of `y`, truncated to `precision` significant digits.
   *
   */ P.dividedToIntegerBy = P.idiv = function(y) {
        var x = this, Ctor = x.constructor;
        return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);
    };
    /*
   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.
   *
   */ P.equals = P.eq = function(y) {
        return !this.cmp(y);
    };
    /*
   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).
   *
   */ P.exponent = function() {
        return getBase10Exponent(this);
    };
    /*
   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return
   * false.
   *
   */ P.greaterThan = P.gt = function(y) {
        return this.cmp(y) > 0;
    };
    /*
   * Return true if the value of this Decimal is greater than or equal to the value of `y`,
   * otherwise return false.
   *
   */ P.greaterThanOrEqualTo = P.gte = function(y) {
        return this.cmp(y) >= 0;
    };
    /*
   * Return true if the value of this Decimal is an integer, otherwise return false.
   *
   */ P.isInteger = P.isint = function() {
        return this.e > this.d.length - 2;
    };
    /*
   * Return true if the value of this Decimal is negative, otherwise return false.
   *
   */ P.isNegative = P.isneg = function() {
        return this.s < 0;
    };
    /*
   * Return true if the value of this Decimal is positive, otherwise return false.
   *
   */ P.isPositive = P.ispos = function() {
        return this.s > 0;
    };
    /*
   * Return true if the value of this Decimal is 0, otherwise return false.
   *
   */ P.isZero = function() {
        return this.s === 0;
    };
    /*
   * Return true if the value of this Decimal is less than `y`, otherwise return false.
   *
   */ P.lessThan = P.lt = function(y) {
        return this.cmp(y) < 0;
    };
    /*
   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.
   *
   */ P.lessThanOrEqualTo = P.lte = function(y) {
        return this.cmp(y) < 1;
    };
    /*
   * Return the logarithm of the value of this Decimal to the specified base, truncated to
   * `precision` significant digits.
   *
   * If no base is specified, return log[10](x).
   *
   * log[base](x) = ln(x) / ln(base)
   *
   * The maximum error of the result is 1 ulp (unit in the last place).
   *
   * [base] {number|string|Decimal} The base of the logarithm.
   *
   */ P.logarithm = P.log = function(base) {
        var r, x = this, Ctor = x.constructor, pr = Ctor.precision, wpr = pr + 5;
        // Default base is 10.
        if (base === void 0) base = new Ctor(10);
        else {
            base = new Ctor(base);
            // log[-b](x) = NaN
            // log[0](x)  = NaN
            // log[1](x)  = NaN
            if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');
        }
        // log[b](-x) = NaN
        // log[b](0) = -Infinity
        if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));
        // log[b](1) = 0
        if (x.eq(ONE)) return new Ctor(0);
        external = false;
        r = divide(ln(x, wpr), ln(base, wpr), wpr);
        external = true;
        return round(r, pr);
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to
   * `precision` significant digits.
   *
   */ P.minus = P.sub = function(y) {
        var x = this;
        y = new x.constructor(y);
        return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to
   * `precision` significant digits.
   *
   */ P.modulo = P.mod = function(y) {
        var q, x = this, Ctor = x.constructor, pr = Ctor.precision;
        y = new Ctor(y);
        // x % 0 = NaN
        if (!y.s) throw Error(decimalError + 'NaN');
        // Return x if x is 0.
        if (!x.s) return round(new Ctor(x), pr);
        // Prevent rounding of intermediate calculations.
        external = false;
        q = divide(x, y, 0, 1).times(y);
        external = true;
        return x.minus(q);
    };
    /*
   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,
   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`
   * significant digits.
   *
   */ P.naturalExponential = P.exp = function() {
        return exp(this);
    };
    /*
   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,
   * truncated to `precision` significant digits.
   *
   */ P.naturalLogarithm = P.ln = function() {
        return ln(this);
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by
   * -1.
   *
   */ P.negated = P.neg = function() {
        var x = new this.constructor(this);
        x.s = -x.s || 0;
        return x;
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to
   * `precision` significant digits.
   *
   */ P.plus = P.add = function(y) {
        var x = this;
        y = new x.constructor(y);
        return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));
    };
    /*
   * Return the number of significant digits of the value of this Decimal.
   *
   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.
   *
   */ P.precision = P.sd = function(z) {
        var e, sd, w, x = this;
        if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);
        e = getBase10Exponent(x) + 1;
        w = x.d.length - 1;
        sd = w * LOG_BASE + 1;
        w = x.d[w];
        // If non-zero...
        if (w) {
            // Subtract the number of trailing zeros of the last word.
            for(; w % 10 == 0; w /= 10)sd--;
            // Add the number of digits of the first word.
            for(w = x.d[0]; w >= 10; w /= 10)sd++;
        }
        return z && e > sd ? e : sd;
    };
    /*
   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`
   * significant digits.
   *
   */ P.squareRoot = P.sqrt = function() {
        var e, n, pr, r, s, t, wpr, x = this, Ctor = x.constructor;
        // Negative or zero?
        if (x.s < 1) {
            if (!x.s) return new Ctor(0);
            // sqrt(-x) = NaN
            throw Error(decimalError + 'NaN');
        }
        e = getBase10Exponent(x);
        external = false;
        // Initial estimate.
        s = Math.sqrt(+x);
        // Math.sqrt underflow/overflow?
        // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
        if (s == 0 || s == 1 / 0) {
            n = digitsToString(x.d);
            if ((n.length + e) % 2 == 0) n += '0';
            s = Math.sqrt(n);
            e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);
            if (s == 1 / 0) n = '5e' + e;
            else {
                n = s.toExponential();
                n = n.slice(0, n.indexOf('e') + 1) + e;
            }
            r = new Ctor(n);
        } else r = new Ctor(s.toString());
        pr = Ctor.precision;
        s = wpr = pr + 3;
        // Newton-Raphson iteration.
        for(;;){
            t = r;
            r = t.plus(divide(x, t, wpr + 2)).times(0.5);
            if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {
                n = n.slice(wpr - 3, wpr + 1);
                // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or
                // 4999, i.e. approaching a rounding boundary, continue the iteration.
                if (s == wpr && n == '4999') {
                    // On the first iteration only, check to see if rounding up gives the exact result as the
                    // nines may infinitely repeat.
                    round(t, pr + 1, 0);
                    if (t.times(t).eq(x)) {
                        r = t;
                        break;
                    }
                } else if (n != '9999') break;
                wpr += 4;
            }
        }
        external = true;
        return round(r, pr);
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to
   * `precision` significant digits.
   *
   */ P.times = P.mul = function(y) {
        var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
        // Return 0 if either is 0.
        if (!x.s || !y.s) return new Ctor(0);
        y.s *= x.s;
        e = x.e + y.e;
        xdL = xd.length;
        ydL = yd.length;
        // Ensure xd points to the longer array.
        if (xdL < ydL) {
            r = xd;
            xd = yd;
            yd = r;
            rL = xdL;
            xdL = ydL;
            ydL = rL;
        }
        // Initialise the result array with zeros.
        r = [];
        rL = xdL + ydL;
        for(i = rL; i--;)r.push(0);
        // Multiply!
        for(i = ydL; --i >= 0;){
            carry = 0;
            for(k = xdL + i; k > i;){
                t = r[k] + yd[i] * xd[k - i - 1] + carry;
                r[k--] = t % BASE | 0;
                carry = t / BASE | 0;
            }
            r[k] = (r[k] + carry) % BASE | 0;
        }
        // Remove trailing zeros.
        for(; !r[--rL];)r.pop();
        if (carry) ++e;
        else r.shift();
        y.d = r;
        y.e = e;
        return external ? round(y, Ctor.precision) : y;
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`
   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.
   *
   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */ P.toDecimalPlaces = P.todp = function(dp, rm) {
        var x = this, Ctor = x.constructor;
        x = new Ctor(x);
        if (dp === void 0) return x;
        checkInt32(dp, 0, MAX_DIGITS);
        if (rm === void 0) rm = Ctor.rounding;
        else checkInt32(rm, 0, 8);
        return round(x, dp + getBase10Exponent(x) + 1, rm);
    };
    /*
   * Return a string representing the value of this Decimal in exponential notation rounded to
   * `dp` fixed decimal places using rounding mode `rounding`.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */ P.toExponential = function(dp, rm) {
        var str, x = this, Ctor = x.constructor;
        if (dp === void 0) str = toString(x, true);
        else {
            checkInt32(dp, 0, MAX_DIGITS);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt32(rm, 0, 8);
            x = round(new Ctor(x), dp + 1, rm);
            str = toString(x, true, dp + 1);
        }
        return str;
    };
    /*
   * Return a string representing the value of this Decimal in normal (fixed-point) notation to
   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is
   * omitted.
   *
   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.
   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
   * (-0).toFixed(3) is '0.000'.
   * (-0.5).toFixed(0) is '-0'.
   *
   */ P.toFixed = function(dp, rm) {
        var str, y, x = this, Ctor = x.constructor;
        if (dp === void 0) return toString(x);
        checkInt32(dp, 0, MAX_DIGITS);
        if (rm === void 0) rm = Ctor.rounding;
        else checkInt32(rm, 0, 8);
        y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);
        str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);
        // To determine whether to add the minus sign look at the value before it was rounded,
        // i.e. look at `x` rather than `y`.
        return x.isneg() && !x.isZero() ? '-' + str : str;
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using
   * rounding mode `rounding`.
   *
   */ P.toInteger = P.toint = function() {
        var x = this, Ctor = x.constructor;
        return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);
    };
    /*
   * Return the value of this Decimal converted to a number primitive.
   *
   */ P.toNumber = function() {
        return +this;
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,
   * truncated to `precision` significant digits.
   *
   * For non-integer or very large exponents pow(x, y) is calculated using
   *
   *   x^y = exp(y*ln(x))
   *
   * The maximum error is 1 ulp (unit in last place).
   *
   * y {number|string|Decimal} The power to which to raise this Decimal.
   *
   */ P.toPower = P.pow = function(y) {
        var e, k, pr, r, sign, yIsInt, x = this, Ctor = x.constructor, guard = 12, yn = +(y = new Ctor(y));
        // pow(x, 0) = 1
        if (!y.s) return new Ctor(ONE);
        x = new Ctor(x);
        // pow(0, y > 0) = 0
        // pow(0, y < 0) = Infinity
        if (!x.s) {
            if (y.s < 1) throw Error(decimalError + 'Infinity');
            return x;
        }
        // pow(1, y) = 1
        if (x.eq(ONE)) return x;
        pr = Ctor.precision;
        // pow(x, 1) = x
        if (y.eq(ONE)) return round(x, pr);
        e = y.e;
        k = y.d.length - 1;
        yIsInt = e >= k;
        sign = x.s;
        if (!yIsInt) {
            // pow(x < 0, y non-integer) = NaN
            if (sign < 0) throw Error(decimalError + 'NaN');
        // If y is a small integer use the 'exponentiation by squaring' algorithm.
        } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
            r = new Ctor(ONE);
            // Max k of 9007199254740991 takes 53 loop iterations.
            // Maximum digits array length; leaves [28, 34] guard digits.
            e = Math.ceil(pr / LOG_BASE + 4);
            external = false;
            for(;;){
                if (k % 2) {
                    r = r.times(x);
                    truncate(r.d, e);
                }
                k = mathfloor(k / 2);
                if (k === 0) break;
                x = x.times(x);
                truncate(x.d, e);
            }
            external = true;
            return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);
        }
        // Result is negative if x is negative and the last digit of integer y is odd.
        sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;
        x.s = 1;
        external = false;
        r = y.times(ln(x, pr + guard));
        external = true;
        r = exp(r);
        r.s = sign;
        return r;
    };
    /*
   * Return a string representing the value of this Decimal rounded to `sd` significant digits
   * using rounding mode `rounding`.
   *
   * Return exponential notation if `sd` is less than the number of digits necessary to represent
   * the integer part of the value in normal notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */ P.toPrecision = function(sd, rm) {
        var e, str, x = this, Ctor = x.constructor;
        if (sd === void 0) {
            e = getBase10Exponent(x);
            str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);
        } else {
            checkInt32(sd, 1, MAX_DIGITS);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt32(rm, 0, 8);
            x = round(new Ctor(x), sd, rm);
            e = getBase10Exponent(x);
            str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);
        }
        return str;
    };
    /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`
   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if
   * omitted.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */ P.toSignificantDigits = P.tosd = function(sd, rm) {
        var x = this, Ctor = x.constructor;
        if (sd === void 0) {
            sd = Ctor.precision;
            rm = Ctor.rounding;
        } else {
            checkInt32(sd, 1, MAX_DIGITS);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt32(rm, 0, 8);
        }
        return round(new Ctor(x), sd, rm);
    };
    /*
   * Return a string representing the value of this Decimal.
   *
   * Return exponential notation if this Decimal has a positive exponent equal to or greater than
   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.
   *
   */ P.toString = P.valueOf = P.val = P.toJSON = function() {
        var x = this, e = getBase10Exponent(x), Ctor = x.constructor;
        return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);
    };
    // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.
    /*
   *  add                 P.minus, P.plus
   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd
   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln
   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln
   *  exp                 P.exp, P.pow
   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,
   *                      P.toString, divide, round, toString, exp, ln
   *  getLn10             P.log, ln
   *  getZeroString       digitsToString, toString
   *  ln                  P.log, P.ln, P.pow, exp
   *  parseDecimal        Decimal
   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,
   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,
   *                      divide, getLn10, exp, ln
   *  subtract            P.minus, P.plus
   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf
   *  truncate            P.pow
   *
   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,
   *                      getLn10, exp, ln, parseDecimal, Decimal, config
   */ function add(x, y) {
        var carry, d, e, i, k, len, xd, yd, Ctor = x.constructor, pr = Ctor.precision;
        // If either is zero...
        if (!x.s || !y.s) {
            // Return x if y is zero.
            // Return y if y is non-zero.
            if (!y.s) y = new Ctor(x);
            return external ? round(y, pr) : y;
        }
        xd = x.d;
        yd = y.d;
        // x and y are finite, non-zero numbers with the same sign.
        k = x.e;
        e = y.e;
        xd = xd.slice();
        i = k - e;
        // If base 1e7 exponents differ...
        if (i) {
            if (i < 0) {
                d = xd;
                i = -i;
                len = yd.length;
            } else {
                d = yd;
                e = k;
                len = xd.length;
            }
            // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.
            k = Math.ceil(pr / LOG_BASE);
            len = k > len ? k + 1 : len + 1;
            if (i > len) {
                i = len;
                d.length = 1;
            }
            // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.
            d.reverse();
            for(; i--;)d.push(0);
            d.reverse();
        }
        len = xd.length;
        i = yd.length;
        // If yd is longer than xd, swap xd and yd so xd points to the longer array.
        if (len - i < 0) {
            i = len;
            d = yd;
            yd = xd;
            xd = d;
        }
        // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.
        for(carry = 0; i;){
            carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;
            xd[i] %= BASE;
        }
        if (carry) {
            xd.unshift(carry);
            ++e;
        }
        // Remove trailing zeros.
        // No need to check for zero, as +x + +y != 0 && -x + -y != 0
        for(len = xd.length; xd[--len] == 0;)xd.pop();
        y.d = xd;
        y.e = e;
        return external ? round(y, pr) : y;
    }
    function checkInt32(i, min, max) {
        if (i !== ~~i || i < min || i > max) throw Error(invalidArgument + i);
    }
    function digitsToString(d) {
        var i, k, ws, indexOfLastWord = d.length - 1, str = '', w = d[0];
        if (indexOfLastWord > 0) {
            str += w;
            for(i = 1; i < indexOfLastWord; i++){
                ws = d[i] + '';
                k = LOG_BASE - ws.length;
                if (k) str += getZeroString(k);
                str += ws;
            }
            w = d[i];
            ws = w + '';
            k = LOG_BASE - ws.length;
            if (k) str += getZeroString(k);
        } else if (w === 0) return '0';
        // Remove trailing zeros of last w.
        for(; w % 10 === 0;)w /= 10;
        return str + w;
    }
    var divide = function() {
        // Assumes non-zero x and k, and hence non-zero result.
        function multiplyInteger(x, k) {
            var temp, carry = 0, i = x.length;
            for(x = x.slice(); i--;){
                temp = x[i] * k + carry;
                x[i] = temp % BASE | 0;
                carry = temp / BASE | 0;
            }
            if (carry) x.unshift(carry);
            return x;
        }
        function compare(a, b, aL, bL) {
            var i, r;
            if (aL != bL) r = aL > bL ? 1 : -1;
            else {
                for(i = r = 0; i < aL; i++)if (a[i] != b[i]) {
                    r = a[i] > b[i] ? 1 : -1;
                    break;
                }
            }
            return r;
        }
        function subtract(a, b, aL) {
            var i = 0;
            // Subtract b from a.
            for(; aL--;){
                a[aL] -= i;
                i = a[aL] < b[aL] ? 1 : 0;
                a[aL] = i * BASE + a[aL] - b[aL];
            }
            // Remove leading zeros.
            for(; !a[0] && a.length > 1;)a.shift();
        }
        return function(x, y, pr, dp) {
            var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
            // Either 0?
            if (!x.s) return new Ctor(x);
            if (!y.s) throw Error(decimalError + 'Division by zero');
            e = x.e - y.e;
            yL = yd.length;
            xL = xd.length;
            q = new Ctor(sign);
            qd = q.d = [];
            // Result exponent may be one less than e.
            for(i = 0; yd[i] == (xd[i] || 0);)++i;
            if (yd[i] > (xd[i] || 0)) --e;
            if (pr == null) sd = pr = Ctor.precision;
            else if (dp) sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;
            else sd = pr;
            if (sd < 0) return new Ctor(0);
            // Convert precision in number of base 10 digits to base 1e7 digits.
            sd = sd / LOG_BASE + 2 | 0;
            i = 0;
            // divisor < 1e7
            if (yL == 1) {
                k = 0;
                yd = yd[0];
                sd++;
                // k is the carry.
                for(; (i < xL || k) && sd--; i++){
                    t = k * BASE + (xd[i] || 0);
                    qd[i] = t / yd | 0;
                    k = t % yd | 0;
                }
            // divisor >= 1e7
            } else {
                // Normalise xd and yd so highest order digit of yd is >= BASE/2
                k = BASE / (yd[0] + 1) | 0;
                if (k > 1) {
                    yd = multiplyInteger(yd, k);
                    xd = multiplyInteger(xd, k);
                    yL = yd.length;
                    xL = xd.length;
                }
                xi = yL;
                rem = xd.slice(0, yL);
                remL = rem.length;
                // Add zeros to make remainder as long as divisor.
                for(; remL < yL;)rem[remL++] = 0;
                yz = yd.slice();
                yz.unshift(0);
                yd0 = yd[0];
                if (yd[1] >= BASE / 2) ++yd0;
                do {
                    k = 0;
                    // Compare divisor and remainder.
                    cmp = compare(yd, rem, yL, remL);
                    // If divisor < remainder.
                    if (cmp < 0) {
                        // Calculate trial digit, k.
                        rem0 = rem[0];
                        if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);
                        // k will be how many times the divisor goes into the current remainder.
                        k = rem0 / yd0 | 0;
                        //  Algorithm:
                        //  1. product = divisor * trial digit (k)
                        //  2. if product > remainder: product -= divisor, k--
                        //  3. remainder -= product
                        //  4. if product was < remainder at 2:
                        //    5. compare new remainder and divisor
                        //    6. If remainder > divisor: remainder -= divisor, k++
                        if (k > 1) {
                            if (k >= BASE) k = BASE - 1;
                            // product = divisor * trial digit.
                            prod = multiplyInteger(yd, k);
                            prodL = prod.length;
                            remL = rem.length;
                            // Compare product and remainder.
                            cmp = compare(prod, rem, prodL, remL);
                            // product > remainder.
                            if (cmp == 1) {
                                k--;
                                // Subtract divisor from product.
                                subtract(prod, yL < prodL ? yz : yd, prodL);
                            }
                        } else {
                            // cmp is -1.
                            // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1
                            // to avoid it. If k is 1 there is a need to compare yd and rem again below.
                            if (k == 0) cmp = k = 1;
                            prod = yd.slice();
                        }
                        prodL = prod.length;
                        if (prodL < remL) prod.unshift(0);
                        // Subtract product from remainder.
                        subtract(rem, prod, remL);
                        // If product was < previous remainder.
                        if (cmp == -1) {
                            remL = rem.length;
                            // Compare divisor and new remainder.
                            cmp = compare(yd, rem, yL, remL);
                            // If divisor < new remainder, subtract divisor from remainder.
                            if (cmp < 1) {
                                k++;
                                // Subtract divisor from remainder.
                                subtract(rem, yL < remL ? yz : yd, remL);
                            }
                        }
                        remL = rem.length;
                    } else if (cmp === 0) {
                        k++;
                        rem = [
                            0
                        ];
                    } // if cmp === 1, k will be 0
                    // Add the next digit, k, to the result array.
                    qd[i++] = k;
                    // Update the remainder.
                    if (cmp && rem[0]) rem[remL++] = xd[xi] || 0;
                    else {
                        rem = [
                            xd[xi]
                        ];
                        remL = 1;
                    }
                }while ((xi++ < xL || rem[0] !== void 0) && sd--);
            }
            // Leading zero?
            if (!qd[0]) qd.shift();
            q.e = e;
            return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);
        };
    }();
    /*
   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`
   * significant digits.
   *
   * Taylor/Maclaurin series.
   *
   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...
   *
   * Argument reduction:
   *   Repeat x = x / 32, k += 5, until |x| < 0.1
   *   exp(x) = exp(x / 2^k)^(2^k)
   *
   * Previously, the argument was initially reduced by
   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)
   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was
   * found to be slower than just dividing repeatedly by 32 as above.
   *
   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)
   *
   *  exp(x) is non-terminating for any finite, non-zero x.
   *
   */ function exp(x, sd) {
        var denominator, guard, pow, sum, t, wpr, i = 0, k = 0, Ctor = x.constructor, pr = Ctor.precision;
        if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));
        // exp(0) = 1
        if (!x.s) return new Ctor(ONE);
        if (sd == null) {
            external = false;
            wpr = pr;
        } else wpr = sd;
        t = new Ctor(0.03125);
        while(x.abs().gte(0.1)){
            x = x.times(t); // x = x / 2^5
            k += 5;
        }
        // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.
        guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
        wpr += guard;
        denominator = pow = sum = new Ctor(ONE);
        Ctor.precision = wpr;
        for(;;){
            pow = round(pow.times(x), wpr);
            denominator = denominator.times(++i);
            t = sum.plus(divide(pow, denominator, wpr));
            if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
                while(k--)sum = round(sum.times(sum), wpr);
                Ctor.precision = pr;
                return sd == null ? (external = true, round(sum, pr)) : sum;
            }
            sum = t;
        }
    }
    // Calculate the base 10 exponent from the base 1e7 exponent.
    function getBase10Exponent(x) {
        var e = x.e * LOG_BASE, w = x.d[0];
        // Add the number of digits of the first word of the digits array.
        for(; w >= 10; w /= 10)e++;
        return e;
    }
    function getLn10(Ctor, sd, pr) {
        if (sd > Ctor.LN10.sd()) {
            // Reset global state in case the exception is caught.
            external = true;
            if (pr) Ctor.precision = pr;
            throw Error(decimalError + 'LN10 precision limit exceeded');
        }
        return round(new Ctor(Ctor.LN10), sd);
    }
    function getZeroString(k) {
        var zs = '';
        for(; k--;)zs += '0';
        return zs;
    }
    /*
   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant
   * digits.
   *
   *  ln(n) is non-terminating (n != 1)
   *
   */ function ln(y, sd) {
        var c, c0, denominator, e, numerator, sum, t, wpr, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, pr = Ctor.precision;
        // ln(-x) = NaN
        // ln(0) = -Infinity
        if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));
        // ln(1) = 0
        if (x.eq(ONE)) return new Ctor(0);
        if (sd == null) {
            external = false;
            wpr = pr;
        } else wpr = sd;
        if (x.eq(10)) {
            if (sd == null) external = true;
            return getLn10(Ctor, wpr);
        }
        wpr += guard;
        Ctor.precision = wpr;
        c = digitsToString(xd);
        c0 = c.charAt(0);
        e = getBase10Exponent(x);
        if (Math.abs(e) < 1.5e15) {
            // Argument reduction.
            // The series converges faster the closer the argument is to 1, so using
            // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b
            // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,
            // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can
            // later be divided by this number, then separate out the power of 10 using
            // ln(a*10^b) = ln(a) + b*ln(10).
            // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).
            //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {
            // max n is 6 (gives 0.7 - 1.3)
            while(c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3){
                x = x.times(y);
                c = digitsToString(x.d);
                c0 = c.charAt(0);
                n++;
            }
            e = getBase10Exponent(x);
            if (c0 > 1) {
                x = new Ctor('0.' + c);
                e++;
            } else x = new Ctor(c0 + '.' + c.slice(1));
        } else {
            // The argument reduction method above may result in overflow if the argument y is a massive
            // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this
            // function using ln(x*10^e) = ln(x) + e*ln(10).
            t = getLn10(Ctor, wpr + 2, pr).times(e + '');
            x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);
            Ctor.precision = pr;
            return sd == null ? (external = true, round(x, pr)) : x;
        }
        // x is reduced to a value near 1.
        // Taylor series.
        // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)
        // where x = (y - 1)/(y + 1)    (|x| < 1)
        sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);
        x2 = round(x.times(x), wpr);
        denominator = 3;
        for(;;){
            numerator = round(numerator.times(x2), wpr);
            t = sum.plus(divide(numerator, new Ctor(denominator), wpr));
            if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
                sum = sum.times(2);
                // Reverse the argument reduction.
                if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));
                sum = divide(sum, new Ctor(n), wpr);
                Ctor.precision = pr;
                return sd == null ? (external = true, round(sum, pr)) : sum;
            }
            sum = t;
            denominator += 2;
        }
    }
    /*
   * Parse the value of a new Decimal `x` from string `str`.
   */ function parseDecimal(x, str) {
        var e, i, len;
        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');
        // Exponential form?
        if ((i = str.search(/e/i)) > 0) {
            // Determine exponent.
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
        } else if (e < 0) // Integer.
        e = str.length;
        // Determine leading zeros.
        for(i = 0; str.charCodeAt(i) === 48;)++i;
        // Determine trailing zeros.
        for(len = str.length; str.charCodeAt(len - 1) === 48;)--len;
        str = str.slice(i, len);
        if (str) {
            len -= i;
            e = e - i - 1;
            x.e = mathfloor(e / LOG_BASE);
            x.d = [];
            // Transform base
            // e is the base 10 exponent.
            // i is where to slice str to get the first word of the digits array.
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;
            if (i < len) {
                if (i) x.d.push(+str.slice(0, i));
                for(len -= LOG_BASE; i < len;)x.d.push(+str.slice(i, i += LOG_BASE));
                str = str.slice(i);
                i = LOG_BASE - str.length;
            } else i -= len;
            for(; i--;)str += '0';
            x.d.push(+str);
            if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);
        } else {
            // Zero.
            x.s = 0;
            x.e = 0;
            x.d = [
                0
            ];
        }
        return x;
    }
    /*
   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).
   */ function round(x, sd, rm) {
        var i, j, k, n, rd, doRound, w, xdi, xd = x.d;
        // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.
        // w: the word of xd which contains the rounding digit, a base 1e7 number.
        // xdi: the index of w within xd.
        // n: the number of digits of w.
        // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if
        // they had leading zeros)
        // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).
        // Get the length of the first word of the digits array xd.
        for(n = 1, k = xd[0]; k >= 10; k /= 10)n++;
        i = sd - n;
        // Is the rounding digit in the first word of xd?
        if (i < 0) {
            i += LOG_BASE;
            j = sd;
            w = xd[xdi = 0];
        } else {
            xdi = Math.ceil((i + 1) / LOG_BASE);
            k = xd.length;
            if (xdi >= k) return x;
            w = k = xd[xdi];
            // Get the number of digits of w.
            for(n = 1; k >= 10; k /= 10)n++;
            // Get the index of rd within w.
            i %= LOG_BASE;
            // Get the index of rd within w, adjusted for leading zeros.
            // The number of leading zeros of w is given by LOG_BASE - n.
            j = i - LOG_BASE + n;
        }
        if (rm !== void 0) {
            k = mathpow(10, n - j - 1);
            // Get the rounding digit at index j of w.
            rd = w / k % 10 | 0;
            // Are there any non-zero digits after the rounding digit?
            doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;
            // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the
            // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give
            // 714.
            doRound = rm < 4 ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 && (i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
        }
        if (sd < 1 || !xd[0]) {
            if (doRound) {
                k = getBase10Exponent(x);
                xd.length = 1;
                // Convert sd to decimal places.
                sd = sd - k - 1;
                // 1, 0.1, 0.01, 0.001, 0.0001 etc.
                xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
                x.e = mathfloor(-sd / LOG_BASE) || 0;
            } else {
                xd.length = 1;
                // Zero.
                xd[0] = x.e = x.s = 0;
            }
            return x;
        }
        // Remove excess digits.
        if (i == 0) {
            xd.length = xdi;
            k = 1;
            xdi--;
        } else {
            xd.length = xdi + 1;
            k = mathpow(10, LOG_BASE - i);
            // E.g. 56700 becomes 56000 if 7 is the rounding digit.
            // j > 0 means i > number of leading zeros of w.
            xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;
        }
        if (doRound) {
            for(;;)// Is the digit to be rounded up in the first word of xd?
            if (xdi == 0) {
                if ((xd[0] += k) == BASE) {
                    xd[0] = 1;
                    ++x.e;
                }
                break;
            } else {
                xd[xdi] += k;
                if (xd[xdi] != BASE) break;
                xd[xdi--] = 0;
                k = 1;
            }
        }
        // Remove trailing zeros.
        for(i = xd.length; xd[--i] === 0;)xd.pop();
        if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + getBase10Exponent(x));
        return x;
    }
    function subtract(x, y) {
        var d, e, i, j, k, len, xd, xe, xLTy, yd, Ctor = x.constructor, pr = Ctor.precision;
        // Return y negated if x is zero.
        // Return x if y is zero and x is non-zero.
        if (!x.s || !y.s) {
            if (y.s) y.s = -y.s;
            else y = new Ctor(x);
            return external ? round(y, pr) : y;
        }
        xd = x.d;
        yd = y.d;
        // x and y are non-zero numbers with the same sign.
        e = y.e;
        xe = x.e;
        xd = xd.slice();
        k = xe - e;
        // If exponents differ...
        if (k) {
            xLTy = k < 0;
            if (xLTy) {
                d = xd;
                k = -k;
                len = yd.length;
            } else {
                d = yd;
                e = xe;
                len = xd.length;
            }
            // Numbers with massively different exponents would result in a very high number of zeros
            // needing to be prepended, but this can be avoided while still ensuring correct rounding by
            // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.
            i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
            if (k > i) {
                k = i;
                d.length = 1;
            }
            // Prepend zeros to equalise exponents.
            d.reverse();
            for(i = k; i--;)d.push(0);
            d.reverse();
        // Base 1e7 exponents equal.
        } else {
            // Check digits to determine which is the bigger number.
            i = xd.length;
            len = yd.length;
            xLTy = i < len;
            if (xLTy) len = i;
            for(i = 0; i < len; i++)if (xd[i] != yd[i]) {
                xLTy = xd[i] < yd[i];
                break;
            }
            k = 0;
        }
        if (xLTy) {
            d = xd;
            xd = yd;
            yd = d;
            y.s = -y.s;
        }
        len = xd.length;
        // Append zeros to xd if shorter.
        // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.
        for(i = yd.length - len; i > 0; --i)xd[len++] = 0;
        // Subtract yd from xd.
        for(i = yd.length; i > k;){
            if (xd[--i] < yd[i]) {
                for(j = i; j && xd[--j] === 0;)xd[j] = BASE - 1;
                --xd[j];
                xd[i] += BASE;
            }
            xd[i] -= yd[i];
        }
        // Remove trailing zeros.
        for(; xd[--len] === 0;)xd.pop();
        // Remove leading zeros and adjust exponent accordingly.
        for(; xd[0] === 0; xd.shift())--e;
        // Zero?
        if (!xd[0]) return new Ctor(0);
        y.d = xd;
        y.e = e;
        //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;
        return external ? round(y, pr) : y;
    }
    function toString(x, isExp, sd) {
        var k, e = getBase10Exponent(x), str = digitsToString(x.d), len = str.length;
        if (isExp) {
            if (sd && (k = sd - len) > 0) str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);
            else if (len > 1) str = str.charAt(0) + '.' + str.slice(1);
            str = str + (e < 0 ? 'e' : 'e+') + e;
        } else if (e < 0) {
            str = '0.' + getZeroString(-e - 1) + str;
            if (sd && (k = sd - len) > 0) str += getZeroString(k);
        } else if (e >= len) {
            str += getZeroString(e + 1 - len);
            if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);
        } else {
            if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);
            if (sd && (k = sd - len) > 0) {
                if (e + 1 === len) str += '.';
                str += getZeroString(k);
            }
        }
        return x.s < 0 ? '-' + str : str;
    }
    // Does not strip trailing zeros.
    function truncate(arr, len) {
        if (arr.length > len) {
            arr.length = len;
            return true;
        }
    }
    // Decimal methods
    /*
   *  clone
   *  config/set
   */ /*
   * Create and return a Decimal constructor with the same configuration properties as this Decimal
   * constructor.
   *
   */ function clone(obj) {
        var i, p, ps;
        /*
     * The Decimal constructor and exported function.
     * Return a new Decimal instance.
     *
     * value {number|string|Decimal} A numeric value.
     *
     */ function Decimal(value) {
            var x = this;
            // Decimal called without new.
            if (!(x instanceof Decimal)) return new Decimal(value);
            // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor
            // which points to Object.
            x.constructor = Decimal;
            // Duplicate.
            if (value instanceof Decimal) {
                x.s = value.s;
                x.e = value.e;
                x.d = (value = value.d) ? value.slice() : value;
                return;
            }
            if (typeof value === 'number') {
                // Reject Infinity/NaN.
                if (value * 0 !== 0) throw Error(invalidArgument + value);
                if (value > 0) x.s = 1;
                else if (value < 0) {
                    value = -value;
                    x.s = -1;
                } else {
                    x.s = 0;
                    x.e = 0;
                    x.d = [
                        0
                    ];
                    return;
                }
                // Fast path for small integers.
                if (value === ~~value && value < 1e7) {
                    x.e = 0;
                    x.d = [
                        value
                    ];
                    return;
                }
                return parseDecimal(x, value.toString());
            } else if (typeof value !== 'string') throw Error(invalidArgument + value);
            // Minus sign?
            if (value.charCodeAt(0) === 45) {
                value = value.slice(1);
                x.s = -1;
            } else x.s = 1;
            if (isDecimal.test(value)) parseDecimal(x, value);
            else throw Error(invalidArgument + value);
        }
        Decimal.prototype = P;
        Decimal.ROUND_UP = 0;
        Decimal.ROUND_DOWN = 1;
        Decimal.ROUND_CEIL = 2;
        Decimal.ROUND_FLOOR = 3;
        Decimal.ROUND_HALF_UP = 4;
        Decimal.ROUND_HALF_DOWN = 5;
        Decimal.ROUND_HALF_EVEN = 6;
        Decimal.ROUND_HALF_CEIL = 7;
        Decimal.ROUND_HALF_FLOOR = 8;
        Decimal.clone = clone;
        Decimal.config = Decimal.set = config;
        if (obj === void 0) obj = {};
        if (obj) {
            ps = [
                'precision',
                'rounding',
                'toExpNeg',
                'toExpPos',
                'LN10'
            ];
            for(i = 0; i < ps.length;)if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];
        }
        Decimal.config(obj);
        return Decimal;
    }
    /*
   * Configure global settings for a Decimal constructor.
   *
   * `obj` is an object with one or more of the following properties,
   *
   *   precision  {number}
   *   rounding   {number}
   *   toExpNeg   {number}
   *   toExpPos   {number}
   *
   * E.g. Decimal.config({ precision: 20, rounding: 4 })
   *
   */ function config(obj) {
        if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');
        var i, p, v, ps = [
            'precision',
            1,
            MAX_DIGITS,
            'rounding',
            0,
            8,
            'toExpNeg',
            -1 / 0,
            0,
            'toExpPos',
            0,
            1 / 0
        ];
        for(i = 0; i < ps.length; i += 3)if ((v = obj[p = ps[i]]) !== void 0) {
            if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;
            else throw Error(invalidArgument + p + ': ' + v);
        }
        if ((v = obj[p = 'LN10']) !== void 0) {
            if (v == Math.LN10) this[p] = new this(v);
            else throw Error(invalidArgument + p + ': ' + v);
        }
        return this;
    }
    // Create and configure initial Decimal constructor.
    Decimal = clone(Decimal);
    Decimal['default'] = Decimal.Decimal = Decimal;
    // Internal constant.
    ONE = new Decimal(1);
    // Export.
    // AMD.
    if (typeof define == 'function' && define.amd) define(function() {
        return Decimal;
    });
    else if (module.exports) module.exports = Decimal;
    else {
        if (!globalScope) globalScope = typeof self != 'undefined' && self && self.self == self ? self : Function('return this')();
        globalScope.Decimal = Decimal;
    }
})(this);

},{}],"lEN0v":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PLACE_HOLDER", ()=>PLACE_HOLDER);
parcelHelpers.export(exports, "curry", ()=>curry);
parcelHelpers.export(exports, "range", ()=>range);
parcelHelpers.export(exports, "map", ()=>map);
parcelHelpers.export(exports, "compose", ()=>compose);
parcelHelpers.export(exports, "reverse", ()=>reverse);
parcelHelpers.export(exports, "memoize", ()=>memoize);
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
var identity = function identity(i) {
    return i;
};
var PLACE_HOLDER = {
    '@@functional/placeholder': true
};
var isPlaceHolder = function isPlaceHolder(val) {
    return val === PLACE_HOLDER;
};
var curry0 = function curry0(fn) {
    return function _curried() {
        if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? undefined : arguments[0])) return _curried;
        return fn.apply(void 0, arguments);
    };
};
var curryN = function curryN(n, fn) {
    if (n === 1) return fn;
    return curry0(function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        var argsLength = args.filter(function(arg) {
            return arg !== PLACE_HOLDER;
        }).length;
        if (argsLength >= n) return fn.apply(void 0, args);
        return curryN(n - argsLength, curry0(function() {
            for(var _len2 = arguments.length, restArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)restArgs[_key2] = arguments[_key2];
            var newArgs = args.map(function(arg) {
                return isPlaceHolder(arg) ? restArgs.shift() : arg;
            });
            return fn.apply(void 0, _toConsumableArray(newArgs).concat(restArgs));
        }));
    });
};
var curry = function curry(fn) {
    return curryN(fn.length, fn);
};
var range = function range(begin, end) {
    var arr = [];
    for(var i = begin; i < end; ++i)arr[i - begin] = i;
    return arr;
};
var map = curry(function(fn, arr) {
    if (Array.isArray(arr)) return arr.map(fn);
    return Object.keys(arr).map(function(key) {
        return arr[key];
    }).map(fn);
});
var compose = function compose() {
    for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)args[_key3] = arguments[_key3];
    if (!args.length) return identity;
    var fns = args.reverse(); // first function can receive multiply arguments
    var firstFn = fns[0];
    var tailsFn = fns.slice(1);
    return function() {
        return tailsFn.reduce(function(res, fn) {
            return fn(res);
        }, firstFn.apply(void 0, arguments));
    };
};
var reverse = function reverse(arr) {
    if (Array.isArray(arr)) return arr.reverse();
     // can be string
    return arr.split('').reverse.join('');
};
var memoize = function memoize(fn) {
    var lastArgs = null;
    var lastResult = null;
    return function() {
        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];
        if (lastArgs && args.every(function(val, i) {
            return val === lastArgs[i];
        })) return lastResult;
        lastArgs = args;
        lastResult = fn.apply(void 0, args);
        return lastResult;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jvK1f":[function(require,module,exports,__globalThis) {
/**
 * @fileOverview 一些公用的运算方法
 * @author xile611
 * @date 2015-09-17
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _decimalJsLight = require("decimal.js-light");
var _decimalJsLightDefault = parcelHelpers.interopDefault(_decimalJsLight);
var _utils = require("./utils");
/**
 * 获取数值的位数
 * 其中绝对值属于区间[0.1, 1)， 得到的值为0
 * 绝对值属于区间[0.01, 0.1)，得到的位数为 -1
 * 绝对值属于区间[0.001, 0.01)，得到的位数为 -2
 *
 * @param  {Number} value 数值
 * @return {Integer} 位数
 */ function getDigitCount(value) {
    var result;
    if (value === 0) result = 1;
    else result = Math.floor(new (0, _decimalJsLightDefault.default)(value).abs().log(10).toNumber()) + 1;
    return result;
}
/**
 * 按照固定的步长获取[start, end)这个区间的数据
 * 并且需要处理js计算精度的问题
 *
 * @param  {Decimal} start 起点
 * @param  {Decimal} end   终点，不包含该值
 * @param  {Decimal} step  步长
 * @return {Array}         若干数值
 */ function rangeStep(start, end, step) {
    var num = new (0, _decimalJsLightDefault.default)(start);
    var i = 0;
    var result = []; // magic number to prevent infinite loop
    while(num.lt(end) && i < 100000){
        result.push(num.toNumber());
        num = num.add(step);
        i++;
    }
    return result;
}
/**
 * 对数值进行线性插值
 *
 * @param  {Number} a  定义域的极点
 * @param  {Number} b  定义域的极点
 * @param  {Number} t  [0, 1]内的某个值
 * @return {Number}    定义域内的某个值
 */ var interpolateNumber = (0, _utils.curry)(function(a, b, t) {
    var newA = +a;
    var newB = +b;
    return newA + t * (newB - newA);
});
/**
 * 线性插值的逆运算
 *
 * @param  {Number} a 定义域的极点
 * @param  {Number} b 定义域的极点
 * @param  {Number} x 可以认为是插值后的一个输出值
 * @return {Number}   当x在 a ~ b这个范围内时，返回值属于[0, 1]
 */ var uninterpolateNumber = (0, _utils.curry)(function(a, b, x) {
    var diff = b - +a;
    diff = diff || Infinity;
    return (x - a) / diff;
});
/**
 * 线性插值的逆运算，并且有截断的操作
 *
 * @param  {Number} a 定义域的极点
 * @param  {Number} b 定义域的极点
 * @param  {Number} x 可以认为是插值后的一个输出值
 * @return {Number}   当x在 a ~ b这个区间内时，返回值属于[0, 1]，
 * 当x不在 a ~ b这个区间时，会截断到 a ~ b 这个区间
 */ var uninterpolateTruncation = (0, _utils.curry)(function(a, b, x) {
    var diff = b - +a;
    diff = diff || Infinity;
    return Math.max(0, Math.min(1, (x - a) / diff));
});
exports.default = {
    rangeStep: rangeStep,
    getDigitCount: getDigitCount,
    interpolateNumber: interpolateNumber,
    uninterpolateNumber: uninterpolateNumber,
    uninterpolateTruncation: uninterpolateTruncation
};

},{"decimal.js-light":"euX8A","./utils":"lEN0v","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"exPuO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ErrorBar", ()=>ErrorBar);
/**
 * @fileOverview Render a group of error bar
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tinyInvariant = require("tiny-invariant");
var _tinyInvariantDefault = parcelHelpers.interopDefault(_tinyInvariant);
var _layer = require("../container/Layer");
var _reactUtils = require("../util/ReactUtils");
var _excluded = [
    "offset",
    "layout",
    "width",
    "dataKey",
    "data",
    "dataPointFormatter",
    "xAxis",
    "yAxis"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var ErrorBar = /*#__PURE__*/ function(_React$Component) {
    function ErrorBar() {
        _classCallCheck(this, ErrorBar);
        return _callSuper(this, ErrorBar, arguments);
    }
    _inherits(ErrorBar, _React$Component);
    return _createClass(ErrorBar, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, offset = _this$props.offset, layout = _this$props.layout, width = _this$props.width, dataKey = _this$props.dataKey, data = _this$props.data, dataPointFormatter = _this$props.dataPointFormatter, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, others = _objectWithoutProperties(_this$props, _excluded);
                var svgProps = (0, _reactUtils.filterProps)(others, false);
                !!(this.props.direction === 'x' && xAxis.type !== 'number') && (0, _tinyInvariantDefault.default)(false, 'ErrorBar requires Axis type property to be "number".');
                var errorBars = data.map(function(entry) {
                    var _dataPointFormatter = dataPointFormatter(entry, dataKey), x = _dataPointFormatter.x, y = _dataPointFormatter.y, value = _dataPointFormatter.value, errorVal = _dataPointFormatter.errorVal;
                    if (!errorVal) return null;
                    var lineCoordinates = [];
                    var lowBound, highBound;
                    if (Array.isArray(errorVal)) {
                        var _errorVal = _slicedToArray(errorVal, 2);
                        lowBound = _errorVal[0];
                        highBound = _errorVal[1];
                    } else lowBound = highBound = errorVal;
                    if (layout === 'vertical') {
                        // error bar for horizontal charts, the y is fixed, x is a range value
                        var scale = xAxis.scale;
                        var yMid = y + offset;
                        var yMin = yMid + width;
                        var yMax = yMid - width;
                        var xMin = scale(value - lowBound);
                        var xMax = scale(value + highBound);
                        // the right line of |--|
                        lineCoordinates.push({
                            x1: xMax,
                            y1: yMin,
                            x2: xMax,
                            y2: yMax
                        });
                        // the middle line of |--|
                        lineCoordinates.push({
                            x1: xMin,
                            y1: yMid,
                            x2: xMax,
                            y2: yMid
                        });
                        // the left line of |--|
                        lineCoordinates.push({
                            x1: xMin,
                            y1: yMin,
                            x2: xMin,
                            y2: yMax
                        });
                    } else if (layout === 'horizontal') {
                        // error bar for horizontal charts, the x is fixed, y is a range value
                        var _scale = yAxis.scale;
                        var xMid = x + offset;
                        var _xMin = xMid - width;
                        var _xMax = xMid + width;
                        var _yMin = _scale(value - lowBound);
                        var _yMax = _scale(value + highBound);
                        // the top line
                        lineCoordinates.push({
                            x1: _xMin,
                            y1: _yMax,
                            x2: _xMax,
                            y2: _yMax
                        });
                        // the middle line
                        lineCoordinates.push({
                            x1: xMid,
                            y1: _yMin,
                            x2: xMid,
                            y2: _yMax
                        });
                        // the bottom line
                        lineCoordinates.push({
                            x1: _xMin,
                            y1: _yMin,
                            x2: _xMax,
                            y2: _yMin
                        });
                    }
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                        className: "recharts-errorBar",
                        key: "bar-".concat(lineCoordinates.map(function(c) {
                            return "".concat(c.x1, "-").concat(c.x2, "-").concat(c.y1, "-").concat(c.y2);
                        }))
                    }, svgProps), lineCoordinates.map(function(coordinates) {
                        return /*#__PURE__*/ (0, _reactDefault.default).createElement("line", _extends({}, coordinates, {
                            key: "line-".concat(coordinates.x1, "-").concat(coordinates.x2, "-").concat(coordinates.y1, "-").concat(coordinates.y2)
                        }));
                    }));
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: "recharts-errorBars"
                }, errorBars);
            }
        }
    ]);
}((0, _reactDefault.default).Component);
_defineProperty(ErrorBar, "defaultProps", {
    stroke: 'black',
    strokeWidth: 1.5,
    width: 5,
    offset: 0,
    layout: 'horizontal'
});
_defineProperty(ErrorBar, "displayName", 'ErrorBar');

},{"react":"jMk1U","tiny-invariant":"ks8CW","../container/Layer":"dLJ3P","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ks8CW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>invariant);
var isProduction = false;
var prefix = 'Invariant failed';
function invariant(condition, message) {
    if (condition) return;
    if (isProduction) throw new Error(prefix);
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
    throw new Error(value);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4qtvc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getLegendProps", ()=>getLegendProps);
var _legend = require("../component/Legend");
var _chartUtils = require("./ChartUtils");
var _reactUtils = require("./ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var getLegendProps = function getLegendProps(_ref) {
    var children = _ref.children, formattedGraphicalItems = _ref.formattedGraphicalItems, legendWidth = _ref.legendWidth, legendContent = _ref.legendContent;
    var legendItem = (0, _reactUtils.findChildByType)(children, (0, _legend.Legend));
    if (!legendItem) return null;
    var legendDefaultProps = (0, _legend.Legend).defaultProps;
    var legendProps = legendDefaultProps !== undefined ? _objectSpread(_objectSpread({}, legendDefaultProps), legendItem.props) : {};
    var legendData;
    if (legendItem.props && legendItem.props.payload) legendData = legendItem.props && legendItem.props.payload;
    else if (legendContent === 'children') legendData = (formattedGraphicalItems || []).reduce(function(result, _ref2) {
        var item = _ref2.item, props = _ref2.props;
        var data = props.sectors || props.data || [];
        return result.concat(data.map(function(entry) {
            return {
                type: legendItem.props.iconType || item.props.legendType,
                value: entry.name,
                color: entry.fill,
                payload: entry
            };
        }));
    }, []);
    else legendData = (formattedGraphicalItems || []).map(function(_ref3) {
        var item = _ref3.item;
        var itemDefaultProps = item.type.defaultProps;
        var itemProps = itemDefaultProps !== undefined ? _objectSpread(_objectSpread({}, itemDefaultProps), item.props) : {};
        var dataKey = itemProps.dataKey, name = itemProps.name, legendType = itemProps.legendType, hide = itemProps.hide;
        return {
            inactive: hide,
            dataKey: dataKey,
            type: legendProps.iconType || legendType || 'square',
            color: (0, _chartUtils.getMainColorOfGraphicItem)(item),
            value: name || dataKey,
            // @ts-expect-error property strokeDasharray is required in Payload but optional in props
            payload: itemProps
        };
    });
    return _objectSpread(_objectSpread(_objectSpread({}, legendProps), (0, _legend.Legend).getWithHeight(legendItem, legendWidth)), {}, {
        payload: legendData,
        item: legendItem
    });
};

},{"../component/Legend":"7BifH","./ChartUtils":"58wJX","./ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gF2dN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LabelList", ()=>LabelList);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isObject = require("lodash/isObject");
var _isObjectDefault = parcelHelpers.interopDefault(_isObject);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _last = require("lodash/last");
var _lastDefault = parcelHelpers.interopDefault(_last);
var _label = require("./Label");
var _layer = require("../container/Layer");
var _reactUtils = require("../util/ReactUtils");
var _chartUtils = require("../util/ChartUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var _excluded = [
    "valueAccessor"
], _excluded2 = [
    "data",
    "dataKey",
    "clockWise",
    "id",
    "textBreakAll"
];
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
var defaultAccessor = function defaultAccessor(entry) {
    return Array.isArray(entry.value) ? (0, _lastDefault.default)(entry.value) : entry.value;
};
function LabelList(_ref) {
    var _ref$valueAccessor = _ref.valueAccessor, valueAccessor = _ref$valueAccessor === void 0 ? defaultAccessor : _ref$valueAccessor, restProps = _objectWithoutProperties(_ref, _excluded);
    var data = restProps.data, dataKey = restProps.dataKey, clockWise = restProps.clockWise, id = restProps.id, textBreakAll = restProps.textBreakAll, others = _objectWithoutProperties(restProps, _excluded2);
    if (!data || !data.length) return null;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
        className: "recharts-label-list"
    }, data.map(function(entry, index) {
        var value = (0, _isNilDefault.default)(dataKey) ? valueAccessor(entry, index) : (0, _chartUtils.getValueByDataKey)(entry && entry.payload, dataKey);
        var idProps = (0, _isNilDefault.default)(id) ? {} : {
            id: "".concat(id, "-").concat(index)
        };
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _label.Label), _extends({}, (0, _reactUtils.filterProps)(entry, true), others, idProps, {
            parentViewBox: entry.parentViewBox,
            value: value,
            textBreakAll: textBreakAll,
            viewBox: (0, _label.Label).parseViewBox((0, _isNilDefault.default)(clockWise) ? entry : _objectSpread(_objectSpread({}, entry), {}, {
                clockWise: clockWise
            })),
            key: "label-".concat(index) // eslint-disable-line react/no-array-index-key
            ,
            index: index
        }));
    }));
}
LabelList.displayName = 'LabelList';
function parseLabelList(label, data) {
    if (!label) return null;
    if (label === true) return /*#__PURE__*/ (0, _reactDefault.default).createElement(LabelList, {
        key: "labelList-implicit",
        data: data
    });
    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(label) || (0, _isFunctionDefault.default)(label)) return /*#__PURE__*/ (0, _reactDefault.default).createElement(LabelList, {
        key: "labelList-implicit",
        data: data,
        content: label
    });
    if ((0, _isObjectDefault.default)(label)) return /*#__PURE__*/ (0, _reactDefault.default).createElement(LabelList, _extends({
        data: data
    }, label, {
        key: "labelList-implicit"
    }));
    return null;
}
function renderCallByParent(parentProps, data) {
    var checkPropsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) return null;
    var children = parentProps.children;
    var explicitChildren = (0, _reactUtils.findAllByType)(children, LabelList).map(function(child, index) {
        return /*#__PURE__*/ (0, _react.cloneElement)(child, {
            data: data,
            // eslint-disable-next-line react/no-array-index-key
            key: "labelList-".concat(index)
        });
    });
    if (!checkPropsLabel) return explicitChildren;
    var implicitLabelList = parseLabelList(parentProps.label, data);
    return [
        implicitLabelList
    ].concat(_toConsumableArray(explicitChildren));
}
LabelList.renderCallByParent = renderCallByParent;

},{"react":"jMk1U","lodash/isNil":"66cvp","lodash/isObject":"ccoEe","lodash/isFunction":"6aeG3","lodash/last":"3bvBw","./Label":"b8wtn","../container/Layer":"dLJ3P","../util/ReactUtils":"dvc7w","../util/ChartUtils":"58wJX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3bvBw":[function(require,module,exports,__globalThis) {
/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */ function last(array) {
    var length = array == null ? 0 : array.length;
    return length ? array[length - 1] : undefined;
}
module.exports = last;

},{}],"gfarJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Sector", ()=>Sector);
/**
 * @fileOverview Sector
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactUtils = require("../util/ReactUtils");
var _polarUtils = require("../util/PolarUtils");
var _dataUtils = require("../util/DataUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {
    var sign = (0, _dataUtils.mathSign)(endAngle - startAngle);
    var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);
    return sign * deltaAngle;
};
var getTangentCircle = function getTangentCircle(_ref) {
    var cx = _ref.cx, cy = _ref.cy, radius = _ref.radius, angle = _ref.angle, sign = _ref.sign, isExternal = _ref.isExternal, cornerRadius = _ref.cornerRadius, cornerIsExternal = _ref.cornerIsExternal;
    var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;
    var theta = Math.asin(cornerRadius / centerRadius) / (0, _polarUtils.RADIAN);
    var centerAngle = cornerIsExternal ? angle : angle + sign * theta;
    var center = (0, _polarUtils.polarToCartesian)(cx, cy, centerRadius, centerAngle);
    // The coordinate of point which is tangent to the circle
    var circleTangency = (0, _polarUtils.polarToCartesian)(cx, cy, radius, centerAngle);
    // The coordinate of point which is tangent to the radius line
    var lineTangencyAngle = cornerIsExternal ? angle - sign * theta : angle;
    var lineTangency = (0, _polarUtils.polarToCartesian)(cx, cy, centerRadius * Math.cos(theta * (0, _polarUtils.RADIAN)), lineTangencyAngle);
    return {
        center: center,
        circleTangency: circleTangency,
        lineTangency: lineTangency,
        theta: theta
    };
};
var getSectorPath = function getSectorPath(_ref2) {
    var cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
    var angle = getDeltaAngle(startAngle, endAngle);
    // When the angle of sector equals to 360, star point and end point coincide
    var tempEndAngle = startAngle + angle;
    var outerStartPoint = (0, _polarUtils.polarToCartesian)(cx, cy, outerRadius, startAngle);
    var outerEndPoint = (0, _polarUtils.polarToCartesian)(cx, cy, outerRadius, tempEndAngle);
    var path = "M ".concat(outerStartPoint.x, ",").concat(outerStartPoint.y, "\n    A ").concat(outerRadius, ",").concat(outerRadius, ",0,\n    ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle > tempEndAngle), ",\n    ").concat(outerEndPoint.x, ",").concat(outerEndPoint.y, "\n  ");
    if (innerRadius > 0) {
        var innerStartPoint = (0, _polarUtils.polarToCartesian)(cx, cy, innerRadius, startAngle);
        var innerEndPoint = (0, _polarUtils.polarToCartesian)(cx, cy, innerRadius, tempEndAngle);
        path += "L ".concat(innerEndPoint.x, ",").concat(innerEndPoint.y, "\n            A ").concat(innerRadius, ",").concat(innerRadius, ",0,\n            ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle <= tempEndAngle), ",\n            ").concat(innerStartPoint.x, ",").concat(innerStartPoint.y, " Z");
    } else path += "L ".concat(cx, ",").concat(cy, " Z");
    return path;
};
var getSectorWithCorner = function getSectorWithCorner(_ref3) {
    var cx = _ref3.cx, cy = _ref3.cy, innerRadius = _ref3.innerRadius, outerRadius = _ref3.outerRadius, cornerRadius = _ref3.cornerRadius, forceCornerRadius = _ref3.forceCornerRadius, cornerIsExternal = _ref3.cornerIsExternal, startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
    var sign = (0, _dataUtils.mathSign)(endAngle - startAngle);
    var _getTangentCircle = getTangentCircle({
        cx: cx,
        cy: cy,
        radius: outerRadius,
        angle: startAngle,
        sign: sign,
        cornerRadius: cornerRadius,
        cornerIsExternal: cornerIsExternal
    }), soct = _getTangentCircle.circleTangency, solt = _getTangentCircle.lineTangency, sot = _getTangentCircle.theta;
    var _getTangentCircle2 = getTangentCircle({
        cx: cx,
        cy: cy,
        radius: outerRadius,
        angle: endAngle,
        sign: -sign,
        cornerRadius: cornerRadius,
        cornerIsExternal: cornerIsExternal
    }), eoct = _getTangentCircle2.circleTangency, eolt = _getTangentCircle2.lineTangency, eot = _getTangentCircle2.theta;
    var outerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sot - eot;
    if (outerArcAngle < 0) {
        if (forceCornerRadius) return "M ".concat(solt.x, ",").concat(solt.y, "\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(cornerRadius * 2, ",0\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(-cornerRadius * 2, ",0\n      ");
        return getSectorPath({
            cx: cx,
            cy: cy,
            innerRadius: innerRadius,
            outerRadius: outerRadius,
            startAngle: startAngle,
            endAngle: endAngle
        });
    }
    var path = "M ".concat(solt.x, ",").concat(solt.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(soct.x, ",").concat(soct.y, "\n    A").concat(outerRadius, ",").concat(outerRadius, ",0,").concat(+(outerArcAngle > 180), ",").concat(+(sign < 0), ",").concat(eoct.x, ",").concat(eoct.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(eolt.x, ",").concat(eolt.y, "\n  ");
    if (innerRadius > 0) {
        var _getTangentCircle3 = getTangentCircle({
            cx: cx,
            cy: cy,
            radius: innerRadius,
            angle: startAngle,
            sign: sign,
            isExternal: true,
            cornerRadius: cornerRadius,
            cornerIsExternal: cornerIsExternal
        }), sict = _getTangentCircle3.circleTangency, silt = _getTangentCircle3.lineTangency, sit = _getTangentCircle3.theta;
        var _getTangentCircle4 = getTangentCircle({
            cx: cx,
            cy: cy,
            radius: innerRadius,
            angle: endAngle,
            sign: -sign,
            isExternal: true,
            cornerRadius: cornerRadius,
            cornerIsExternal: cornerIsExternal
        }), eict = _getTangentCircle4.circleTangency, eilt = _getTangentCircle4.lineTangency, eit = _getTangentCircle4.theta;
        var innerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sit - eit;
        if (innerArcAngle < 0 && cornerRadius === 0) return "".concat(path, "L").concat(cx, ",").concat(cy, "Z");
        path += "L".concat(eilt.x, ",").concat(eilt.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(eict.x, ",").concat(eict.y, "\n      A").concat(innerRadius, ",").concat(innerRadius, ",0,").concat(+(innerArcAngle > 180), ",").concat(+(sign > 0), ",").concat(sict.x, ",").concat(sict.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(silt.x, ",").concat(silt.y, "Z");
    } else path += "L".concat(cx, ",").concat(cy, "Z");
    return path;
};
var defaultProps = {
    cx: 0,
    cy: 0,
    innerRadius: 0,
    outerRadius: 0,
    startAngle: 0,
    endAngle: 0,
    cornerRadius: 0,
    forceCornerRadius: false,
    cornerIsExternal: false
};
var Sector = function Sector(sectorProps) {
    var props = _objectSpread(_objectSpread({}, defaultProps), sectorProps);
    var cx = props.cx, cy = props.cy, innerRadius = props.innerRadius, outerRadius = props.outerRadius, cornerRadius = props.cornerRadius, forceCornerRadius = props.forceCornerRadius, cornerIsExternal = props.cornerIsExternal, startAngle = props.startAngle, endAngle = props.endAngle, className = props.className;
    if (outerRadius < innerRadius || startAngle === endAngle) return null;
    var layerClass = (0, _clsxDefault.default)('recharts-sector', className);
    var deltaRadius = outerRadius - innerRadius;
    var cr = (0, _dataUtils.getPercentValue)(cornerRadius, deltaRadius, 0, true);
    var path;
    if (cr > 0 && Math.abs(startAngle - endAngle) < 360) path = getSectorWithCorner({
        cx: cx,
        cy: cy,
        innerRadius: innerRadius,
        outerRadius: outerRadius,
        cornerRadius: Math.min(cr, deltaRadius / 2),
        forceCornerRadius: forceCornerRadius,
        cornerIsExternal: cornerIsExternal,
        startAngle: startAngle,
        endAngle: endAngle
    });
    else path = getSectorPath({
        cx: cx,
        cy: cy,
        innerRadius: innerRadius,
        outerRadius: outerRadius,
        startAngle: startAngle,
        endAngle: endAngle
    });
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(props, true), {
        className: layerClass,
        d: path,
        role: "img"
    }));
};

},{"react":"jMk1U","clsx":"dOSJC","../util/ReactUtils":"dvc7w","../util/PolarUtils":"4krqZ","../util/DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fyl1W":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getPath", ()=>getPath);
parcelHelpers.export(exports, "Curve", ()=>Curve);
/**
 * @fileOverview Curve
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _d3Shape = require("victory-vendor/d3-shape");
var _upperFirst = require("lodash/upperFirst");
var _upperFirstDefault = parcelHelpers.interopDefault(_upperFirst);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _types = require("../util/types");
var _reactUtils = require("../util/ReactUtils");
var _dataUtils = require("../util/DataUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var CURVE_FACTORIES = {
    curveBasisClosed: (0, _d3Shape.curveBasisClosed),
    curveBasisOpen: (0, _d3Shape.curveBasisOpen),
    curveBasis: (0, _d3Shape.curveBasis),
    curveBumpX: (0, _d3Shape.curveBumpX),
    curveBumpY: (0, _d3Shape.curveBumpY),
    curveLinearClosed: (0, _d3Shape.curveLinearClosed),
    curveLinear: (0, _d3Shape.curveLinear),
    curveMonotoneX: (0, _d3Shape.curveMonotoneX),
    curveMonotoneY: (0, _d3Shape.curveMonotoneY),
    curveNatural: (0, _d3Shape.curveNatural),
    curveStep: (0, _d3Shape.curveStep),
    curveStepAfter: (0, _d3Shape.curveStepAfter),
    curveStepBefore: (0, _d3Shape.curveStepBefore)
};
var defined = function defined(p) {
    return p.x === +p.x && p.y === +p.y;
};
var getX = function getX(p) {
    return p.x;
};
var getY = function getY(p) {
    return p.y;
};
var getCurveFactory = function getCurveFactory(type, layout) {
    if ((0, _isFunctionDefault.default)(type)) return type;
    var name = "curve".concat((0, _upperFirstDefault.default)(type));
    if ((name === 'curveMonotone' || name === 'curveBump') && layout) return CURVE_FACTORIES["".concat(name).concat(layout === 'vertical' ? 'Y' : 'X')];
    return CURVE_FACTORIES[name] || (0, _d3Shape.curveLinear);
};
var getPath = function getPath(_ref) {
    var _ref$type = _ref.type, type = _ref$type === void 0 ? 'linear' : _ref$type, _ref$points = _ref.points, points = _ref$points === void 0 ? [] : _ref$points, baseLine = _ref.baseLine, layout = _ref.layout, _ref$connectNulls = _ref.connectNulls, connectNulls = _ref$connectNulls === void 0 ? false : _ref$connectNulls;
    var curveFactory = getCurveFactory(type, layout);
    var formatPoints = connectNulls ? points.filter(function(entry) {
        return defined(entry);
    }) : points;
    var lineFunction;
    if (Array.isArray(baseLine)) {
        var formatBaseLine = connectNulls ? baseLine.filter(function(base) {
            return defined(base);
        }) : baseLine;
        var areaPoints = formatPoints.map(function(entry, index) {
            return _objectSpread(_objectSpread({}, entry), {}, {
                base: formatBaseLine[index]
            });
        });
        if (layout === 'vertical') lineFunction = (0, _d3Shape.area)().y(getY).x1(getX).x0(function(d) {
            return d.base.x;
        });
        else lineFunction = (0, _d3Shape.area)().x(getX).y1(getY).y0(function(d) {
            return d.base.y;
        });
        lineFunction.defined(defined).curve(curveFactory);
        return lineFunction(areaPoints);
    }
    if (layout === 'vertical' && (0, _dataUtils.isNumber)(baseLine)) lineFunction = (0, _d3Shape.area)().y(getY).x1(getX).x0(baseLine);
    else if ((0, _dataUtils.isNumber)(baseLine)) lineFunction = (0, _d3Shape.area)().x(getX).y1(getY).y0(baseLine);
    else lineFunction = (0, _d3Shape.line)().x(getX).y(getY);
    lineFunction.defined(defined).curve(curveFactory);
    return lineFunction(formatPoints);
};
var Curve = function Curve(props) {
    var className = props.className, points = props.points, path = props.path, pathRef = props.pathRef;
    if ((!points || !points.length) && !path) return null;
    var realPath = points && points.length ? getPath(props) : path;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(props, false), (0, _types.adaptEventHandlers)(props), {
        className: (0, _clsxDefault.default)('recharts-curve', className),
        d: realPath,
        ref: pathRef
    }));
};

},{"react":"jMk1U","victory-vendor/d3-shape":"dyxsw","lodash/upperFirst":"f6YEf","lodash/isFunction":"6aeG3","clsx":"dOSJC","../util/types":"j2YO8","../util/ReactUtils":"dvc7w","../util/DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6fXjw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isInRectangle", ()=>isInRectangle);
parcelHelpers.export(exports, "Rectangle", ()=>Rectangle);
/**
 * @fileOverview Rectangle
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactSmooth = require("react-smooth");
var _reactSmoothDefault = parcelHelpers.interopDefault(_reactSmooth);
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var getRectanglePath = function getRectanglePath(x, y, width, height, radius) {
    var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);
    var ySign = height >= 0 ? 1 : -1;
    var xSign = width >= 0 ? 1 : -1;
    var clockWise = height >= 0 && width >= 0 || height < 0 && width < 0 ? 1 : 0;
    var path;
    if (maxRadius > 0 && radius instanceof Array) {
        var newRadius = [
            0,
            0,
            0,
            0
        ];
        for(var i = 0, len = 4; i < len; i++)newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];
        path = "M".concat(x, ",").concat(y + ySign * newRadius[0]);
        if (newRadius[0] > 0) path += "A ".concat(newRadius[0], ",").concat(newRadius[0], ",0,0,").concat(clockWise, ",").concat(x + xSign * newRadius[0], ",").concat(y);
        path += "L ".concat(x + width - xSign * newRadius[1], ",").concat(y);
        if (newRadius[1] > 0) path += "A ".concat(newRadius[1], ",").concat(newRadius[1], ",0,0,").concat(clockWise, ",\n        ").concat(x + width, ",").concat(y + ySign * newRadius[1]);
        path += "L ".concat(x + width, ",").concat(y + height - ySign * newRadius[2]);
        if (newRadius[2] > 0) path += "A ".concat(newRadius[2], ",").concat(newRadius[2], ",0,0,").concat(clockWise, ",\n        ").concat(x + width - xSign * newRadius[2], ",").concat(y + height);
        path += "L ".concat(x + xSign * newRadius[3], ",").concat(y + height);
        if (newRadius[3] > 0) path += "A ".concat(newRadius[3], ",").concat(newRadius[3], ",0,0,").concat(clockWise, ",\n        ").concat(x, ",").concat(y + height - ySign * newRadius[3]);
        path += 'Z';
    } else if (maxRadius > 0 && radius === +radius && radius > 0) {
        var _newRadius = Math.min(maxRadius, radius);
        path = "M ".concat(x, ",").concat(y + ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + xSign * _newRadius, ",").concat(y, "\n            L ").concat(x + width - xSign * _newRadius, ",").concat(y, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + width, ",").concat(y + ySign * _newRadius, "\n            L ").concat(x + width, ",").concat(y + height - ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + width - xSign * _newRadius, ",").concat(y + height, "\n            L ").concat(x + xSign * _newRadius, ",").concat(y + height, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x, ",").concat(y + height - ySign * _newRadius, " Z");
    } else path = "M ".concat(x, ",").concat(y, " h ").concat(width, " v ").concat(height, " h ").concat(-width, " Z");
    return path;
};
var isInRectangle = function isInRectangle(point, rect) {
    if (!point || !rect) return false;
    var px = point.x, py = point.y;
    var x = rect.x, y = rect.y, width = rect.width, height = rect.height;
    if (Math.abs(width) > 0 && Math.abs(height) > 0) {
        var minX = Math.min(x, x + width);
        var maxX = Math.max(x, x + width);
        var minY = Math.min(y, y + height);
        var maxY = Math.max(y, y + height);
        return px >= minX && px <= maxX && py >= minY && py <= maxY;
    }
    return false;
};
var defaultProps = {
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    // The radius of border
    // The radius of four corners when radius is a number
    // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array
    radius: 0,
    isAnimationActive: false,
    isUpdateAnimationActive: false,
    animationBegin: 0,
    animationDuration: 1500,
    animationEasing: 'ease'
};
var Rectangle = function Rectangle(rectangleProps) {
    var props = _objectSpread(_objectSpread({}, defaultProps), rectangleProps);
    var pathRef = (0, _react.useRef)();
    var _useState = (0, _react.useState)(-1), _useState2 = _slicedToArray(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];
    (0, _react.useEffect)(function() {
        if (pathRef.current && pathRef.current.getTotalLength) try {
            var pathTotalLength = pathRef.current.getTotalLength();
            if (pathTotalLength) setTotalLength(pathTotalLength);
        } catch (err) {
        // calculate total length error
        }
    }, []);
    var x = props.x, y = props.y, width = props.width, height = props.height, radius = props.radius, className = props.className;
    var animationEasing = props.animationEasing, animationDuration = props.animationDuration, animationBegin = props.animationBegin, isAnimationActive = props.isAnimationActive, isUpdateAnimationActive = props.isUpdateAnimationActive;
    if (x !== +x || y !== +y || width !== +width || height !== +height || width === 0 || height === 0) return null;
    var layerClass = (0, _clsxDefault.default)('recharts-rectangle', className);
    if (!isUpdateAnimationActive) return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(props, true), {
        className: layerClass,
        d: getRectanglePath(x, y, width, height, radius)
    }));
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
        canBegin: totalLength > 0,
        from: {
            width: width,
            height: height,
            x: x,
            y: y
        },
        to: {
            width: width,
            height: height,
            x: x,
            y: y
        },
        duration: animationDuration,
        animationEasing: animationEasing,
        isActive: isUpdateAnimationActive
    }, function(_ref) {
        var currWidth = _ref.width, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
            canBegin: totalLength > 0,
            from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
            to: "".concat(totalLength, "px 0px"),
            attributeName: "strokeDasharray",
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing
        }, /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(props, true), {
            className: layerClass,
            d: getRectanglePath(currX, currY, currWidth, currHeight, radius),
            ref: pathRef
        })));
    });
};

},{"react":"jMk1U","clsx":"dOSJC","react-smooth":"2I5y4","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2I5y4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "configSpring", ()=>(0, _easing.configSpring));
parcelHelpers.export(exports, "configBezier", ()=>(0, _easing.configBezier));
parcelHelpers.export(exports, "AnimateGroup", ()=>(0, _animateGroupDefault.default));
var _animate = require("./Animate");
var _animateDefault = parcelHelpers.interopDefault(_animate);
var _easing = require("./easing");
var _animateGroup = require("./AnimateGroup");
var _animateGroupDefault = parcelHelpers.interopDefault(_animateGroup);
exports.default = (0, _animateDefault.default);

},{"./Animate":"2pPRe","./easing":false,"./AnimateGroup":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2pPRe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _fastEquals = require("fast-equals");
var _animateManager = require("./AnimateManager");
var _animateManagerDefault = parcelHelpers.interopDefault(_animateManager);
var _easing = require("./easing");
var _configUpdate = require("./configUpdate");
var _configUpdateDefault = parcelHelpers.interopDefault(_configUpdate);
var _util = require("./util");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var _excluded = [
    "children",
    "begin",
    "duration",
    "attributeName",
    "easing",
    "isActive",
    "steps",
    "from",
    "to",
    "canBegin",
    "onAnimationEnd",
    "shouldReAnimate",
    "onAnimationReStart"
];
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
var Animate = /*#__PURE__*/ function(_PureComponent) {
    _inherits(Animate, _PureComponent);
    var _super = _createSuper(Animate);
    function Animate(props, context) {
        var _this;
        _classCallCheck(this, Animate);
        _this = _super.call(this, props, context);
        var _this$props = _this.props, isActive = _this$props.isActive, attributeName = _this$props.attributeName, from = _this$props.from, to = _this$props.to, steps = _this$props.steps, children = _this$props.children, duration = _this$props.duration;
        _this.handleStyleChange = _this.handleStyleChange.bind(_assertThisInitialized(_this));
        _this.changeStyle = _this.changeStyle.bind(_assertThisInitialized(_this));
        if (!isActive || duration <= 0) {
            _this.state = {
                style: {}
            };
            // if children is a function and animation is not active, set style to 'to'
            if (typeof children === 'function') _this.state = {
                style: to
            };
            return _possibleConstructorReturn(_this);
        }
        if (steps && steps.length) _this.state = {
            style: steps[0].style
        };
        else if (from) {
            if (typeof children === 'function') {
                _this.state = {
                    style: from
                };
                return _possibleConstructorReturn(_this);
            }
            _this.state = {
                style: attributeName ? _defineProperty({}, attributeName, from) : from
            };
        } else _this.state = {
            style: {}
        };
        return _this;
    }
    _createClass(Animate, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this$props2 = this.props, isActive = _this$props2.isActive, canBegin = _this$props2.canBegin;
                this.mounted = true;
                if (!isActive || !canBegin) return;
                this.runAnimation(this.props);
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate(prevProps) {
                var _this$props3 = this.props, isActive = _this$props3.isActive, canBegin = _this$props3.canBegin, attributeName = _this$props3.attributeName, shouldReAnimate = _this$props3.shouldReAnimate, to = _this$props3.to, currentFrom = _this$props3.from;
                var style = this.state.style;
                if (!canBegin) return;
                if (!isActive) {
                    var newState = {
                        style: attributeName ? _defineProperty({}, attributeName, to) : to
                    };
                    if (this.state && style) {
                        if (attributeName && style[attributeName] !== to || !attributeName && style !== to) // eslint-disable-next-line react/no-did-update-set-state
                        this.setState(newState);
                    }
                    return;
                }
                if ((0, _fastEquals.deepEqual)(prevProps.to, to) && prevProps.canBegin && prevProps.isActive) return;
                var isTriggered = !prevProps.canBegin || !prevProps.isActive;
                if (this.manager) this.manager.stop();
                if (this.stopJSAnimation) this.stopJSAnimation();
                var from = isTriggered || shouldReAnimate ? currentFrom : prevProps.to;
                if (this.state && style) {
                    var _newState = {
                        style: attributeName ? _defineProperty({}, attributeName, from) : from
                    };
                    if (attributeName && style[attributeName] !== from || !attributeName && style !== from) // eslint-disable-next-line react/no-did-update-set-state
                    this.setState(_newState);
                }
                this.runAnimation(_objectSpread(_objectSpread({}, this.props), {}, {
                    from: from,
                    begin: 0
                }));
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.mounted = false;
                var onAnimationEnd = this.props.onAnimationEnd;
                if (this.unSubscribe) this.unSubscribe();
                if (this.manager) {
                    this.manager.stop();
                    this.manager = null;
                }
                if (this.stopJSAnimation) this.stopJSAnimation();
                if (onAnimationEnd) onAnimationEnd();
            }
        },
        {
            key: "handleStyleChange",
            value: function handleStyleChange(style) {
                this.changeStyle(style);
            }
        },
        {
            key: "changeStyle",
            value: function changeStyle(style) {
                if (this.mounted) this.setState({
                    style: style
                });
            }
        },
        {
            key: "runJSAnimation",
            value: function runJSAnimation(props) {
                var _this2 = this;
                var from = props.from, to = props.to, duration = props.duration, easing = props.easing, begin = props.begin, onAnimationEnd = props.onAnimationEnd, onAnimationStart = props.onAnimationStart;
                var startAnimation = (0, _configUpdateDefault.default)(from, to, (0, _easing.configEasing)(easing), duration, this.changeStyle);
                var finalStartAnimation = function finalStartAnimation() {
                    _this2.stopJSAnimation = startAnimation();
                };
                this.manager.start([
                    onAnimationStart,
                    begin,
                    finalStartAnimation,
                    duration,
                    onAnimationEnd
                ]);
            }
        },
        {
            key: "runStepAnimation",
            value: function runStepAnimation(props) {
                var _this3 = this;
                var steps = props.steps, begin = props.begin, onAnimationStart = props.onAnimationStart;
                var _steps$ = steps[0], initialStyle = _steps$.style, _steps$$duration = _steps$.duration, initialTime = _steps$$duration === void 0 ? 0 : _steps$$duration;
                var addStyle = function addStyle(sequence, nextItem, index) {
                    if (index === 0) return sequence;
                    var duration = nextItem.duration, _nextItem$easing = nextItem.easing, easing = _nextItem$easing === void 0 ? 'ease' : _nextItem$easing, style = nextItem.style, nextProperties = nextItem.properties, onAnimationEnd = nextItem.onAnimationEnd;
                    var preItem = index > 0 ? steps[index - 1] : nextItem;
                    var properties = nextProperties || Object.keys(style);
                    if (typeof easing === 'function' || easing === 'spring') return [].concat(_toConsumableArray(sequence), [
                        _this3.runJSAnimation.bind(_this3, {
                            from: preItem.style,
                            to: style,
                            duration: duration,
                            easing: easing
                        }),
                        duration
                    ]);
                    var transition = (0, _util.getTransitionVal)(properties, duration, easing);
                    var newStyle = _objectSpread(_objectSpread(_objectSpread({}, preItem.style), style), {}, {
                        transition: transition
                    });
                    return [].concat(_toConsumableArray(sequence), [
                        newStyle,
                        duration,
                        onAnimationEnd
                    ]).filter((0, _util.identity));
                };
                return this.manager.start([
                    onAnimationStart
                ].concat(_toConsumableArray(steps.reduce(addStyle, [
                    initialStyle,
                    Math.max(initialTime, begin)
                ])), [
                    props.onAnimationEnd
                ]));
            }
        },
        {
            key: "runAnimation",
            value: function runAnimation(props) {
                if (!this.manager) this.manager = (0, _animateManagerDefault.default)();
                var begin = props.begin, duration = props.duration, attributeName = props.attributeName, propsTo = props.to, easing = props.easing, onAnimationStart = props.onAnimationStart, onAnimationEnd = props.onAnimationEnd, steps = props.steps, children = props.children;
                var manager = this.manager;
                this.unSubscribe = manager.subscribe(this.handleStyleChange);
                if (typeof easing === 'function' || typeof children === 'function' || easing === 'spring') {
                    this.runJSAnimation(props);
                    return;
                }
                if (steps.length > 1) {
                    this.runStepAnimation(props);
                    return;
                }
                var to = attributeName ? _defineProperty({}, attributeName, propsTo) : propsTo;
                var transition = (0, _util.getTransitionVal)(Object.keys(to), duration, easing);
                manager.start([
                    onAnimationStart,
                    begin,
                    _objectSpread(_objectSpread({}, to), {}, {
                        transition: transition
                    }),
                    duration,
                    onAnimationEnd
                ]);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props4 = this.props, children = _this$props4.children, begin = _this$props4.begin, duration = _this$props4.duration, attributeName = _this$props4.attributeName, easing = _this$props4.easing, isActive = _this$props4.isActive, steps = _this$props4.steps, from = _this$props4.from, to = _this$props4.to, canBegin = _this$props4.canBegin, onAnimationEnd = _this$props4.onAnimationEnd, shouldReAnimate = _this$props4.shouldReAnimate, onAnimationReStart = _this$props4.onAnimationReStart, others = _objectWithoutProperties(_this$props4, _excluded);
                var count = (0, _react.Children).count(children);
                // eslint-disable-next-line react/destructuring-assignment
                var stateStyle = this.state.style;
                if (typeof children === 'function') return children(stateStyle);
                if (!isActive || count === 0 || duration <= 0) return children;
                var cloneContainer = function cloneContainer(container) {
                    var _container$props = container.props, _container$props$styl = _container$props.style, style = _container$props$styl === void 0 ? {} : _container$props$styl, className = _container$props.className;
                    var res = /*#__PURE__*/ (0, _react.cloneElement)(container, _objectSpread(_objectSpread({}, others), {}, {
                        style: _objectSpread(_objectSpread({}, style), stateStyle),
                        className: className
                    }));
                    return res;
                };
                if (count === 1) return cloneContainer((0, _react.Children).only(children));
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", null, (0, _react.Children).map(children, function(child) {
                    return cloneContainer(child);
                }));
            }
        }
    ]);
    return Animate;
}((0, _react.PureComponent));
Animate.displayName = 'Animate';
Animate.defaultProps = {
    begin: 0,
    duration: 1000,
    from: '',
    to: '',
    attributeName: '',
    easing: 'ease',
    isActive: true,
    canBegin: true,
    steps: [],
    onAnimationEnd: function onAnimationEnd() {},
    onAnimationStart: function onAnimationStart() {}
};
Animate.propTypes = {
    from: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string
    ]),
    to: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).object,
        (0, _propTypesDefault.default).string
    ]),
    attributeName: (0, _propTypesDefault.default).string,
    // animation duration
    duration: (0, _propTypesDefault.default).number,
    begin: (0, _propTypesDefault.default).number,
    easing: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).string,
        (0, _propTypesDefault.default).func
    ]),
    steps: (0, _propTypesDefault.default).arrayOf((0, _propTypesDefault.default).shape({
        duration: (0, _propTypesDefault.default).number.isRequired,
        style: (0, _propTypesDefault.default).object.isRequired,
        easing: (0, _propTypesDefault.default).oneOfType([
            (0, _propTypesDefault.default).oneOf([
                'ease',
                'ease-in',
                'ease-out',
                'ease-in-out',
                'linear'
            ]),
            (0, _propTypesDefault.default).func
        ]),
        // transition css properties(dash case), optional
        properties: (0, _propTypesDefault.default).arrayOf('string'),
        onAnimationEnd: (0, _propTypesDefault.default).func
    })),
    children: (0, _propTypesDefault.default).oneOfType([
        (0, _propTypesDefault.default).node,
        (0, _propTypesDefault.default).func
    ]),
    isActive: (0, _propTypesDefault.default).bool,
    canBegin: (0, _propTypesDefault.default).bool,
    onAnimationEnd: (0, _propTypesDefault.default).func,
    // decide if it should reanimate with initial from style when props change
    shouldReAnimate: (0, _propTypesDefault.default).bool,
    onAnimationStart: (0, _propTypesDefault.default).func,
    onAnimationReStart: (0, _propTypesDefault.default).func
};
exports.default = Animate;

},{"react":"jMk1U","prop-types":"GNqOQ","fast-equals":"cTCvr","./AnimateManager":"fhz7F","./easing":"jFXyA","./configUpdate":"bn9ZU","./util":"fDSWv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"GNqOQ":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"dmkDW","cb216452e2171041":"32b0h"}],"dmkDW":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ad47820528c6facb");

},{"ad47820528c6facb":"8ZhZ7"}],"8ZhZ7":[function(require,module,exports,__globalThis) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"32b0h":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"dmkDW","c067a60101d8520c":"grVLZ","74a0f89a70b9f3c2":"ggXkd","18441b11647bc78":"cnEYJ","bec3f6ff89f0b072":"gaN1l"}],"grVLZ":[function(require,module,exports,__globalThis) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"ggXkd":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"cnEYJ":[function(require,module,exports,__globalThis) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"gaN1l":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"ggXkd","898bc82f39d83f7c":"cnEYJ"}],"cTCvr":[function(require,module,exports,__globalThis) {
(function(global, factory) {
    factory(exports);
})(this, function(exports1) {
    'use strict';
    var getOwnPropertyNames = Object.getOwnPropertyNames, getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /**
     * Combine two comparators into a single comparators.
     */ function combineComparators(comparatorA, comparatorB) {
        return function isEqual(a, b, state) {
            return comparatorA(a, b, state) && comparatorB(a, b, state);
        };
    }
    /**
     * Wrap the provided `areItemsEqual` method to manage the circular state, allowing
     * for circular references to be safely included in the comparison without creating
     * stack overflows.
     */ function createIsCircular(areItemsEqual) {
        return function isCircular(a, b, state) {
            if (!a || !b || typeof a !== 'object' || typeof b !== 'object') return areItemsEqual(a, b, state);
            var cache = state.cache;
            var cachedA = cache.get(a);
            var cachedB = cache.get(b);
            if (cachedA && cachedB) return cachedA === b && cachedB === a;
            cache.set(a, b);
            cache.set(b, a);
            var result = areItemsEqual(a, b, state);
            cache.delete(a);
            cache.delete(b);
            return result;
        };
    }
    /**
     * Get the properties to strictly examine, which include both own properties that are
     * not enumerable and symbol properties.
     */ function getStrictProperties(object) {
        return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));
    }
    /**
     * Whether the object contains the property passed as an own property.
     */ var hasOwn = Object.hasOwn || function(object, property) {
        return hasOwnProperty.call(object, property);
    };
    /**
     * Whether the values passed are strictly equal or both NaN.
     */ function sameValueZeroEqual(a, b) {
        return a === b || !a && !b && a !== a && b !== b;
    }
    var PREACT_VNODE = '__v';
    var PREACT_OWNER = '__o';
    var REACT_OWNER = '_owner';
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, keys = Object.keys;
    /**
     * Whether the arrays are equal in value.
     */ function areArraysEqual(a, b, state) {
        var index = a.length;
        if (b.length !== index) return false;
        while(index-- > 0){
            if (!state.equals(a[index], b[index], index, index, a, b, state)) return false;
        }
        return true;
    }
    /**
     * Whether the dates passed are equal in value.
     */ function areDatesEqual(a, b) {
        return sameValueZeroEqual(a.getTime(), b.getTime());
    }
    /**
     * Whether the errors passed are equal in value.
     */ function areErrorsEqual(a, b) {
        return a.name === b.name && a.message === b.message && a.cause === b.cause && a.stack === b.stack;
    }
    /**
     * Whether the functions passed are equal in value.
     */ function areFunctionsEqual(a, b) {
        return a === b;
    }
    /**
     * Whether the `Map`s are equal in value.
     */ function areMapsEqual(a, b, state) {
        var size = a.size;
        if (size !== b.size) return false;
        if (!size) return true;
        var matchedIndices = new Array(size);
        var aIterable = a.entries();
        var aResult;
        var bResult;
        var index = 0;
        while(aResult = aIterable.next()){
            if (aResult.done) break;
            var bIterable = b.entries();
            var hasMatch = false;
            var matchIndex = 0;
            while(bResult = bIterable.next()){
                if (bResult.done) break;
                if (matchedIndices[matchIndex]) {
                    matchIndex++;
                    continue;
                }
                var aEntry = aResult.value;
                var bEntry = bResult.value;
                if (state.equals(aEntry[0], bEntry[0], index, matchIndex, a, b, state) && state.equals(aEntry[1], bEntry[1], aEntry[0], bEntry[0], a, b, state)) {
                    hasMatch = matchedIndices[matchIndex] = true;
                    break;
                }
                matchIndex++;
            }
            if (!hasMatch) return false;
            index++;
        }
        return true;
    }
    /**
     * Whether the numbers are equal in value.
     */ var areNumbersEqual = sameValueZeroEqual;
    /**
     * Whether the objects are equal in value.
     */ function areObjectsEqual(a, b, state) {
        var properties = keys(a);
        var index = properties.length;
        if (keys(b).length !== index) return false;
        // Decrementing `while` showed faster results than either incrementing or
        // decrementing `for` loop and than an incrementing `while` loop. Declarative
        // methods like `some` / `every` were not used to avoid incurring the garbage
        // cost of anonymous callbacks.
        while(index-- > 0){
            if (!isPropertyEqual(a, b, state, properties[index])) return false;
        }
        return true;
    }
    /**
     * Whether the objects are equal in value with strict property checking.
     */ function areObjectsEqualStrict(a, b, state) {
        var properties = getStrictProperties(a);
        var index = properties.length;
        if (getStrictProperties(b).length !== index) return false;
        var property;
        var descriptorA;
        var descriptorB;
        // Decrementing `while` showed faster results than either incrementing or
        // decrementing `for` loop and than an incrementing `while` loop. Declarative
        // methods like `some` / `every` were not used to avoid incurring the garbage
        // cost of anonymous callbacks.
        while(index-- > 0){
            property = properties[index];
            if (!isPropertyEqual(a, b, state, property)) return false;
            descriptorA = getOwnPropertyDescriptor(a, property);
            descriptorB = getOwnPropertyDescriptor(b, property);
            if ((descriptorA || descriptorB) && (!descriptorA || !descriptorB || descriptorA.configurable !== descriptorB.configurable || descriptorA.enumerable !== descriptorB.enumerable || descriptorA.writable !== descriptorB.writable)) return false;
        }
        return true;
    }
    /**
     * Whether the primitive wrappers passed are equal in value.
     */ function arePrimitiveWrappersEqual(a, b) {
        return sameValueZeroEqual(a.valueOf(), b.valueOf());
    }
    /**
     * Whether the regexps passed are equal in value.
     */ function areRegExpsEqual(a, b) {
        return a.source === b.source && a.flags === b.flags;
    }
    /**
     * Whether the `Set`s are equal in value.
     */ function areSetsEqual(a, b, state) {
        var size = a.size;
        if (size !== b.size) return false;
        if (!size) return true;
        var matchedIndices = new Array(size);
        var aIterable = a.values();
        var aResult;
        var bResult;
        while(aResult = aIterable.next()){
            if (aResult.done) break;
            var bIterable = b.values();
            var hasMatch = false;
            var matchIndex = 0;
            while(bResult = bIterable.next()){
                if (bResult.done) break;
                if (!matchedIndices[matchIndex] && state.equals(aResult.value, bResult.value, aResult.value, bResult.value, a, b, state)) {
                    hasMatch = matchedIndices[matchIndex] = true;
                    break;
                }
                matchIndex++;
            }
            if (!hasMatch) return false;
        }
        return true;
    }
    /**
     * Whether the TypedArray instances are equal in value.
     */ function areTypedArraysEqual(a, b) {
        var index = a.length;
        if (b.length !== index) return false;
        while(index-- > 0){
            if (a[index] !== b[index]) return false;
        }
        return true;
    }
    /**
     * Whether the URL instances are equal in value.
     */ function areUrlsEqual(a, b) {
        return a.hostname === b.hostname && a.pathname === b.pathname && a.protocol === b.protocol && a.port === b.port && a.hash === b.hash && a.username === b.username && a.password === b.password;
    }
    function isPropertyEqual(a, b, state, property) {
        if ((property === REACT_OWNER || property === PREACT_OWNER || property === PREACT_VNODE) && (a.$$typeof || b.$$typeof)) return true;
        return hasOwn(b, property) && state.equals(a[property], b[property], property, property, a, b, state);
    }
    var ARGUMENTS_TAG = '[object Arguments]';
    var BOOLEAN_TAG = '[object Boolean]';
    var DATE_TAG = '[object Date]';
    var ERROR_TAG = '[object Error]';
    var MAP_TAG = '[object Map]';
    var NUMBER_TAG = '[object Number]';
    var OBJECT_TAG = '[object Object]';
    var REG_EXP_TAG = '[object RegExp]';
    var SET_TAG = '[object Set]';
    var STRING_TAG = '[object String]';
    var URL_TAG = '[object URL]';
    var isArray = Array.isArray;
    var isTypedArray = typeof ArrayBuffer === 'function' && ArrayBuffer.isView ? ArrayBuffer.isView : null;
    var assign = Object.assign;
    var getTag = Object.prototype.toString.call.bind(Object.prototype.toString);
    /**
     * Create a comparator method based on the type-specific equality comparators passed.
     */ function createEqualityComparator(_a) {
        var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areErrorsEqual = _a.areErrorsEqual, areFunctionsEqual = _a.areFunctionsEqual, areMapsEqual = _a.areMapsEqual, areNumbersEqual = _a.areNumbersEqual, areObjectsEqual = _a.areObjectsEqual, arePrimitiveWrappersEqual = _a.arePrimitiveWrappersEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, areTypedArraysEqual = _a.areTypedArraysEqual, areUrlsEqual = _a.areUrlsEqual;
        /**
         * compare the value of the two objects and return true if they are equivalent in values
         */ return function comparator(a, b, state) {
            // If the items are strictly equal, no need to do a value comparison.
            if (a === b) return true;
            // If either of the items are nullish and fail the strictly equal check
            // above, then they must be unequal.
            if (a == null || b == null) return false;
            var type = typeof a;
            if (type !== typeof b) return false;
            if (type !== 'object') {
                if (type === 'number') return areNumbersEqual(a, b, state);
                if (type === 'function') return areFunctionsEqual(a, b, state);
                // If a primitive value that is not strictly equal, it must be unequal.
                return false;
            }
            var constructor = a.constructor;
            // Checks are listed in order of commonality of use-case:
            //   1. Common complex object types (plain object, array)
            //   2. Common data values (date, regexp)
            //   3. Less-common complex object types (map, set)
            //   4. Less-common data values (promise, primitive wrappers)
            // Inherently this is both subjective and assumptive, however
            // when reviewing comparable libraries in the wild this order
            // appears to be generally consistent.
            // Constructors should match, otherwise there is potential for false positives
            // between class and subclass or custom object and POJO.
            if (constructor !== b.constructor) return false;
            // `isPlainObject` only checks against the object's own realm. Cross-realm
            // comparisons are rare, and will be handled in the ultimate fallback, so
            // we can avoid capturing the string tag.
            if (constructor === Object) return areObjectsEqual(a, b, state);
            // `isArray()` works on subclasses and is cross-realm, so we can avoid capturing
            // the string tag or doing an `instanceof` check.
            if (isArray(a)) return areArraysEqual(a, b, state);
            // `isTypedArray()` works on all possible TypedArray classes, so we can avoid
            // capturing the string tag or comparing against all possible constructors.
            if (isTypedArray != null && isTypedArray(a)) return areTypedArraysEqual(a, b, state);
            // Try to fast-path equality checks for other complex object types in the
            // same realm to avoid capturing the string tag. Strict equality is used
            // instead of `instanceof` because it is more performant for the common
            // use-case. If someone is subclassing a native class, it will be handled
            // with the string tag comparison.
            if (constructor === Date) return areDatesEqual(a, b, state);
            if (constructor === RegExp) return areRegExpsEqual(a, b, state);
            if (constructor === Map) return areMapsEqual(a, b, state);
            if (constructor === Set) return areSetsEqual(a, b, state);
            // Since this is a custom object, capture the string tag to determing its type.
            // This is reasonably performant in modern environments like v8 and SpiderMonkey.
            var tag = getTag(a);
            if (tag === DATE_TAG) return areDatesEqual(a, b, state);
            // For RegExp, the properties are not enumerable, and therefore will give false positives if
            // tested like a standard object.
            if (tag === REG_EXP_TAG) return areRegExpsEqual(a, b, state);
            if (tag === MAP_TAG) return areMapsEqual(a, b, state);
            if (tag === SET_TAG) return areSetsEqual(a, b, state);
            if (tag === OBJECT_TAG) // The exception for value comparison is custom `Promise`-like class instances. These should
            // be treated the same as standard `Promise` objects, which means strict equality, and if
            // it reaches this point then that strict equality comparison has already failed.
            return typeof a.then !== 'function' && typeof b.then !== 'function' && areObjectsEqual(a, b, state);
            // If a URL tag, it should be tested explicitly. Like RegExp, the properties are not
            // enumerable, and therefore will give false positives if tested like a standard object.
            if (tag === URL_TAG) return areUrlsEqual(a, b, state);
            // If an error tag, it should be tested explicitly. Like RegExp, the properties are not
            // enumerable, and therefore will give false positives if tested like a standard object.
            if (tag === ERROR_TAG) return areErrorsEqual(a, b, state);
            // If an arguments tag, it should be treated as a standard object.
            if (tag === ARGUMENTS_TAG) return areObjectsEqual(a, b, state);
            // As the penultimate fallback, check if the values passed are primitive wrappers. This
            // is very rare in modern JS, which is why it is deprioritized compared to all other object
            // types.
            if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) return arePrimitiveWrappersEqual(a, b, state);
            // If not matching any tags that require a specific type of comparison, then we hard-code false because
            // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:
            //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only
            //     comparison that can be made.
            //   - For types that can be introspected, but rarely have requirements to be compared
            //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common
            //     use-cases (may be included in a future release, if requested enough).
            //   - For types that can be introspected but do not have an objective definition of what
            //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.
            // In all cases, these decisions should be reevaluated based on changes to the language and
            // common development practices.
            return false;
        };
    }
    /**
     * Create the configuration object used for building comparators.
     */ function createEqualityComparatorConfig(_a) {
        var circular = _a.circular, createCustomConfig = _a.createCustomConfig, strict = _a.strict;
        var config = {
            areArraysEqual: strict ? areObjectsEqualStrict : areArraysEqual,
            areDatesEqual: areDatesEqual,
            areErrorsEqual: areErrorsEqual,
            areFunctionsEqual: areFunctionsEqual,
            areMapsEqual: strict ? combineComparators(areMapsEqual, areObjectsEqualStrict) : areMapsEqual,
            areNumbersEqual: areNumbersEqual,
            areObjectsEqual: strict ? areObjectsEqualStrict : areObjectsEqual,
            arePrimitiveWrappersEqual: arePrimitiveWrappersEqual,
            areRegExpsEqual: areRegExpsEqual,
            areSetsEqual: strict ? combineComparators(areSetsEqual, areObjectsEqualStrict) : areSetsEqual,
            areTypedArraysEqual: strict ? areObjectsEqualStrict : areTypedArraysEqual,
            areUrlsEqual: areUrlsEqual
        };
        if (createCustomConfig) config = assign({}, config, createCustomConfig(config));
        if (circular) {
            var areArraysEqual$1 = createIsCircular(config.areArraysEqual);
            var areMapsEqual$1 = createIsCircular(config.areMapsEqual);
            var areObjectsEqual$1 = createIsCircular(config.areObjectsEqual);
            var areSetsEqual$1 = createIsCircular(config.areSetsEqual);
            config = assign({}, config, {
                areArraysEqual: areArraysEqual$1,
                areMapsEqual: areMapsEqual$1,
                areObjectsEqual: areObjectsEqual$1,
                areSetsEqual: areSetsEqual$1
            });
        }
        return config;
    }
    /**
     * Default equality comparator pass-through, used as the standard `isEqual` creator for
     * use inside the built comparator.
     */ function createInternalEqualityComparator(compare) {
        return function(a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, state) {
            return compare(a, b, state);
        };
    }
    /**
     * Create the `isEqual` function used by the consuming application.
     */ function createIsEqual(_a) {
        var circular = _a.circular, comparator = _a.comparator, createState = _a.createState, equals = _a.equals, strict = _a.strict;
        if (createState) return function isEqual(a, b) {
            var _a = createState(), _b = _a.cache, cache = _b === void 0 ? circular ? new WeakMap() : undefined : _b, meta = _a.meta;
            return comparator(a, b, {
                cache: cache,
                equals: equals,
                meta: meta,
                strict: strict
            });
        };
        if (circular) return function isEqual(a, b) {
            return comparator(a, b, {
                cache: new WeakMap(),
                equals: equals,
                meta: undefined,
                strict: strict
            });
        };
        var state = {
            cache: undefined,
            equals: equals,
            meta: undefined,
            strict: strict
        };
        return function isEqual(a, b) {
            return comparator(a, b, state);
        };
    }
    /**
     * Whether the items passed are deeply-equal in value.
     */ var deepEqual = createCustomEqual();
    /**
     * Whether the items passed are deeply-equal in value based on strict comparison.
     */ var strictDeepEqual = createCustomEqual({
        strict: true
    });
    /**
     * Whether the items passed are deeply-equal in value, including circular references.
     */ var circularDeepEqual = createCustomEqual({
        circular: true
    });
    /**
     * Whether the items passed are deeply-equal in value, including circular references,
     * based on strict comparison.
     */ var strictCircularDeepEqual = createCustomEqual({
        circular: true,
        strict: true
    });
    /**
     * Whether the items passed are shallowly-equal in value.
     */ var shallowEqual = createCustomEqual({
        createInternalComparator: function() {
            return sameValueZeroEqual;
        }
    });
    /**
     * Whether the items passed are shallowly-equal in value based on strict comparison
     */ var strictShallowEqual = createCustomEqual({
        strict: true,
        createInternalComparator: function() {
            return sameValueZeroEqual;
        }
    });
    /**
     * Whether the items passed are shallowly-equal in value, including circular references.
     */ var circularShallowEqual = createCustomEqual({
        circular: true,
        createInternalComparator: function() {
            return sameValueZeroEqual;
        }
    });
    /**
     * Whether the items passed are shallowly-equal in value, including circular references,
     * based on strict comparison.
     */ var strictCircularShallowEqual = createCustomEqual({
        circular: true,
        createInternalComparator: function() {
            return sameValueZeroEqual;
        },
        strict: true
    });
    /**
     * Create a custom equality comparison method.
     *
     * This can be done to create very targeted comparisons in extreme hot-path scenarios
     * where the standard methods are not performant enough, but can also be used to provide
     * support for legacy environments that do not support expected features like
     * `RegExp.prototype.flags` out of the box.
     */ function createCustomEqual(options) {
        if (options === void 0) options = {};
        var _a = options.circular, circular = _a === void 0 ? false : _a, createCustomInternalComparator = options.createInternalComparator, createState = options.createState, _b = options.strict, strict = _b === void 0 ? false : _b;
        var config = createEqualityComparatorConfig(options);
        var comparator = createEqualityComparator(config);
        var equals = createCustomInternalComparator ? createCustomInternalComparator(comparator) : createInternalEqualityComparator(comparator);
        return createIsEqual({
            circular: circular,
            comparator: comparator,
            createState: createState,
            equals: equals,
            strict: strict
        });
    }
    exports1.circularDeepEqual = circularDeepEqual;
    exports1.circularShallowEqual = circularShallowEqual;
    exports1.createCustomEqual = createCustomEqual;
    exports1.deepEqual = deepEqual;
    exports1.sameValueZeroEqual = sameValueZeroEqual;
    exports1.shallowEqual = shallowEqual;
    exports1.strictCircularDeepEqual = strictCircularDeepEqual;
    exports1.strictCircularShallowEqual = strictCircularShallowEqual;
    exports1.strictDeepEqual = strictDeepEqual;
    exports1.strictShallowEqual = strictShallowEqual;
});

},{}],"fhz7F":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createAnimateManager);
var _setRafTimeout = require("./setRafTimeout");
var _setRafTimeoutDefault = parcelHelpers.interopDefault(_setRafTimeout);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _toArray(arr) {
    return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function createAnimateManager() {
    var currStyle = {};
    var handleChange = function handleChange() {
        return null;
    };
    var shouldStop = false;
    var setStyle = function setStyle(_style) {
        if (shouldStop) return;
        if (Array.isArray(_style)) {
            if (!_style.length) return;
            var styles = _style;
            var _styles = _toArray(styles), curr = _styles[0], restStyles = _styles.slice(1);
            if (typeof curr === 'number') {
                (0, _setRafTimeoutDefault.default)(setStyle.bind(null, restStyles), curr);
                return;
            }
            setStyle(curr);
            (0, _setRafTimeoutDefault.default)(setStyle.bind(null, restStyles));
            return;
        }
        if (_typeof(_style) === 'object') {
            currStyle = _style;
            handleChange(currStyle);
        }
        if (typeof _style === 'function') _style();
    };
    return {
        stop: function stop() {
            shouldStop = true;
        },
        start: function start(style) {
            shouldStop = false;
            setStyle(style);
        },
        subscribe: function subscribe(_handleChange) {
            handleChange = _handleChange;
            return function() {
                handleChange = function handleChange() {
                    return null;
                };
            };
        }
    };
}

},{"./setRafTimeout":"zIHv2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"zIHv2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>setRafTimeout);
function safeRequestAnimationFrame(callback) {
    if (typeof requestAnimationFrame !== 'undefined') requestAnimationFrame(callback);
}
function setRafTimeout(callback) {
    var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var currTime = -1;
    var shouldUpdate = function shouldUpdate(now) {
        if (currTime < 0) currTime = now;
        if (now - currTime > timeout) {
            callback(now);
            currTime = -1;
        } else safeRequestAnimationFrame(shouldUpdate);
    };
    requestAnimationFrame(shouldUpdate);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jFXyA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "configBezier", ()=>configBezier);
parcelHelpers.export(exports, "configSpring", ()=>configSpring);
parcelHelpers.export(exports, "configEasing", ()=>configEasing);
var _util = require("./util");
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
var ACCURACY = 1e-4;
var cubicBezierFactor = function cubicBezierFactor(c1, c2) {
    return [
        0,
        3 * c1,
        3 * c2 - 6 * c1,
        3 * c1 - 3 * c2 + 1
    ];
};
var multyTime = function multyTime(params, t) {
    return params.map(function(param, i) {
        return param * Math.pow(t, i);
    }).reduce(function(pre, curr) {
        return pre + curr;
    });
};
var cubicBezier = function cubicBezier(c1, c2) {
    return function(t) {
        var params = cubicBezierFactor(c1, c2);
        return multyTime(params, t);
    };
};
var derivativeCubicBezier = function derivativeCubicBezier(c1, c2) {
    return function(t) {
        var params = cubicBezierFactor(c1, c2);
        var newParams = [].concat(_toConsumableArray(params.map(function(param, i) {
            return param * i;
        }).slice(1)), [
            0
        ]);
        return multyTime(newParams, t);
    };
};
var configBezier = function configBezier() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
    var x1 = args[0], y1 = args[1], x2 = args[2], y2 = args[3];
    if (args.length === 1) switch(args[0]){
        case 'linear':
            x1 = 0.0;
            y1 = 0.0;
            x2 = 1.0;
            y2 = 1.0;
            break;
        case 'ease':
            x1 = 0.25;
            y1 = 0.1;
            x2 = 0.25;
            y2 = 1.0;
            break;
        case 'ease-in':
            x1 = 0.42;
            y1 = 0.0;
            x2 = 1.0;
            y2 = 1.0;
            break;
        case 'ease-out':
            x1 = 0.42;
            y1 = 0.0;
            x2 = 0.58;
            y2 = 1.0;
            break;
        case 'ease-in-out':
            x1 = 0.0;
            y1 = 0.0;
            x2 = 0.58;
            y2 = 1.0;
            break;
        default:
            var easing = args[0].split('(');
            if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {
                var _easing$1$split$0$spl = easing[1].split(')')[0].split(',').map(function(x) {
                    return parseFloat(x);
                });
                var _easing$1$split$0$spl2 = _slicedToArray(_easing$1$split$0$spl, 4);
                x1 = _easing$1$split$0$spl2[0];
                y1 = _easing$1$split$0$spl2[1];
                x2 = _easing$1$split$0$spl2[2];
                y2 = _easing$1$split$0$spl2[3];
            } else (0, _util.warn)(false, "[configBezier]: arguments should be one of oneOf 'linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', instead received %s", args);
    }
    (0, _util.warn)([
        x1,
        x2,
        y1,
        y2
    ].every(function(num) {
        return typeof num === 'number' && num >= 0 && num <= 1;
    }), '[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s', args);
    var curveX = cubicBezier(x1, x2);
    var curveY = cubicBezier(y1, y2);
    var derCurveX = derivativeCubicBezier(x1, x2);
    var rangeValue = function rangeValue(value) {
        if (value > 1) return 1;
        if (value < 0) return 0;
        return value;
    };
    var bezier = function bezier(_t) {
        var t = _t > 1 ? 1 : _t;
        var x = t;
        for(var i = 0; i < 8; ++i){
            var evalT = curveX(x) - t;
            var derVal = derCurveX(x);
            if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) return curveY(x);
            x = rangeValue(x - evalT / derVal);
        }
        return curveY(x);
    };
    bezier.isStepper = false;
    return bezier;
};
var configSpring = function configSpring() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _config$stiff = config.stiff, stiff = _config$stiff === void 0 ? 100 : _config$stiff, _config$damping = config.damping, damping = _config$damping === void 0 ? 8 : _config$damping, _config$dt = config.dt, dt = _config$dt === void 0 ? 17 : _config$dt;
    var stepper = function stepper(currX, destX, currV) {
        var FSpring = -(currX - destX) * stiff;
        var FDamping = currV * damping;
        var newV = currV + (FSpring - FDamping) * dt / 1000;
        var newX = currV * dt / 1000 + currX;
        if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) return [
            destX,
            0
        ];
        return [
            newX,
            newV
        ];
    };
    stepper.isStepper = true;
    stepper.dt = dt;
    return stepper;
};
var configEasing = function configEasing() {
    for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
    var easing = args[0];
    if (typeof easing === 'string') switch(easing){
        case 'ease':
        case 'ease-in-out':
        case 'ease-out':
        case 'ease-in':
        case 'linear':
            return configBezier(easing);
        case 'spring':
            return configSpring();
        default:
            if (easing.split('(')[0] === 'cubic-bezier') return configBezier(easing);
            (0, _util.warn)(false, "[configEasing]: first argument should be one of 'ease', 'ease-in', 'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', 'linear' and 'spring', instead  received %s", args);
    }
    if (typeof easing === 'function') return easing;
    (0, _util.warn)(false, '[configEasing]: first argument type should be function or string, instead received %s', args);
    return null;
};

},{"./util":"fDSWv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fDSWv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getIntersectionKeys", ()=>getIntersectionKeys);
parcelHelpers.export(exports, "identity", ()=>identity);
parcelHelpers.export(exports, "getDashCase", ()=>getDashCase);
parcelHelpers.export(exports, "log", ()=>log);
parcelHelpers.export(exports, "debug", ()=>debug);
parcelHelpers.export(exports, "debugf", ()=>debugf);
parcelHelpers.export(exports, "mapObject", ()=>mapObject);
parcelHelpers.export(exports, "getTransitionVal", ()=>getTransitionVal);
parcelHelpers.export(exports, "warn", ()=>warn);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
var getIntersectionKeys = function getIntersectionKeys(preObj, nextObj) {
    return [
        Object.keys(preObj),
        Object.keys(nextObj)
    ].reduce(function(a, b) {
        return a.filter(function(c) {
            return b.includes(c);
        });
    });
};
var identity = function identity(param) {
    return param;
};
var getDashCase = function getDashCase(name) {
    return name.replace(/([A-Z])/g, function(v) {
        return "-".concat(v.toLowerCase());
    });
};
var log = function log() {
    var _console;
    (_console = console).log.apply(_console, arguments);
};
var debug = function debug(name) {
    return function(item) {
        log(name, item);
        return item;
    };
};
var debugf = function debugf(tag, f) {
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        var res = f.apply(void 0, args);
        var name = tag || f.name || 'anonymous function';
        var argNames = "(".concat(args.map(JSON.stringify).join(', '), ")");
        log("".concat(name, ": ").concat(argNames, " => ").concat(JSON.stringify(res)));
        return res;
    };
};
var mapObject = function mapObject(fn, obj) {
    return Object.keys(obj).reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, fn(key, obj[key])));
    }, {});
};
var getTransitionVal = function getTransitionVal(props, duration, easing) {
    return props.map(function(prop) {
        return "".concat(getDashCase(prop), " ").concat(duration, "ms ").concat(easing);
    }).join(',');
};
var isDev = true;
var warn = function warn(condition, format, a, b, c, d, e, f) {
    if (isDev && typeof console !== 'undefined' && console.warn) {
        if (format === undefined) console.warn('LogUtils requires an error message argument');
        if (!condition) {
            if (format === undefined) console.warn("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
                var args = [
                    a,
                    b,
                    c,
                    d,
                    e,
                    f
                ];
                var argIndex = 0;
                console.warn(format.replace(/%s/g, function() {
                    return args[argIndex++];
                }));
            }
        }
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bn9ZU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _util = require("./util");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
var alpha = function alpha(begin, end, k) {
    return begin + (end - begin) * k;
};
var needContinue = function needContinue(_ref) {
    var from = _ref.from, to = _ref.to;
    return from !== to;
};
/*
 * @description: cal new from value and velocity in each stepper
 * @return: { [styleProperty]: { from, to, velocity } }
 */ var calStepperVals = function calStepperVals(easing, preVals, steps) {
    var nextStepVals = (0, _util.mapObject)(function(key, val) {
        if (needContinue(val)) {
            var _easing = easing(val.from, val.to, val.velocity), _easing2 = _slicedToArray(_easing, 2), newX = _easing2[0], newV = _easing2[1];
            return _objectSpread(_objectSpread({}, val), {}, {
                from: newX,
                velocity: newV
            });
        }
        return val;
    }, preVals);
    if (steps < 1) return (0, _util.mapObject)(function(key, val) {
        if (needContinue(val)) return _objectSpread(_objectSpread({}, val), {}, {
            velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),
            from: alpha(val.from, nextStepVals[key].from, steps)
        });
        return val;
    }, preVals);
    return calStepperVals(easing, nextStepVals, steps - 1);
};
// configure update function
exports.default = function(from, to, easing, duration, render) {
    var interKeys = (0, _util.getIntersectionKeys)(from, to);
    var timingStyle = interKeys.reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, [
            from[key],
            to[key]
        ]));
    }, {});
    var stepperStyle = interKeys.reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, {
            from: from[key],
            velocity: 0,
            to: to[key]
        }));
    }, {});
    var cafId = -1;
    var preTime;
    var beginTime;
    var update = function update() {
        return null;
    };
    var getCurrStyle = function getCurrStyle() {
        return (0, _util.mapObject)(function(key, val) {
            return val.from;
        }, stepperStyle);
    };
    var shouldStopAnimation = function shouldStopAnimation() {
        return !Object.values(stepperStyle).filter(needContinue).length;
    };
    // stepper timing function like spring
    var stepperUpdate = function stepperUpdate(now) {
        if (!preTime) preTime = now;
        var deltaTime = now - preTime;
        var steps = deltaTime / easing.dt;
        stepperStyle = calStepperVals(easing, stepperStyle, steps);
        // get union set and add compatible prefix
        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), getCurrStyle(stepperStyle)));
        preTime = now;
        if (!shouldStopAnimation()) cafId = requestAnimationFrame(update);
    };
    // t => val timing function like cubic-bezier
    var timingUpdate = function timingUpdate(now) {
        if (!beginTime) beginTime = now;
        var t = (now - beginTime) / duration;
        var currStyle = (0, _util.mapObject)(function(key, val) {
            return alpha.apply(void 0, _toConsumableArray(val).concat([
                easing(t)
            ]));
        }, timingStyle);
        // get union set and add compatible prefix
        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), currStyle));
        if (t < 1) cafId = requestAnimationFrame(update);
        else {
            var finalStyle = (0, _util.mapObject)(function(key, val) {
                return alpha.apply(void 0, _toConsumableArray(val).concat([
                    easing(1)
                ]));
            }, timingStyle);
            render(_objectSpread(_objectSpread(_objectSpread({}, from), to), finalStyle));
        }
    };
    update = easing.isStepper ? stepperUpdate : timingUpdate;
    // return start animation method
    return function() {
        requestAnimationFrame(update);
        // return stop animation method
        return function() {
            cancelAnimationFrame(cafId);
        };
    };
};

},{"./util":"fDSWv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jiymF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Polygon", ()=>Polygon);
/**
 * @fileOverview Polygon
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactUtils = require("../util/ReactUtils");
var _excluded = [
    "points",
    "className",
    "baseLinePoints",
    "connectNulls"
];
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
var isValidatePoint = function isValidatePoint(point) {
    return point && point.x === +point.x && point.y === +point.y;
};
var getParsedPoints = function getParsedPoints() {
    var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var segmentPoints = [
        []
    ];
    points.forEach(function(entry) {
        if (isValidatePoint(entry)) segmentPoints[segmentPoints.length - 1].push(entry);
        else if (segmentPoints[segmentPoints.length - 1].length > 0) // add another path
        segmentPoints.push([]);
    });
    if (isValidatePoint(points[0])) segmentPoints[segmentPoints.length - 1].push(points[0]);
    if (segmentPoints[segmentPoints.length - 1].length <= 0) segmentPoints = segmentPoints.slice(0, -1);
    return segmentPoints;
};
var getSinglePolygonPath = function getSinglePolygonPath(points, connectNulls) {
    var segmentPoints = getParsedPoints(points);
    if (connectNulls) segmentPoints = [
        segmentPoints.reduce(function(res, segPoints) {
            return [].concat(_toConsumableArray(res), _toConsumableArray(segPoints));
        }, [])
    ];
    var polygonPath = segmentPoints.map(function(segPoints) {
        return segPoints.reduce(function(path, point, index) {
            return "".concat(path).concat(index === 0 ? 'M' : 'L').concat(point.x, ",").concat(point.y);
        }, '');
    }).join('');
    return segmentPoints.length === 1 ? "".concat(polygonPath, "Z") : polygonPath;
};
var getRanglePath = function getRanglePath(points, baseLinePoints, connectNulls) {
    var outerPath = getSinglePolygonPath(points, connectNulls);
    return "".concat(outerPath.slice(-1) === 'Z' ? outerPath.slice(0, -1) : outerPath, "L").concat(getSinglePolygonPath(baseLinePoints.reverse(), connectNulls).slice(1));
};
var Polygon = function Polygon(props) {
    var points = props.points, className = props.className, baseLinePoints = props.baseLinePoints, connectNulls = props.connectNulls, others = _objectWithoutProperties(props, _excluded);
    if (!points || !points.length) return null;
    var layerClass = (0, _clsxDefault.default)('recharts-polygon', className);
    if (baseLinePoints && baseLinePoints.length) {
        var hasStroke = others.stroke && others.stroke !== 'none';
        var rangePath = getRanglePath(points, baseLinePoints, connectNulls);
        return /*#__PURE__*/ (0, _reactDefault.default).createElement("g", {
            className: layerClass
        }, /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(others, true), {
            fill: rangePath.slice(-1) === 'Z' ? others.fill : 'none',
            stroke: "none",
            d: rangePath
        })), hasStroke ? /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(others, true), {
            fill: "none",
            d: getSinglePolygonPath(points, connectNulls)
        })) : null, hasStroke ? /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(others, true), {
            fill: "none",
            d: getSinglePolygonPath(baseLinePoints, connectNulls)
        })) : null);
    }
    var singlePath = getSinglePolygonPath(points, connectNulls);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(others, true), {
        fill: singlePath.slice(-1) === 'Z' ? others.fill : 'none',
        className: layerClass,
        d: singlePath
    }));
};

},{"react":"jMk1U","clsx":"dOSJC","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hmhgx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dot", ()=>Dot);
/**
 * @fileOverview Dot
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _types = require("../util/types");
var _reactUtils = require("../util/ReactUtils");
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
var Dot = function Dot(props) {
    var cx = props.cx, cy = props.cy, r = props.r, className = props.className;
    var layerClass = (0, _clsxDefault.default)('recharts-dot', className);
    if (cx === +cx && cy === +cy && r === +r) return /*#__PURE__*/ (0, _reactDefault.default).createElement("circle", _extends({}, (0, _reactUtils.filterProps)(props, false), (0, _types.adaptEventHandlers)(props), {
        className: layerClass,
        cx: cx,
        cy: cy,
        r: r
    }));
    return null;
};

},{"react":"jMk1U","clsx":"dOSJC","../util/types":"j2YO8","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cWSR8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Cross", ()=>Cross);
/**
 * @fileOverview Cross
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _dataUtils = require("../util/DataUtils");
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var _excluded = [
    "x",
    "y",
    "top",
    "left",
    "width",
    "height",
    "className"
];
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
var getPath = function getPath(x, y, width, height, top, left) {
    return "M".concat(x, ",").concat(top, "v").concat(height, "M").concat(left, ",").concat(y, "h").concat(width);
};
var Cross = function Cross(_ref) {
    var _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, _ref$top = _ref.top, top = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left = _ref$left === void 0 ? 0 : _ref$left, _ref$width = _ref.width, width = _ref$width === void 0 ? 0 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 0 : _ref$height, className = _ref.className, rest = _objectWithoutProperties(_ref, _excluded);
    var props = _objectSpread({
        x: x,
        y: y,
        top: top,
        left: left,
        width: width,
        height: height
    }, rest);
    if (!(0, _dataUtils.isNumber)(x) || !(0, _dataUtils.isNumber)(y) || !(0, _dataUtils.isNumber)(width) || !(0, _dataUtils.isNumber)(height) || !(0, _dataUtils.isNumber)(top) || !(0, _dataUtils.isNumber)(left)) return null;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(props, true), {
        className: (0, _clsxDefault.default)('recharts-cross', className),
        d: getPath(x, y, width, height, top, left)
    }));
};

},{"react":"jMk1U","clsx":"dOSJC","../util/DataUtils":"sgnJK","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8ZrfF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PolarRadiusAxis", ()=>PolarRadiusAxis);
/**
 * @fileOverview The axis of polar coordinate system
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _maxBy = require("lodash/maxBy");
var _maxByDefault = parcelHelpers.interopDefault(_maxBy);
var _minBy = require("lodash/minBy");
var _minByDefault = parcelHelpers.interopDefault(_minBy);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _text = require("../component/Text");
var _label = require("../component/Label");
var _layer = require("../container/Layer");
var _polarUtils = require("../util/PolarUtils");
var _types = require("../util/types");
var _reactUtils = require("../util/ReactUtils");
var _excluded = [
    "cx",
    "cy",
    "angle",
    "ticks",
    "axisLine"
], _excluded2 = [
    "ticks",
    "tick",
    "angle",
    "tickFormatter",
    "stroke"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var PolarRadiusAxis = /*#__PURE__*/ function(_PureComponent) {
    function PolarRadiusAxis() {
        _classCallCheck(this, PolarRadiusAxis);
        return _callSuper(this, PolarRadiusAxis, arguments);
    }
    _inherits(PolarRadiusAxis, _PureComponent);
    return _createClass(PolarRadiusAxis, [
        {
            key: "getTickValueCoord",
            value: /**
     * Calculate the coordinate of tick
     * @param  {Number} coordinate The radius of tick
     * @return {Object} (x, y)
     */ function getTickValueCoord(_ref) {
                var coordinate = _ref.coordinate;
                var _this$props = this.props, angle = _this$props.angle, cx = _this$props.cx, cy = _this$props.cy;
                return (0, _polarUtils.polarToCartesian)(cx, cy, coordinate, angle);
            }
        },
        {
            key: "getTickTextAnchor",
            value: function getTickTextAnchor() {
                var orientation = this.props.orientation;
                var textAnchor;
                switch(orientation){
                    case 'left':
                        textAnchor = 'end';
                        break;
                    case 'right':
                        textAnchor = 'start';
                        break;
                    default:
                        textAnchor = 'middle';
                        break;
                }
                return textAnchor;
            }
        },
        {
            key: "getViewBox",
            value: function getViewBox() {
                var _this$props2 = this.props, cx = _this$props2.cx, cy = _this$props2.cy, angle = _this$props2.angle, ticks = _this$props2.ticks;
                var maxRadiusTick = (0, _maxByDefault.default)(ticks, function(entry) {
                    return entry.coordinate || 0;
                });
                var minRadiusTick = (0, _minByDefault.default)(ticks, function(entry) {
                    return entry.coordinate || 0;
                });
                return {
                    cx: cx,
                    cy: cy,
                    startAngle: angle,
                    endAngle: angle,
                    innerRadius: minRadiusTick.coordinate || 0,
                    outerRadius: maxRadiusTick.coordinate || 0
                };
            }
        },
        {
            key: "renderAxisLine",
            value: function renderAxisLine() {
                var _this$props3 = this.props, cx = _this$props3.cx, cy = _this$props3.cy, angle = _this$props3.angle, ticks = _this$props3.ticks, axisLine = _this$props3.axisLine, others = _objectWithoutProperties(_this$props3, _excluded);
                var extent = ticks.reduce(function(result, entry) {
                    return [
                        Math.min(result[0], entry.coordinate),
                        Math.max(result[1], entry.coordinate)
                    ];
                }, [
                    Infinity,
                    -Infinity
                ]);
                var point0 = (0, _polarUtils.polarToCartesian)(cx, cy, extent[0], angle);
                var point1 = (0, _polarUtils.polarToCartesian)(cx, cy, extent[1], angle);
                var props = _objectSpread(_objectSpread(_objectSpread({}, (0, _reactUtils.filterProps)(others, false)), {}, {
                    fill: 'none'
                }, (0, _reactUtils.filterProps)(axisLine, false)), {}, {
                    x1: point0.x,
                    y1: point0.y,
                    x2: point1.x,
                    y2: point1.y
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("line", _extends({
                    className: "recharts-polar-radius-axis-line"
                }, props));
            }
        },
        {
            key: "renderTicks",
            value: function renderTicks() {
                var _this = this;
                var _this$props4 = this.props, ticks = _this$props4.ticks, tick = _this$props4.tick, angle = _this$props4.angle, tickFormatter = _this$props4.tickFormatter, stroke = _this$props4.stroke, others = _objectWithoutProperties(_this$props4, _excluded2);
                var textAnchor = this.getTickTextAnchor();
                var axisProps = (0, _reactUtils.filterProps)(others, false);
                var customTickProps = (0, _reactUtils.filterProps)(tick, false);
                var items = ticks.map(function(entry, i) {
                    var coord = _this.getTickValueCoord(entry);
                    var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
                        textAnchor: textAnchor,
                        transform: "rotate(".concat(90 - angle, ", ").concat(coord.x, ", ").concat(coord.y, ")")
                    }, axisProps), {}, {
                        stroke: 'none',
                        fill: stroke
                    }, customTickProps), {}, {
                        index: i
                    }, coord), {}, {
                        payload: entry
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                        className: (0, _clsxDefault.default)('recharts-polar-radius-axis-tick', (0, _polarUtils.getTickClassName)(tick)),
                        key: "tick-".concat(entry.coordinate)
                    }, (0, _types.adaptEventsOfChild)(_this.props, entry, i)), PolarRadiusAxis.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: "recharts-polar-radius-axis-ticks"
                }, items);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props5 = this.props, ticks = _this$props5.ticks, axisLine = _this$props5.axisLine, tick = _this$props5.tick;
                if (!ticks || !ticks.length) return null;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: (0, _clsxDefault.default)('recharts-polar-radius-axis', this.props.className)
                }, axisLine && this.renderAxisLine(), tick && this.renderTicks(), (0, _label.Label).renderCallByParent(this.props, this.getViewBox()));
            }
        }
    ], [
        {
            key: "renderTickItem",
            value: function renderTickItem(option, props, value) {
                var tickItem;
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) tickItem = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                else if ((0, _isFunctionDefault.default)(option)) tickItem = option(props);
                else tickItem = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({}, props, {
                    className: "recharts-polar-radius-axis-tick-value"
                }), value);
                return tickItem;
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(PolarRadiusAxis, "displayName", 'PolarRadiusAxis');
_defineProperty(PolarRadiusAxis, "axisType", 'radiusAxis');
_defineProperty(PolarRadiusAxis, "defaultProps", {
    type: 'number',
    radiusAxisId: 0,
    cx: 0,
    cy: 0,
    angle: 0,
    orientation: 'right',
    stroke: '#ccc',
    axisLine: true,
    tick: true,
    tickCount: 5,
    allowDataOverflow: false,
    scale: 'auto',
    allowDuplicatedCategory: true
});

},{"react":"jMk1U","lodash/maxBy":"1aqH0","lodash/minBy":"9Aene","lodash/isFunction":"6aeG3","clsx":"dOSJC","../component/Text":"9kjUm","../component/Label":"b8wtn","../container/Layer":"dLJ3P","../util/PolarUtils":"4krqZ","../util/types":"j2YO8","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1aqH0":[function(require,module,exports,__globalThis) {
var baseExtremum = require("dba025d59f90321a"), baseGt = require("d445a3f41a3424f9"), baseIteratee = require("3271a4dbe265890");
/**
 * This method is like `_.max` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.maxBy(objects, function(o) { return o.n; });
 * // => { 'n': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.maxBy(objects, 'n');
 * // => { 'n': 2 }
 */ function maxBy(array, iteratee) {
    return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt) : undefined;
}
module.exports = maxBy;

},{"dba025d59f90321a":"6Wz5x","d445a3f41a3424f9":"jjBti","3271a4dbe265890":"e6QHA"}],"9Aene":[function(require,module,exports,__globalThis) {
var baseExtremum = require("515d8abb123de545"), baseIteratee = require("e7a24e488e92031a"), baseLt = require("cba661d625852896");
/**
 * This method is like `_.min` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.minBy(objects, function(o) { return o.n; });
 * // => { 'n': 1 }
 *
 * // The `_.property` iteratee shorthand.
 * _.minBy(objects, 'n');
 * // => { 'n': 1 }
 */ function minBy(array, iteratee) {
    return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt) : undefined;
}
module.exports = minBy;

},{"515d8abb123de545":"6Wz5x","e7a24e488e92031a":"e6QHA","cba661d625852896":"94huM"}],"8sygH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PolarAngleAxis", ()=>PolarAngleAxis);
/**
 * @fileOverview Axis of radial direction
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _layer = require("../container/Layer");
var _dot = require("../shape/Dot");
var _polygon = require("../shape/Polygon");
var _text = require("../component/Text");
var _types = require("../util/types");
var _reactUtils = require("../util/ReactUtils");
var _polarUtils = require("../util/PolarUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var RADIAN = Math.PI / 180;
var eps = 1e-5;
var PolarAngleAxis = /*#__PURE__*/ function(_PureComponent) {
    function PolarAngleAxis() {
        _classCallCheck(this, PolarAngleAxis);
        return _callSuper(this, PolarAngleAxis, arguments);
    }
    _inherits(PolarAngleAxis, _PureComponent);
    return _createClass(PolarAngleAxis, [
        {
            key: "getTickLineCoord",
            value: /**
     * Calculate the coordinate of line endpoint
     * @param  {Object} data The Data if ticks
     * @return {Object} (x0, y0): The start point of text,
     *                  (x1, y1): The end point close to text,
     *                  (x2, y2): The end point close to axis
     */ function getTickLineCoord(data) {
                var _this$props = this.props, cx = _this$props.cx, cy = _this$props.cy, radius = _this$props.radius, orientation = _this$props.orientation, tickSize = _this$props.tickSize;
                var tickLineSize = tickSize || 8;
                var p1 = (0, _polarUtils.polarToCartesian)(cx, cy, radius, data.coordinate);
                var p2 = (0, _polarUtils.polarToCartesian)(cx, cy, radius + (orientation === 'inner' ? -1 : 1) * tickLineSize, data.coordinate);
                return {
                    x1: p1.x,
                    y1: p1.y,
                    x2: p2.x,
                    y2: p2.y
                };
            }
        },
        {
            key: "getTickTextAnchor",
            value: function getTickTextAnchor(data) {
                var orientation = this.props.orientation;
                var cos = Math.cos(-data.coordinate * RADIAN);
                var textAnchor;
                if (cos > eps) textAnchor = orientation === 'outer' ? 'start' : 'end';
                else if (cos < -eps) textAnchor = orientation === 'outer' ? 'end' : 'start';
                else textAnchor = 'middle';
                return textAnchor;
            }
        },
        {
            key: "renderAxisLine",
            value: function renderAxisLine() {
                var _this$props2 = this.props, cx = _this$props2.cx, cy = _this$props2.cy, radius = _this$props2.radius, axisLine = _this$props2.axisLine, axisLineType = _this$props2.axisLineType;
                var props = _objectSpread(_objectSpread({}, (0, _reactUtils.filterProps)(this.props, false)), {}, {
                    fill: 'none'
                }, (0, _reactUtils.filterProps)(axisLine, false));
                if (axisLineType === 'circle') return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _dot.Dot), _extends({
                    className: "recharts-polar-angle-axis-line"
                }, props, {
                    cx: cx,
                    cy: cy,
                    r: radius
                }));
                var ticks = this.props.ticks;
                var points = ticks.map(function(entry) {
                    return (0, _polarUtils.polarToCartesian)(cx, cy, radius, entry.coordinate);
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _polygon.Polygon), _extends({
                    className: "recharts-polar-angle-axis-line"
                }, props, {
                    points: points
                }));
            }
        },
        {
            key: "renderTicks",
            value: function renderTicks() {
                var _this = this;
                var _this$props3 = this.props, ticks = _this$props3.ticks, tick = _this$props3.tick, tickLine = _this$props3.tickLine, tickFormatter = _this$props3.tickFormatter, stroke = _this$props3.stroke;
                var axisProps = (0, _reactUtils.filterProps)(this.props, false);
                var customTickProps = (0, _reactUtils.filterProps)(tick, false);
                var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {
                    fill: 'none'
                }, (0, _reactUtils.filterProps)(tickLine, false));
                var items = ticks.map(function(entry, i) {
                    var lineCoord = _this.getTickLineCoord(entry);
                    var textAnchor = _this.getTickTextAnchor(entry);
                    var tickProps = _objectSpread(_objectSpread(_objectSpread({
                        textAnchor: textAnchor
                    }, axisProps), {}, {
                        stroke: 'none',
                        fill: stroke
                    }, customTickProps), {}, {
                        index: i,
                        payload: entry,
                        x: lineCoord.x2,
                        y: lineCoord.y2
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                        className: (0, _clsxDefault.default)('recharts-polar-angle-axis-tick', (0, _polarUtils.getTickClassName)(tick)),
                        key: "tick-".concat(entry.coordinate)
                    }, (0, _types.adaptEventsOfChild)(_this.props, entry, i)), tickLine && /*#__PURE__*/ (0, _reactDefault.default).createElement("line", _extends({
                        className: "recharts-polar-angle-axis-tick-line"
                    }, tickLineProps, lineCoord)), tick && PolarAngleAxis.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: "recharts-polar-angle-axis-ticks"
                }, items);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props4 = this.props, ticks = _this$props4.ticks, radius = _this$props4.radius, axisLine = _this$props4.axisLine;
                if (radius <= 0 || !ticks || !ticks.length) return null;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: (0, _clsxDefault.default)('recharts-polar-angle-axis', this.props.className)
                }, axisLine && this.renderAxisLine(), this.renderTicks());
            }
        }
    ], [
        {
            key: "renderTickItem",
            value: function renderTickItem(option, props, value) {
                var tickItem;
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) tickItem = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                else if ((0, _isFunctionDefault.default)(option)) tickItem = option(props);
                else tickItem = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({}, props, {
                    className: "recharts-polar-angle-axis-tick-value"
                }), value);
                return tickItem;
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(PolarAngleAxis, "displayName", 'PolarAngleAxis');
_defineProperty(PolarAngleAxis, "axisType", 'angleAxis');
_defineProperty(PolarAngleAxis, "defaultProps", {
    type: 'category',
    angleAxisId: 0,
    scale: 'auto',
    cx: 0,
    cy: 0,
    orientation: 'outer',
    axisLine: true,
    tickLine: true,
    tickSize: 8,
    tick: true,
    hide: false,
    allowDuplicatedCategory: true
});

},{"react":"jMk1U","lodash/isFunction":"6aeG3","clsx":"dOSJC","../container/Layer":"dLJ3P","../shape/Dot":"hmhgx","../shape/Polygon":"jiymF","../component/Text":"9kjUm","../util/types":"j2YO8","../util/ReactUtils":"dvc7w","../util/PolarUtils":"4krqZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"23lCG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Pie", ()=>Pie);
/**
 * @fileOverview Render sectors of a pie
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactSmooth = require("react-smooth");
var _reactSmoothDefault = parcelHelpers.interopDefault(_reactSmooth);
var _get = require("lodash/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _layer = require("../container/Layer");
var _curve = require("../shape/Curve");
var _text = require("../component/Text");
var _label = require("../component/Label");
var _labelList = require("../component/LabelList");
var _cell = require("../component/Cell");
var _reactUtils = require("../util/ReactUtils");
var _global = require("../util/Global");
var _polarUtils = require("../util/PolarUtils");
var _dataUtils = require("../util/DataUtils");
var _chartUtils = require("../util/ChartUtils");
var _logUtils = require("../util/LogUtils");
var _types = require("../util/types");
var _activeShapeUtils = require("../util/ActiveShapeUtils");
var _Pie;
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var Pie = /*#__PURE__*/ function(_PureComponent) {
    function Pie(props) {
        var _this;
        _classCallCheck(this, Pie);
        _this = _callSuper(this, Pie, [
            props
        ]);
        _defineProperty(_this, "pieRef", null);
        _defineProperty(_this, "sectorRefs", []);
        _defineProperty(_this, "id", (0, _dataUtils.uniqueId)('recharts-pie-'));
        _defineProperty(_this, "handleAnimationEnd", function() {
            var onAnimationEnd = _this.props.onAnimationEnd;
            _this.setState({
                isAnimationFinished: true
            });
            if ((0, _isFunctionDefault.default)(onAnimationEnd)) onAnimationEnd();
        });
        _defineProperty(_this, "handleAnimationStart", function() {
            var onAnimationStart = _this.props.onAnimationStart;
            _this.setState({
                isAnimationFinished: false
            });
            if ((0, _isFunctionDefault.default)(onAnimationStart)) onAnimationStart();
        });
        _this.state = {
            isAnimationFinished: !props.isAnimationActive,
            prevIsAnimationActive: props.isAnimationActive,
            prevAnimationId: props.animationId,
            sectorToFocus: 0
        };
        return _this;
    }
    _inherits(Pie, _PureComponent);
    return _createClass(Pie, [
        {
            key: "isActiveIndex",
            value: function isActiveIndex(i) {
                var activeIndex = this.props.activeIndex;
                if (Array.isArray(activeIndex)) return activeIndex.indexOf(i) !== -1;
                return i === activeIndex;
            }
        },
        {
            key: "hasActiveIndex",
            value: function hasActiveIndex() {
                var activeIndex = this.props.activeIndex;
                return Array.isArray(activeIndex) ? activeIndex.length !== 0 : activeIndex || activeIndex === 0;
            }
        },
        {
            key: "renderLabels",
            value: function renderLabels(sectors) {
                var isAnimationActive = this.props.isAnimationActive;
                if (isAnimationActive && !this.state.isAnimationFinished) return null;
                var _this$props = this.props, label = _this$props.label, labelLine = _this$props.labelLine, dataKey = _this$props.dataKey, valueKey = _this$props.valueKey;
                var pieProps = (0, _reactUtils.filterProps)(this.props, false);
                var customLabelProps = (0, _reactUtils.filterProps)(label, false);
                var customLabelLineProps = (0, _reactUtils.filterProps)(labelLine, false);
                var offsetRadius = label && label.offsetRadius || 20;
                var labels = sectors.map(function(entry, i) {
                    var midAngle = (entry.startAngle + entry.endAngle) / 2;
                    var endPoint = (0, _polarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius + offsetRadius, midAngle);
                    var labelProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, pieProps), entry), {}, {
                        stroke: 'none'
                    }, customLabelProps), {}, {
                        index: i,
                        textAnchor: Pie.getTextAnchor(endPoint.x, entry.cx)
                    }, endPoint);
                    var lineProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, pieProps), entry), {}, {
                        fill: 'none',
                        stroke: entry.fill
                    }, customLabelLineProps), {}, {
                        index: i,
                        points: [
                            (0, _polarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius, midAngle),
                            endPoint
                        ]
                    });
                    var realDataKey = dataKey;
                    // TODO: compatible to lower versions
                    if ((0, _isNilDefault.default)(dataKey) && (0, _isNilDefault.default)(valueKey)) realDataKey = 'value';
                    else if ((0, _isNilDefault.default)(dataKey)) realDataKey = valueKey;
                    return(/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key
                    (0, _reactDefault.default).createElement((0, _layer.Layer), {
                        key: "label-".concat(entry.startAngle, "-").concat(entry.endAngle, "-").concat(entry.midAngle, "-").concat(i)
                    }, labelLine && Pie.renderLabelLineItem(labelLine, lineProps, 'line'), Pie.renderLabelItem(label, labelProps, (0, _chartUtils.getValueByDataKey)(entry, realDataKey))));
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: "recharts-pie-labels"
                }, labels);
            }
        },
        {
            key: "renderSectorsStatically",
            value: function renderSectorsStatically(sectors) {
                var _this2 = this;
                var _this$props2 = this.props, activeShape = _this$props2.activeShape, blendStroke = _this$props2.blendStroke, inactiveShapeProp = _this$props2.inactiveShape;
                return sectors.map(function(entry, i) {
                    if ((entry === null || entry === void 0 ? void 0 : entry.startAngle) === 0 && (entry === null || entry === void 0 ? void 0 : entry.endAngle) === 0 && sectors.length !== 1) return null;
                    var isActive = _this2.isActiveIndex(i);
                    var inactiveShape = inactiveShapeProp && _this2.hasActiveIndex() ? inactiveShapeProp : null;
                    var sectorOptions = isActive ? activeShape : inactiveShape;
                    var sectorProps = _objectSpread(_objectSpread({}, entry), {}, {
                        stroke: blendStroke ? entry.fill : entry.stroke,
                        tabIndex: -1
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                        ref: function ref(_ref) {
                            if (_ref && !_this2.sectorRefs.includes(_ref)) _this2.sectorRefs.push(_ref);
                        },
                        tabIndex: -1,
                        className: "recharts-pie-sector"
                    }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i), {
                        // eslint-disable-next-line react/no-array-index-key
                        key: "sector-".concat(entry === null || entry === void 0 ? void 0 : entry.startAngle, "-").concat(entry === null || entry === void 0 ? void 0 : entry.endAngle, "-").concat(entry.midAngle, "-").concat(i)
                    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _activeShapeUtils.Shape), _extends({
                        option: sectorOptions,
                        isActive: isActive,
                        shapeType: "sector"
                    }, sectorProps)));
                });
            }
        },
        {
            key: "renderSectorsWithAnimation",
            value: function renderSectorsWithAnimation() {
                var _this3 = this;
                var _this$props3 = this.props, sectors = _this$props3.sectors, isAnimationActive = _this$props3.isAnimationActive, animationBegin = _this$props3.animationBegin, animationDuration = _this$props3.animationDuration, animationEasing = _this$props3.animationEasing, animationId = _this$props3.animationId;
                var _this$state = this.state, prevSectors = _this$state.prevSectors, prevIsAnimationActive = _this$state.prevIsAnimationActive;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
                    begin: animationBegin,
                    duration: animationDuration,
                    isActive: isAnimationActive,
                    easing: animationEasing,
                    from: {
                        t: 0
                    },
                    to: {
                        t: 1
                    },
                    key: "pie-".concat(animationId, "-").concat(prevIsAnimationActive),
                    onAnimationStart: this.handleAnimationStart,
                    onAnimationEnd: this.handleAnimationEnd
                }, function(_ref2) {
                    var t = _ref2.t;
                    var stepData = [];
                    var first = sectors && sectors[0];
                    var curAngle = first.startAngle;
                    sectors.forEach(function(entry, index) {
                        var prev = prevSectors && prevSectors[index];
                        var paddingAngle = index > 0 ? (0, _getDefault.default)(entry, 'paddingAngle', 0) : 0;
                        if (prev) {
                            var angleIp = (0, _dataUtils.interpolateNumber)(prev.endAngle - prev.startAngle, entry.endAngle - entry.startAngle);
                            var latest = _objectSpread(_objectSpread({}, entry), {}, {
                                startAngle: curAngle + paddingAngle,
                                endAngle: curAngle + angleIp(t) + paddingAngle
                            });
                            stepData.push(latest);
                            curAngle = latest.endAngle;
                        } else {
                            var endAngle = entry.endAngle, startAngle = entry.startAngle;
                            var interpolatorAngle = (0, _dataUtils.interpolateNumber)(0, endAngle - startAngle);
                            var deltaAngle = interpolatorAngle(t);
                            var _latest = _objectSpread(_objectSpread({}, entry), {}, {
                                startAngle: curAngle + paddingAngle,
                                endAngle: curAngle + deltaAngle + paddingAngle
                            });
                            stepData.push(_latest);
                            curAngle = _latest.endAngle;
                        }
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), null, _this3.renderSectorsStatically(stepData));
                });
            }
        },
        {
            key: "attachKeyboardHandlers",
            value: function attachKeyboardHandlers(pieRef) {
                var _this4 = this;
                // eslint-disable-next-line no-param-reassign
                pieRef.onkeydown = function(e) {
                    if (!e.altKey) switch(e.key){
                        case 'ArrowLeft':
                            var next = ++_this4.state.sectorToFocus % _this4.sectorRefs.length;
                            _this4.sectorRefs[next].focus();
                            _this4.setState({
                                sectorToFocus: next
                            });
                            break;
                        case 'ArrowRight':
                            var _next = --_this4.state.sectorToFocus < 0 ? _this4.sectorRefs.length - 1 : _this4.state.sectorToFocus % _this4.sectorRefs.length;
                            _this4.sectorRefs[_next].focus();
                            _this4.setState({
                                sectorToFocus: _next
                            });
                            break;
                        case 'Escape':
                            _this4.sectorRefs[_this4.state.sectorToFocus].blur();
                            _this4.setState({
                                sectorToFocus: 0
                            });
                            break;
                        default:
                    }
                };
            }
        },
        {
            key: "renderSectors",
            value: function renderSectors() {
                var _this$props4 = this.props, sectors = _this$props4.sectors, isAnimationActive = _this$props4.isAnimationActive;
                var prevSectors = this.state.prevSectors;
                if (isAnimationActive && sectors && sectors.length && (!prevSectors || !(0, _isEqualDefault.default)(prevSectors, sectors))) return this.renderSectorsWithAnimation();
                return this.renderSectorsStatically(sectors);
            }
        },
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                if (this.pieRef) this.attachKeyboardHandlers(this.pieRef);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this5 = this;
                var _this$props5 = this.props, hide = _this$props5.hide, sectors = _this$props5.sectors, className = _this$props5.className, label = _this$props5.label, cx = _this$props5.cx, cy = _this$props5.cy, innerRadius = _this$props5.innerRadius, outerRadius = _this$props5.outerRadius, isAnimationActive = _this$props5.isAnimationActive;
                var isAnimationFinished = this.state.isAnimationFinished;
                if (hide || !sectors || !sectors.length || !(0, _dataUtils.isNumber)(cx) || !(0, _dataUtils.isNumber)(cy) || !(0, _dataUtils.isNumber)(innerRadius) || !(0, _dataUtils.isNumber)(outerRadius)) return null;
                var layerClass = (0, _clsxDefault.default)('recharts-pie', className);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    tabIndex: this.props.rootTabIndex,
                    className: layerClass,
                    ref: function ref(_ref3) {
                        _this5.pieRef = _ref3;
                    }
                }, this.renderSectors(), label && this.renderLabels(sectors), (0, _label.Label).renderCallByParent(this.props, null, false), (!isAnimationActive || isAnimationFinished) && (0, _labelList.LabelList).renderCallByParent(this.props, sectors, false));
            }
        }
    ], [
        {
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, prevState) {
                if (prevState.prevIsAnimationActive !== nextProps.isAnimationActive) return {
                    prevIsAnimationActive: nextProps.isAnimationActive,
                    prevAnimationId: nextProps.animationId,
                    curSectors: nextProps.sectors,
                    prevSectors: [],
                    isAnimationFinished: true
                };
                if (nextProps.isAnimationActive && nextProps.animationId !== prevState.prevAnimationId) return {
                    prevAnimationId: nextProps.animationId,
                    curSectors: nextProps.sectors,
                    prevSectors: prevState.curSectors,
                    isAnimationFinished: true
                };
                if (nextProps.sectors !== prevState.curSectors) return {
                    curSectors: nextProps.sectors,
                    isAnimationFinished: true
                };
                return null;
            }
        },
        {
            key: "getTextAnchor",
            value: function getTextAnchor(x, cx) {
                if (x > cx) return 'start';
                if (x < cx) return 'end';
                return 'middle';
            }
        },
        {
            key: "renderLabelLineItem",
            value: function renderLabelLineItem(option, props, key) {
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                if ((0, _isFunctionDefault.default)(option)) return option(props);
                var className = (0, _clsxDefault.default)('recharts-pie-label-line', typeof option !== 'boolean' ? option.className : '');
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _curve.Curve), _extends({}, props, {
                    key: key,
                    type: "linear",
                    className: className
                }));
            }
        },
        {
            key: "renderLabelItem",
            value: function renderLabelItem(option, props, value) {
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                var label = value;
                if ((0, _isFunctionDefault.default)(option)) {
                    label = option(props);
                    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(label)) return label;
                }
                var className = (0, _clsxDefault.default)('recharts-pie-label-text', typeof option !== 'boolean' && !(0, _isFunctionDefault.default)(option) ? option.className : '');
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({}, props, {
                    alignmentBaseline: "middle",
                    className: className
                }), label);
            }
        }
    ]);
}((0, _react.PureComponent));
_Pie = Pie;
_defineProperty(Pie, "displayName", 'Pie');
_defineProperty(Pie, "defaultProps", {
    stroke: '#fff',
    fill: '#808080',
    legendType: 'rect',
    cx: '50%',
    cy: '50%',
    startAngle: 0,
    endAngle: 360,
    innerRadius: 0,
    outerRadius: '80%',
    paddingAngle: 0,
    labelLine: true,
    hide: false,
    minAngle: 0,
    isAnimationActive: !(0, _global.Global).isSsr,
    animationBegin: 400,
    animationDuration: 1500,
    animationEasing: 'ease',
    nameKey: 'name',
    blendStroke: false,
    rootTabIndex: 0
});
_defineProperty(Pie, "parseDeltaAngle", function(startAngle, endAngle) {
    var sign = (0, _dataUtils.mathSign)(endAngle - startAngle);
    var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
    return sign * deltaAngle;
});
_defineProperty(Pie, "getRealPieData", function(itemProps) {
    var data = itemProps.data, children = itemProps.children;
    var presentationProps = (0, _reactUtils.filterProps)(itemProps, false);
    var cells = (0, _reactUtils.findAllByType)(children, (0, _cell.Cell));
    if (data && data.length) return data.map(function(entry, index) {
        return _objectSpread(_objectSpread(_objectSpread({
            payload: entry
        }, presentationProps), entry), cells && cells[index] && cells[index].props);
    });
    if (cells && cells.length) return cells.map(function(cell) {
        return _objectSpread(_objectSpread({}, presentationProps), cell.props);
    });
    return [];
});
_defineProperty(Pie, "parseCoordinateOfPie", function(itemProps, offset) {
    var top = offset.top, left = offset.left, width = offset.width, height = offset.height;
    var maxPieRadius = (0, _polarUtils.getMaxRadius)(width, height);
    var cx = left + (0, _dataUtils.getPercentValue)(itemProps.cx, width, width / 2);
    var cy = top + (0, _dataUtils.getPercentValue)(itemProps.cy, height, height / 2);
    var innerRadius = (0, _dataUtils.getPercentValue)(itemProps.innerRadius, maxPieRadius, 0);
    var outerRadius = (0, _dataUtils.getPercentValue)(itemProps.outerRadius, maxPieRadius, maxPieRadius * 0.8);
    var maxRadius = itemProps.maxRadius || Math.sqrt(width * width + height * height) / 2;
    return {
        cx: cx,
        cy: cy,
        innerRadius: innerRadius,
        outerRadius: outerRadius,
        maxRadius: maxRadius
    };
});
_defineProperty(Pie, "getComposedData", function(_ref4) {
    var item = _ref4.item, offset = _ref4.offset;
    var itemProps = item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
    var pieData = _Pie.getRealPieData(itemProps);
    if (!pieData || !pieData.length) return null;
    var cornerRadius = itemProps.cornerRadius, startAngle = itemProps.startAngle, endAngle = itemProps.endAngle, paddingAngle = itemProps.paddingAngle, dataKey = itemProps.dataKey, nameKey = itemProps.nameKey, valueKey = itemProps.valueKey, tooltipType = itemProps.tooltipType;
    var minAngle = Math.abs(itemProps.minAngle);
    var coordinate = _Pie.parseCoordinateOfPie(itemProps, offset);
    var deltaAngle = _Pie.parseDeltaAngle(startAngle, endAngle);
    var absDeltaAngle = Math.abs(deltaAngle);
    var realDataKey = dataKey;
    if ((0, _isNilDefault.default)(dataKey) && (0, _isNilDefault.default)(valueKey)) {
        (0, _logUtils.warn)(false, "Use \"dataKey\" to specify the value of pie,\n      the props \"valueKey\" will be deprecated in 1.1.0");
        realDataKey = 'value';
    } else if ((0, _isNilDefault.default)(dataKey)) {
        (0, _logUtils.warn)(false, "Use \"dataKey\" to specify the value of pie,\n      the props \"valueKey\" will be deprecated in 1.1.0");
        realDataKey = valueKey;
    }
    var notZeroItemCount = pieData.filter(function(entry) {
        return (0, _chartUtils.getValueByDataKey)(entry, realDataKey, 0) !== 0;
    }).length;
    var totalPadingAngle = (absDeltaAngle >= 360 ? notZeroItemCount : notZeroItemCount - 1) * paddingAngle;
    var realTotalAngle = absDeltaAngle - notZeroItemCount * minAngle - totalPadingAngle;
    var sum = pieData.reduce(function(result, entry) {
        var val = (0, _chartUtils.getValueByDataKey)(entry, realDataKey, 0);
        return result + ((0, _dataUtils.isNumber)(val) ? val : 0);
    }, 0);
    var sectors;
    if (sum > 0) {
        var prev;
        sectors = pieData.map(function(entry, i) {
            var val = (0, _chartUtils.getValueByDataKey)(entry, realDataKey, 0);
            var name = (0, _chartUtils.getValueByDataKey)(entry, nameKey, i);
            var percent = ((0, _dataUtils.isNumber)(val) ? val : 0) / sum;
            var tempStartAngle;
            if (i) tempStartAngle = prev.endAngle + (0, _dataUtils.mathSign)(deltaAngle) * paddingAngle * (val !== 0 ? 1 : 0);
            else tempStartAngle = startAngle;
            var tempEndAngle = tempStartAngle + (0, _dataUtils.mathSign)(deltaAngle) * ((val !== 0 ? minAngle : 0) + percent * realTotalAngle);
            var midAngle = (tempStartAngle + tempEndAngle) / 2;
            var middleRadius = (coordinate.innerRadius + coordinate.outerRadius) / 2;
            var tooltipPayload = [
                {
                    name: name,
                    value: val,
                    payload: entry,
                    dataKey: realDataKey,
                    type: tooltipType
                }
            ];
            var tooltipPosition = (0, _polarUtils.polarToCartesian)(coordinate.cx, coordinate.cy, middleRadius, midAngle);
            prev = _objectSpread(_objectSpread(_objectSpread({
                percent: percent,
                cornerRadius: cornerRadius,
                name: name,
                tooltipPayload: tooltipPayload,
                midAngle: midAngle,
                middleRadius: middleRadius,
                tooltipPosition: tooltipPosition
            }, entry), coordinate), {}, {
                value: (0, _chartUtils.getValueByDataKey)(entry, realDataKey),
                startAngle: tempStartAngle,
                endAngle: tempEndAngle,
                payload: entry,
                paddingAngle: (0, _dataUtils.mathSign)(deltaAngle) * paddingAngle
            });
            return prev;
        });
    }
    return _objectSpread(_objectSpread({}, coordinate), {}, {
        sectors: sectors,
        data: pieData
    });
});

},{"react":"jMk1U","react-smooth":"2I5y4","lodash/get":"ce8mt","lodash/isEqual":"ep5zv","lodash/isNil":"66cvp","lodash/isFunction":"6aeG3","clsx":"dOSJC","../container/Layer":"dLJ3P","../shape/Curve":"fyl1W","../component/Text":"9kjUm","../component/Label":"b8wtn","../component/LabelList":"gF2dN","../component/Cell":"fGup7","../util/ReactUtils":"dvc7w","../util/Global":"7oO43","../util/PolarUtils":"4krqZ","../util/DataUtils":"sgnJK","../util/ChartUtils":"58wJX","../util/LogUtils":"2q6MA","../util/types":"j2YO8","../util/ActiveShapeUtils":"48bBV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"48bBV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getPropsFromShapeOption", ()=>getPropsFromShapeOption);
parcelHelpers.export(exports, "Shape", ()=>Shape);
/**
 * This is an abstraction to handle identifying the active index from a tooltip mouse interaction
 */ parcelHelpers.export(exports, "isFunnel", ()=>isFunnel);
parcelHelpers.export(exports, "isPie", ()=>isPie);
parcelHelpers.export(exports, "isScatter", ()=>isScatter);
parcelHelpers.export(exports, "compareFunnel", ()=>compareFunnel);
parcelHelpers.export(exports, "comparePie", ()=>comparePie);
parcelHelpers.export(exports, "compareScatter", ()=>compareScatter);
/**
 *
 * @param {GetActiveShapeIndexForTooltip} arg an object of incoming attributes from Tooltip
 * @returns {number}
 *
 * To handle possible duplicates in the data set,
 * match both the data value of the active item to a data value on a graph item,
 * and match the mouse coordinates of the active item to the coordinates of in a particular components shape data.
 * This assumes equal lengths of shape objects to data items.
 */ parcelHelpers.export(exports, "getActiveShapeIndexForTooltip", ()=>getActiveShapeIndexForTooltip);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _isPlainObject = require("lodash/isPlainObject");
var _isPlainObjectDefault = parcelHelpers.interopDefault(_isPlainObject);
var _isBoolean = require("lodash/isBoolean");
var _isBooleanDefault = parcelHelpers.interopDefault(_isBoolean);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _rectangle = require("../shape/Rectangle");
var _trapezoid = require("../shape/Trapezoid");
var _sector = require("../shape/Sector");
var _layer = require("../container/Layer");
var _symbols = require("../shape/Symbols");
var _excluded = [
    "option",
    "shapeType",
    "propTransformer",
    "activeClassName",
    "isActive"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
/**
 * This is an abstraction for rendering a user defined prop for a customized shape in several forms.
 *
 * <Shape /> is the root and will handle taking in:
 *  - an object of svg properties
 *  - a boolean
 *  - a render prop(inline function that returns jsx)
 *  - a react element
 *
 * <ShapeSelector /> is a subcomponent of <Shape /> and used to match a component
 * to the value of props.shapeType that is passed to the root.
 *
 */ function defaultPropTransformer(option, props) {
    return _objectSpread(_objectSpread({}, props), option);
}
function isSymbolsProps(shapeType, _elementProps) {
    return shapeType === 'symbols';
}
function ShapeSelector(_ref) {
    var shapeType = _ref.shapeType, elementProps = _ref.elementProps;
    switch(shapeType){
        case 'rectangle':
            return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _rectangle.Rectangle), elementProps);
        case 'trapezoid':
            return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _trapezoid.Trapezoid), elementProps);
        case 'sector':
            return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _sector.Sector), elementProps);
        case 'symbols':
            if (isSymbolsProps(shapeType, elementProps)) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _symbols.Symbols), elementProps);
            break;
        default:
            return null;
    }
}
function getPropsFromShapeOption(option) {
    if (/*#__PURE__*/ (0, _react.isValidElement)(option)) return option.props;
    return option;
}
function Shape(_ref2) {
    var option = _ref2.option, shapeType = _ref2.shapeType, _ref2$propTransformer = _ref2.propTransformer, propTransformer = _ref2$propTransformer === void 0 ? defaultPropTransformer : _ref2$propTransformer, _ref2$activeClassName = _ref2.activeClassName, activeClassName = _ref2$activeClassName === void 0 ? 'recharts-active-shape' : _ref2$activeClassName, isActive = _ref2.isActive, props = _objectWithoutProperties(_ref2, _excluded);
    var shape;
    if (/*#__PURE__*/ (0, _react.isValidElement)(option)) shape = /*#__PURE__*/ (0, _react.cloneElement)(option, _objectSpread(_objectSpread({}, props), getPropsFromShapeOption(option)));
    else if ((0, _isFunctionDefault.default)(option)) shape = option(props);
    else if ((0, _isPlainObjectDefault.default)(option) && !(0, _isBooleanDefault.default)(option)) {
        var nextProps = propTransformer(option, props);
        shape = /*#__PURE__*/ (0, _reactDefault.default).createElement(ShapeSelector, {
            shapeType: shapeType,
            elementProps: nextProps
        });
    } else {
        var elementProps = props;
        shape = /*#__PURE__*/ (0, _reactDefault.default).createElement(ShapeSelector, {
            shapeType: shapeType,
            elementProps: elementProps
        });
    }
    if (isActive) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
        className: activeClassName
    }, shape);
    return shape;
}
function isFunnel(graphicalItem, _item) {
    return _item != null && 'trapezoids' in graphicalItem.props;
}
function isPie(graphicalItem, _item) {
    return _item != null && 'sectors' in graphicalItem.props;
}
function isScatter(graphicalItem, _item) {
    return _item != null && 'points' in graphicalItem.props;
}
function compareFunnel(shapeData, activeTooltipItem) {
    var _activeTooltipItem$la, _activeTooltipItem$la2;
    var xMatches = shapeData.x === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la === void 0 ? void 0 : _activeTooltipItem$la.x) || shapeData.x === activeTooltipItem.x;
    var yMatches = shapeData.y === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la2 = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la2 === void 0 ? void 0 : _activeTooltipItem$la2.y) || shapeData.y === activeTooltipItem.y;
    return xMatches && yMatches;
}
function comparePie(shapeData, activeTooltipItem) {
    var startAngleMatches = shapeData.endAngle === activeTooltipItem.endAngle;
    var endAngleMatches = shapeData.startAngle === activeTooltipItem.startAngle;
    return startAngleMatches && endAngleMatches;
}
function compareScatter(shapeData, activeTooltipItem) {
    var xMatches = shapeData.x === activeTooltipItem.x;
    var yMatches = shapeData.y === activeTooltipItem.y;
    var zMatches = shapeData.z === activeTooltipItem.z;
    return xMatches && yMatches && zMatches;
}
function getComparisonFn(graphicalItem, activeItem) {
    var comparison;
    if (isFunnel(graphicalItem, activeItem)) comparison = compareFunnel;
    else if (isPie(graphicalItem, activeItem)) comparison = comparePie;
    else if (isScatter(graphicalItem, activeItem)) comparison = compareScatter;
    return comparison;
}
function getShapeDataKey(graphicalItem, activeItem) {
    var shapeKey;
    if (isFunnel(graphicalItem, activeItem)) shapeKey = 'trapezoids';
    else if (isPie(graphicalItem, activeItem)) shapeKey = 'sectors';
    else if (isScatter(graphicalItem, activeItem)) shapeKey = 'points';
    return shapeKey;
}
function getActiveShapeTooltipPayload(graphicalItem, activeItem) {
    if (isFunnel(graphicalItem, activeItem)) {
        var _activeItem$tooltipPa;
        return (_activeItem$tooltipPa = activeItem.tooltipPayload) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa[0]) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa.payload) === null || _activeItem$tooltipPa === void 0 ? void 0 : _activeItem$tooltipPa.payload;
    }
    if (isPie(graphicalItem, activeItem)) {
        var _activeItem$tooltipPa2;
        return (_activeItem$tooltipPa2 = activeItem.tooltipPayload) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2[0]) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2.payload) === null || _activeItem$tooltipPa2 === void 0 ? void 0 : _activeItem$tooltipPa2.payload;
    }
    if (isScatter(graphicalItem, activeItem)) return activeItem.payload;
    return {};
}
function getActiveShapeIndexForTooltip(_ref3) {
    var activeTooltipItem = _ref3.activeTooltipItem, graphicalItem = _ref3.graphicalItem, itemData = _ref3.itemData;
    var shapeKey = getShapeDataKey(graphicalItem, activeTooltipItem);
    var tooltipPayload = getActiveShapeTooltipPayload(graphicalItem, activeTooltipItem);
    var activeItemMatches = itemData.filter(function(datum, dataIndex) {
        var valuesMatch = (0, _isEqualDefault.default)(tooltipPayload, datum);
        var mouseCoordinateMatches = graphicalItem.props[shapeKey].filter(function(shapeData) {
            var comparison = getComparisonFn(graphicalItem, activeTooltipItem);
            return comparison(shapeData, activeTooltipItem);
        });
        // get the last index in case of multiple matches
        var indexOfMouseCoordinates = graphicalItem.props[shapeKey].indexOf(mouseCoordinateMatches[mouseCoordinateMatches.length - 1]);
        var coordinatesMatch = dataIndex === indexOfMouseCoordinates;
        return valuesMatch && coordinatesMatch;
    });
    // get the last index in case of multiple matches
    var activeIndex = itemData.indexOf(activeItemMatches[activeItemMatches.length - 1]);
    return activeIndex;
}

},{"react":"jMk1U","lodash/isFunction":"6aeG3","lodash/isPlainObject":"dGVx1","lodash/isBoolean":"4eH39","lodash/isEqual":"ep5zv","../shape/Rectangle":"6fXjw","../shape/Trapezoid":"lhpUD","../shape/Sector":"gfarJ","../container/Layer":"dLJ3P","../shape/Symbols":"alAWK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dGVx1":[function(require,module,exports,__globalThis) {
var baseGetTag = require("c03dd41ed9922dd2"), getPrototype = require("2ca5b85a120835de"), isObjectLike = require("963b65e043435612");
/** `Object#toString` result references. */ var objectTag = '[object Object]';
/** Used for built-in method references. */ var funcProto = Function.prototype, objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to infer the `Object` constructor. */ var objectCtorString = funcToString.call(Object);
/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */ function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
    var proto = getPrototype(value);
    if (proto === null) return true;
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}
module.exports = isPlainObject;

},{"c03dd41ed9922dd2":"ikiSI","2ca5b85a120835de":"4KO4a","963b65e043435612":"KdN4G"}],"4KO4a":[function(require,module,exports,__globalThis) {
var overArg = require("11c2fcc01fbb2119");
/** Built-in value references. */ var getPrototype = overArg(Object.getPrototypeOf, Object);
module.exports = getPrototype;

},{"11c2fcc01fbb2119":"4zaL2"}],"4eH39":[function(require,module,exports,__globalThis) {
var baseGetTag = require("763d54281423d9ac"), isObjectLike = require("37c1c7912587466b");
/** `Object#toString` result references. */ var boolTag = '[object Boolean]';
/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */ function isBoolean(value) {
    return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
}
module.exports = isBoolean;

},{"763d54281423d9ac":"ikiSI","37c1c7912587466b":"KdN4G"}],"lhpUD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Trapezoid", ()=>Trapezoid);
/**
 * @fileOverview Rectangle
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactSmooth = require("react-smooth");
var _reactSmoothDefault = parcelHelpers.interopDefault(_reactSmooth);
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var getTrapezoidPath = function getTrapezoidPath(x, y, upperWidth, lowerWidth, height) {
    var widthGap = upperWidth - lowerWidth;
    var path;
    path = "M ".concat(x, ",").concat(y);
    path += "L ".concat(x + upperWidth, ",").concat(y);
    path += "L ".concat(x + upperWidth - widthGap / 2, ",").concat(y + height);
    path += "L ".concat(x + upperWidth - widthGap / 2 - lowerWidth, ",").concat(y + height);
    path += "L ".concat(x, ",").concat(y, " Z");
    return path;
};
var defaultProps = {
    x: 0,
    y: 0,
    upperWidth: 0,
    lowerWidth: 0,
    height: 0,
    isUpdateAnimationActive: false,
    animationBegin: 0,
    animationDuration: 1500,
    animationEasing: 'ease'
};
var Trapezoid = function Trapezoid(props) {
    var trapezoidProps = _objectSpread(_objectSpread({}, defaultProps), props);
    var pathRef = (0, _react.useRef)();
    var _useState = (0, _react.useState)(-1), _useState2 = _slicedToArray(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];
    (0, _react.useEffect)(function() {
        if (pathRef.current && pathRef.current.getTotalLength) try {
            var pathTotalLength = pathRef.current.getTotalLength();
            if (pathTotalLength) setTotalLength(pathTotalLength);
        } catch (err) {
        // calculate total length error
        }
    }, []);
    var x = trapezoidProps.x, y = trapezoidProps.y, upperWidth = trapezoidProps.upperWidth, lowerWidth = trapezoidProps.lowerWidth, height = trapezoidProps.height, className = trapezoidProps.className;
    var animationEasing = trapezoidProps.animationEasing, animationDuration = trapezoidProps.animationDuration, animationBegin = trapezoidProps.animationBegin, isUpdateAnimationActive = trapezoidProps.isUpdateAnimationActive;
    if (x !== +x || y !== +y || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) return null;
    var layerClass = (0, _clsxDefault.default)('recharts-trapezoid', className);
    if (!isUpdateAnimationActive) return /*#__PURE__*/ (0, _reactDefault.default).createElement("g", null, /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(trapezoidProps, true), {
        className: layerClass,
        d: getTrapezoidPath(x, y, upperWidth, lowerWidth, height)
    })));
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
        canBegin: totalLength > 0,
        from: {
            upperWidth: 0,
            lowerWidth: 0,
            height: height,
            x: x,
            y: y
        },
        to: {
            upperWidth: upperWidth,
            lowerWidth: lowerWidth,
            height: height,
            x: x,
            y: y
        },
        duration: animationDuration,
        animationEasing: animationEasing,
        isActive: isUpdateAnimationActive
    }, function(_ref) {
        var currUpperWidth = _ref.upperWidth, currLowerWidth = _ref.lowerWidth, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
            canBegin: totalLength > 0,
            from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
            to: "".concat(totalLength, "px 0px"),
            attributeName: "strokeDasharray",
            begin: animationBegin,
            duration: animationDuration,
            easing: animationEasing
        }, /*#__PURE__*/ (0, _reactDefault.default).createElement("path", _extends({}, (0, _reactUtils.filterProps)(trapezoidProps, true), {
            className: layerClass,
            d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),
            ref: pathRef
        })));
    });
};

},{"react":"jMk1U","clsx":"dOSJC","react-smooth":"2I5y4","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kSd6q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Brush", ()=>Brush);
/**
 * @fileOverview Brush
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _d3Scale = require("victory-vendor/d3-scale");
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _range = require("lodash/range");
var _rangeDefault = parcelHelpers.interopDefault(_range);
var _layer = require("../container/Layer");
var _text = require("../component/Text");
var _chartUtils = require("../util/ChartUtils");
var _dataUtils = require("../util/DataUtils");
var _cssPrefixUtils = require("../util/CssPrefixUtils");
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var createScale = function createScale(_ref) {
    var data = _ref.data, startIndex = _ref.startIndex, endIndex = _ref.endIndex, x = _ref.x, width = _ref.width, travellerWidth = _ref.travellerWidth;
    if (!data || !data.length) return {};
    var len = data.length;
    var scale = (0, _d3Scale.scalePoint)().domain((0, _rangeDefault.default)(0, len)).range([
        x,
        x + width - travellerWidth
    ]);
    var scaleValues = scale.domain().map(function(entry) {
        return scale(entry);
    });
    return {
        isTextActive: false,
        isSlideMoving: false,
        isTravellerMoving: false,
        isTravellerFocused: false,
        startX: scale(startIndex),
        endX: scale(endIndex),
        scale: scale,
        scaleValues: scaleValues
    };
};
var isTouch = function isTouch(e) {
    return e.changedTouches && !!e.changedTouches.length;
};
var Brush = /*#__PURE__*/ function(_PureComponent) {
    function Brush(props) {
        var _this;
        _classCallCheck(this, Brush);
        _this = _callSuper(this, Brush, [
            props
        ]);
        _defineProperty(_this, "handleDrag", function(e) {
            if (_this.leaveTimer) {
                clearTimeout(_this.leaveTimer);
                _this.leaveTimer = null;
            }
            if (_this.state.isTravellerMoving) _this.handleTravellerMove(e);
            else if (_this.state.isSlideMoving) _this.handleSlideDrag(e);
        });
        _defineProperty(_this, "handleTouchMove", function(e) {
            if (e.changedTouches != null && e.changedTouches.length > 0) _this.handleDrag(e.changedTouches[0]);
        });
        _defineProperty(_this, "handleDragEnd", function() {
            _this.setState({
                isTravellerMoving: false,
                isSlideMoving: false
            }, function() {
                var _this$props = _this.props, endIndex = _this$props.endIndex, onDragEnd = _this$props.onDragEnd, startIndex = _this$props.startIndex;
                onDragEnd === null || onDragEnd === void 0 || onDragEnd({
                    endIndex: endIndex,
                    startIndex: startIndex
                });
            });
            _this.detachDragEndListener();
        });
        _defineProperty(_this, "handleLeaveWrapper", function() {
            if (_this.state.isTravellerMoving || _this.state.isSlideMoving) _this.leaveTimer = window.setTimeout(_this.handleDragEnd, _this.props.leaveTimeOut);
        });
        _defineProperty(_this, "handleEnterSlideOrTraveller", function() {
            _this.setState({
                isTextActive: true
            });
        });
        _defineProperty(_this, "handleLeaveSlideOrTraveller", function() {
            _this.setState({
                isTextActive: false
            });
        });
        _defineProperty(_this, "handleSlideDragStart", function(e) {
            var event = isTouch(e) ? e.changedTouches[0] : e;
            _this.setState({
                isTravellerMoving: false,
                isSlideMoving: true,
                slideMoveStartX: event.pageX
            });
            _this.attachDragEndListener();
        });
        _this.travellerDragStartHandlers = {
            startX: _this.handleTravellerDragStart.bind(_this, 'startX'),
            endX: _this.handleTravellerDragStart.bind(_this, 'endX')
        };
        _this.state = {};
        return _this;
    }
    _inherits(Brush, _PureComponent);
    return _createClass(Brush, [
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                if (this.leaveTimer) {
                    clearTimeout(this.leaveTimer);
                    this.leaveTimer = null;
                }
                this.detachDragEndListener();
            }
        },
        {
            key: "getIndex",
            value: function getIndex(_ref2) {
                var startX = _ref2.startX, endX = _ref2.endX;
                var scaleValues = this.state.scaleValues;
                var _this$props2 = this.props, gap = _this$props2.gap, data = _this$props2.data;
                var lastIndex = data.length - 1;
                var min = Math.min(startX, endX);
                var max = Math.max(startX, endX);
                var minIndex = Brush.getIndexInRange(scaleValues, min);
                var maxIndex = Brush.getIndexInRange(scaleValues, max);
                return {
                    startIndex: minIndex - minIndex % gap,
                    endIndex: maxIndex === lastIndex ? lastIndex : maxIndex - maxIndex % gap
                };
            }
        },
        {
            key: "getTextOfTick",
            value: function getTextOfTick(index) {
                var _this$props3 = this.props, data = _this$props3.data, tickFormatter = _this$props3.tickFormatter, dataKey = _this$props3.dataKey;
                var text = (0, _chartUtils.getValueByDataKey)(data[index], dataKey, index);
                return (0, _isFunctionDefault.default)(tickFormatter) ? tickFormatter(text, index) : text;
            }
        },
        {
            key: "attachDragEndListener",
            value: function attachDragEndListener() {
                window.addEventListener('mouseup', this.handleDragEnd, true);
                window.addEventListener('touchend', this.handleDragEnd, true);
                window.addEventListener('mousemove', this.handleDrag, true);
            }
        },
        {
            key: "detachDragEndListener",
            value: function detachDragEndListener() {
                window.removeEventListener('mouseup', this.handleDragEnd, true);
                window.removeEventListener('touchend', this.handleDragEnd, true);
                window.removeEventListener('mousemove', this.handleDrag, true);
            }
        },
        {
            key: "handleSlideDrag",
            value: function handleSlideDrag(e) {
                var _this$state = this.state, slideMoveStartX = _this$state.slideMoveStartX, startX = _this$state.startX, endX = _this$state.endX;
                var _this$props4 = this.props, x = _this$props4.x, width = _this$props4.width, travellerWidth = _this$props4.travellerWidth, startIndex = _this$props4.startIndex, endIndex = _this$props4.endIndex, onChange = _this$props4.onChange;
                var delta = e.pageX - slideMoveStartX;
                if (delta > 0) delta = Math.min(delta, x + width - travellerWidth - endX, x + width - travellerWidth - startX);
                else if (delta < 0) delta = Math.max(delta, x - startX, x - endX);
                var newIndex = this.getIndex({
                    startX: startX + delta,
                    endX: endX + delta
                });
                if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) onChange(newIndex);
                this.setState({
                    startX: startX + delta,
                    endX: endX + delta,
                    slideMoveStartX: e.pageX
                });
            }
        },
        {
            key: "handleTravellerDragStart",
            value: function handleTravellerDragStart(id, e) {
                var event = isTouch(e) ? e.changedTouches[0] : e;
                this.setState({
                    isSlideMoving: false,
                    isTravellerMoving: true,
                    movingTravellerId: id,
                    brushMoveStartX: event.pageX
                });
                this.attachDragEndListener();
            }
        },
        {
            key: "handleTravellerMove",
            value: function handleTravellerMove(e) {
                var _this$state2 = this.state, brushMoveStartX = _this$state2.brushMoveStartX, movingTravellerId = _this$state2.movingTravellerId, endX = _this$state2.endX, startX = _this$state2.startX;
                var prevValue = this.state[movingTravellerId];
                var _this$props5 = this.props, x = _this$props5.x, width = _this$props5.width, travellerWidth = _this$props5.travellerWidth, onChange = _this$props5.onChange, gap = _this$props5.gap, data = _this$props5.data;
                var params = {
                    startX: this.state.startX,
                    endX: this.state.endX
                };
                var delta = e.pageX - brushMoveStartX;
                if (delta > 0) delta = Math.min(delta, x + width - travellerWidth - prevValue);
                else if (delta < 0) delta = Math.max(delta, x - prevValue);
                params[movingTravellerId] = prevValue + delta;
                var newIndex = this.getIndex(params);
                var startIndex = newIndex.startIndex, endIndex = newIndex.endIndex;
                var isFullGap = function isFullGap() {
                    var lastIndex = data.length - 1;
                    if (movingTravellerId === 'startX' && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0) || endX < startX && endIndex === lastIndex || movingTravellerId === 'endX' && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0) || endX > startX && endIndex === lastIndex) return true;
                    return false;
                };
                this.setState(_defineProperty(_defineProperty({}, movingTravellerId, prevValue + delta), "brushMoveStartX", e.pageX), function() {
                    if (onChange) {
                        if (isFullGap()) onChange(newIndex);
                    }
                });
            }
        },
        {
            key: "handleTravellerMoveKeyboard",
            value: function handleTravellerMoveKeyboard(direction, id) {
                var _this2 = this;
                // scaleValues are a list of coordinates. For example: [65, 250, 435, 620, 805, 990].
                var _this$state3 = this.state, scaleValues = _this$state3.scaleValues, startX = _this$state3.startX, endX = _this$state3.endX;
                // currentScaleValue refers to which coordinate the current traveller should be placed at.
                var currentScaleValue = this.state[id];
                var currentIndex = scaleValues.indexOf(currentScaleValue);
                if (currentIndex === -1) return;
                var newIndex = currentIndex + direction;
                if (newIndex === -1 || newIndex >= scaleValues.length) return;
                var newScaleValue = scaleValues[newIndex];
                // Prevent travellers from being on top of each other or overlapping
                if (id === 'startX' && newScaleValue >= endX || id === 'endX' && newScaleValue <= startX) return;
                this.setState(_defineProperty({}, id, newScaleValue), function() {
                    _this2.props.onChange(_this2.getIndex({
                        startX: _this2.state.startX,
                        endX: _this2.state.endX
                    }));
                });
            }
        },
        {
            key: "renderBackground",
            value: function renderBackground() {
                var _this$props6 = this.props, x = _this$props6.x, y = _this$props6.y, width = _this$props6.width, height = _this$props6.height, fill = _this$props6.fill, stroke = _this$props6.stroke;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                    stroke: stroke,
                    fill: fill,
                    x: x,
                    y: y,
                    width: width,
                    height: height
                });
            }
        },
        {
            key: "renderPanorama",
            value: function renderPanorama() {
                var _this$props7 = this.props, x = _this$props7.x, y = _this$props7.y, width = _this$props7.width, height = _this$props7.height, data = _this$props7.data, children = _this$props7.children, padding = _this$props7.padding;
                var chartElement = (0, _react.Children).only(children);
                if (!chartElement) return null;
                return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(chartElement, {
                    x: x,
                    y: y,
                    width: width,
                    height: height,
                    margin: padding,
                    compact: true,
                    data: data
                });
            }
        },
        {
            key: "renderTravellerLayer",
            value: function renderTravellerLayer(travellerX, id) {
                var _data$startIndex, _data$endIndex, _this3 = this;
                var _this$props8 = this.props, y = _this$props8.y, travellerWidth = _this$props8.travellerWidth, height = _this$props8.height, traveller = _this$props8.traveller, ariaLabel = _this$props8.ariaLabel, data = _this$props8.data, startIndex = _this$props8.startIndex, endIndex = _this$props8.endIndex;
                var x = Math.max(travellerX, this.props.x);
                var travellerProps = _objectSpread(_objectSpread({}, (0, _reactUtils.filterProps)(this.props, false)), {}, {
                    x: x,
                    y: y,
                    width: travellerWidth,
                    height: height
                });
                var ariaLabelBrush = ariaLabel || "Min value: ".concat((_data$startIndex = data[startIndex]) === null || _data$startIndex === void 0 ? void 0 : _data$startIndex.name, ", Max value: ").concat((_data$endIndex = data[endIndex]) === null || _data$endIndex === void 0 ? void 0 : _data$endIndex.name);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    tabIndex: 0,
                    role: "slider",
                    "aria-label": ariaLabelBrush,
                    "aria-valuenow": travellerX,
                    className: "recharts-brush-traveller",
                    onMouseEnter: this.handleEnterSlideOrTraveller,
                    onMouseLeave: this.handleLeaveSlideOrTraveller,
                    onMouseDown: this.travellerDragStartHandlers[id],
                    onTouchStart: this.travellerDragStartHandlers[id],
                    onKeyDown: function onKeyDown(e) {
                        if (![
                            'ArrowLeft',
                            'ArrowRight'
                        ].includes(e.key)) return;
                        e.preventDefault();
                        e.stopPropagation();
                        _this3.handleTravellerMoveKeyboard(e.key === 'ArrowRight' ? 1 : -1, id);
                    },
                    onFocus: function onFocus() {
                        _this3.setState({
                            isTravellerFocused: true
                        });
                    },
                    onBlur: function onBlur() {
                        _this3.setState({
                            isTravellerFocused: false
                        });
                    },
                    style: {
                        cursor: 'col-resize'
                    }
                }, Brush.renderTraveller(traveller, travellerProps));
            }
        },
        {
            key: "renderSlide",
            value: function renderSlide(startX, endX) {
                var _this$props9 = this.props, y = _this$props9.y, height = _this$props9.height, stroke = _this$props9.stroke, travellerWidth = _this$props9.travellerWidth;
                var x = Math.min(startX, endX) + travellerWidth;
                var width = Math.max(Math.abs(endX - startX) - travellerWidth, 0);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                    className: "recharts-brush-slide",
                    onMouseEnter: this.handleEnterSlideOrTraveller,
                    onMouseLeave: this.handleLeaveSlideOrTraveller,
                    onMouseDown: this.handleSlideDragStart,
                    onTouchStart: this.handleSlideDragStart,
                    style: {
                        cursor: 'move'
                    },
                    stroke: "none",
                    fill: stroke,
                    fillOpacity: 0.2,
                    x: x,
                    y: y,
                    width: width,
                    height: height
                });
            }
        },
        {
            key: "renderText",
            value: function renderText() {
                var _this$props10 = this.props, startIndex = _this$props10.startIndex, endIndex = _this$props10.endIndex, y = _this$props10.y, height = _this$props10.height, travellerWidth = _this$props10.travellerWidth, stroke = _this$props10.stroke;
                var _this$state4 = this.state, startX = _this$state4.startX, endX = _this$state4.endX;
                var offset = 5;
                var attrs = {
                    pointerEvents: 'none',
                    fill: stroke
                };
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: "recharts-brush-texts"
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({
                    textAnchor: "end",
                    verticalAnchor: "middle",
                    x: Math.min(startX, endX) - offset,
                    y: y + height / 2
                }, attrs), this.getTextOfTick(startIndex)), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({
                    textAnchor: "start",
                    verticalAnchor: "middle",
                    x: Math.max(startX, endX) + travellerWidth + offset,
                    y: y + height / 2
                }, attrs), this.getTextOfTick(endIndex)));
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props11 = this.props, data = _this$props11.data, className = _this$props11.className, children = _this$props11.children, x = _this$props11.x, y = _this$props11.y, width = _this$props11.width, height = _this$props11.height, alwaysShowText = _this$props11.alwaysShowText;
                var _this$state5 = this.state, startX = _this$state5.startX, endX = _this$state5.endX, isTextActive = _this$state5.isTextActive, isSlideMoving = _this$state5.isSlideMoving, isTravellerMoving = _this$state5.isTravellerMoving, isTravellerFocused = _this$state5.isTravellerFocused;
                if (!data || !data.length || !(0, _dataUtils.isNumber)(x) || !(0, _dataUtils.isNumber)(y) || !(0, _dataUtils.isNumber)(width) || !(0, _dataUtils.isNumber)(height) || width <= 0 || height <= 0) return null;
                var layerClass = (0, _clsxDefault.default)('recharts-brush', className);
                var isPanoramic = (0, _reactDefault.default).Children.count(children) === 1;
                var style = (0, _cssPrefixUtils.generatePrefixStyle)('userSelect', 'none');
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: layerClass,
                    onMouseLeave: this.handleLeaveWrapper,
                    onTouchMove: this.handleTouchMove,
                    style: style
                }, this.renderBackground(), isPanoramic && this.renderPanorama(), this.renderSlide(startX, endX), this.renderTravellerLayer(startX, 'startX'), this.renderTravellerLayer(endX, 'endX'), (isTextActive || isSlideMoving || isTravellerMoving || isTravellerFocused || alwaysShowText) && this.renderText());
            }
        }
    ], [
        {
            key: "renderDefaultTraveller",
            value: function renderDefaultTraveller(props) {
                var x = props.x, y = props.y, width = props.width, height = props.height, stroke = props.stroke;
                var lineY = Math.floor(y + height / 2) - 1;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                    x: x,
                    y: y,
                    width: width,
                    height: height,
                    fill: stroke,
                    stroke: "none"
                }), /*#__PURE__*/ (0, _reactDefault.default).createElement("line", {
                    x1: x + 1,
                    y1: lineY,
                    x2: x + width - 1,
                    y2: lineY,
                    fill: "none",
                    stroke: "#fff"
                }), /*#__PURE__*/ (0, _reactDefault.default).createElement("line", {
                    x1: x + 1,
                    y1: lineY + 2,
                    x2: x + width - 1,
                    y2: lineY + 2,
                    fill: "none",
                    stroke: "#fff"
                }));
            }
        },
        {
            key: "renderTraveller",
            value: function renderTraveller(option, props) {
                var rectangle;
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) rectangle = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                else if ((0, _isFunctionDefault.default)(option)) rectangle = option(props);
                else rectangle = Brush.renderDefaultTraveller(props);
                return rectangle;
            }
        },
        {
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, prevState) {
                var data = nextProps.data, width = nextProps.width, x = nextProps.x, travellerWidth = nextProps.travellerWidth, updateId = nextProps.updateId, startIndex = nextProps.startIndex, endIndex = nextProps.endIndex;
                if (data !== prevState.prevData || updateId !== prevState.prevUpdateId) return _objectSpread({
                    prevData: data,
                    prevTravellerWidth: travellerWidth,
                    prevUpdateId: updateId,
                    prevX: x,
                    prevWidth: width
                }, data && data.length ? createScale({
                    data: data,
                    width: width,
                    x: x,
                    travellerWidth: travellerWidth,
                    startIndex: startIndex,
                    endIndex: endIndex
                }) : {
                    scale: null,
                    scaleValues: null
                });
                if (prevState.scale && (width !== prevState.prevWidth || x !== prevState.prevX || travellerWidth !== prevState.prevTravellerWidth)) {
                    prevState.scale.range([
                        x,
                        x + width - travellerWidth
                    ]);
                    var scaleValues = prevState.scale.domain().map(function(entry) {
                        return prevState.scale(entry);
                    });
                    return {
                        prevData: data,
                        prevTravellerWidth: travellerWidth,
                        prevUpdateId: updateId,
                        prevX: x,
                        prevWidth: width,
                        startX: prevState.scale(nextProps.startIndex),
                        endX: prevState.scale(nextProps.endIndex),
                        scaleValues: scaleValues
                    };
                }
                return null;
            }
        },
        {
            key: "getIndexInRange",
            value: function getIndexInRange(valueRange, x) {
                var len = valueRange.length;
                var start = 0;
                var end = len - 1;
                while(end - start > 1){
                    var middle = Math.floor((start + end) / 2);
                    if (valueRange[middle] > x) end = middle;
                    else start = middle;
                }
                return x >= valueRange[end] ? end : start;
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(Brush, "displayName", 'Brush');
_defineProperty(Brush, "defaultProps", {
    height: 40,
    travellerWidth: 5,
    gap: 1,
    fill: '#fff',
    stroke: '#666',
    padding: {
        top: 1,
        right: 1,
        bottom: 1,
        left: 1
    },
    leaveTimeOut: 1000,
    alwaysShowText: false
});

},{"react":"jMk1U","clsx":"dOSJC","victory-vendor/d3-scale":"9qNmw","lodash/isFunction":"6aeG3","lodash/range":"9ZN9p","../container/Layer":"dLJ3P","../component/Text":"9kjUm","../util/ChartUtils":"58wJX","../util/DataUtils":"sgnJK","../util/CssPrefixUtils":"kTaeV","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9ZN9p":[function(require,module,exports,__globalThis) {
var createRange = require("1232c42be39f64d6");
/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */ var range = createRange();
module.exports = range;

},{"1232c42be39f64d6":"erdFY"}],"erdFY":[function(require,module,exports,__globalThis) {
var baseRange = require("f5c6552fbc38341a"), isIterateeCall = require("ae36f017fbc9946"), toFinite = require("c59818521cb53c6a");
/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */ function createRange(fromRight) {
    return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) end = step = undefined;
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
            end = start;
            start = 0;
        } else end = toFinite(end);
        step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
        return baseRange(start, end, step, fromRight);
    };
}
module.exports = createRange;

},{"f5c6552fbc38341a":"cUkvQ","ae36f017fbc9946":"bJ7Iv","c59818521cb53c6a":"6NUnX"}],"cUkvQ":[function(require,module,exports,__globalThis) {
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeCeil = Math.ceil, nativeMax = Math.max;
/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */ function baseRange(start, end, step, fromRight) {
    var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length);
    while(length--){
        result[fromRight ? length : ++index] = start;
        start += step;
    }
    return result;
}
module.exports = baseRange;

},{}],"6NUnX":[function(require,module,exports,__globalThis) {
var toNumber = require("90c5878489629896");
/** Used as references for various `Number` constants. */ var INFINITY = 1 / 0, MAX_INTEGER = 1.7976931348623157e+308;
/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */ function toFinite(value) {
    if (!value) return value === 0 ? value : 0;
    value = toNumber(value);
    if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
    }
    return value === value ? value : 0;
}
module.exports = toFinite;

},{"90c5878489629896":"l3rQb"}],"kTaeV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "generatePrefixStyle", ()=>generatePrefixStyle);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var PREFIX_LIST = [
    'Webkit',
    'Moz',
    'O',
    'ms'
];
var generatePrefixStyle = function generatePrefixStyle(name, value) {
    if (!name) return null;
    var camelName = name.replace(/(\w)/, function(v) {
        return v.toUpperCase();
    });
    var result = PREFIX_LIST.reduce(function(res, entry) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, entry + camelName, value));
    }, {});
    result[name] = value;
    return result;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4RAeR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getEndPoints", ()=>getEndPoints);
parcelHelpers.export(exports, "ReferenceLine", ()=>ReferenceLine);
/**
 * @fileOverview Reference Line
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _some = require("lodash/some");
var _someDefault = parcelHelpers.interopDefault(_some);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _layer = require("../container/Layer");
var _label = require("../component/Label");
var _ifOverflowMatches = require("../util/IfOverflowMatches");
var _dataUtils = require("../util/DataUtils");
var _cartesianUtils = require("../util/CartesianUtils");
var _logUtils = require("../util/LogUtils");
var _reactUtils = require("../util/ReactUtils");
var _chartLayoutContext = require("../context/chartLayoutContext");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
/**
 * This excludes `viewBox` prop from svg for two reasons:
 * 1. The components wants viewBox of object type, and svg wants string
 *    - so there's a conflict, and the component will throw if it gets string
 * 2. Internally the component calls `filterProps` which filters the viewBox away anyway
 */ var renderLine = function renderLine(option, props) {
    var line;
    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) line = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
    else if ((0, _isFunctionDefault.default)(option)) line = option(props);
    else line = /*#__PURE__*/ (0, _reactDefault.default).createElement("line", _extends({}, props, {
        className: "recharts-reference-line-line"
    }));
    return line;
};
var getEndPoints = function getEndPoints(scales, isFixedX, isFixedY, isSegment, viewBox, position, xAxisOrientation, yAxisOrientation, props) {
    var x = viewBox.x, y = viewBox.y, width = viewBox.width, height = viewBox.height;
    if (isFixedY) {
        var yCoord = props.y;
        var coord = scales.y.apply(yCoord, {
            position: position
        });
        if ((0, _ifOverflowMatches.ifOverflowMatches)(props, 'discard') && !scales.y.isInRange(coord)) return null;
        var points = [
            {
                x: x + width,
                y: coord
            },
            {
                x: x,
                y: coord
            }
        ];
        return yAxisOrientation === 'left' ? points.reverse() : points;
    }
    if (isFixedX) {
        var xCoord = props.x;
        var _coord = scales.x.apply(xCoord, {
            position: position
        });
        if ((0, _ifOverflowMatches.ifOverflowMatches)(props, 'discard') && !scales.x.isInRange(_coord)) return null;
        var _points = [
            {
                x: _coord,
                y: y + height
            },
            {
                x: _coord,
                y: y
            }
        ];
        return xAxisOrientation === 'top' ? _points.reverse() : _points;
    }
    if (isSegment) {
        var segment = props.segment;
        var _points2 = segment.map(function(p) {
            return scales.apply(p, {
                position: position
            });
        });
        if ((0, _ifOverflowMatches.ifOverflowMatches)(props, 'discard') && (0, _someDefault.default)(_points2, function(p) {
            return !scales.isInRange(p);
        })) return null;
        return _points2;
    }
    return null;
};
function ReferenceLineImpl(props) {
    var fixedX = props.x, fixedY = props.y, segment = props.segment, xAxisId = props.xAxisId, yAxisId = props.yAxisId, shape = props.shape, className = props.className, alwaysShow = props.alwaysShow;
    var clipPathId = (0, _chartLayoutContext.useClipPathId)();
    var xAxis = (0, _chartLayoutContext.useXAxisOrThrow)(xAxisId);
    var yAxis = (0, _chartLayoutContext.useYAxisOrThrow)(yAxisId);
    var viewBox = (0, _chartLayoutContext.useViewBox)();
    if (!clipPathId || !viewBox) return null;
    (0, _logUtils.warn)(alwaysShow === undefined, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
    var scales = (0, _cartesianUtils.createLabeledScales)({
        x: xAxis.scale,
        y: yAxis.scale
    });
    var isX = (0, _dataUtils.isNumOrStr)(fixedX);
    var isY = (0, _dataUtils.isNumOrStr)(fixedY);
    var isSegment = segment && segment.length === 2;
    var endPoints = getEndPoints(scales, isX, isY, isSegment, viewBox, props.position, xAxis.orientation, yAxis.orientation, props);
    if (!endPoints) return null;
    var _endPoints = _slicedToArray(endPoints, 2), _endPoints$ = _endPoints[0], x1 = _endPoints$.x, y1 = _endPoints$.y, _endPoints$2 = _endPoints[1], x2 = _endPoints$2.x, y2 = _endPoints$2.y;
    var clipPath = (0, _ifOverflowMatches.ifOverflowMatches)(props, 'hidden') ? "url(#".concat(clipPathId, ")") : undefined;
    var lineProps = _objectSpread(_objectSpread({
        clipPath: clipPath
    }, (0, _reactUtils.filterProps)(props, true)), {}, {
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2
    });
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
        className: (0, _clsxDefault.default)('recharts-reference-line', className)
    }, renderLine(shape, lineProps), (0, _label.Label).renderCallByParent(props, (0, _cartesianUtils.rectWithCoords)({
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2
    })));
}
var ReferenceLine = /*#__PURE__*/ function(_React$Component) {
    function ReferenceLine() {
        _classCallCheck(this, ReferenceLine);
        return _callSuper(this, ReferenceLine, arguments);
    }
    _inherits(ReferenceLine, _React$Component);
    return _createClass(ReferenceLine, [
        {
            key: "render",
            value: function render() {
                return /*#__PURE__*/ (0, _reactDefault.default).createElement(ReferenceLineImpl, this.props);
            }
        }
    ]);
}((0, _reactDefault.default).Component);
_defineProperty(ReferenceLine, "displayName", 'ReferenceLine');
_defineProperty(ReferenceLine, "defaultProps", {
    isFront: false,
    ifOverflow: 'discard',
    xAxisId: 0,
    yAxisId: 0,
    fill: 'none',
    stroke: '#ccc',
    fillOpacity: 1,
    strokeWidth: 1,
    position: 'middle'
});

},{"react":"jMk1U","lodash/isFunction":"6aeG3","lodash/some":"duDii","clsx":"dOSJC","../container/Layer":"dLJ3P","../component/Label":"b8wtn","../util/IfOverflowMatches":"jHwLu","../util/DataUtils":"sgnJK","../util/CartesianUtils":"dGbxK","../util/LogUtils":"2q6MA","../util/ReactUtils":"dvc7w","../context/chartLayoutContext":"dr08Y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"duDii":[function(require,module,exports,__globalThis) {
var arraySome = require("499d9ae1b712c84d"), baseIteratee = require("6137baa4d335eb2f"), baseSome = require("dffda66140b0b703"), isArray = require("21c688a994e48617"), isIterateeCall = require("86e6a8e9c3fc8343");
/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */ function some(collection, predicate, guard) {
    var func = isArray(collection) ? arraySome : baseSome;
    if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
    return func(collection, baseIteratee(predicate, 3));
}
module.exports = some;

},{"499d9ae1b712c84d":"3qKIL","6137baa4d335eb2f":"e6QHA","dffda66140b0b703":"5P4Pq","21c688a994e48617":"gqOzR","86e6a8e9c3fc8343":"bJ7Iv"}],"5P4Pq":[function(require,module,exports,__globalThis) {
var baseEach = require("fbf6b3dce93949f8");
/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */ function baseSome(collection, predicate) {
    var result;
    baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
    });
    return !!result;
}
module.exports = baseSome;

},{"fbf6b3dce93949f8":"hslDV"}],"jHwLu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ifOverflowMatches", ()=>ifOverflowMatches);
var ifOverflowMatches = function ifOverflowMatches(props, value) {
    var alwaysShow = props.alwaysShow;
    var ifOverflow = props.ifOverflow;
    if (alwaysShow) ifOverflow = 'extendDomain';
    return ifOverflow === value;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dGbxK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "formatAxisMap", ()=>formatAxisMap);
parcelHelpers.export(exports, "rectWithPoints", ()=>rectWithPoints);
parcelHelpers.export(exports, "rectWithCoords", ()=>rectWithCoords);
parcelHelpers.export(exports, "ScaleHelper", ()=>ScaleHelper);
parcelHelpers.export(exports, "createLabeledScales", ()=>createLabeledScales);
/** Normalizes the angle so that 0 <= angle < 180.
 * @param {number} angle Angle in degrees.
 * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */ parcelHelpers.export(exports, "normalizeAngle", ()=>normalizeAngle);
parcelHelpers.export(exports, "getAngledRectangleWidth", ()=>getAngledRectangleWidth);
var _mapValues = require("lodash/mapValues");
var _mapValuesDefault = parcelHelpers.interopDefault(_mapValues);
var _every = require("lodash/every");
var _everyDefault = parcelHelpers.interopDefault(_every);
var _chartUtils = require("./ChartUtils");
var _reactUtils = require("./ReactUtils");
var _dataUtils = require("./DataUtils");
var _bar = require("../cartesian/Bar");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {
    var width = props.width, height = props.height, layout = props.layout, children = props.children;
    var ids = Object.keys(axisMap);
    var steps = {
        left: offset.left,
        leftMirror: offset.left,
        right: width - offset.right,
        rightMirror: width - offset.right,
        top: offset.top,
        topMirror: offset.top,
        bottom: height - offset.bottom,
        bottomMirror: height - offset.bottom
    };
    var hasBar = !!(0, _reactUtils.findChildByType)(children, (0, _bar.Bar));
    return ids.reduce(function(result, id) {
        var axis = axisMap[id];
        var orientation = axis.orientation, domain = axis.domain, _axis$padding = axis.padding, padding = _axis$padding === void 0 ? {} : _axis$padding, mirror = axis.mirror, reversed = axis.reversed;
        var offsetKey = "".concat(orientation).concat(mirror ? 'Mirror' : '');
        var calculatedPadding, range, x, y, needSpace;
        if (axis.type === 'number' && (axis.padding === 'gap' || axis.padding === 'no-gap')) {
            var diff = domain[1] - domain[0];
            var smallestDistanceBetweenValues = Infinity;
            var sortedValues = axis.categoricalDomain.sort((0, _dataUtils.compareValues));
            sortedValues.forEach(function(value, index) {
                if (index > 0) smallestDistanceBetweenValues = Math.min((value || 0) - (sortedValues[index - 1] || 0), smallestDistanceBetweenValues);
            });
            if (Number.isFinite(smallestDistanceBetweenValues)) {
                var smallestDistanceInPercent = smallestDistanceBetweenValues / diff;
                var rangeWidth = axis.layout === 'vertical' ? offset.height : offset.width;
                if (axis.padding === 'gap') calculatedPadding = smallestDistanceInPercent * rangeWidth / 2;
                if (axis.padding === 'no-gap') {
                    var gap = (0, _dataUtils.getPercentValue)(props.barCategoryGap, smallestDistanceInPercent * rangeWidth);
                    var halfBand = smallestDistanceInPercent * rangeWidth / 2;
                    calculatedPadding = halfBand - gap - (halfBand - gap) / rangeWidth * gap;
                }
            }
        }
        if (axisType === 'xAxis') range = [
            offset.left + (padding.left || 0) + (calculatedPadding || 0),
            offset.left + offset.width - (padding.right || 0) - (calculatedPadding || 0)
        ];
        else if (axisType === 'yAxis') range = layout === 'horizontal' ? [
            offset.top + offset.height - (padding.bottom || 0),
            offset.top + (padding.top || 0)
        ] : [
            offset.top + (padding.top || 0) + (calculatedPadding || 0),
            offset.top + offset.height - (padding.bottom || 0) - (calculatedPadding || 0)
        ];
        else range = axis.range;
        if (reversed) range = [
            range[1],
            range[0]
        ];
        var _parseScale = (0, _chartUtils.parseScale)(axis, chartName, hasBar), scale = _parseScale.scale, realScaleType = _parseScale.realScaleType;
        scale.domain(domain).range(range);
        (0, _chartUtils.checkDomainOfScale)(scale);
        var ticks = (0, _chartUtils.getTicksOfScale)(scale, _objectSpread(_objectSpread({}, axis), {}, {
            realScaleType: realScaleType
        }));
        if (axisType === 'xAxis') {
            needSpace = orientation === 'top' && !mirror || orientation === 'bottom' && mirror;
            x = offset.left;
            y = steps[offsetKey] - needSpace * axis.height;
        } else if (axisType === 'yAxis') {
            needSpace = orientation === 'left' && !mirror || orientation === 'right' && mirror;
            x = steps[offsetKey] - needSpace * axis.width;
            y = offset.top;
        }
        var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {
            realScaleType: realScaleType,
            x: x,
            y: y,
            scale: scale,
            width: axisType === 'xAxis' ? offset.width : axis.width,
            height: axisType === 'yAxis' ? offset.height : axis.height
        });
        finalAxis.bandSize = (0, _chartUtils.getBandSizeOfAxis)(finalAxis, ticks);
        if (!axis.hide && axisType === 'xAxis') steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;
        else if (!axis.hide) steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));
    }, {});
};
var rectWithPoints = function rectWithPoints(_ref, _ref2) {
    var x1 = _ref.x, y1 = _ref.y;
    var x2 = _ref2.x, y2 = _ref2.y;
    return {
        x: Math.min(x1, x2),
        y: Math.min(y1, y2),
        width: Math.abs(x2 - x1),
        height: Math.abs(y2 - y1)
    };
};
var rectWithCoords = function rectWithCoords(_ref3) {
    var x1 = _ref3.x1, y1 = _ref3.y1, x2 = _ref3.x2, y2 = _ref3.y2;
    return rectWithPoints({
        x: x1,
        y: y1
    }, {
        x: x2,
        y: y2
    });
};
var ScaleHelper = /*#__PURE__*/ function() {
    function ScaleHelper(scale) {
        _classCallCheck(this, ScaleHelper);
        this.scale = scale;
    }
    return _createClass(ScaleHelper, [
        {
            key: "domain",
            get: function get() {
                return this.scale.domain;
            }
        },
        {
            key: "range",
            get: function get() {
                return this.scale.range;
            }
        },
        {
            key: "rangeMin",
            get: function get() {
                return this.range()[0];
            }
        },
        {
            key: "rangeMax",
            get: function get() {
                return this.range()[1];
            }
        },
        {
            key: "bandwidth",
            get: function get() {
                return this.scale.bandwidth;
            }
        },
        {
            key: "apply",
            value: function apply(value) {
                var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, bandAware = _ref4.bandAware, position = _ref4.position;
                if (value === undefined) return undefined;
                if (position) switch(position){
                    case 'start':
                        return this.scale(value);
                    case 'middle':
                        var offset = this.bandwidth ? this.bandwidth() / 2 : 0;
                        return this.scale(value) + offset;
                    case 'end':
                        var _offset = this.bandwidth ? this.bandwidth() : 0;
                        return this.scale(value) + _offset;
                    default:
                        return this.scale(value);
                }
                if (bandAware) {
                    var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;
                    return this.scale(value) + _offset2;
                }
                return this.scale(value);
            }
        },
        {
            key: "isInRange",
            value: function isInRange(value) {
                var range = this.range();
                var first = range[0];
                var last = range[range.length - 1];
                return first <= last ? value >= first && value <= last : value >= last && value <= first;
            }
        }
    ], [
        {
            key: "create",
            value: function create(obj) {
                return new ScaleHelper(obj);
            }
        }
    ]);
}();
_defineProperty(ScaleHelper, "EPS", 1e-4);
var createLabeledScales = function createLabeledScales(options) {
    var scales = Object.keys(options).reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, ScaleHelper.create(options[key])));
    }, {});
    return _objectSpread(_objectSpread({}, scales), {}, {
        apply: function apply(coord) {
            var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, bandAware = _ref5.bandAware, position = _ref5.position;
            return (0, _mapValuesDefault.default)(coord, function(value, label) {
                return scales[label].apply(value, {
                    bandAware: bandAware,
                    position: position
                });
            });
        },
        isInRange: function isInRange(coord) {
            return (0, _everyDefault.default)(coord, function(value, label) {
                return scales[label].isInRange(value);
            });
        }
    });
};
function normalizeAngle(angle) {
    return (angle % 180 + 180) % 180;
}
var getAngledRectangleWidth = function getAngledRectangleWidth(_ref6) {
    var width = _ref6.width, height = _ref6.height;
    var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    // Ensure angle is >= 0 && < 180
    var normalizedAngle = normalizeAngle(angle);
    var angleRadians = normalizedAngle * Math.PI / 180;
    /* Depending on the height and width of the rectangle, we may need to use different formulas to calculate the angled
   * width. This threshold defines when each formula should kick in. */ var angleThreshold = Math.atan(height / width);
    var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);
    return Math.abs(angledWidth);
};

},{"lodash/mapValues":"33J4C","lodash/every":"iYfUu","./ChartUtils":"58wJX","./ReactUtils":"dvc7w","./DataUtils":"sgnJK","../cartesian/Bar":"M4yHZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"33J4C":[function(require,module,exports,__globalThis) {
var baseAssignValue = require("a3dd03284854d1b5"), baseForOwn = require("3fe946fb5f45d4e9"), baseIteratee = require("8671a2b480ab95e2");
/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */ function mapValues(object, iteratee) {
    var result = {};
    iteratee = baseIteratee(iteratee, 3);
    baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
    });
    return result;
}
module.exports = mapValues;

},{"a3dd03284854d1b5":"gYfDm","3fe946fb5f45d4e9":"9iUkC","8671a2b480ab95e2":"e6QHA"}],"gYfDm":[function(require,module,exports,__globalThis) {
var defineProperty = require("57c6267f904aee0a");
/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */ function baseAssignValue(object, key, value) {
    if (key == '__proto__' && defineProperty) defineProperty(object, key, {
        'configurable': true,
        'enumerable': true,
        'value': value,
        'writable': true
    });
    else object[key] = value;
}
module.exports = baseAssignValue;

},{"57c6267f904aee0a":"2rWew"}],"iYfUu":[function(require,module,exports,__globalThis) {
var arrayEvery = require("35998aa94ab060f1"), baseEvery = require("44e7ab95f8b26a55"), baseIteratee = require("1d5621a35ca53be0"), isArray = require("e0e4c2e424adb44f"), isIterateeCall = require("2f9b3b0ab0300132");
/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */ function every(collection, predicate, guard) {
    var func = isArray(collection) ? arrayEvery : baseEvery;
    if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
    return func(collection, baseIteratee(predicate, 3));
}
module.exports = every;

},{"35998aa94ab060f1":"jPi7M","44e7ab95f8b26a55":"6ocJK","1d5621a35ca53be0":"e6QHA","e0e4c2e424adb44f":"gqOzR","2f9b3b0ab0300132":"bJ7Iv"}],"jPi7M":[function(require,module,exports,__globalThis) {
/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */ function arrayEvery(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length;
    while(++index < length){
        if (!predicate(array[index], index, array)) return false;
    }
    return true;
}
module.exports = arrayEvery;

},{}],"6ocJK":[function(require,module,exports,__globalThis) {
var baseEach = require("88b2ceed9e7ead7a");
/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */ function baseEvery(collection, predicate) {
    var result = true;
    baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
    });
    return result;
}
module.exports = baseEvery;

},{"88b2ceed9e7ead7a":"hslDV"}],"M4yHZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Bar", ()=>Bar);
/**
 * @fileOverview Render a group of bar
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _reactSmooth = require("react-smooth");
var _reactSmoothDefault = parcelHelpers.interopDefault(_reactSmooth);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _layer = require("../container/Layer");
var _errorBar = require("./ErrorBar");
var _cell = require("../component/Cell");
var _labelList = require("../component/LabelList");
var _dataUtils = require("../util/DataUtils");
var _reactUtils = require("../util/ReactUtils");
var _global = require("../util/Global");
var _chartUtils = require("../util/ChartUtils");
var _types = require("../util/types");
var _barUtils = require("../util/BarUtils");
var _excluded = [
    "value",
    "background"
];
var _Bar;
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var Bar = /*#__PURE__*/ function(_PureComponent) {
    function Bar() {
        var _this;
        _classCallCheck(this, Bar);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, Bar, [].concat(args));
        _defineProperty(_this, "state", {
            isAnimationFinished: false
        });
        _defineProperty(_this, "id", (0, _dataUtils.uniqueId)('recharts-bar-'));
        _defineProperty(_this, "handleAnimationEnd", function() {
            var onAnimationEnd = _this.props.onAnimationEnd;
            _this.setState({
                isAnimationFinished: true
            });
            if (onAnimationEnd) onAnimationEnd();
        });
        _defineProperty(_this, "handleAnimationStart", function() {
            var onAnimationStart = _this.props.onAnimationStart;
            _this.setState({
                isAnimationFinished: false
            });
            if (onAnimationStart) onAnimationStart();
        });
        return _this;
    }
    _inherits(Bar, _PureComponent);
    return _createClass(Bar, [
        {
            key: "renderRectanglesStatically",
            value: function renderRectanglesStatically(data) {
                var _this2 = this;
                var _this$props = this.props, shape = _this$props.shape, dataKey = _this$props.dataKey, activeIndex = _this$props.activeIndex, activeBar = _this$props.activeBar;
                var baseProps = (0, _reactUtils.filterProps)(this.props, false);
                return data && data.map(function(entry, i) {
                    var isActive = i === activeIndex;
                    var option = isActive ? activeBar : shape;
                    var props = _objectSpread(_objectSpread(_objectSpread({}, baseProps), entry), {}, {
                        isActive: isActive,
                        option: option,
                        index: i,
                        dataKey: dataKey,
                        onAnimationStart: _this2.handleAnimationStart,
                        onAnimationEnd: _this2.handleAnimationEnd
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                        className: "recharts-bar-rectangle"
                    }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i), {
                        // https://github.com/recharts/recharts/issues/5415
                        // eslint-disable-next-line react/no-array-index-key
                        key: "rectangle-".concat(entry === null || entry === void 0 ? void 0 : entry.x, "-").concat(entry === null || entry === void 0 ? void 0 : entry.y, "-").concat(entry === null || entry === void 0 ? void 0 : entry.value, "-").concat(i)
                    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _barUtils.BarRectangle), props));
                });
            }
        },
        {
            key: "renderRectanglesWithAnimation",
            value: function renderRectanglesWithAnimation() {
                var _this3 = this;
                var _this$props2 = this.props, data = _this$props2.data, layout = _this$props2.layout, isAnimationActive = _this$props2.isAnimationActive, animationBegin = _this$props2.animationBegin, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, animationId = _this$props2.animationId;
                var prevData = this.state.prevData;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
                    begin: animationBegin,
                    duration: animationDuration,
                    isActive: isAnimationActive,
                    easing: animationEasing,
                    from: {
                        t: 0
                    },
                    to: {
                        t: 1
                    },
                    key: "bar-".concat(animationId),
                    onAnimationEnd: this.handleAnimationEnd,
                    onAnimationStart: this.handleAnimationStart
                }, function(_ref) {
                    var t = _ref.t;
                    var stepData = data.map(function(entry, index) {
                        var prev = prevData && prevData[index];
                        if (prev) {
                            var interpolatorX = (0, _dataUtils.interpolateNumber)(prev.x, entry.x);
                            var interpolatorY = (0, _dataUtils.interpolateNumber)(prev.y, entry.y);
                            var interpolatorWidth = (0, _dataUtils.interpolateNumber)(prev.width, entry.width);
                            var interpolatorHeight = (0, _dataUtils.interpolateNumber)(prev.height, entry.height);
                            return _objectSpread(_objectSpread({}, entry), {}, {
                                x: interpolatorX(t),
                                y: interpolatorY(t),
                                width: interpolatorWidth(t),
                                height: interpolatorHeight(t)
                            });
                        }
                        if (layout === 'horizontal') {
                            var _interpolatorHeight = (0, _dataUtils.interpolateNumber)(0, entry.height);
                            var h = _interpolatorHeight(t);
                            return _objectSpread(_objectSpread({}, entry), {}, {
                                y: entry.y + entry.height - h,
                                height: h
                            });
                        }
                        var interpolator = (0, _dataUtils.interpolateNumber)(0, entry.width);
                        var w = interpolator(t);
                        return _objectSpread(_objectSpread({}, entry), {}, {
                            width: w
                        });
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), null, _this3.renderRectanglesStatically(stepData));
                });
            }
        },
        {
            key: "renderRectangles",
            value: function renderRectangles() {
                var _this$props3 = this.props, data = _this$props3.data, isAnimationActive = _this$props3.isAnimationActive;
                var prevData = this.state.prevData;
                if (isAnimationActive && data && data.length && (!prevData || !(0, _isEqualDefault.default)(prevData, data))) return this.renderRectanglesWithAnimation();
                return this.renderRectanglesStatically(data);
            }
        },
        {
            key: "renderBackground",
            value: function renderBackground() {
                var _this4 = this;
                var _this$props4 = this.props, data = _this$props4.data, dataKey = _this$props4.dataKey, activeIndex = _this$props4.activeIndex;
                var backgroundProps = (0, _reactUtils.filterProps)(this.props.background, false);
                return data.map(function(entry, i) {
                    var value = entry.value, background = entry.background, rest = _objectWithoutProperties(entry, _excluded);
                    if (!background) return null;
                    var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), {}, {
                        fill: '#eee'
                    }, background), backgroundProps), (0, _types.adaptEventsOfChild)(_this4.props, entry, i)), {}, {
                        onAnimationStart: _this4.handleAnimationStart,
                        onAnimationEnd: _this4.handleAnimationEnd,
                        dataKey: dataKey,
                        index: i,
                        className: 'recharts-bar-background-rectangle'
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _barUtils.BarRectangle), _extends({
                        key: "background-bar-".concat(i),
                        option: _this4.props.background,
                        isActive: i === activeIndex
                    }, props));
                });
            }
        },
        {
            key: "renderErrorBar",
            value: function renderErrorBar(needClip, clipPathId) {
                if (this.props.isAnimationActive && !this.state.isAnimationFinished) return null;
                var _this$props5 = this.props, data = _this$props5.data, xAxis = _this$props5.xAxis, yAxis = _this$props5.yAxis, layout = _this$props5.layout, children = _this$props5.children;
                var errorBarItems = (0, _reactUtils.findAllByType)(children, (0, _errorBar.ErrorBar));
                if (!errorBarItems) return null;
                var offset = layout === 'vertical' ? data[0].height / 2 : data[0].width / 2;
                var dataPointFormatter = function dataPointFormatter(dataPoint, dataKey) {
                    /**
         * if the value coming from `getComposedData` is an array then this is a stacked bar chart.
         * arr[1] represents end value of the bar since the data is in the form of [startValue, endValue].
         * */ var value = Array.isArray(dataPoint.value) ? dataPoint.value[1] : dataPoint.value;
                    return {
                        x: dataPoint.x,
                        y: dataPoint.y,
                        value: value,
                        errorVal: (0, _chartUtils.getValueByDataKey)(dataPoint, dataKey)
                    };
                };
                var errorBarProps = {
                    clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
                };
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), errorBarProps, errorBarItems.map(function(item) {
                    return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(item, {
                        key: "error-bar-".concat(clipPathId, "-").concat(item.props.dataKey),
                        data: data,
                        xAxis: xAxis,
                        yAxis: yAxis,
                        layout: layout,
                        offset: offset,
                        dataPointFormatter: dataPointFormatter
                    });
                }));
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props6 = this.props, hide = _this$props6.hide, data = _this$props6.data, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, left = _this$props6.left, top = _this$props6.top, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, background = _this$props6.background, id = _this$props6.id;
                if (hide || !data || !data.length) return null;
                var isAnimationFinished = this.state.isAnimationFinished;
                var layerClass = (0, _clsxDefault.default)('recharts-bar', className);
                var needClipX = xAxis && xAxis.allowDataOverflow;
                var needClipY = yAxis && yAxis.allowDataOverflow;
                var needClip = needClipX || needClipY;
                var clipPathId = (0, _isNilDefault.default)(id) ? this.id : id;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: layerClass
                }, needClipX || needClipY ? /*#__PURE__*/ (0, _reactDefault.default).createElement("defs", null, /*#__PURE__*/ (0, _reactDefault.default).createElement("clipPath", {
                    id: "clipPath-".concat(clipPathId)
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                    x: needClipX ? left : left - width / 2,
                    y: needClipY ? top : top - height / 2,
                    width: needClipX ? width : width * 2,
                    height: needClipY ? height : height * 2
                }))) : null, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: "recharts-bar-rectangles",
                    clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
                }, background ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && (0, _labelList.LabelList).renderCallByParent(this.props, data));
            }
        }
    ], [
        {
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, prevState) {
                if (nextProps.animationId !== prevState.prevAnimationId) return {
                    prevAnimationId: nextProps.animationId,
                    curData: nextProps.data,
                    prevData: prevState.curData
                };
                if (nextProps.data !== prevState.curData) return {
                    curData: nextProps.data
                };
                return null;
            }
        }
    ]);
}((0, _react.PureComponent));
_Bar = Bar;
_defineProperty(Bar, "displayName", 'Bar');
_defineProperty(Bar, "defaultProps", {
    xAxisId: 0,
    yAxisId: 0,
    legendType: 'rect',
    minPointSize: 0,
    hide: false,
    data: [],
    layout: 'vertical',
    activeBar: false,
    isAnimationActive: !(0, _global.Global).isSsr,
    animationBegin: 0,
    animationDuration: 400,
    animationEasing: 'ease'
});
/**
 * Compose the data of each group
 * @param {Object} props Props for the component
 * @param {Object} item        An instance of Bar
 * @param {Array} barPosition  The offset and size of each bar
 * @param {Object} xAxis       The configuration of x-axis
 * @param {Object} yAxis       The configuration of y-axis
 * @param {Array} stackedData  The stacked data of a bar item
 * @return{Array} Composed data
 */ _defineProperty(Bar, "getComposedData", function(_ref2) {
    var props = _ref2.props, item = _ref2.item, barPosition = _ref2.barPosition, bandSize = _ref2.bandSize, xAxis = _ref2.xAxis, yAxis = _ref2.yAxis, xAxisTicks = _ref2.xAxisTicks, yAxisTicks = _ref2.yAxisTicks, stackedData = _ref2.stackedData, dataStartIndex = _ref2.dataStartIndex, displayedData = _ref2.displayedData, offset = _ref2.offset;
    var pos = (0, _chartUtils.findPositionOfBar)(barPosition, item);
    if (!pos) return null;
    var layout = props.layout;
    var itemDefaultProps = item.type.defaultProps;
    var itemProps = itemDefaultProps !== undefined ? _objectSpread(_objectSpread({}, itemDefaultProps), item.props) : item.props;
    var dataKey = itemProps.dataKey, children = itemProps.children, minPointSizeProp = itemProps.minPointSize;
    var numericAxis = layout === 'horizontal' ? yAxis : xAxis;
    var stackedDomain = stackedData ? numericAxis.scale.domain() : null;
    var baseValue = (0, _chartUtils.getBaseValueOfBar)({
        numericAxis: numericAxis
    });
    var cells = (0, _reactUtils.findAllByType)(children, (0, _cell.Cell));
    var rects = displayedData.map(function(entry, index) {
        var value, x, y, width, height, background;
        if (stackedData) value = (0, _chartUtils.truncateByDomain)(stackedData[dataStartIndex + index], stackedDomain);
        else {
            value = (0, _chartUtils.getValueByDataKey)(entry, dataKey);
            if (!Array.isArray(value)) value = [
                baseValue,
                value
            ];
        }
        var minPointSize = (0, _barUtils.minPointSizeCallback)(minPointSizeProp, _Bar.defaultProps.minPointSize)(value[1], index);
        if (layout === 'horizontal') {
            var _ref4;
            var _ref3 = [
                yAxis.scale(value[0]),
                yAxis.scale(value[1])
            ], baseValueScale = _ref3[0], currentValueScale = _ref3[1];
            x = (0, _chartUtils.getCateCoordinateOfBar)({
                axis: xAxis,
                ticks: xAxisTicks,
                bandSize: bandSize,
                offset: pos.offset,
                entry: entry,
                index: index
            });
            y = (_ref4 = currentValueScale !== null && currentValueScale !== void 0 ? currentValueScale : baseValueScale) !== null && _ref4 !== void 0 ? _ref4 : undefined;
            width = pos.size;
            var computedHeight = baseValueScale - currentValueScale;
            height = Number.isNaN(computedHeight) ? 0 : computedHeight;
            background = {
                x: x,
                y: yAxis.y,
                width: width,
                height: yAxis.height
            };
            if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {
                var delta = (0, _dataUtils.mathSign)(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));
                y -= delta;
                height += delta;
            }
        } else {
            var _ref5 = [
                xAxis.scale(value[0]),
                xAxis.scale(value[1])
            ], _baseValueScale = _ref5[0], _currentValueScale = _ref5[1];
            x = _baseValueScale;
            y = (0, _chartUtils.getCateCoordinateOfBar)({
                axis: yAxis,
                ticks: yAxisTicks,
                bandSize: bandSize,
                offset: pos.offset,
                entry: entry,
                index: index
            });
            width = _currentValueScale - _baseValueScale;
            height = pos.size;
            background = {
                x: xAxis.x,
                y: y,
                width: xAxis.width,
                height: height
            };
            if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {
                var _delta = (0, _dataUtils.mathSign)(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));
                width += _delta;
            }
        }
        return _objectSpread(_objectSpread(_objectSpread({}, entry), {}, {
            x: x,
            y: y,
            width: width,
            height: height,
            value: stackedData ? value : value[1],
            payload: entry,
            background: background
        }, cells && cells[index] && cells[index].props), {}, {
            tooltipPayload: [
                (0, _chartUtils.getTooltipItem)(item, entry)
            ],
            tooltipPosition: {
                x: x + width / 2,
                y: y + height / 2
            }
        });
    });
    return _objectSpread({
        data: rects,
        layout: layout
    }, offset);
});

},{"react":"jMk1U","clsx":"dOSJC","react-smooth":"2I5y4","lodash/isEqual":"ep5zv","lodash/isNil":"66cvp","../container/Layer":"dLJ3P","./ErrorBar":"exPuO","../component/Cell":"fGup7","../component/LabelList":"gF2dN","../util/DataUtils":"sgnJK","../util/ReactUtils":"dvc7w","../util/Global":"7oO43","../util/ChartUtils":"58wJX","../util/types":"j2YO8","../util/BarUtils":"knFP6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"knFP6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BarRectangle", ()=>BarRectangle);
parcelHelpers.export(exports, "minPointSizeCallback", ()=>minPointSizeCallback);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tinyInvariant = require("tiny-invariant");
var _tinyInvariantDefault = parcelHelpers.interopDefault(_tinyInvariant);
var _activeShapeUtils = require("./ActiveShapeUtils");
var _excluded = [
    "x",
    "y"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
// Rectangle props is expecting x, y, height, width as numbers, name as a string, and radius as a custom type
// When props are being spread in from a user defined component in Bar,
// the prop types of an SVGElement have these typed as something else.
// This function will return the passed in props
// along with x, y, height as numbers, name as a string, and radius as number | [number, number, number, number]
function typeguardBarRectangleProps(_ref, props) {
    var xProp = _ref.x, yProp = _ref.y, option = _objectWithoutProperties(_ref, _excluded);
    var xValue = "".concat(xProp);
    var x = parseInt(xValue, 10);
    var yValue = "".concat(yProp);
    var y = parseInt(yValue, 10);
    var heightValue = "".concat(props.height || option.height);
    var height = parseInt(heightValue, 10);
    var widthValue = "".concat(props.width || option.width);
    var width = parseInt(widthValue, 10);
    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props), option), x ? {
        x: x
    } : {}), y ? {
        y: y
    } : {}), {}, {
        height: height,
        width: width,
        name: props.name,
        radius: props.radius
    });
}
function BarRectangle(props) {
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _activeShapeUtils.Shape), _extends({
        shapeType: "rectangle",
        propTransformer: typeguardBarRectangleProps,
        activeClassName: "recharts-active-bar"
    }, props));
}
var minPointSizeCallback = function minPointSizeCallback(minPointSize) {
    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return function(value, index) {
        if (typeof minPointSize === 'number') return minPointSize;
        var isValueNumber = typeof value === 'number';
        if (isValueNumber) return minPointSize(value, index);
        !isValueNumber && (0, _tinyInvariantDefault.default)(false, "minPointSize callback function received a value with type of ".concat(_typeof(value), ". Currently only numbers are supported."));
        return defaultValue;
    };
};

},{"react":"jMk1U","tiny-invariant":"ks8CW","./ActiveShapeUtils":"48bBV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dr08Y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "XAxisContext", ()=>XAxisContext);
parcelHelpers.export(exports, "YAxisContext", ()=>YAxisContext);
parcelHelpers.export(exports, "ViewBoxContext", ()=>ViewBoxContext);
parcelHelpers.export(exports, "OffsetContext", ()=>OffsetContext);
parcelHelpers.export(exports, "ClipPathIdContext", ()=>ClipPathIdContext);
parcelHelpers.export(exports, "ChartHeightContext", ()=>ChartHeightContext);
parcelHelpers.export(exports, "ChartWidthContext", ()=>ChartWidthContext);
parcelHelpers.export(exports, "ChartLayoutContextProvider", ()=>ChartLayoutContextProvider);
parcelHelpers.export(exports, "useClipPathId", ()=>useClipPathId);
parcelHelpers.export(exports, "useXAxisOrThrow", ()=>useXAxisOrThrow);
parcelHelpers.export(exports, "useArbitraryXAxis", ()=>useArbitraryXAxis);
parcelHelpers.export(exports, "useArbitraryYAxis", ()=>useArbitraryYAxis);
parcelHelpers.export(exports, "useYAxisWithFiniteDomainOrRandom", ()=>useYAxisWithFiniteDomainOrRandom);
parcelHelpers.export(exports, "useYAxisOrThrow", ()=>useYAxisOrThrow);
parcelHelpers.export(exports, "useViewBox", ()=>useViewBox);
parcelHelpers.export(exports, "useOffset", ()=>useOffset);
parcelHelpers.export(exports, "useChartWidth", ()=>useChartWidth);
parcelHelpers.export(exports, "useChartHeight", ()=>useChartHeight);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tinyInvariant = require("tiny-invariant");
var _tinyInvariantDefault = parcelHelpers.interopDefault(_tinyInvariant);
var _find = require("lodash/find");
var _findDefault = parcelHelpers.interopDefault(_find);
var _every = require("lodash/every");
var _everyDefault = parcelHelpers.interopDefault(_every);
var _calculateViewBox = require("../util/calculateViewBox");
var _dataUtils = require("../util/DataUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
var XAxisContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
var YAxisContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
var ViewBoxContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
var OffsetContext = /*#__PURE__*/ (0, _react.createContext)({});
var ClipPathIdContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
var ChartHeightContext = /*#__PURE__*/ (0, _react.createContext)(0);
var ChartWidthContext = /*#__PURE__*/ (0, _react.createContext)(0);
var ChartLayoutContextProvider = function ChartLayoutContextProvider(props) {
    var _props$state = props.state, xAxisMap = _props$state.xAxisMap, yAxisMap = _props$state.yAxisMap, offset = _props$state.offset, clipPathId = props.clipPathId, children = props.children, width = props.width, height = props.height;
    /**
   * Perhaps we should compute this property when reading? Let's see what is more often used
   */ var viewBox = (0, _calculateViewBox.calculateViewBox)(offset);
    /*
   * This pretends to be a single context but actually is split into multiple smaller ones.
   * Why?
   * Because one React Context only allows to set one value.
   * But we need to set multiple values.
   * If we do that with one context, then we force re-render on components that might not even be interested
   * in the part of the state that has changed.
   *
   * By splitting into smaller contexts, we allow each components to be optimized and only re-render when its dependencies change.
   *
   * To actually achieve the optimal re-render, it is necessary to use React.memo().
   * See the test file for details.
   */ return /*#__PURE__*/ (0, _reactDefault.default).createElement(XAxisContext.Provider, {
        value: xAxisMap
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(YAxisContext.Provider, {
        value: yAxisMap
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(OffsetContext.Provider, {
        value: offset
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(ViewBoxContext.Provider, {
        value: viewBox
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(ClipPathIdContext.Provider, {
        value: clipPathId
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(ChartHeightContext.Provider, {
        value: height
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(ChartWidthContext.Provider, {
        value: width
    }, children)))))));
};
var useClipPathId = function useClipPathId() {
    return (0, _react.useContext)(ClipPathIdContext);
};
function getKeysForDebug(object) {
    var keys = Object.keys(object);
    if (keys.length === 0) return 'There are no available ids.';
    return "Available ids are: ".concat(keys, ".");
}
var useXAxisOrThrow = function useXAxisOrThrow(xAxisId) {
    var xAxisMap = (0, _react.useContext)(XAxisContext);
    !(xAxisMap != null) && (0, _tinyInvariantDefault.default)(false, 'Could not find Recharts context; are you sure this is rendered inside a Recharts wrapper component?');
    var xAxis = xAxisMap[xAxisId];
    !(xAxis != null) && (0, _tinyInvariantDefault.default)(false, "Could not find xAxis by id \"".concat(xAxisId, "\" [").concat(_typeof(xAxisId), "]. ").concat(getKeysForDebug(xAxisMap)));
    return xAxis;
};
var useArbitraryXAxis = function useArbitraryXAxis() {
    var xAxisMap = (0, _react.useContext)(XAxisContext);
    return (0, _dataUtils.getAnyElementOfObject)(xAxisMap);
};
var useArbitraryYAxis = function useArbitraryYAxis() {
    var yAxisMap = (0, _react.useContext)(YAxisContext);
    return (0, _dataUtils.getAnyElementOfObject)(yAxisMap);
};
var useYAxisWithFiniteDomainOrRandom = function useYAxisWithFiniteDomainOrRandom() {
    var yAxisMap = (0, _react.useContext)(YAxisContext);
    var yAxisWithFiniteDomain = (0, _findDefault.default)(yAxisMap, function(axis) {
        return (0, _everyDefault.default)(axis.domain, Number.isFinite);
    });
    return yAxisWithFiniteDomain || (0, _dataUtils.getAnyElementOfObject)(yAxisMap);
};
var useYAxisOrThrow = function useYAxisOrThrow(yAxisId) {
    var yAxisMap = (0, _react.useContext)(YAxisContext);
    !(yAxisMap != null) && (0, _tinyInvariantDefault.default)(false, 'Could not find Recharts context; are you sure this is rendered inside a Recharts wrapper component?');
    var yAxis = yAxisMap[yAxisId];
    !(yAxis != null) && (0, _tinyInvariantDefault.default)(false, "Could not find yAxis by id \"".concat(yAxisId, "\" [").concat(_typeof(yAxisId), "]. ").concat(getKeysForDebug(yAxisMap)));
    return yAxis;
};
var useViewBox = function useViewBox() {
    var viewBox = (0, _react.useContext)(ViewBoxContext);
    return viewBox;
};
var useOffset = function useOffset() {
    return (0, _react.useContext)(OffsetContext);
};
var useChartWidth = function useChartWidth() {
    return (0, _react.useContext)(ChartWidthContext);
};
var useChartHeight = function useChartHeight() {
    return (0, _react.useContext)(ChartHeightContext);
};

},{"react":"jMk1U","tiny-invariant":"ks8CW","lodash/find":"5zhYM","lodash/every":"iYfUu","../util/calculateViewBox":"37HFN","../util/DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5zhYM":[function(require,module,exports,__globalThis) {
var createFind = require("f180f4459f295340"), findIndex = require("5af87c887948f3ca");
/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */ var find = createFind(findIndex);
module.exports = find;

},{"f180f4459f295340":"d4YDT","5af87c887948f3ca":"kuXrW"}],"d4YDT":[function(require,module,exports,__globalThis) {
var baseIteratee = require("ad0cafc4de9b66e6"), isArrayLike = require("cfacddc571674e4b"), keys = require("847fe2f1205991cd");
/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */ function createFind(findIndexFunc) {
    return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
            var iteratee = baseIteratee(predicate, 3);
            collection = keys(collection);
            predicate = function(key) {
                return iteratee(iterable[key], key, iterable);
            };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
    };
}
module.exports = createFind;

},{"ad0cafc4de9b66e6":"e6QHA","cfacddc571674e4b":"fm2W9","847fe2f1205991cd":"gS1Pz"}],"kuXrW":[function(require,module,exports,__globalThis) {
var baseFindIndex = require("c4739d82cf87a9be"), baseIteratee = require("a250b62014668b1"), toInteger = require("8b47b48a148e503b");
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max;
/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */ function findIndex(array, predicate, fromIndex) {
    var length = array == null ? 0 : array.length;
    if (!length) return -1;
    var index = fromIndex == null ? 0 : toInteger(fromIndex);
    if (index < 0) index = nativeMax(length + index, 0);
    return baseFindIndex(array, baseIteratee(predicate, 3), index);
}
module.exports = findIndex;

},{"c4739d82cf87a9be":"aEebD","a250b62014668b1":"e6QHA","8b47b48a148e503b":"jThg2"}],"jThg2":[function(require,module,exports,__globalThis) {
var toFinite = require("e624a4916a3de577");
/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */ function toInteger(value) {
    var result = toFinite(value), remainder = result % 1;
    return result === result ? remainder ? result - remainder : result : 0;
}
module.exports = toInteger;

},{"e624a4916a3de577":"6NUnX"}],"37HFN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calculateViewBox", ()=>calculateViewBox);
var _memoize = require("lodash/memoize");
var _memoizeDefault = parcelHelpers.interopDefault(_memoize);
var calculateViewBox = (0, _memoizeDefault.default)(function(offset) {
    return {
        x: offset.left,
        y: offset.top,
        width: offset.width,
        height: offset.height
    };
}, function(offset) {
    return [
        'l',
        offset.left,
        't',
        offset.top,
        'w',
        offset.width,
        'h',
        offset.height
    ].join('');
});

},{"lodash/memoize":"5ww8S","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"053Os":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ReferenceDot", ()=>ReferenceDot);
/**
 * @fileOverview Reference Dot
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _layer = require("../container/Layer");
var _dot = require("../shape/Dot");
var _label = require("../component/Label");
var _dataUtils = require("../util/DataUtils");
var _ifOverflowMatches = require("../util/IfOverflowMatches");
var _cartesianUtils = require("../util/CartesianUtils");
var _logUtils = require("../util/LogUtils");
var _reactUtils = require("../util/ReactUtils");
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var getCoordinate = function getCoordinate(props) {
    var x = props.x, y = props.y, xAxis = props.xAxis, yAxis = props.yAxis;
    var scales = (0, _cartesianUtils.createLabeledScales)({
        x: xAxis.scale,
        y: yAxis.scale
    });
    var result = scales.apply({
        x: x,
        y: y
    }, {
        bandAware: true
    });
    if ((0, _ifOverflowMatches.ifOverflowMatches)(props, 'discard') && !scales.isInRange(result)) return null;
    return result;
};
var ReferenceDot = /*#__PURE__*/ function(_React$Component) {
    function ReferenceDot() {
        _classCallCheck(this, ReferenceDot);
        return _callSuper(this, ReferenceDot, arguments);
    }
    _inherits(ReferenceDot, _React$Component);
    return _createClass(ReferenceDot, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, x = _this$props.x, y = _this$props.y, r = _this$props.r, alwaysShow = _this$props.alwaysShow, clipPathId = _this$props.clipPathId;
                var isX = (0, _dataUtils.isNumOrStr)(x);
                var isY = (0, _dataUtils.isNumOrStr)(y);
                (0, _logUtils.warn)(alwaysShow === undefined, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
                if (!isX || !isY) return null;
                var coordinate = getCoordinate(this.props);
                if (!coordinate) return null;
                var cx = coordinate.x, cy = coordinate.y;
                var _this$props2 = this.props, shape = _this$props2.shape, className = _this$props2.className;
                var clipPath = (0, _ifOverflowMatches.ifOverflowMatches)(this.props, 'hidden') ? "url(#".concat(clipPathId, ")") : undefined;
                var dotProps = _objectSpread(_objectSpread({
                    clipPath: clipPath
                }, (0, _reactUtils.filterProps)(this.props, true)), {}, {
                    cx: cx,
                    cy: cy
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: (0, _clsxDefault.default)('recharts-reference-dot', className)
                }, ReferenceDot.renderDot(shape, dotProps), (0, _label.Label).renderCallByParent(this.props, {
                    x: cx - r,
                    y: cy - r,
                    width: 2 * r,
                    height: 2 * r
                }));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
_defineProperty(ReferenceDot, "displayName", 'ReferenceDot');
_defineProperty(ReferenceDot, "defaultProps", {
    isFront: false,
    ifOverflow: 'discard',
    xAxisId: 0,
    yAxisId: 0,
    r: 10,
    fill: '#fff',
    stroke: '#ccc',
    fillOpacity: 1,
    strokeWidth: 1
});
_defineProperty(ReferenceDot, "renderDot", function(option, props) {
    var dot;
    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) dot = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
    else if ((0, _isFunctionDefault.default)(option)) dot = option(props);
    else dot = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _dot.Dot), _extends({}, props, {
        cx: props.cx,
        cy: props.cy,
        className: "recharts-reference-dot-dot"
    }));
    return dot;
});

},{"react":"jMk1U","lodash/isFunction":"6aeG3","clsx":"dOSJC","../container/Layer":"dLJ3P","../shape/Dot":"hmhgx","../component/Label":"b8wtn","../util/DataUtils":"sgnJK","../util/IfOverflowMatches":"jHwLu","../util/CartesianUtils":"dGbxK","../util/LogUtils":"2q6MA","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lqLWU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ReferenceArea", ()=>ReferenceArea);
/**
 * @fileOverview Reference Line
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _layer = require("../container/Layer");
var _label = require("../component/Label");
var _cartesianUtils = require("../util/CartesianUtils");
var _ifOverflowMatches = require("../util/IfOverflowMatches");
var _dataUtils = require("../util/DataUtils");
var _logUtils = require("../util/LogUtils");
var _rectangle = require("../shape/Rectangle");
var _reactUtils = require("../util/ReactUtils");
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var getRect = function getRect(hasX1, hasX2, hasY1, hasY2, props) {
    var xValue1 = props.x1, xValue2 = props.x2, yValue1 = props.y1, yValue2 = props.y2, xAxis = props.xAxis, yAxis = props.yAxis;
    if (!xAxis || !yAxis) return null;
    var scales = (0, _cartesianUtils.createLabeledScales)({
        x: xAxis.scale,
        y: yAxis.scale
    });
    var p1 = {
        x: hasX1 ? scales.x.apply(xValue1, {
            position: 'start'
        }) : scales.x.rangeMin,
        y: hasY1 ? scales.y.apply(yValue1, {
            position: 'start'
        }) : scales.y.rangeMin
    };
    var p2 = {
        x: hasX2 ? scales.x.apply(xValue2, {
            position: 'end'
        }) : scales.x.rangeMax,
        y: hasY2 ? scales.y.apply(yValue2, {
            position: 'end'
        }) : scales.y.rangeMax
    };
    if ((0, _ifOverflowMatches.ifOverflowMatches)(props, 'discard') && (!scales.isInRange(p1) || !scales.isInRange(p2))) return null;
    return (0, _cartesianUtils.rectWithPoints)(p1, p2);
};
var ReferenceArea = /*#__PURE__*/ function(_React$Component) {
    function ReferenceArea() {
        _classCallCheck(this, ReferenceArea);
        return _callSuper(this, ReferenceArea, arguments);
    }
    _inherits(ReferenceArea, _React$Component);
    return _createClass(ReferenceArea, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, x1 = _this$props.x1, x2 = _this$props.x2, y1 = _this$props.y1, y2 = _this$props.y2, className = _this$props.className, alwaysShow = _this$props.alwaysShow, clipPathId = _this$props.clipPathId;
                (0, _logUtils.warn)(alwaysShow === undefined, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
                var hasX1 = (0, _dataUtils.isNumOrStr)(x1);
                var hasX2 = (0, _dataUtils.isNumOrStr)(x2);
                var hasY1 = (0, _dataUtils.isNumOrStr)(y1);
                var hasY2 = (0, _dataUtils.isNumOrStr)(y2);
                var shape = this.props.shape;
                if (!hasX1 && !hasX2 && !hasY1 && !hasY2 && !shape) return null;
                var rect = getRect(hasX1, hasX2, hasY1, hasY2, this.props);
                if (!rect && !shape) return null;
                var clipPath = (0, _ifOverflowMatches.ifOverflowMatches)(this.props, 'hidden') ? "url(#".concat(clipPathId, ")") : undefined;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: (0, _clsxDefault.default)('recharts-reference-area', className)
                }, ReferenceArea.renderRect(shape, _objectSpread(_objectSpread({
                    clipPath: clipPath
                }, (0, _reactUtils.filterProps)(this.props, true)), rect)), (0, _label.Label).renderCallByParent(this.props, rect));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
_defineProperty(ReferenceArea, "displayName", 'ReferenceArea');
_defineProperty(ReferenceArea, "defaultProps", {
    isFront: false,
    ifOverflow: 'discard',
    xAxisId: 0,
    yAxisId: 0,
    r: 10,
    fill: '#ccc',
    fillOpacity: 0.5,
    stroke: 'none',
    strokeWidth: 1
});
_defineProperty(ReferenceArea, "renderRect", function(option, props) {
    var rect;
    if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) rect = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
    else if ((0, _isFunctionDefault.default)(option)) rect = option(props);
    else rect = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _rectangle.Rectangle), _extends({}, props, {
        className: "recharts-reference-area-rect"
    }));
    return rect;
});

},{"react":"jMk1U","lodash/isFunction":"6aeG3","clsx":"dOSJC","../container/Layer":"dLJ3P","../component/Label":"b8wtn","../util/CartesianUtils":"dGbxK","../util/IfOverflowMatches":"jHwLu","../util/DataUtils":"sgnJK","../util/LogUtils":"2q6MA","../shape/Rectangle":"6fXjw","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"F2gqc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CartesianAxis", ()=>CartesianAxis);
/**
 * @fileOverview Cartesian Axis
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _get = require("lodash/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _shallowEqual = require("../util/ShallowEqual");
var _layer = require("../container/Layer");
var _text = require("../component/Text");
var _label = require("../component/Label");
var _dataUtils = require("../util/DataUtils");
var _types = require("../util/types");
var _reactUtils = require("../util/ReactUtils");
var _getTicks = require("./getTicks");
var _excluded = [
    "viewBox"
], _excluded2 = [
    "viewBox"
], _excluded3 = [
    "ticks"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var CartesianAxis = /*#__PURE__*/ function(_Component) {
    function CartesianAxis(props) {
        var _this;
        _classCallCheck(this, CartesianAxis);
        _this = _callSuper(this, CartesianAxis, [
            props
        ]);
        _this.state = {
            fontSize: '',
            letterSpacing: ''
        };
        return _this;
    }
    _inherits(CartesianAxis, _Component);
    return _createClass(CartesianAxis, [
        {
            key: "shouldComponentUpdate",
            value: function shouldComponentUpdate(_ref, nextState) {
                var viewBox = _ref.viewBox, restProps = _objectWithoutProperties(_ref, _excluded);
                // props.viewBox is sometimes generated every time -
                // check that specially as object equality is likely to fail
                var _this$props = this.props, viewBoxOld = _this$props.viewBox, restPropsOld = _objectWithoutProperties(_this$props, _excluded2);
                return !(0, _shallowEqual.shallowEqual)(viewBox, viewBoxOld) || !(0, _shallowEqual.shallowEqual)(restProps, restPropsOld) || !(0, _shallowEqual.shallowEqual)(nextState, this.state);
            }
        },
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var htmlLayer = this.layerReference;
                if (!htmlLayer) return;
                var tick = htmlLayer.getElementsByClassName('recharts-cartesian-axis-tick-value')[0];
                if (tick) this.setState({
                    fontSize: window.getComputedStyle(tick).fontSize,
                    letterSpacing: window.getComputedStyle(tick).letterSpacing
                });
            }
        },
        {
            key: "getTickLineCoord",
            value: function getTickLineCoord(data) {
                var _this$props2 = this.props, x = _this$props2.x, y = _this$props2.y, width = _this$props2.width, height = _this$props2.height, orientation = _this$props2.orientation, tickSize = _this$props2.tickSize, mirror = _this$props2.mirror, tickMargin = _this$props2.tickMargin;
                var x1, x2, y1, y2, tx, ty;
                var sign = mirror ? -1 : 1;
                var finalTickSize = data.tickSize || tickSize;
                var tickCoord = (0, _dataUtils.isNumber)(data.tickCoord) ? data.tickCoord : data.coordinate;
                switch(orientation){
                    case 'top':
                        x1 = x2 = data.coordinate;
                        y2 = y + +!mirror * height;
                        y1 = y2 - sign * finalTickSize;
                        ty = y1 - sign * tickMargin;
                        tx = tickCoord;
                        break;
                    case 'left':
                        y1 = y2 = data.coordinate;
                        x2 = x + +!mirror * width;
                        x1 = x2 - sign * finalTickSize;
                        tx = x1 - sign * tickMargin;
                        ty = tickCoord;
                        break;
                    case 'right':
                        y1 = y2 = data.coordinate;
                        x2 = x + +mirror * width;
                        x1 = x2 + sign * finalTickSize;
                        tx = x1 + sign * tickMargin;
                        ty = tickCoord;
                        break;
                    default:
                        x1 = x2 = data.coordinate;
                        y2 = y + +mirror * height;
                        y1 = y2 + sign * finalTickSize;
                        ty = y1 + sign * tickMargin;
                        tx = tickCoord;
                        break;
                }
                return {
                    line: {
                        x1: x1,
                        y1: y1,
                        x2: x2,
                        y2: y2
                    },
                    tick: {
                        x: tx,
                        y: ty
                    }
                };
            }
        },
        {
            key: "getTickTextAnchor",
            value: function getTickTextAnchor() {
                var _this$props3 = this.props, orientation = _this$props3.orientation, mirror = _this$props3.mirror;
                var textAnchor;
                switch(orientation){
                    case 'left':
                        textAnchor = mirror ? 'start' : 'end';
                        break;
                    case 'right':
                        textAnchor = mirror ? 'end' : 'start';
                        break;
                    default:
                        textAnchor = 'middle';
                        break;
                }
                return textAnchor;
            }
        },
        {
            key: "getTickVerticalAnchor",
            value: function getTickVerticalAnchor() {
                var _this$props4 = this.props, orientation = _this$props4.orientation, mirror = _this$props4.mirror;
                var verticalAnchor = 'end';
                switch(orientation){
                    case 'left':
                    case 'right':
                        verticalAnchor = 'middle';
                        break;
                    case 'top':
                        verticalAnchor = mirror ? 'start' : 'end';
                        break;
                    default:
                        verticalAnchor = mirror ? 'end' : 'start';
                        break;
                }
                return verticalAnchor;
            }
        },
        {
            key: "renderAxisLine",
            value: function renderAxisLine() {
                var _this$props5 = this.props, x = _this$props5.x, y = _this$props5.y, width = _this$props5.width, height = _this$props5.height, orientation = _this$props5.orientation, mirror = _this$props5.mirror, axisLine = _this$props5.axisLine;
                var props = _objectSpread(_objectSpread(_objectSpread({}, (0, _reactUtils.filterProps)(this.props, false)), (0, _reactUtils.filterProps)(axisLine, false)), {}, {
                    fill: 'none'
                });
                if (orientation === 'top' || orientation === 'bottom') {
                    var needHeight = +(orientation === 'top' && !mirror || orientation === 'bottom' && mirror);
                    props = _objectSpread(_objectSpread({}, props), {}, {
                        x1: x,
                        y1: y + needHeight * height,
                        x2: x + width,
                        y2: y + needHeight * height
                    });
                } else {
                    var needWidth = +(orientation === 'left' && !mirror || orientation === 'right' && mirror);
                    props = _objectSpread(_objectSpread({}, props), {}, {
                        x1: x + needWidth * width,
                        y1: y,
                        x2: x + needWidth * width,
                        y2: y + height
                    });
                }
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("line", _extends({}, props, {
                    className: (0, _clsxDefault.default)('recharts-cartesian-axis-line', (0, _getDefault.default)(axisLine, 'className'))
                }));
            }
        },
        {
            key: "renderTicks",
            value: /**
     * render the ticks
     * @param {Array} ticks The ticks to actually render (overrides what was passed in props)
     * @param {string} fontSize Fontsize to consider for tick spacing
     * @param {string} letterSpacing Letterspacing to consider for tick spacing
     * @return {ReactComponent} renderedTicks
     */ function renderTicks(ticks, fontSize, letterSpacing) {
                var _this2 = this;
                var _this$props6 = this.props, tickLine = _this$props6.tickLine, stroke = _this$props6.stroke, tick = _this$props6.tick, tickFormatter = _this$props6.tickFormatter, unit = _this$props6.unit;
                var finalTicks = (0, _getTicks.getTicks)(_objectSpread(_objectSpread({}, this.props), {}, {
                    ticks: ticks
                }), fontSize, letterSpacing);
                var textAnchor = this.getTickTextAnchor();
                var verticalAnchor = this.getTickVerticalAnchor();
                var axisProps = (0, _reactUtils.filterProps)(this.props, false);
                var customTickProps = (0, _reactUtils.filterProps)(tick, false);
                var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {
                    fill: 'none'
                }, (0, _reactUtils.filterProps)(tickLine, false));
                var items = finalTicks.map(function(entry, i) {
                    var _this2$getTickLineCoo = _this2.getTickLineCoord(entry), lineCoord = _this2$getTickLineCoo.line, tickCoord = _this2$getTickLineCoo.tick;
                    var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
                        textAnchor: textAnchor,
                        verticalAnchor: verticalAnchor
                    }, axisProps), {}, {
                        stroke: 'none',
                        fill: stroke
                    }, customTickProps), tickCoord), {}, {
                        index: i,
                        payload: entry,
                        visibleTicksCount: finalTicks.length,
                        tickFormatter: tickFormatter
                    });
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                        className: "recharts-cartesian-axis-tick",
                        key: "tick-".concat(entry.value, "-").concat(entry.coordinate, "-").concat(entry.tickCoord)
                    }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i)), tickLine && /*#__PURE__*/ (0, _reactDefault.default).createElement("line", _extends({}, tickLineProps, lineCoord, {
                        className: (0, _clsxDefault.default)('recharts-cartesian-axis-tick-line', (0, _getDefault.default)(tickLine, 'className'))
                    })), tick && CartesianAxis.renderTickItem(tick, tickProps, "".concat((0, _isFunctionDefault.default)(tickFormatter) ? tickFormatter(entry.value, i) : entry.value).concat(unit || '')));
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("g", {
                    className: "recharts-cartesian-axis-ticks"
                }, items);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this3 = this;
                var _this$props7 = this.props, axisLine = _this$props7.axisLine, width = _this$props7.width, height = _this$props7.height, ticksGenerator = _this$props7.ticksGenerator, className = _this$props7.className, hide = _this$props7.hide;
                if (hide) return null;
                var _this$props8 = this.props, ticks = _this$props8.ticks, noTicksProps = _objectWithoutProperties(_this$props8, _excluded3);
                var finalTicks = ticks;
                if ((0, _isFunctionDefault.default)(ticksGenerator)) finalTicks = ticks && ticks.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);
                if (width <= 0 || height <= 0 || !finalTicks || !finalTicks.length) return null;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: (0, _clsxDefault.default)('recharts-cartesian-axis', className),
                    ref: function ref(_ref2) {
                        _this3.layerReference = _ref2;
                    }
                }, axisLine && this.renderAxisLine(), this.renderTicks(finalTicks, this.state.fontSize, this.state.letterSpacing), (0, _label.Label).renderCallByParent(this.props));
            }
        }
    ], [
        {
            key: "renderTickItem",
            value: function renderTickItem(option, props, value) {
                var tickItem;
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) tickItem = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                else if ((0, _isFunctionDefault.default)(option)) tickItem = option(props);
                else tickItem = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _text.Text), _extends({}, props, {
                    className: "recharts-cartesian-axis-tick-value"
                }), value);
                return tickItem;
            }
        }
    ]);
}((0, _react.Component));
_defineProperty(CartesianAxis, "displayName", 'CartesianAxis');
_defineProperty(CartesianAxis, "defaultProps", {
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    viewBox: {
        x: 0,
        y: 0,
        width: 0,
        height: 0
    },
    // The orientation of axis
    orientation: 'bottom',
    // The ticks
    ticks: [],
    stroke: '#666',
    tickLine: true,
    axisLine: true,
    tick: true,
    mirror: false,
    minTickGap: 5,
    // The width or height of tick
    tickSize: 6,
    tickMargin: 2,
    interval: 'preserveEnd'
});

},{"react":"jMk1U","lodash/isFunction":"6aeG3","lodash/get":"ce8mt","clsx":"dOSJC","../util/ShallowEqual":"8AJub","../container/Layer":"dLJ3P","../component/Text":"9kjUm","../component/Label":"b8wtn","../util/DataUtils":"sgnJK","../util/types":"j2YO8","../util/ReactUtils":"dvc7w","./getTicks":"iHfWy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iHfWy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTicks", ()=>getTicks);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _dataUtils = require("../util/DataUtils");
var _domutils = require("../util/DOMUtils");
var _global = require("../util/Global");
var _tickUtils = require("../util/TickUtils");
var _getEquidistantTicks = require("./getEquidistantTicks");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap) {
    var result = (ticks || []).slice();
    var len = result.length;
    var start = boundaries.start;
    var end = boundaries.end;
    var _loop = function _loop(i) {
        var entry = result[i];
        var size;
        var getSize = function getSize() {
            if (size === undefined) size = getTickSize(entry, i);
            return size;
        };
        if (i === len - 1) {
            var gap = sign * (entry.coordinate + sign * getSize() / 2 - end);
            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {
                tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate
            });
        } else result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {
            tickCoord: entry.coordinate
        });
        var isShow = (0, _tickUtils.isVisible)(sign, entry.tickCoord, getSize, start, end);
        if (isShow) {
            end = entry.tickCoord - sign * (getSize() / 2 + minTickGap);
            result[i] = _objectSpread(_objectSpread({}, entry), {}, {
                isShow: true
            });
        }
    };
    for(var i = len - 1; i >= 0; i--)_loop(i);
    return result;
}
function getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, preserveEnd) {
    var result = (ticks || []).slice();
    var len = result.length;
    var start = boundaries.start, end = boundaries.end;
    if (preserveEnd) {
        // Try to guarantee the tail to be displayed
        var tail = ticks[len - 1];
        var tailSize = getTickSize(tail, len - 1);
        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);
        result[len - 1] = tail = _objectSpread(_objectSpread({}, tail), {}, {
            tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate
        });
        var isTailShow = (0, _tickUtils.isVisible)(sign, tail.tickCoord, function() {
            return tailSize;
        }, start, end);
        if (isTailShow) {
            end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);
            result[len - 1] = _objectSpread(_objectSpread({}, tail), {}, {
                isShow: true
            });
        }
    }
    var count = preserveEnd ? len - 1 : len;
    var _loop2 = function _loop2(i) {
        var entry = result[i];
        var size;
        var getSize = function getSize() {
            if (size === undefined) size = getTickSize(entry, i);
            return size;
        };
        if (i === 0) {
            var gap = sign * (entry.coordinate - sign * getSize() / 2 - start);
            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {
                tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate
            });
        } else result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {
            tickCoord: entry.coordinate
        });
        var isShow = (0, _tickUtils.isVisible)(sign, entry.tickCoord, getSize, start, end);
        if (isShow) {
            start = entry.tickCoord + sign * (getSize() / 2 + minTickGap);
            result[i] = _objectSpread(_objectSpread({}, entry), {}, {
                isShow: true
            });
        }
    };
    for(var i = 0; i < count; i++)_loop2(i);
    return result;
}
function getTicks(props, fontSize, letterSpacing) {
    var tick = props.tick, ticks = props.ticks, viewBox = props.viewBox, minTickGap = props.minTickGap, orientation = props.orientation, interval = props.interval, tickFormatter = props.tickFormatter, unit = props.unit, angle = props.angle;
    if (!ticks || !ticks.length || !tick) return [];
    if ((0, _dataUtils.isNumber)(interval) || (0, _global.Global).isSsr) return (0, _tickUtils.getNumberIntervalTicks)(ticks, typeof interval === 'number' && (0, _dataUtils.isNumber)(interval) ? interval : 0);
    var candidates = [];
    var sizeKey = orientation === 'top' || orientation === 'bottom' ? 'width' : 'height';
    var unitSize = unit && sizeKey === 'width' ? (0, _domutils.getStringSize)(unit, {
        fontSize: fontSize,
        letterSpacing: letterSpacing
    }) : {
        width: 0,
        height: 0
    };
    var getTickSize = function getTickSize(content, index) {
        var value = (0, _isFunctionDefault.default)(tickFormatter) ? tickFormatter(content.value, index) : content.value;
        // Recharts only supports angles when sizeKey === 'width'
        return sizeKey === 'width' ? (0, _tickUtils.getAngledTickWidth)((0, _domutils.getStringSize)(value, {
            fontSize: fontSize,
            letterSpacing: letterSpacing
        }), unitSize, angle) : (0, _domutils.getStringSize)(value, {
            fontSize: fontSize,
            letterSpacing: letterSpacing
        })[sizeKey];
    };
    var sign = ticks.length >= 2 ? (0, _dataUtils.mathSign)(ticks[1].coordinate - ticks[0].coordinate) : 1;
    var boundaries = (0, _tickUtils.getTickBoundaries)(viewBox, sign, sizeKey);
    if (interval === 'equidistantPreserveStart') return (0, _getEquidistantTicks.getEquidistantTicks)(sign, boundaries, getTickSize, ticks, minTickGap);
    if (interval === 'preserveStart' || interval === 'preserveStartEnd') candidates = getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, interval === 'preserveStartEnd');
    else candidates = getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap);
    return candidates.filter(function(entry) {
        return entry.isShow;
    });
}

},{"lodash/isFunction":"6aeG3","../util/DataUtils":"sgnJK","../util/DOMUtils":"b9RVO","../util/Global":"7oO43","../util/TickUtils":"3q25P","./getEquidistantTicks":"jebnt","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3q25P":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAngledTickWidth", ()=>getAngledTickWidth);
parcelHelpers.export(exports, "getTickBoundaries", ()=>getTickBoundaries);
parcelHelpers.export(exports, "isVisible", ()=>isVisible);
parcelHelpers.export(exports, "getNumberIntervalTicks", ()=>getNumberIntervalTicks);
var _cartesianUtils = require("./CartesianUtils");
var _getEveryNthWithCondition = require("./getEveryNthWithCondition");
function getAngledTickWidth(contentSize, unitSize, angle) {
    var size = {
        width: contentSize.width + unitSize.width,
        height: contentSize.height + unitSize.height
    };
    return (0, _cartesianUtils.getAngledRectangleWidth)(size, angle);
}
function getTickBoundaries(viewBox, sign, sizeKey) {
    var isWidth = sizeKey === 'width';
    var x = viewBox.x, y = viewBox.y, width = viewBox.width, height = viewBox.height;
    if (sign === 1) return {
        start: isWidth ? x : y,
        end: isWidth ? x + width : y + height
    };
    return {
        start: isWidth ? x + width : y + height,
        end: isWidth ? x : y
    };
}
function isVisible(sign, tickPosition, getSize, start, end) {
    /* Since getSize() is expensive (it reads the ticks' size from the DOM), we do this check first to avoid calculating
   * the tick's size. */ if (sign * tickPosition < sign * start || sign * tickPosition > sign * end) return false;
    var size = getSize();
    return sign * (tickPosition - sign * size / 2 - start) >= 0 && sign * (tickPosition + sign * size / 2 - end) <= 0;
}
function getNumberIntervalTicks(ticks, interval) {
    return (0, _getEveryNthWithCondition.getEveryNthWithCondition)(ticks, interval + 1);
}

},{"./CartesianUtils":"dGbxK","./getEveryNthWithCondition":"kwWka","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kwWka":[function(require,module,exports,__globalThis) {
/**
 * Given an array and a number N, return a new array which contains every nTh
 * element of the input array. For n below 1, an empty array is returned.
 * If isValid is provided, all candidates must suffice the condition, else undefined is returned.
 * @param {T[]} array An input array.
 * @param {integer} n A number
 * @param {Function} isValid A function to evaluate a candidate form the array
 * @returns {T[]} The result array of the same type as the input array.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getEveryNthWithCondition", ()=>getEveryNthWithCondition);
function getEveryNthWithCondition(array, n, isValid) {
    if (n < 1) return [];
    if (n === 1 && isValid === undefined) return array;
    var result = [];
    for(var i = 0; i < array.length; i += n){
        if (isValid === undefined || isValid(array[i]) === true) result.push(array[i]);
        else return undefined;
    }
    return result;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jebnt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getEquidistantTicks", ()=>getEquidistantTicks);
var _tickUtils = require("../util/TickUtils");
var _getEveryNthWithCondition = require("../util/getEveryNthWithCondition");
function getEquidistantTicks(sign, boundaries, getTickSize, ticks, minTickGap) {
    var result = (ticks || []).slice();
    var initialStart = boundaries.start, end = boundaries.end;
    var index = 0;
    // Premature optimisation idea 1: Estimate a lower bound, and start from there.
    // For now, start from every tick
    var stepsize = 1;
    var start = initialStart;
    var _loop = function _loop() {
        // Given stepsize, evaluate whether every stepsize-th tick can be shown.
        // If it can not, then increase the stepsize by 1, and try again.
        var entry = ticks === null || ticks === void 0 ? void 0 : ticks[index];
        // Break condition - If we have evaluate all the ticks, then we are done.
        if (entry === undefined) return {
            v: (0, _getEveryNthWithCondition.getEveryNthWithCondition)(ticks, stepsize)
        };
        // Check if the element collides with the next element
        var i = index;
        var size;
        var getSize = function getSize() {
            if (size === undefined) size = getTickSize(entry, i);
            return size;
        };
        var tickCoord = entry.coordinate;
        // We will always show the first tick.
        var isShow = index === 0 || (0, _tickUtils.isVisible)(sign, tickCoord, getSize, start, end);
        if (!isShow) {
            // Start all over with a larger stepsize
            index = 0;
            start = initialStart;
            stepsize += 1;
        }
        if (isShow) {
            // If it can be shown, update the start
            start = tickCoord + sign * (getSize() / 2 + minTickGap);
            index += stepsize;
        }
    }, _ret;
    while(stepsize <= result.length){
        _ret = _loop();
        if (_ret) return _ret.v;
    }
    return [];
}

},{"../util/TickUtils":"3q25P","../util/getEveryNthWithCondition":"kwWka","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4Hkie":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Line", ()=>Line);
/**
 * @fileOverview Line
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactSmooth = require("react-smooth");
var _reactSmoothDefault = parcelHelpers.interopDefault(_reactSmooth);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _curve = require("../shape/Curve");
var _dot = require("../shape/Dot");
var _layer = require("../container/Layer");
var _labelList = require("../component/LabelList");
var _errorBar = require("./ErrorBar");
var _dataUtils = require("../util/DataUtils");
var _reactUtils = require("../util/ReactUtils");
var _global = require("../util/Global");
var _chartUtils = require("../util/ChartUtils");
var _excluded = [
    "type",
    "layout",
    "connectNulls",
    "ref"
], _excluded2 = [
    "key"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var Line = /*#__PURE__*/ function(_PureComponent) {
    function Line() {
        var _this;
        _classCallCheck(this, Line);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, Line, [].concat(args));
        _defineProperty(_this, "state", {
            isAnimationFinished: true,
            totalLength: 0
        });
        _defineProperty(_this, "generateSimpleStrokeDasharray", function(totalLength, length) {
            return "".concat(length, "px ").concat(totalLength - length, "px");
        });
        _defineProperty(_this, "getStrokeDasharray", function(length, totalLength, lines) {
            var lineLength = lines.reduce(function(pre, next) {
                return pre + next;
            });
            // if lineLength is 0 return the default when no strokeDasharray is provided
            if (!lineLength) return _this.generateSimpleStrokeDasharray(totalLength, length);
            var count = Math.floor(length / lineLength);
            var remainLength = length % lineLength;
            var restLength = totalLength - length;
            var remainLines = [];
            for(var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i)if (sum + lines[i] > remainLength) {
                remainLines = [].concat(_toConsumableArray(lines.slice(0, i)), [
                    remainLength - sum
                ]);
                break;
            }
            var emptyLines = remainLines.length % 2 === 0 ? [
                0,
                restLength
            ] : [
                restLength
            ];
            return [].concat(_toConsumableArray(Line.repeat(lines, count)), _toConsumableArray(remainLines), emptyLines).map(function(line) {
                return "".concat(line, "px");
            }).join(', ');
        });
        _defineProperty(_this, "id", (0, _dataUtils.uniqueId)('recharts-line-'));
        _defineProperty(_this, "pathRef", function(node) {
            _this.mainCurve = node;
        });
        _defineProperty(_this, "handleAnimationEnd", function() {
            _this.setState({
                isAnimationFinished: true
            });
            if (_this.props.onAnimationEnd) _this.props.onAnimationEnd();
        });
        _defineProperty(_this, "handleAnimationStart", function() {
            _this.setState({
                isAnimationFinished: false
            });
            if (_this.props.onAnimationStart) _this.props.onAnimationStart();
        });
        return _this;
    }
    _inherits(Line, _PureComponent);
    return _createClass(Line, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                if (!this.props.isAnimationActive) return;
                var totalLength = this.getTotalLength();
                this.setState({
                    totalLength: totalLength
                });
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate() {
                if (!this.props.isAnimationActive) return;
                var totalLength = this.getTotalLength();
                if (totalLength !== this.state.totalLength) this.setState({
                    totalLength: totalLength
                });
            }
        },
        {
            key: "getTotalLength",
            value: function getTotalLength() {
                var curveDom = this.mainCurve;
                try {
                    return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;
                } catch (err) {
                    return 0;
                }
            }
        },
        {
            key: "renderErrorBar",
            value: function renderErrorBar(needClip, clipPathId) {
                if (this.props.isAnimationActive && !this.state.isAnimationFinished) return null;
                var _this$props = this.props, points = _this$props.points, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, layout = _this$props.layout, children = _this$props.children;
                var errorBarItems = (0, _reactUtils.findAllByType)(children, (0, _errorBar.ErrorBar));
                if (!errorBarItems) return null;
                var dataPointFormatter = function dataPointFormatter(dataPoint, dataKey) {
                    return {
                        x: dataPoint.x,
                        y: dataPoint.y,
                        value: dataPoint.value,
                        errorVal: (0, _chartUtils.getValueByDataKey)(dataPoint.payload, dataKey)
                    };
                };
                var errorBarProps = {
                    clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
                };
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), errorBarProps, errorBarItems.map(function(item) {
                    return /*#__PURE__*/ (0, _reactDefault.default).cloneElement(item, {
                        key: "bar-".concat(item.props.dataKey),
                        data: points,
                        xAxis: xAxis,
                        yAxis: yAxis,
                        layout: layout,
                        dataPointFormatter: dataPointFormatter
                    });
                }));
            }
        },
        {
            key: "renderDots",
            value: function renderDots(needClip, clipDot, clipPathId) {
                var isAnimationActive = this.props.isAnimationActive;
                if (isAnimationActive && !this.state.isAnimationFinished) return null;
                var _this$props2 = this.props, dot = _this$props2.dot, points = _this$props2.points, dataKey = _this$props2.dataKey;
                var lineProps = (0, _reactUtils.filterProps)(this.props, false);
                var customDotProps = (0, _reactUtils.filterProps)(dot, true);
                var dots = points.map(function(entry, i) {
                    var dotProps = _objectSpread(_objectSpread(_objectSpread({
                        key: "dot-".concat(i),
                        r: 3
                    }, lineProps), customDotProps), {}, {
                        index: i,
                        cx: entry.x,
                        cy: entry.y,
                        value: entry.value,
                        dataKey: dataKey,
                        payload: entry.payload,
                        points: points
                    });
                    return Line.renderDotItem(dot, dotProps);
                });
                var dotsProps = {
                    clipPath: needClip ? "url(#clipPath-".concat(clipDot ? '' : 'dots-').concat(clipPathId, ")") : null
                };
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), _extends({
                    className: "recharts-line-dots",
                    key: "dots"
                }, dotsProps), dots);
            }
        },
        {
            key: "renderCurveStatically",
            value: function renderCurveStatically(points, needClip, clipPathId, props) {
                var _this$props3 = this.props, type = _this$props3.type, layout = _this$props3.layout, connectNulls = _this$props3.connectNulls, ref = _this$props3.ref, others = _objectWithoutProperties(_this$props3, _excluded);
                var curveProps = _objectSpread(_objectSpread(_objectSpread({}, (0, _reactUtils.filterProps)(others, true)), {}, {
                    fill: 'none',
                    className: 'recharts-line-curve',
                    clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null,
                    points: points
                }, props), {}, {
                    type: type,
                    layout: layout,
                    connectNulls: connectNulls
                });
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _curve.Curve), _extends({}, curveProps, {
                    pathRef: this.pathRef
                }));
            }
        },
        {
            key: "renderCurveWithAnimation",
            value: function renderCurveWithAnimation(needClip, clipPathId) {
                var _this2 = this;
                var _this$props4 = this.props, points = _this$props4.points, strokeDasharray = _this$props4.strokeDasharray, isAnimationActive = _this$props4.isAnimationActive, animationBegin = _this$props4.animationBegin, animationDuration = _this$props4.animationDuration, animationEasing = _this$props4.animationEasing, animationId = _this$props4.animationId, animateNewValues = _this$props4.animateNewValues, width = _this$props4.width, height = _this$props4.height;
                var _this$state = this.state, prevPoints = _this$state.prevPoints, totalLength = _this$state.totalLength;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactSmoothDefault.default), {
                    begin: animationBegin,
                    duration: animationDuration,
                    isActive: isAnimationActive,
                    easing: animationEasing,
                    from: {
                        t: 0
                    },
                    to: {
                        t: 1
                    },
                    key: "line-".concat(animationId),
                    onAnimationEnd: this.handleAnimationEnd,
                    onAnimationStart: this.handleAnimationStart
                }, function(_ref) {
                    var t = _ref.t;
                    if (prevPoints) {
                        var prevPointsDiffFactor = prevPoints.length / points.length;
                        var stepData = points.map(function(entry, index) {
                            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);
                            if (prevPoints[prevPointIndex]) {
                                var prev = prevPoints[prevPointIndex];
                                var interpolatorX = (0, _dataUtils.interpolateNumber)(prev.x, entry.x);
                                var interpolatorY = (0, _dataUtils.interpolateNumber)(prev.y, entry.y);
                                return _objectSpread(_objectSpread({}, entry), {}, {
                                    x: interpolatorX(t),
                                    y: interpolatorY(t)
                                });
                            }
                            // magic number of faking previous x and y location
                            if (animateNewValues) {
                                var _interpolatorX = (0, _dataUtils.interpolateNumber)(width * 2, entry.x);
                                var _interpolatorY = (0, _dataUtils.interpolateNumber)(height / 2, entry.y);
                                return _objectSpread(_objectSpread({}, entry), {}, {
                                    x: _interpolatorX(t),
                                    y: _interpolatorY(t)
                                });
                            }
                            return _objectSpread(_objectSpread({}, entry), {}, {
                                x: entry.x,
                                y: entry.y
                            });
                        });
                        return _this2.renderCurveStatically(stepData, needClip, clipPathId);
                    }
                    var interpolator = (0, _dataUtils.interpolateNumber)(0, totalLength);
                    var curLength = interpolator(t);
                    var currentStrokeDasharray;
                    if (strokeDasharray) {
                        var lines = "".concat(strokeDasharray).split(/[,\s]+/gim).map(function(num) {
                            return parseFloat(num);
                        });
                        currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);
                    } else currentStrokeDasharray = _this2.generateSimpleStrokeDasharray(totalLength, curLength);
                    return _this2.renderCurveStatically(points, needClip, clipPathId, {
                        strokeDasharray: currentStrokeDasharray
                    });
                });
            }
        },
        {
            key: "renderCurve",
            value: function renderCurve(needClip, clipPathId) {
                var _this$props5 = this.props, points = _this$props5.points, isAnimationActive = _this$props5.isAnimationActive;
                var _this$state2 = this.state, prevPoints = _this$state2.prevPoints, totalLength = _this$state2.totalLength;
                if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !(0, _isEqualDefault.default)(prevPoints, points))) return this.renderCurveWithAnimation(needClip, clipPathId);
                return this.renderCurveStatically(points, needClip, clipPathId);
            }
        },
        {
            key: "render",
            value: function render() {
                var _filterProps;
                var _this$props6 = this.props, hide = _this$props6.hide, dot = _this$props6.dot, points = _this$props6.points, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, top = _this$props6.top, left = _this$props6.left, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, id = _this$props6.id;
                if (hide || !points || !points.length) return null;
                var isAnimationFinished = this.state.isAnimationFinished;
                var hasSinglePoint = points.length === 1;
                var layerClass = (0, _clsxDefault.default)('recharts-line', className);
                var needClipX = xAxis && xAxis.allowDataOverflow;
                var needClipY = yAxis && yAxis.allowDataOverflow;
                var needClip = needClipX || needClipY;
                var clipPathId = (0, _isNilDefault.default)(id) ? this.id : id;
                var _ref2 = (_filterProps = (0, _reactUtils.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {
                    r: 3,
                    strokeWidth: 2
                }, _ref2$r = _ref2.r, r = _ref2$r === void 0 ? 3 : _ref2$r, _ref2$strokeWidth = _ref2.strokeWidth, strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;
                var _ref3 = (0, _reactUtils.hasClipDot)(dot) ? dot : {}, _ref3$clipDot = _ref3.clipDot, clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;
                var dotSize = r * 2 + strokeWidth;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
                    className: layerClass
                }, needClipX || needClipY ? /*#__PURE__*/ (0, _reactDefault.default).createElement("defs", null, /*#__PURE__*/ (0, _reactDefault.default).createElement("clipPath", {
                    id: "clipPath-".concat(clipPathId)
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                    x: needClipX ? left : left - width / 2,
                    y: needClipY ? top : top - height / 2,
                    width: needClipX ? width : width * 2,
                    height: needClipY ? height : height * 2
                })), !clipDot && /*#__PURE__*/ (0, _reactDefault.default).createElement("clipPath", {
                    id: "clipPath-dots-".concat(clipPathId)
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                    x: left - dotSize / 2,
                    y: top - dotSize / 2,
                    width: width + dotSize,
                    height: height + dotSize
                }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(needClip, clipPathId), (hasSinglePoint || dot) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && (0, _labelList.LabelList).renderCallByParent(this.props, points));
            }
        }
    ], [
        {
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, prevState) {
                if (nextProps.animationId !== prevState.prevAnimationId) return {
                    prevAnimationId: nextProps.animationId,
                    curPoints: nextProps.points,
                    prevPoints: prevState.curPoints
                };
                if (nextProps.points !== prevState.curPoints) return {
                    curPoints: nextProps.points
                };
                return null;
            }
        },
        {
            key: "repeat",
            value: function repeat(lines, count) {
                var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray(lines), [
                    0
                ]) : lines;
                var result = [];
                for(var i = 0; i < count; ++i)result = [].concat(_toConsumableArray(result), _toConsumableArray(linesUnit));
                return result;
            }
        },
        {
            key: "renderDotItem",
            value: function renderDotItem(option, props) {
                var dotItem;
                if (/*#__PURE__*/ (0, _reactDefault.default).isValidElement(option)) dotItem = /*#__PURE__*/ (0, _reactDefault.default).cloneElement(option, props);
                else if ((0, _isFunctionDefault.default)(option)) dotItem = option(props);
                else {
                    var key = props.key, dotProps = _objectWithoutProperties(props, _excluded2);
                    var className = (0, _clsxDefault.default)('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');
                    dotItem = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _dot.Dot), _extends({
                        key: key
                    }, dotProps, {
                        className: className
                    }));
                }
                return dotItem;
            }
        }
    ]);
}((0, _react.PureComponent));
_defineProperty(Line, "displayName", 'Line');
_defineProperty(Line, "defaultProps", {
    xAxisId: 0,
    yAxisId: 0,
    connectNulls: false,
    activeDot: true,
    dot: true,
    legendType: 'line',
    stroke: '#3182bd',
    strokeWidth: 1,
    fill: '#fff',
    points: [],
    isAnimationActive: !(0, _global.Global).isSsr,
    animateNewValues: true,
    animationBegin: 0,
    animationDuration: 1500,
    animationEasing: 'ease',
    hide: false,
    label: false
});
/**
 * Compose the data of each group
 * @param {Object} props The props from the component
 * @param  {Object} xAxis   The configuration of x-axis
 * @param  {Object} yAxis   The configuration of y-axis
 * @param  {String} dataKey The unique key of a group
 * @return {Array}  Composed data
 */ _defineProperty(Line, "getComposedData", function(_ref4) {
    var props = _ref4.props, xAxis = _ref4.xAxis, yAxis = _ref4.yAxis, xAxisTicks = _ref4.xAxisTicks, yAxisTicks = _ref4.yAxisTicks, dataKey = _ref4.dataKey, bandSize = _ref4.bandSize, displayedData = _ref4.displayedData, offset = _ref4.offset;
    var layout = props.layout;
    var points = displayedData.map(function(entry, index) {
        var value = (0, _chartUtils.getValueByDataKey)(entry, dataKey);
        if (layout === 'horizontal') return {
            x: (0, _chartUtils.getCateCoordinateOfLine)({
                axis: xAxis,
                ticks: xAxisTicks,
                bandSize: bandSize,
                entry: entry,
                index: index
            }),
            y: (0, _isNilDefault.default)(value) ? null : yAxis.scale(value),
            value: value,
            payload: entry
        };
        return {
            x: (0, _isNilDefault.default)(value) ? null : xAxis.scale(value),
            y: (0, _chartUtils.getCateCoordinateOfLine)({
                axis: yAxis,
                ticks: yAxisTicks,
                bandSize: bandSize,
                entry: entry,
                index: index
            }),
            value: value,
            payload: entry
        };
    });
    return _objectSpread({
        points: points,
        layout: layout
    }, offset);
});

},{"react":"jMk1U","react-smooth":"2I5y4","lodash/isFunction":"6aeG3","lodash/isNil":"66cvp","lodash/isEqual":"ep5zv","clsx":"dOSJC","../shape/Curve":"fyl1W","../shape/Dot":"hmhgx","../container/Layer":"dLJ3P","../component/LabelList":"gF2dN","./ErrorBar":"exPuO","../util/DataUtils":"sgnJK","../util/ReactUtils":"dvc7w","../util/Global":"7oO43","../util/ChartUtils":"58wJX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1BXde":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "XAxis", ()=>XAxis);
/**
 * @fileOverview X Axis
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _chartLayoutContext = require("../context/chartLayoutContext");
var _cartesianAxis = require("./CartesianAxis");
var _chartUtils = require("../util/ChartUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
/** Define of XAxis props */ function XAxisImpl(_ref) {
    var xAxisId = _ref.xAxisId;
    var width = (0, _chartLayoutContext.useChartWidth)();
    var height = (0, _chartLayoutContext.useChartHeight)();
    var axisOptions = (0, _chartLayoutContext.useXAxisOrThrow)(xAxisId);
    if (axisOptions == null) return null;
    return(/*#__PURE__*/ // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.
    (0, _reactDefault.default).createElement((0, _cartesianAxis.CartesianAxis), _extends({}, axisOptions, {
        className: (0, _clsxDefault.default)("recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType), axisOptions.className),
        viewBox: {
            x: 0,
            y: 0,
            width: width,
            height: height
        },
        ticksGenerator: function ticksGenerator(axis) {
            return (0, _chartUtils.getTicksOfAxis)(axis, true);
        }
    })));
}
var XAxis = /*#__PURE__*/ function(_React$Component) {
    function XAxis() {
        _classCallCheck(this, XAxis);
        return _callSuper(this, XAxis, arguments);
    }
    _inherits(XAxis, _React$Component);
    return _createClass(XAxis, [
        {
            key: "render",
            value: function render() {
                return /*#__PURE__*/ (0, _reactDefault.default).createElement(XAxisImpl, this.props);
            }
        }
    ]);
}((0, _reactDefault.default).Component);
_defineProperty(XAxis, "displayName", 'XAxis');
_defineProperty(XAxis, "defaultProps", {
    allowDecimals: true,
    hide: false,
    orientation: 'bottom',
    width: 0,
    height: 30,
    mirror: false,
    xAxisId: 0,
    tickCount: 5,
    type: 'category',
    padding: {
        left: 0,
        right: 0
    },
    allowDataOverflow: false,
    scale: 'auto',
    reversed: false,
    allowDuplicatedCategory: true
});

},{"react":"jMk1U","clsx":"dOSJC","../context/chartLayoutContext":"dr08Y","./CartesianAxis":"F2gqc","../util/ChartUtils":"58wJX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f2O6f":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "YAxis", ()=>YAxis);
/**
 * @fileOverview Y Axis
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _chartLayoutContext = require("../context/chartLayoutContext");
var _cartesianAxis = require("./CartesianAxis");
var _chartUtils = require("../util/ChartUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
var YAxisImpl = function YAxisImpl(_ref) {
    var yAxisId = _ref.yAxisId;
    var width = (0, _chartLayoutContext.useChartWidth)();
    var height = (0, _chartLayoutContext.useChartHeight)();
    var axisOptions = (0, _chartLayoutContext.useYAxisOrThrow)(yAxisId);
    if (axisOptions == null) return null;
    return(/*#__PURE__*/ // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.
    (0, _reactDefault.default).createElement((0, _cartesianAxis.CartesianAxis), _extends({}, axisOptions, {
        className: (0, _clsxDefault.default)("recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType), axisOptions.className),
        viewBox: {
            x: 0,
            y: 0,
            width: width,
            height: height
        },
        ticksGenerator: function ticksGenerator(axis) {
            return (0, _chartUtils.getTicksOfAxis)(axis, true);
        }
    })));
};
var YAxis = /*#__PURE__*/ function(_React$Component) {
    function YAxis() {
        _classCallCheck(this, YAxis);
        return _callSuper(this, YAxis, arguments);
    }
    _inherits(YAxis, _React$Component);
    return _createClass(YAxis, [
        {
            key: "render",
            value: function render() {
                return /*#__PURE__*/ (0, _reactDefault.default).createElement(YAxisImpl, this.props);
            }
        }
    ]);
}((0, _reactDefault.default).Component);
_defineProperty(YAxis, "displayName", 'YAxis');
_defineProperty(YAxis, "defaultProps", {
    allowDuplicatedCategory: true,
    allowDecimals: true,
    hide: false,
    orientation: 'left',
    width: 60,
    height: 0,
    mirror: false,
    yAxisId: 0,
    tickCount: 5,
    type: 'number',
    padding: {
        top: 0,
        bottom: 0
    },
    allowDataOverflow: false,
    scale: 'auto',
    reversed: false
});

},{"react":"jMk1U","clsx":"dOSJC","../context/chartLayoutContext":"dr08Y","./CartesianAxis":"F2gqc","../util/ChartUtils":"58wJX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8AH5t":[function(require,module,exports,__globalThis) {
/**
 * @fileOverview Line Chart
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LineChart", ()=>LineChart);
var _generateCategoricalChart = require("./generateCategoricalChart");
var _line = require("../cartesian/Line");
var _xaxis = require("../cartesian/XAxis");
var _yaxis = require("../cartesian/YAxis");
var _cartesianUtils = require("../util/CartesianUtils");
var LineChart = (0, _generateCategoricalChart.generateCategoricalChart)({
    chartName: 'LineChart',
    GraphicalChild: (0, _line.Line),
    axisComponents: [
        {
            axisType: 'xAxis',
            AxisComp: (0, _xaxis.XAxis)
        },
        {
            axisType: 'yAxis',
            AxisComp: (0, _yaxis.YAxis)
        }
    ],
    formatAxisMap: (0, _cartesianUtils.formatAxisMap)
});

},{"./generateCategoricalChart":"alJQJ","../cartesian/Line":"4Hkie","../cartesian/XAxis":"1BXde","../cartesian/YAxis":"f2O6f","../util/CartesianUtils":"dGbxK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"alJQJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAxisMapByAxes", ()=>getAxisMapByAxes);
parcelHelpers.export(exports, "createDefaultState", ()=>createDefaultState);
parcelHelpers.export(exports, "generateCategoricalChart", ()=>generateCategoricalChart);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isNil = require("lodash/isNil");
var _isNilDefault = parcelHelpers.interopDefault(_isNil);
var _isFunction = require("lodash/isFunction");
var _isFunctionDefault = parcelHelpers.interopDefault(_isFunction);
var _range = require("lodash/range");
var _rangeDefault = parcelHelpers.interopDefault(_range);
var _get = require("lodash/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _sortBy = require("lodash/sortBy");
var _sortByDefault = parcelHelpers.interopDefault(_sortBy);
var _throttle = require("lodash/throttle");
var _throttleDefault = parcelHelpers.interopDefault(_throttle);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
// eslint-disable-next-line no-restricted-imports
var _tinyInvariant = require("tiny-invariant");
var _tinyInvariantDefault = parcelHelpers.interopDefault(_tinyInvariant);
var _surface = require("../container/Surface");
var _layer = require("../container/Layer");
var _tooltip = require("../component/Tooltip");
var _legend = require("../component/Legend");
var _dot = require("../shape/Dot");
var _rectangle = require("../shape/Rectangle");
var _reactUtils = require("../util/ReactUtils");
var _brush = require("../cartesian/Brush");
var _domutils = require("../util/DOMUtils");
var _dataUtils = require("../util/DataUtils");
var _chartUtils = require("../util/ChartUtils");
var _detectReferenceElementsDomain = require("../util/DetectReferenceElementsDomain");
var _polarUtils = require("../util/PolarUtils");
var _shallowEqual = require("../util/ShallowEqual");
var _events = require("../util/Events");
var _types = require("../util/types");
var _accessibilityManager = require("./AccessibilityManager");
var _isDomainSpecifiedByUser = require("../util/isDomainSpecifiedByUser");
var _activeShapeUtils = require("../util/ActiveShapeUtils");
var _cursor = require("../component/Cursor");
var _chartLayoutContext = require("../context/chartLayoutContext");
var _excluded = [
    "item"
], _excluded2 = [
    "children",
    "className",
    "width",
    "height",
    "style",
    "compact",
    "title",
    "desc"
];
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _callSuper(t, o, e) {
    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    else if (call !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    Object.defineProperty(subClass, "prototype", {
        writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var ORIENT_MAP = {
    xAxis: [
        'bottom',
        'top'
    ],
    yAxis: [
        'left',
        'right'
    ]
};
var FULL_WIDTH_AND_HEIGHT = {
    width: '100%',
    height: '100%'
};
var originCoordinate = {
    x: 0,
    y: 0
};
/**
 * This function exists as a temporary workaround.
 *
 * Why? generateCategoricalChart does not render `{children}` directly;
 * instead it passes them through `renderByOrder` function which reads their handlers.
 *
 * So, this is a handler that does nothing.
 * Once we get rid of `renderByOrder` and switch to JSX only, we can get rid of this handler too.
 *
 * @param {JSX} element as is in JSX
 * @returns {JSX} the same element
 */ function renderAsIs(element) {
    return element;
}
var calculateTooltipPos = function calculateTooltipPos(rangeObj, layout) {
    if (layout === 'horizontal') return rangeObj.x;
    if (layout === 'vertical') return rangeObj.y;
    if (layout === 'centric') return rangeObj.angle;
    return rangeObj.radius;
};
var getActiveCoordinate = function getActiveCoordinate(layout, tooltipTicks, activeIndex, rangeObj) {
    var entry = tooltipTicks.find(function(tick) {
        return tick && tick.index === activeIndex;
    });
    if (entry) {
        if (layout === 'horizontal') return {
            x: entry.coordinate,
            y: rangeObj.y
        };
        if (layout === 'vertical') return {
            x: rangeObj.x,
            y: entry.coordinate
        };
        if (layout === 'centric') {
            var _angle = entry.coordinate;
            var _radius = rangeObj.radius;
            return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), (0, _polarUtils.polarToCartesian)(rangeObj.cx, rangeObj.cy, _radius, _angle)), {}, {
                angle: _angle,
                radius: _radius
            });
        }
        var radius = entry.coordinate;
        var angle = rangeObj.angle;
        return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), (0, _polarUtils.polarToCartesian)(rangeObj.cx, rangeObj.cy, radius, angle)), {}, {
            angle: angle,
            radius: radius
        });
    }
    return originCoordinate;
};
var getDisplayedData = function getDisplayedData(data, _ref) {
    var graphicalItems = _ref.graphicalItems, dataStartIndex = _ref.dataStartIndex, dataEndIndex = _ref.dataEndIndex;
    var itemsData = (graphicalItems !== null && graphicalItems !== void 0 ? graphicalItems : []).reduce(function(result, child) {
        var itemData = child.props.data;
        if (itemData && itemData.length) return [].concat(_toConsumableArray(result), _toConsumableArray(itemData));
        return result;
    }, []);
    if (itemsData.length > 0) return itemsData;
    if (data && data.length && (0, _dataUtils.isNumber)(dataStartIndex) && (0, _dataUtils.isNumber)(dataEndIndex)) return data.slice(dataStartIndex, dataEndIndex + 1);
    return [];
};
function getDefaultDomainByAxisType(axisType) {
    return axisType === 'number' ? [
        0,
        'auto'
    ] : undefined;
}
/**
 * Get the content to be displayed in the tooltip
 * @param  {Object} state          Current state
 * @param  {Array}  chartData      The data defined in chart
 * @param  {Number} activeIndex    Active index of data
 * @param  {String} activeLabel    Active label of data
 * @return {Array}                 The content of tooltip
 */ var getTooltipContent = function getTooltipContent(state, chartData, activeIndex, activeLabel) {
    var graphicalItems = state.graphicalItems, tooltipAxis = state.tooltipAxis;
    var displayedData = getDisplayedData(chartData, state);
    if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= displayedData.length) return null;
    // get data by activeIndex when the axis don't allow duplicated category
    return graphicalItems.reduce(function(result, child) {
        var _child$props$data;
        /**
     * Fixes: https://github.com/recharts/recharts/issues/3669
     * Defaulting to chartData below to fix an edge case where the tooltip does not include data from all charts
     * when a separate dataset is passed to chart prop data and specified on Line/Area/etc prop data
     */ var data = (_child$props$data = child.props.data) !== null && _child$props$data !== void 0 ? _child$props$data : chartData;
        if (data && state.dataStartIndex + state.dataEndIndex !== 0 && // https://github.com/recharts/recharts/issues/4717
        // The data is sliced only when the active index is within the start/end index range.
        state.dataEndIndex - state.dataStartIndex >= activeIndex) data = data.slice(state.dataStartIndex, state.dataEndIndex + 1);
        var payload;
        if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
            // graphic child has data props
            var entries = data === undefined ? displayedData : data;
            payload = (0, _dataUtils.findEntryInArray)(entries, tooltipAxis.dataKey, activeLabel);
        } else payload = data && data[activeIndex] || displayedData[activeIndex];
        if (!payload) return result;
        return [].concat(_toConsumableArray(result), [
            (0, _chartUtils.getTooltipItem)(child, payload)
        ]);
    }, []);
};
/**
 * Returns tooltip data based on a mouse position (as a parameter or in state)
 * @param  {Object} state     current state
 * @param  {Array}  chartData the data defined in chart
 * @param  {String} layout     The layout type of chart
 * @param  {Object} rangeObj  { x, y } coordinates
 * @return {Object}           Tooltip data data
 */ var getTooltipData = function getTooltipData(state, chartData, layout, rangeObj) {
    var rangeData = rangeObj || {
        x: state.chartX,
        y: state.chartY
    };
    var pos = calculateTooltipPos(rangeData, layout);
    var ticks = state.orderedTooltipTicks, axis = state.tooltipAxis, tooltipTicks = state.tooltipTicks;
    var activeIndex = (0, _chartUtils.calculateActiveTickIndex)(pos, ticks, tooltipTicks, axis);
    if (activeIndex >= 0 && tooltipTicks) {
        var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;
        var activePayload = getTooltipContent(state, chartData, activeIndex, activeLabel);
        var activeCoordinate = getActiveCoordinate(layout, ticks, activeIndex, rangeData);
        return {
            activeTooltipIndex: activeIndex,
            activeLabel: activeLabel,
            activePayload: activePayload,
            activeCoordinate: activeCoordinate
        };
    }
    return null;
};
var getAxisMapByAxes = function getAxisMapByAxes(props, _ref2) {
    var axes = _ref2.axes, graphicalItems = _ref2.graphicalItems, axisType = _ref2.axisType, axisIdKey = _ref2.axisIdKey, stackGroups = _ref2.stackGroups, dataStartIndex = _ref2.dataStartIndex, dataEndIndex = _ref2.dataEndIndex;
    var layout = props.layout, children = props.children, stackOffset = props.stackOffset;
    var isCategorical = (0, _chartUtils.isCategoricalAxis)(layout, axisType);
    // Eliminate duplicated axes
    return axes.reduce(function(result, child) {
        var _childProps$domain2;
        var childProps = child.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, child.type.defaultProps), child.props) : child.props;
        var type = childProps.type, dataKey = childProps.dataKey, allowDataOverflow = childProps.allowDataOverflow, allowDuplicatedCategory = childProps.allowDuplicatedCategory, scale = childProps.scale, ticks = childProps.ticks, includeHidden = childProps.includeHidden;
        var axisId = childProps[axisIdKey];
        if (result[axisId]) return result;
        var displayedData = getDisplayedData(props.data, {
            graphicalItems: graphicalItems.filter(function(item) {
                var _defaultProps;
                var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps = item.type.defaultProps) === null || _defaultProps === void 0 ? void 0 : _defaultProps[axisIdKey];
                return itemAxisId === axisId;
            }),
            dataStartIndex: dataStartIndex,
            dataEndIndex: dataEndIndex
        });
        var len = displayedData.length;
        var domain, duplicateDomain, categoricalDomain;
        /*
     * This is a hack to short-circuit the domain creation here to enhance performance.
     * Usually, the data is used to determine the domain, but when the user specifies
     * a domain upfront (via props), there is no need to calculate the domain start and end,
     * which is very expensive for a larger amount of data.
     * The only thing that would prohibit short-circuiting is when the user doesn't allow data overflow,
     * because the axis is supposed to ignore the specified domain that way.
     */ if ((0, _isDomainSpecifiedByUser.isDomainSpecifiedByUser)(childProps.domain, allowDataOverflow, type)) {
            domain = (0, _chartUtils.parseSpecifiedDomain)(childProps.domain, null, allowDataOverflow);
            /* The chart can be categorical and have the domain specified in numbers
       * we still need to calculate the categorical domain
       * TODO: refactor this more
       */ if (isCategorical && (type === 'number' || scale !== 'auto')) categoricalDomain = (0, _chartUtils.getDomainOfDataByKey)(displayedData, dataKey, 'category');
        }
        // if the domain is defaulted we need this for `originalDomain` as well
        var defaultDomain = getDefaultDomainByAxisType(type);
        // we didn't create the domain from user's props above, so we need to calculate it
        if (!domain || domain.length === 0) {
            var _childProps$domain;
            var childDomain = (_childProps$domain = childProps.domain) !== null && _childProps$domain !== void 0 ? _childProps$domain : defaultDomain;
            if (dataKey) {
                // has dataKey in <Axis />
                domain = (0, _chartUtils.getDomainOfDataByKey)(displayedData, dataKey, type);
                if (type === 'category' && isCategorical) {
                    // the field type is category data and this axis is categorical axis
                    var duplicate = (0, _dataUtils.hasDuplicate)(domain);
                    if (allowDuplicatedCategory && duplicate) {
                        duplicateDomain = domain;
                        // When category axis has duplicated text, serial numbers are used to generate scale
                        domain = (0, _rangeDefault.default)(0, len);
                    } else if (!allowDuplicatedCategory) // remove duplicated category
                    domain = (0, _chartUtils.parseDomainOfCategoryAxis)(childDomain, domain, child).reduce(function(finalDomain, entry) {
                        return finalDomain.indexOf(entry) >= 0 ? finalDomain : [].concat(_toConsumableArray(finalDomain), [
                            entry
                        ]);
                    }, []);
                } else if (type === 'category') {
                    // the field type is category data and this axis is numerical axis
                    if (!allowDuplicatedCategory) domain = (0, _chartUtils.parseDomainOfCategoryAxis)(childDomain, domain, child).reduce(function(finalDomain, entry) {
                        return finalDomain.indexOf(entry) >= 0 || entry === '' || (0, _isNilDefault.default)(entry) ? finalDomain : [].concat(_toConsumableArray(finalDomain), [
                            entry
                        ]);
                    }, []);
                    else // eliminate undefined or null or empty string
                    domain = domain.filter(function(entry) {
                        return entry !== '' && !(0, _isNilDefault.default)(entry);
                    });
                } else if (type === 'number') {
                    // the field type is numerical
                    var errorBarsDomain = (0, _chartUtils.parseErrorBarsOfAxis)(displayedData, graphicalItems.filter(function(item) {
                        var _defaultProps2, _defaultProps3;
                        var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps2 = item.type.defaultProps) === null || _defaultProps2 === void 0 ? void 0 : _defaultProps2[axisIdKey];
                        var itemHide = 'hide' in item.props ? item.props.hide : (_defaultProps3 = item.type.defaultProps) === null || _defaultProps3 === void 0 ? void 0 : _defaultProps3.hide;
                        return itemAxisId === axisId && (includeHidden || !itemHide);
                    }), dataKey, axisType, layout);
                    if (errorBarsDomain) domain = errorBarsDomain;
                }
                if (isCategorical && (type === 'number' || scale !== 'auto')) categoricalDomain = (0, _chartUtils.getDomainOfDataByKey)(displayedData, dataKey, 'category');
            } else if (isCategorical) // the axis is a categorical axis
            domain = (0, _rangeDefault.default)(0, len);
            else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === 'number') // when stackOffset is 'expand', the domain may be calculated as [0, 1.000000000002]
            domain = stackOffset === 'expand' ? [
                0,
                1
            ] : (0, _chartUtils.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
            else domain = (0, _chartUtils.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function(item) {
                var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : item.type.defaultProps[axisIdKey];
                var itemHide = 'hide' in item.props ? item.props.hide : item.type.defaultProps.hide;
                return itemAxisId === axisId && (includeHidden || !itemHide);
            }), type, layout, true);
            if (type === 'number') {
                // To detect wether there is any reference lines whose props alwaysShow is true
                domain = (0, _detectReferenceElementsDomain.detectReferenceElementsDomain)(children, domain, axisId, axisType, ticks);
                if (childDomain) domain = (0, _chartUtils.parseSpecifiedDomain)(childDomain, domain, allowDataOverflow);
            } else if (type === 'category' && childDomain) {
                var axisDomain = childDomain;
                var isDomainValid = domain.every(function(entry) {
                    return axisDomain.indexOf(entry) >= 0;
                });
                if (isDomainValid) domain = axisDomain;
            }
        }
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, _objectSpread(_objectSpread({}, childProps), {}, {
            axisType: axisType,
            domain: domain,
            categoricalDomain: categoricalDomain,
            duplicateDomain: duplicateDomain,
            originalDomain: (_childProps$domain2 = childProps.domain) !== null && _childProps$domain2 !== void 0 ? _childProps$domain2 : defaultDomain,
            isCategorical: isCategorical,
            layout: layout
        })));
    }, {});
};
/**
 * Get the configuration of axis by the options of item,
 * this kind of axis does not display in chart
 * @param  {Object} props         Latest props
 * @param  {Array} graphicalItems The instances of item
 * @param  {ReactElement} Axis    Axis Component
 * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis
 * @param  {String} axisIdKey     The unique id of an axis
 * @param  {Object} stackGroups   The items grouped by axisId and stackId
 * @param {Number} dataStartIndex The start index of the data series when a brush is applied
 * @param {Number} dataEndIndex   The end index of the data series when a brush is applied
 * @return {Object}               Configuration
 */ var getAxisMapByItems = function getAxisMapByItems(props, _ref3) {
    var graphicalItems = _ref3.graphicalItems, Axis = _ref3.Axis, axisType = _ref3.axisType, axisIdKey = _ref3.axisIdKey, stackGroups = _ref3.stackGroups, dataStartIndex = _ref3.dataStartIndex, dataEndIndex = _ref3.dataEndIndex;
    var layout = props.layout, children = props.children;
    var displayedData = getDisplayedData(props.data, {
        graphicalItems: graphicalItems,
        dataStartIndex: dataStartIndex,
        dataEndIndex: dataEndIndex
    });
    var len = displayedData.length;
    var isCategorical = (0, _chartUtils.isCategoricalAxis)(layout, axisType);
    var index = -1;
    // The default type of x-axis is category axis,
    // The default contents of x-axis is the serial numbers of data
    // The default type of y-axis is number axis
    // The default contents of y-axis is the domain of data
    return graphicalItems.reduce(function(result, child) {
        var childProps = child.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, child.type.defaultProps), child.props) : child.props;
        var axisId = childProps[axisIdKey];
        var originalDomain = getDefaultDomainByAxisType('number');
        if (!result[axisId]) {
            index++;
            var domain;
            if (isCategorical) domain = (0, _rangeDefault.default)(0, len);
            else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {
                domain = (0, _chartUtils.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
                domain = (0, _detectReferenceElementsDomain.detectReferenceElementsDomain)(children, domain, axisId, axisType);
            } else {
                domain = (0, _chartUtils.parseSpecifiedDomain)(originalDomain, (0, _chartUtils.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function(item) {
                    var _defaultProps4, _defaultProps5;
                    var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps4 = item.type.defaultProps) === null || _defaultProps4 === void 0 ? void 0 : _defaultProps4[axisIdKey];
                    var itemHide = 'hide' in item.props ? item.props.hide : (_defaultProps5 = item.type.defaultProps) === null || _defaultProps5 === void 0 ? void 0 : _defaultProps5.hide;
                    return itemAxisId === axisId && !itemHide;
                }), 'number', layout), Axis.defaultProps.allowDataOverflow);
                domain = (0, _detectReferenceElementsDomain.detectReferenceElementsDomain)(children, domain, axisId, axisType);
            }
            return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, _objectSpread(_objectSpread({
                axisType: axisType
            }, Axis.defaultProps), {}, {
                hide: true,
                orientation: (0, _getDefault.default)(ORIENT_MAP, "".concat(axisType, ".").concat(index % 2), null),
                domain: domain,
                originalDomain: originalDomain,
                isCategorical: isCategorical,
                layout: layout
            })));
        }
        return result;
    }, {});
};
/**
 * Get the configuration of all x-axis or y-axis
 * @param  {Object} props          Latest props
 * @param  {String} axisType       The type of axis
 * @param  {React.ComponentType}  [AxisComp]      Axis Component
 * @param  {Array}  graphicalItems The instances of item
 * @param  {Object} stackGroups    The items grouped by axisId and stackId
 * @param {Number} dataStartIndex  The start index of the data series when a brush is applied
 * @param {Number} dataEndIndex    The end index of the data series when a brush is applied
 * @return {Object}          Configuration
 */ var getAxisMap = function getAxisMap(props, _ref4) {
    var _ref4$axisType = _ref4.axisType, axisType = _ref4$axisType === void 0 ? 'xAxis' : _ref4$axisType, AxisComp = _ref4.AxisComp, graphicalItems = _ref4.graphicalItems, stackGroups = _ref4.stackGroups, dataStartIndex = _ref4.dataStartIndex, dataEndIndex = _ref4.dataEndIndex;
    var children = props.children;
    var axisIdKey = "".concat(axisType, "Id");
    // Get all the instance of Axis
    var axes = (0, _reactUtils.findAllByType)(children, AxisComp);
    var axisMap = {};
    if (axes && axes.length) axisMap = getAxisMapByAxes(props, {
        axes: axes,
        graphicalItems: graphicalItems,
        axisType: axisType,
        axisIdKey: axisIdKey,
        stackGroups: stackGroups,
        dataStartIndex: dataStartIndex,
        dataEndIndex: dataEndIndex
    });
    else if (graphicalItems && graphicalItems.length) axisMap = getAxisMapByItems(props, {
        Axis: AxisComp,
        graphicalItems: graphicalItems,
        axisType: axisType,
        axisIdKey: axisIdKey,
        stackGroups: stackGroups,
        dataStartIndex: dataStartIndex,
        dataEndIndex: dataEndIndex
    });
    return axisMap;
};
var tooltipTicksGenerator = function tooltipTicksGenerator(axisMap) {
    var axis = (0, _dataUtils.getAnyElementOfObject)(axisMap);
    var tooltipTicks = (0, _chartUtils.getTicksOfAxis)(axis, false, true);
    return {
        tooltipTicks: tooltipTicks,
        orderedTooltipTicks: (0, _sortByDefault.default)(tooltipTicks, function(o) {
            return o.coordinate;
        }),
        tooltipAxis: axis,
        tooltipAxisBandSize: (0, _chartUtils.getBandSizeOfAxis)(axis, tooltipTicks)
    };
};
var createDefaultState = function createDefaultState(props) {
    var children = props.children, defaultShowTooltip = props.defaultShowTooltip;
    var brushItem = (0, _reactUtils.findChildByType)(children, (0, _brush.Brush));
    var startIndex = 0;
    var endIndex = 0;
    if (props.data && props.data.length !== 0) endIndex = props.data.length - 1;
    if (brushItem && brushItem.props) {
        if (brushItem.props.startIndex >= 0) startIndex = brushItem.props.startIndex;
        if (brushItem.props.endIndex >= 0) endIndex = brushItem.props.endIndex;
    }
    return {
        chartX: 0,
        chartY: 0,
        dataStartIndex: startIndex,
        dataEndIndex: endIndex,
        activeTooltipIndex: -1,
        isTooltipActive: Boolean(defaultShowTooltip)
    };
};
var hasGraphicalBarItem = function hasGraphicalBarItem(graphicalItems) {
    if (!graphicalItems || !graphicalItems.length) return false;
    return graphicalItems.some(function(item) {
        var name = (0, _reactUtils.getDisplayName)(item && item.type);
        return name && name.indexOf('Bar') >= 0;
    });
};
var getAxisNameByLayout = function getAxisNameByLayout(layout) {
    if (layout === 'horizontal') return {
        numericAxisName: 'yAxis',
        cateAxisName: 'xAxis'
    };
    if (layout === 'vertical') return {
        numericAxisName: 'xAxis',
        cateAxisName: 'yAxis'
    };
    if (layout === 'centric') return {
        numericAxisName: 'radiusAxis',
        cateAxisName: 'angleAxis'
    };
    return {
        numericAxisName: 'angleAxis',
        cateAxisName: 'radiusAxis'
    };
};
/**
 * Calculate the offset of main part in the svg element
 * @param  {Object} params.props          Latest props
 * @param  {Array}  params.graphicalItems The instances of item
 * @param  {Object} params.xAxisMap       The configuration of x-axis
 * @param  {Object} params.yAxisMap       The configuration of y-axis
 * @param  {Object} prevLegendBBox        The boundary box of legend
 * @return {Object} The offset of main part in the svg element
 */ var calculateOffset = function calculateOffset(_ref5, prevLegendBBox) {
    var props = _ref5.props, graphicalItems = _ref5.graphicalItems, _ref5$xAxisMap = _ref5.xAxisMap, xAxisMap = _ref5$xAxisMap === void 0 ? {} : _ref5$xAxisMap, _ref5$yAxisMap = _ref5.yAxisMap, yAxisMap = _ref5$yAxisMap === void 0 ? {} : _ref5$yAxisMap;
    var width = props.width, height = props.height, children = props.children;
    var margin = props.margin || {};
    var brushItem = (0, _reactUtils.findChildByType)(children, (0, _brush.Brush));
    var legendItem = (0, _reactUtils.findChildByType)(children, (0, _legend.Legend));
    var offsetH = Object.keys(yAxisMap).reduce(function(result, id) {
        var entry = yAxisMap[id];
        var orientation = entry.orientation;
        if (!entry.mirror && !entry.hide) return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, orientation, result[orientation] + entry.width));
        return result;
    }, {
        left: margin.left || 0,
        right: margin.right || 0
    });
    var offsetV = Object.keys(xAxisMap).reduce(function(result, id) {
        var entry = xAxisMap[id];
        var orientation = entry.orientation;
        if (!entry.mirror && !entry.hide) return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, orientation, (0, _getDefault.default)(result, "".concat(orientation)) + entry.height));
        return result;
    }, {
        top: margin.top || 0,
        bottom: margin.bottom || 0
    });
    var offset = _objectSpread(_objectSpread({}, offsetV), offsetH);
    var brushBottom = offset.bottom;
    if (brushItem) offset.bottom += brushItem.props.height || (0, _brush.Brush).defaultProps.height;
    if (legendItem && prevLegendBBox) // @ts-expect-error margin is optional in props but required in appendOffsetOfLegend
    offset = (0, _chartUtils.appendOffsetOfLegend)(offset, graphicalItems, props, prevLegendBBox);
    var offsetWidth = width - offset.left - offset.right;
    var offsetHeight = height - offset.top - offset.bottom;
    return _objectSpread(_objectSpread({
        brushBottom: brushBottom
    }, offset), {}, {
        // never return negative values for height and width
        width: Math.max(offsetWidth, 0),
        height: Math.max(offsetHeight, 0)
    });
};
// Determine the size of the axis, used for calculation of relative bar sizes
var getCartesianAxisSize = function getCartesianAxisSize(axisObj, axisName) {
    if (axisName === 'xAxis') return axisObj[axisName].width;
    if (axisName === 'yAxis') return axisObj[axisName].height;
    // This is only supported for Bar charts (i.e. charts with cartesian axes), so we should never get here
    return undefined;
};
var generateCategoricalChart = function generateCategoricalChart(_ref6) {
    var chartName = _ref6.chartName, GraphicalChild = _ref6.GraphicalChild, _ref6$defaultTooltipE = _ref6.defaultTooltipEventType, defaultTooltipEventType = _ref6$defaultTooltipE === void 0 ? 'axis' : _ref6$defaultTooltipE, _ref6$validateTooltip = _ref6.validateTooltipEventTypes, validateTooltipEventTypes = _ref6$validateTooltip === void 0 ? [
        'axis'
    ] : _ref6$validateTooltip, axisComponents = _ref6.axisComponents, legendContent = _ref6.legendContent, formatAxisMap = _ref6.formatAxisMap, defaultProps = _ref6.defaultProps;
    var getFormatItems = function getFormatItems(props, currentState) {
        var graphicalItems = currentState.graphicalItems, stackGroups = currentState.stackGroups, offset = currentState.offset, updateId = currentState.updateId, dataStartIndex = currentState.dataStartIndex, dataEndIndex = currentState.dataEndIndex;
        var barSize = props.barSize, layout = props.layout, barGap = props.barGap, barCategoryGap = props.barCategoryGap, globalMaxBarSize = props.maxBarSize;
        var _getAxisNameByLayout = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout.numericAxisName, cateAxisName = _getAxisNameByLayout.cateAxisName;
        var hasBar = hasGraphicalBarItem(graphicalItems);
        var formattedItems = [];
        graphicalItems.forEach(function(item, index) {
            var displayedData = getDisplayedData(props.data, {
                graphicalItems: [
                    item
                ],
                dataStartIndex: dataStartIndex,
                dataEndIndex: dataEndIndex
            });
            var itemProps = item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
            var dataKey = itemProps.dataKey, childMaxBarSize = itemProps.maxBarSize;
            // axisId of the numerical axis
            var numericAxisId = itemProps["".concat(numericAxisName, "Id")];
            // axisId of the categorical axis
            var cateAxisId = itemProps["".concat(cateAxisName, "Id")];
            var axisObjInitialValue = {};
            var axisObj = axisComponents.reduce(function(result, entry) {
                var _item$type$displayNam, _item$type;
                // map of axisId to axis for a specific axis type
                var axisMap = currentState["".concat(entry.axisType, "Map")];
                // axisId of axis we are currently computing
                var id = itemProps["".concat(entry.axisType, "Id")];
                /**
         * tell the user in dev mode that their configuration is incorrect if we cannot find a match between
         * axisId on the chart and axisId on the axis. zAxis does not get passed in the map for ComposedChart,
         * leave it out of the check for now.
         */ !(axisMap && axisMap[id] || entry.axisType === 'zAxis') && (0, _tinyInvariantDefault.default)(false, "Specifying a(n) ".concat(entry.axisType, "Id requires a corresponding ").concat(entry.axisType, "Id on the targeted graphical component ").concat((_item$type$displayNam = item === null || item === void 0 || (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.displayName) !== null && _item$type$displayNam !== void 0 ? _item$type$displayNam : ''));
                // the axis we are currently formatting
                var axis = axisMap[id];
                return _objectSpread(_objectSpread({}, result), {}, _defineProperty(_defineProperty({}, entry.axisType, axis), "".concat(entry.axisType, "Ticks"), (0, _chartUtils.getTicksOfAxis)(axis)));
            }, axisObjInitialValue);
            var cateAxis = axisObj[cateAxisName];
            var cateTicks = axisObj["".concat(cateAxisName, "Ticks")];
            var stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && (0, _chartUtils.getStackedDataOfItem)(item, stackGroups[numericAxisId].stackGroups);
            var itemIsBar = (0, _reactUtils.getDisplayName)(item.type).indexOf('Bar') >= 0;
            var bandSize = (0, _chartUtils.getBandSizeOfAxis)(cateAxis, cateTicks);
            var barPosition = [];
            var sizeList = hasBar && (0, _chartUtils.getBarSizeList)({
                barSize: barSize,
                stackGroups: stackGroups,
                totalSize: getCartesianAxisSize(axisObj, cateAxisName)
            });
            if (itemIsBar) {
                var _ref7, _getBandSizeOfAxis;
                // If it is bar, calculate the position of bar
                var maxBarSize = (0, _isNilDefault.default)(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;
                var barBandSize = (_ref7 = (_getBandSizeOfAxis = (0, _chartUtils.getBandSizeOfAxis)(cateAxis, cateTicks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref7 !== void 0 ? _ref7 : 0;
                barPosition = (0, _chartUtils.getBarPosition)({
                    barGap: barGap,
                    barCategoryGap: barCategoryGap,
                    bandSize: barBandSize !== bandSize ? barBandSize : bandSize,
                    sizeList: sizeList[cateAxisId],
                    maxBarSize: maxBarSize
                });
                if (barBandSize !== bandSize) barPosition = barPosition.map(function(pos) {
                    return _objectSpread(_objectSpread({}, pos), {}, {
                        position: _objectSpread(_objectSpread({}, pos.position), {}, {
                            offset: pos.position.offset - barBandSize / 2
                        })
                    });
                });
            }
            // @ts-expect-error we should stop reading data from ReactElements
            var composedFn = item && item.type && item.type.getComposedData;
            if (composedFn) formattedItems.push({
                props: _objectSpread(_objectSpread({}, composedFn(_objectSpread(_objectSpread({}, axisObj), {}, {
                    displayedData: displayedData,
                    props: props,
                    dataKey: dataKey,
                    item: item,
                    bandSize: bandSize,
                    barPosition: barPosition,
                    offset: offset,
                    stackedData: stackedData,
                    layout: layout,
                    dataStartIndex: dataStartIndex,
                    dataEndIndex: dataEndIndex
                }))), {}, _defineProperty(_defineProperty(_defineProperty({
                    key: item.key || "item-".concat(index)
                }, numericAxisName, axisObj[numericAxisName]), cateAxisName, axisObj[cateAxisName]), "animationId", updateId)),
                childIndex: (0, _reactUtils.parseChildIndex)(item, props.children),
                item: item
            });
        });
        return formattedItems;
    };
    /**
   * The AxisMaps are expensive to render on large data sets
   * so provide the ability to store them in state and only update them when necessary
   * they are dependent upon the start and end index of
   * the brush so it's important that this method is called _after_
   * the state is updated with any new start/end indices
   *
   * @param {Object} props          The props object to be used for updating the axismaps
   * dataStartIndex: The start index of the data series when a brush is applied
   * dataEndIndex: The end index of the data series when a brush is applied
   * updateId: The update id
   * @param {Object} prevState      Prev state
   * @return {Object} state New state to set
   */ var updateStateOfAxisMapsOffsetAndStackGroups = function updateStateOfAxisMapsOffsetAndStackGroups(_ref8, prevState) {
        var props = _ref8.props, dataStartIndex = _ref8.dataStartIndex, dataEndIndex = _ref8.dataEndIndex, updateId = _ref8.updateId;
        if (!(0, _reactUtils.validateWidthHeight)({
            props: props
        })) return null;
        var children = props.children, layout = props.layout, stackOffset = props.stackOffset, data = props.data, reverseStackOrder = props.reverseStackOrder;
        var _getAxisNameByLayout2 = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout2.numericAxisName, cateAxisName = _getAxisNameByLayout2.cateAxisName;
        var graphicalItems = (0, _reactUtils.findAllByType)(children, GraphicalChild);
        var stackGroups = (0, _chartUtils.getStackGroupsByAxisId)(data, graphicalItems, "".concat(numericAxisName, "Id"), "".concat(cateAxisName, "Id"), stackOffset, reverseStackOrder);
        var axisObj = axisComponents.reduce(function(result, entry) {
            var name = "".concat(entry.axisType, "Map");
            return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, name, getAxisMap(props, _objectSpread(_objectSpread({}, entry), {}, {
                graphicalItems: graphicalItems,
                stackGroups: entry.axisType === numericAxisName && stackGroups,
                dataStartIndex: dataStartIndex,
                dataEndIndex: dataEndIndex
            }))));
        }, {});
        var offset = calculateOffset(_objectSpread(_objectSpread({}, axisObj), {}, {
            props: props,
            graphicalItems: graphicalItems
        }), prevState === null || prevState === void 0 ? void 0 : prevState.legendBBox);
        Object.keys(axisObj).forEach(function(key) {
            axisObj[key] = formatAxisMap(props, axisObj[key], offset, key.replace('Map', ''), chartName);
        });
        var cateAxisMap = axisObj["".concat(cateAxisName, "Map")];
        var ticksObj = tooltipTicksGenerator(cateAxisMap);
        var formattedGraphicalItems = getFormatItems(props, _objectSpread(_objectSpread({}, axisObj), {}, {
            dataStartIndex: dataStartIndex,
            dataEndIndex: dataEndIndex,
            updateId: updateId,
            graphicalItems: graphicalItems,
            stackGroups: stackGroups,
            offset: offset
        }));
        return _objectSpread(_objectSpread({
            formattedGraphicalItems: formattedGraphicalItems,
            graphicalItems: graphicalItems,
            offset: offset,
            stackGroups: stackGroups
        }, ticksObj), axisObj);
    };
    var CategoricalChartWrapper = /*#__PURE__*/ function(_Component) {
        function CategoricalChartWrapper(_props) {
            var _props$id, _props$throttleDelay;
            var _this;
            _classCallCheck(this, CategoricalChartWrapper);
            _this = _callSuper(this, CategoricalChartWrapper, [
                _props
            ]);
            _defineProperty(_this, "eventEmitterSymbol", Symbol('rechartsEventEmitter'));
            _defineProperty(_this, "accessibilityManager", new (0, _accessibilityManager.AccessibilityManager)());
            _defineProperty(_this, "handleLegendBBoxUpdate", function(box) {
                if (box) {
                    var _this$state = _this.state, dataStartIndex = _this$state.dataStartIndex, dataEndIndex = _this$state.dataEndIndex, updateId = _this$state.updateId;
                    _this.setState(_objectSpread({
                        legendBBox: box
                    }, updateStateOfAxisMapsOffsetAndStackGroups({
                        props: _this.props,
                        dataStartIndex: dataStartIndex,
                        dataEndIndex: dataEndIndex,
                        updateId: updateId
                    }, _objectSpread(_objectSpread({}, _this.state), {}, {
                        legendBBox: box
                    }))));
                }
            });
            _defineProperty(_this, "handleReceiveSyncEvent", function(cId, data, emitter) {
                if (_this.props.syncId === cId) {
                    if (emitter === _this.eventEmitterSymbol && typeof _this.props.syncMethod !== 'function') return;
                    _this.applySyncEvent(data);
                }
            });
            _defineProperty(_this, "handleBrushChange", function(_ref9) {
                var startIndex = _ref9.startIndex, endIndex = _ref9.endIndex;
                // Only trigger changes if the extents of the brush have actually changed
                if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {
                    var updateId = _this.state.updateId;
                    _this.setState(function() {
                        return _objectSpread({
                            dataStartIndex: startIndex,
                            dataEndIndex: endIndex
                        }, updateStateOfAxisMapsOffsetAndStackGroups({
                            props: _this.props,
                            dataStartIndex: startIndex,
                            dataEndIndex: endIndex,
                            updateId: updateId
                        }, _this.state));
                    });
                    _this.triggerSyncEvent({
                        dataStartIndex: startIndex,
                        dataEndIndex: endIndex
                    });
                }
            });
            /**
       * The handler of mouse entering chart
       * @param  {Object} e              Event object
       * @return {Null}                  null
       */ _defineProperty(_this, "handleMouseEnter", function(e) {
                var mouse = _this.getMouseInfo(e);
                if (mouse) {
                    var _nextState = _objectSpread(_objectSpread({}, mouse), {}, {
                        isTooltipActive: true
                    });
                    _this.setState(_nextState);
                    _this.triggerSyncEvent(_nextState);
                    var onMouseEnter = _this.props.onMouseEnter;
                    if ((0, _isFunctionDefault.default)(onMouseEnter)) onMouseEnter(_nextState, e);
                }
            });
            _defineProperty(_this, "triggeredAfterMouseMove", function(e) {
                var mouse = _this.getMouseInfo(e);
                var nextState = mouse ? _objectSpread(_objectSpread({}, mouse), {}, {
                    isTooltipActive: true
                }) : {
                    isTooltipActive: false
                };
                _this.setState(nextState);
                _this.triggerSyncEvent(nextState);
                var onMouseMove = _this.props.onMouseMove;
                if ((0, _isFunctionDefault.default)(onMouseMove)) onMouseMove(nextState, e);
            });
            /**
       * The handler of mouse entering a scatter
       * @param {Object} el The active scatter
       * @return {Object} no return
       */ _defineProperty(_this, "handleItemMouseEnter", function(el) {
                _this.setState(function() {
                    return {
                        isTooltipActive: true,
                        activeItem: el,
                        activePayload: el.tooltipPayload,
                        activeCoordinate: el.tooltipPosition || {
                            x: el.cx,
                            y: el.cy
                        }
                    };
                });
            });
            /**
       * The handler of mouse leaving a scatter
       * @return {Object} no return
       */ _defineProperty(_this, "handleItemMouseLeave", function() {
                _this.setState(function() {
                    return {
                        isTooltipActive: false
                    };
                });
            });
            /**
       * The handler of mouse moving in chart
       * @param  {React.MouseEvent} e        Event object
       * @return {void} no return
       */ _defineProperty(_this, "handleMouseMove", function(e) {
                e.persist();
                _this.throttleTriggeredAfterMouseMove(e);
            });
            /**
       * The handler if mouse leaving chart
       * @param {Object} e Event object
       * @return {Null} no return
       */ _defineProperty(_this, "handleMouseLeave", function(e) {
                _this.throttleTriggeredAfterMouseMove.cancel();
                var nextState = {
                    isTooltipActive: false
                };
                _this.setState(nextState);
                _this.triggerSyncEvent(nextState);
                var onMouseLeave = _this.props.onMouseLeave;
                if ((0, _isFunctionDefault.default)(onMouseLeave)) onMouseLeave(nextState, e);
            });
            _defineProperty(_this, "handleOuterEvent", function(e) {
                var eventName = (0, _reactUtils.getReactEventByType)(e);
                var event = (0, _getDefault.default)(_this.props, "".concat(eventName));
                if (eventName && (0, _isFunctionDefault.default)(event)) {
                    var _mouse;
                    var mouse;
                    if (/.*touch.*/i.test(eventName)) mouse = _this.getMouseInfo(e.changedTouches[0]);
                    else mouse = _this.getMouseInfo(e);
                    event((_mouse = mouse) !== null && _mouse !== void 0 ? _mouse : {}, e);
                }
            });
            _defineProperty(_this, "handleClick", function(e) {
                var mouse = _this.getMouseInfo(e);
                if (mouse) {
                    var _nextState2 = _objectSpread(_objectSpread({}, mouse), {}, {
                        isTooltipActive: true
                    });
                    _this.setState(_nextState2);
                    _this.triggerSyncEvent(_nextState2);
                    var onClick = _this.props.onClick;
                    if ((0, _isFunctionDefault.default)(onClick)) onClick(_nextState2, e);
                }
            });
            _defineProperty(_this, "handleMouseDown", function(e) {
                var onMouseDown = _this.props.onMouseDown;
                if ((0, _isFunctionDefault.default)(onMouseDown)) {
                    var _nextState3 = _this.getMouseInfo(e);
                    onMouseDown(_nextState3, e);
                }
            });
            _defineProperty(_this, "handleMouseUp", function(e) {
                var onMouseUp = _this.props.onMouseUp;
                if ((0, _isFunctionDefault.default)(onMouseUp)) {
                    var _nextState4 = _this.getMouseInfo(e);
                    onMouseUp(_nextState4, e);
                }
            });
            _defineProperty(_this, "handleTouchMove", function(e) {
                if (e.changedTouches != null && e.changedTouches.length > 0) _this.throttleTriggeredAfterMouseMove(e.changedTouches[0]);
            });
            _defineProperty(_this, "handleTouchStart", function(e) {
                if (e.changedTouches != null && e.changedTouches.length > 0) _this.handleMouseDown(e.changedTouches[0]);
            });
            _defineProperty(_this, "handleTouchEnd", function(e) {
                if (e.changedTouches != null && e.changedTouches.length > 0) _this.handleMouseUp(e.changedTouches[0]);
            });
            _defineProperty(_this, "handleDoubleClick", function(e) {
                var onDoubleClick = _this.props.onDoubleClick;
                if ((0, _isFunctionDefault.default)(onDoubleClick)) {
                    var _nextState5 = _this.getMouseInfo(e);
                    onDoubleClick(_nextState5, e);
                }
            });
            _defineProperty(_this, "handleContextMenu", function(e) {
                var onContextMenu = _this.props.onContextMenu;
                if ((0, _isFunctionDefault.default)(onContextMenu)) {
                    var _nextState6 = _this.getMouseInfo(e);
                    onContextMenu(_nextState6, e);
                }
            });
            _defineProperty(_this, "triggerSyncEvent", function(data) {
                if (_this.props.syncId !== undefined) (0, _events.eventCenter).emit((0, _events.SYNC_EVENT), _this.props.syncId, data, _this.eventEmitterSymbol);
            });
            _defineProperty(_this, "applySyncEvent", function(data) {
                var _this$props = _this.props, layout = _this$props.layout, syncMethod = _this$props.syncMethod;
                var updateId = _this.state.updateId;
                var dataStartIndex = data.dataStartIndex, dataEndIndex = data.dataEndIndex;
                if (data.dataStartIndex !== undefined || data.dataEndIndex !== undefined) _this.setState(_objectSpread({
                    dataStartIndex: dataStartIndex,
                    dataEndIndex: dataEndIndex
                }, updateStateOfAxisMapsOffsetAndStackGroups({
                    props: _this.props,
                    dataStartIndex: dataStartIndex,
                    dataEndIndex: dataEndIndex,
                    updateId: updateId
                }, _this.state)));
                else if (data.activeTooltipIndex !== undefined) {
                    var chartX = data.chartX, chartY = data.chartY;
                    var activeTooltipIndex = data.activeTooltipIndex;
                    var _this$state2 = _this.state, offset = _this$state2.offset, tooltipTicks = _this$state2.tooltipTicks;
                    if (!offset) return;
                    if (typeof syncMethod === 'function') // Call a callback function. If there is an application specific algorithm
                    activeTooltipIndex = syncMethod(tooltipTicks, data);
                    else if (syncMethod === 'value') {
                        // Set activeTooltipIndex to the index with the same value as data.activeLabel
                        // For loop instead of findIndex because the latter is very slow in some browsers
                        activeTooltipIndex = -1; // in case we cannot find the element
                        for(var i = 0; i < tooltipTicks.length; i++)if (tooltipTicks[i].value === data.activeLabel) {
                            activeTooltipIndex = i;
                            break;
                        }
                    }
                    var viewBox = _objectSpread(_objectSpread({}, offset), {}, {
                        x: offset.left,
                        y: offset.top
                    });
                    // When a categorical chart is combined with another chart, the value of chartX
                    // and chartY may beyond the boundaries.
                    var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);
                    var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);
                    var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;
                    var activePayload = getTooltipContent(_this.state, _this.props.data, activeTooltipIndex);
                    var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {
                        x: layout === 'horizontal' ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,
                        y: layout === 'horizontal' ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate
                    } : originCoordinate;
                    _this.setState(_objectSpread(_objectSpread({}, data), {}, {
                        activeLabel: activeLabel,
                        activeCoordinate: activeCoordinate,
                        activePayload: activePayload,
                        activeTooltipIndex: activeTooltipIndex
                    }));
                } else _this.setState(data);
            });
            _defineProperty(_this, "renderCursor", function(element) {
                var _element$props$active;
                var _this$state3 = _this.state, isTooltipActive = _this$state3.isTooltipActive, activeCoordinate = _this$state3.activeCoordinate, activePayload = _this$state3.activePayload, offset = _this$state3.offset, activeTooltipIndex = _this$state3.activeTooltipIndex, tooltipAxisBandSize = _this$state3.tooltipAxisBandSize;
                var tooltipEventType = _this.getTooltipEventType();
                // The cursor is a part of the Tooltip, and it should be shown (by default) when the Tooltip is active.
                var isActive = (_element$props$active = element.props.active) !== null && _element$props$active !== void 0 ? _element$props$active : isTooltipActive;
                var layout = _this.props.layout;
                var key = element.key || '_recharts-cursor';
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _cursor.Cursor), {
                    key: key,
                    activeCoordinate: activeCoordinate,
                    activePayload: activePayload,
                    activeTooltipIndex: activeTooltipIndex,
                    chartName: chartName,
                    element: element,
                    isActive: isActive,
                    layout: layout,
                    offset: offset,
                    tooltipAxisBandSize: tooltipAxisBandSize,
                    tooltipEventType: tooltipEventType
                });
            });
            _defineProperty(_this, "renderPolarAxis", function(element, displayName, index) {
                var axisType = (0, _getDefault.default)(element, 'type.axisType');
                var axisMap = (0, _getDefault.default)(_this.state, "".concat(axisType, "Map"));
                var elementDefaultProps = element.type.defaultProps;
                var elementProps = elementDefaultProps !== undefined ? _objectSpread(_objectSpread({}, elementDefaultProps), element.props) : element.props;
                var axisOption = axisMap && axisMap[elementProps["".concat(axisType, "Id")]];
                return /*#__PURE__*/ (0, _react.cloneElement)(element, _objectSpread(_objectSpread({}, axisOption), {}, {
                    className: (0, _clsxDefault.default)(axisType, axisOption.className),
                    key: element.key || "".concat(displayName, "-").concat(index),
                    ticks: (0, _chartUtils.getTicksOfAxis)(axisOption, true)
                }));
            });
            _defineProperty(_this, "renderPolarGrid", function(element) {
                var _element$props = element.props, radialLines = _element$props.radialLines, polarAngles = _element$props.polarAngles, polarRadius = _element$props.polarRadius;
                var _this$state4 = _this.state, radiusAxisMap = _this$state4.radiusAxisMap, angleAxisMap = _this$state4.angleAxisMap;
                var radiusAxis = (0, _dataUtils.getAnyElementOfObject)(radiusAxisMap);
                var angleAxis = (0, _dataUtils.getAnyElementOfObject)(angleAxisMap);
                var cx = angleAxis.cx, cy = angleAxis.cy, innerRadius = angleAxis.innerRadius, outerRadius = angleAxis.outerRadius;
                return /*#__PURE__*/ (0, _react.cloneElement)(element, {
                    polarAngles: Array.isArray(polarAngles) ? polarAngles : (0, _chartUtils.getTicksOfAxis)(angleAxis, true).map(function(entry) {
                        return entry.coordinate;
                    }),
                    polarRadius: Array.isArray(polarRadius) ? polarRadius : (0, _chartUtils.getTicksOfAxis)(radiusAxis, true).map(function(entry) {
                        return entry.coordinate;
                    }),
                    cx: cx,
                    cy: cy,
                    innerRadius: innerRadius,
                    outerRadius: outerRadius,
                    key: element.key || 'polar-grid',
                    radialLines: radialLines
                });
            });
            /**
       * Draw legend
       * @return {ReactElement}            The instance of Legend
       */ _defineProperty(_this, "renderLegend", function() {
                var formattedGraphicalItems = _this.state.formattedGraphicalItems;
                var _this$props2 = _this.props, children = _this$props2.children, width = _this$props2.width, height = _this$props2.height;
                var margin = _this.props.margin || {};
                var legendWidth = width - (margin.left || 0) - (margin.right || 0);
                var props = (0, _chartUtils.getLegendProps)({
                    children: children,
                    formattedGraphicalItems: formattedGraphicalItems,
                    legendWidth: legendWidth,
                    legendContent: legendContent
                });
                if (!props) return null;
                var item = props.item, otherProps = _objectWithoutProperties(props, _excluded);
                return /*#__PURE__*/ (0, _react.cloneElement)(item, _objectSpread(_objectSpread({}, otherProps), {}, {
                    chartWidth: width,
                    chartHeight: height,
                    margin: margin,
                    onBBoxUpdate: _this.handleLegendBBoxUpdate
                }));
            });
            /**
       * Draw Tooltip
       * @return {ReactElement}  The instance of Tooltip
       */ _defineProperty(_this, "renderTooltip", function() {
                var _tooltipItem$props$ac;
                var _this$props3 = _this.props, children = _this$props3.children, accessibilityLayer = _this$props3.accessibilityLayer;
                var tooltipItem = (0, _reactUtils.findChildByType)(children, (0, _tooltip.Tooltip));
                if (!tooltipItem) return null;
                var _this$state5 = _this.state, isTooltipActive = _this$state5.isTooltipActive, activeCoordinate = _this$state5.activeCoordinate, activePayload = _this$state5.activePayload, activeLabel = _this$state5.activeLabel, offset = _this$state5.offset;
                // The user can set isActive on the Tooltip,
                // and we respect the user to enable customisation.
                // The Tooltip is active if the user has set isActive, or if the tooltip is active due to a mouse event.
                var isActive = (_tooltipItem$props$ac = tooltipItem.props.active) !== null && _tooltipItem$props$ac !== void 0 ? _tooltipItem$props$ac : isTooltipActive;
                return /*#__PURE__*/ (0, _react.cloneElement)(tooltipItem, {
                    viewBox: _objectSpread(_objectSpread({}, offset), {}, {
                        x: offset.left,
                        y: offset.top
                    }),
                    active: isActive,
                    label: activeLabel,
                    payload: isActive ? activePayload : [],
                    coordinate: activeCoordinate,
                    accessibilityLayer: accessibilityLayer
                });
            });
            _defineProperty(_this, "renderBrush", function(element) {
                var _this$props4 = _this.props, margin = _this$props4.margin, data = _this$props4.data;
                var _this$state6 = _this.state, offset = _this$state6.offset, dataStartIndex = _this$state6.dataStartIndex, dataEndIndex = _this$state6.dataEndIndex, updateId = _this$state6.updateId;
                // TODO: update brush when children update
                return /*#__PURE__*/ (0, _react.cloneElement)(element, {
                    key: element.key || '_recharts-brush',
                    onChange: (0, _chartUtils.combineEventHandlers)(_this.handleBrushChange, element.props.onChange),
                    data: data,
                    x: (0, _dataUtils.isNumber)(element.props.x) ? element.props.x : offset.left,
                    y: (0, _dataUtils.isNumber)(element.props.y) ? element.props.y : offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),
                    width: (0, _dataUtils.isNumber)(element.props.width) ? element.props.width : offset.width,
                    startIndex: dataStartIndex,
                    endIndex: dataEndIndex,
                    updateId: "brush-".concat(updateId)
                });
            });
            _defineProperty(_this, "renderReferenceElement", function(element, displayName, index) {
                if (!element) return null;
                var _this2 = _this, clipPathId = _this2.clipPathId;
                var _this$state7 = _this.state, xAxisMap = _this$state7.xAxisMap, yAxisMap = _this$state7.yAxisMap, offset = _this$state7.offset;
                var elementDefaultProps = element.type.defaultProps || {};
                var _element$props2 = element.props, _element$props2$xAxis = _element$props2.xAxisId, xAxisId = _element$props2$xAxis === void 0 ? elementDefaultProps.xAxisId : _element$props2$xAxis, _element$props2$yAxis = _element$props2.yAxisId, yAxisId = _element$props2$yAxis === void 0 ? elementDefaultProps.yAxisId : _element$props2$yAxis;
                return /*#__PURE__*/ (0, _react.cloneElement)(element, {
                    key: element.key || "".concat(displayName, "-").concat(index),
                    xAxis: xAxisMap[xAxisId],
                    yAxis: yAxisMap[yAxisId],
                    viewBox: {
                        x: offset.left,
                        y: offset.top,
                        width: offset.width,
                        height: offset.height
                    },
                    clipPathId: clipPathId
                });
            });
            _defineProperty(_this, "renderActivePoints", function(_ref10) {
                var item = _ref10.item, activePoint = _ref10.activePoint, basePoint = _ref10.basePoint, childIndex = _ref10.childIndex, isRange = _ref10.isRange;
                var result = [];
                // item is not a React Element so we don't need to resolve defaultProps.
                var key = item.props.key;
                var itemItemProps = item.item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.item.type.defaultProps), item.item.props) : item.item.props;
                var activeDot = itemItemProps.activeDot, dataKey = itemItemProps.dataKey;
                var dotProps = _objectSpread(_objectSpread({
                    index: childIndex,
                    dataKey: dataKey,
                    cx: activePoint.x,
                    cy: activePoint.y,
                    r: 4,
                    fill: (0, _chartUtils.getMainColorOfGraphicItem)(item.item),
                    strokeWidth: 2,
                    stroke: '#fff',
                    payload: activePoint.payload,
                    value: activePoint.value
                }, (0, _reactUtils.filterProps)(activeDot, false)), (0, _types.adaptEventHandlers)(activeDot));
                result.push(CategoricalChartWrapper.renderActiveDot(activeDot, dotProps, "".concat(key, "-activePoint-").concat(childIndex)));
                if (basePoint) result.push(CategoricalChartWrapper.renderActiveDot(activeDot, _objectSpread(_objectSpread({}, dotProps), {}, {
                    cx: basePoint.x,
                    cy: basePoint.y
                }), "".concat(key, "-basePoint-").concat(childIndex)));
                else if (isRange) result.push(null);
                return result;
            });
            _defineProperty(_this, "renderGraphicChild", function(element, displayName, index) {
                var item = _this.filterFormatItem(element, displayName, index);
                if (!item) return null;
                var tooltipEventType = _this.getTooltipEventType();
                var _this$state8 = _this.state, isTooltipActive = _this$state8.isTooltipActive, tooltipAxis = _this$state8.tooltipAxis, activeTooltipIndex = _this$state8.activeTooltipIndex, activeLabel = _this$state8.activeLabel;
                var children = _this.props.children;
                var tooltipItem = (0, _reactUtils.findChildByType)(children, (0, _tooltip.Tooltip));
                // item is not a React Element so we don't need to resolve defaultProps
                var _item$props = item.props, points = _item$props.points, isRange = _item$props.isRange, baseLine = _item$props.baseLine;
                var itemItemProps = item.item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.item.type.defaultProps), item.item.props) : item.item.props;
                var activeDot = itemItemProps.activeDot, hide = itemItemProps.hide, activeBar = itemItemProps.activeBar, activeShape = itemItemProps.activeShape;
                var hasActive = Boolean(!hide && isTooltipActive && tooltipItem && (activeDot || activeBar || activeShape));
                var itemEvents = {};
                if (tooltipEventType !== 'axis' && tooltipItem && tooltipItem.props.trigger === 'click') itemEvents = {
                    onClick: (0, _chartUtils.combineEventHandlers)(_this.handleItemMouseEnter, element.props.onClick)
                };
                else if (tooltipEventType !== 'axis') itemEvents = {
                    onMouseLeave: (0, _chartUtils.combineEventHandlers)(_this.handleItemMouseLeave, element.props.onMouseLeave),
                    onMouseEnter: (0, _chartUtils.combineEventHandlers)(_this.handleItemMouseEnter, element.props.onMouseEnter)
                };
                var graphicalItem = /*#__PURE__*/ (0, _react.cloneElement)(element, _objectSpread(_objectSpread({}, item.props), itemEvents));
                function findWithPayload(entry) {
                    // TODO needs to verify dataKey is Function
                    return typeof tooltipAxis.dataKey === 'function' ? tooltipAxis.dataKey(entry.payload) : null;
                }
                if (hasActive) {
                    if (activeTooltipIndex >= 0) {
                        var activePoint, basePoint;
                        if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
                            // number transform to string
                            var specifiedKey = typeof tooltipAxis.dataKey === 'function' ? findWithPayload : 'payload.'.concat(tooltipAxis.dataKey.toString());
                            activePoint = (0, _dataUtils.findEntryInArray)(points, specifiedKey, activeLabel);
                            basePoint = isRange && baseLine && (0, _dataUtils.findEntryInArray)(baseLine, specifiedKey, activeLabel);
                        } else {
                            activePoint = points === null || points === void 0 ? void 0 : points[activeTooltipIndex];
                            basePoint = isRange && baseLine && baseLine[activeTooltipIndex];
                        }
                        if (activeShape || activeBar) {
                            var activeIndex = element.props.activeIndex !== undefined ? element.props.activeIndex : activeTooltipIndex;
                            return [
                                /*#__PURE__*/ (0, _react.cloneElement)(element, _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {
                                    activeIndex: activeIndex
                                })),
                                null,
                                null
                            ];
                        }
                        if (!(0, _isNilDefault.default)(activePoint)) return [
                            graphicalItem
                        ].concat(_toConsumableArray(_this.renderActivePoints({
                            item: item,
                            activePoint: activePoint,
                            basePoint: basePoint,
                            childIndex: activeTooltipIndex,
                            isRange: isRange
                        })));
                    } else {
                        var _this$getItemByXY;
                        /**
             * We hit this block if consumer uses a Tooltip without XAxis and/or YAxis.
             * In which case, this.state.activeTooltipIndex never gets set
             * because the mouse events that trigger that value getting set never get trigged without the axis components.
             *
             * An example usage case is a FunnelChart
             */ var _ref11 = (_this$getItemByXY = _this.getItemByXY(_this.state.activeCoordinate)) !== null && _this$getItemByXY !== void 0 ? _this$getItemByXY : {
                            graphicalItem: graphicalItem
                        }, _ref11$graphicalItem = _ref11.graphicalItem, _ref11$graphicalItem$ = _ref11$graphicalItem.item, xyItem = _ref11$graphicalItem$ === void 0 ? element : _ref11$graphicalItem$, childIndex = _ref11$graphicalItem.childIndex;
                        var elementProps = _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {
                            activeIndex: childIndex
                        });
                        return [
                            /*#__PURE__*/ (0, _react.cloneElement)(xyItem, elementProps),
                            null,
                            null
                        ];
                    }
                }
                if (isRange) return [
                    graphicalItem,
                    null,
                    null
                ];
                return [
                    graphicalItem,
                    null
                ];
            });
            _defineProperty(_this, "renderCustomized", function(element, displayName, index) {
                return /*#__PURE__*/ (0, _react.cloneElement)(element, _objectSpread(_objectSpread({
                    key: "recharts-customized-".concat(index)
                }, _this.props), _this.state));
            });
            _defineProperty(_this, "renderMap", {
                CartesianGrid: {
                    handler: renderAsIs,
                    once: true
                },
                ReferenceArea: {
                    handler: _this.renderReferenceElement
                },
                ReferenceLine: {
                    handler: renderAsIs
                },
                ReferenceDot: {
                    handler: _this.renderReferenceElement
                },
                XAxis: {
                    handler: renderAsIs
                },
                YAxis: {
                    handler: renderAsIs
                },
                Brush: {
                    handler: _this.renderBrush,
                    once: true
                },
                Bar: {
                    handler: _this.renderGraphicChild
                },
                Line: {
                    handler: _this.renderGraphicChild
                },
                Area: {
                    handler: _this.renderGraphicChild
                },
                Radar: {
                    handler: _this.renderGraphicChild
                },
                RadialBar: {
                    handler: _this.renderGraphicChild
                },
                Scatter: {
                    handler: _this.renderGraphicChild
                },
                Pie: {
                    handler: _this.renderGraphicChild
                },
                Funnel: {
                    handler: _this.renderGraphicChild
                },
                Tooltip: {
                    handler: _this.renderCursor,
                    once: true
                },
                PolarGrid: {
                    handler: _this.renderPolarGrid,
                    once: true
                },
                PolarAngleAxis: {
                    handler: _this.renderPolarAxis
                },
                PolarRadiusAxis: {
                    handler: _this.renderPolarAxis
                },
                Customized: {
                    handler: _this.renderCustomized
                }
            });
            _this.clipPathId = "".concat((_props$id = _props.id) !== null && _props$id !== void 0 ? _props$id : (0, _dataUtils.uniqueId)('recharts'), "-clip");
            // trigger 60fps
            _this.throttleTriggeredAfterMouseMove = (0, _throttleDefault.default)(_this.triggeredAfterMouseMove, (_props$throttleDelay = _props.throttleDelay) !== null && _props$throttleDelay !== void 0 ? _props$throttleDelay : 1000 / 60);
            _this.state = {};
            return _this;
        }
        _inherits(CategoricalChartWrapper, _Component);
        return _createClass(CategoricalChartWrapper, [
            {
                key: "componentDidMount",
                value: function componentDidMount() {
                    var _this$props$margin$le, _this$props$margin$to;
                    this.addListener();
                    this.accessibilityManager.setDetails({
                        container: this.container,
                        offset: {
                            left: (_this$props$margin$le = this.props.margin.left) !== null && _this$props$margin$le !== void 0 ? _this$props$margin$le : 0,
                            top: (_this$props$margin$to = this.props.margin.top) !== null && _this$props$margin$to !== void 0 ? _this$props$margin$to : 0
                        },
                        coordinateList: this.state.tooltipTicks,
                        mouseHandlerCallback: this.triggeredAfterMouseMove,
                        layout: this.props.layout
                    });
                    this.displayDefaultTooltip();
                }
            },
            {
                key: "displayDefaultTooltip",
                value: function displayDefaultTooltip() {
                    var _this$props5 = this.props, children = _this$props5.children, data = _this$props5.data, height = _this$props5.height, layout = _this$props5.layout;
                    var tooltipElem = (0, _reactUtils.findChildByType)(children, (0, _tooltip.Tooltip));
                    // If the chart doesn't include a <Tooltip /> element, there's no tooltip to display
                    if (!tooltipElem) return;
                    var defaultIndex = tooltipElem.props.defaultIndex;
                    // Protect against runtime errors
                    if (typeof defaultIndex !== 'number' || defaultIndex < 0 || defaultIndex > this.state.tooltipTicks.length - 1) return;
                    var activeLabel = this.state.tooltipTicks[defaultIndex] && this.state.tooltipTicks[defaultIndex].value;
                    var activePayload = getTooltipContent(this.state, data, defaultIndex, activeLabel);
                    var independentAxisCoord = this.state.tooltipTicks[defaultIndex].coordinate;
                    var dependentAxisCoord = (this.state.offset.top + height) / 2;
                    var isHorizontal = layout === 'horizontal';
                    var activeCoordinate = isHorizontal ? {
                        x: independentAxisCoord,
                        y: dependentAxisCoord
                    } : {
                        y: independentAxisCoord,
                        x: dependentAxisCoord
                    };
                    // Unlike other chart types, scatter plot's tooltip positions rely on both X and Y coordinates. Only the scatter plot
                    // element knows its own Y coordinates.
                    // If there's a scatter plot, we'll want to grab that element for an interrogation.
                    var scatterPlotElement = this.state.formattedGraphicalItems.find(function(_ref12) {
                        var item = _ref12.item;
                        return item.type.name === 'Scatter';
                    });
                    if (scatterPlotElement) {
                        activeCoordinate = _objectSpread(_objectSpread({}, activeCoordinate), scatterPlotElement.props.points[defaultIndex].tooltipPosition);
                        activePayload = scatterPlotElement.props.points[defaultIndex].tooltipPayload;
                    }
                    var nextState = {
                        activeTooltipIndex: defaultIndex,
                        isTooltipActive: true,
                        activeLabel: activeLabel,
                        activePayload: activePayload,
                        activeCoordinate: activeCoordinate
                    };
                    this.setState(nextState);
                    this.renderCursor(tooltipElem);
                    // Make sure that anyone who keyboard-only users who tab to the chart will start their
                    // cursors at defaultIndex
                    this.accessibilityManager.setIndex(defaultIndex);
                }
            },
            {
                key: "getSnapshotBeforeUpdate",
                value: function getSnapshotBeforeUpdate(prevProps, prevState) {
                    if (!this.props.accessibilityLayer) return null;
                    if (this.state.tooltipTicks !== prevState.tooltipTicks) this.accessibilityManager.setDetails({
                        coordinateList: this.state.tooltipTicks
                    });
                    if (this.props.layout !== prevProps.layout) this.accessibilityManager.setDetails({
                        layout: this.props.layout
                    });
                    if (this.props.margin !== prevProps.margin) {
                        var _this$props$margin$le2, _this$props$margin$to2;
                        this.accessibilityManager.setDetails({
                            offset: {
                                left: (_this$props$margin$le2 = this.props.margin.left) !== null && _this$props$margin$le2 !== void 0 ? _this$props$margin$le2 : 0,
                                top: (_this$props$margin$to2 = this.props.margin.top) !== null && _this$props$margin$to2 !== void 0 ? _this$props$margin$to2 : 0
                            }
                        });
                    }
                    // Something has to be returned for getSnapshotBeforeUpdate
                    return null;
                }
            },
            {
                key: "componentDidUpdate",
                value: function componentDidUpdate(prevProps) {
                    // Check to see if the Tooltip updated. If so, re-check default tooltip position
                    if (!(0, _reactUtils.isChildrenEqual)([
                        (0, _reactUtils.findChildByType)(prevProps.children, (0, _tooltip.Tooltip))
                    ], [
                        (0, _reactUtils.findChildByType)(this.props.children, (0, _tooltip.Tooltip))
                    ])) this.displayDefaultTooltip();
                }
            },
            {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {
                    this.removeListener();
                    this.throttleTriggeredAfterMouseMove.cancel();
                }
            },
            {
                key: "getTooltipEventType",
                value: function getTooltipEventType() {
                    var tooltipItem = (0, _reactUtils.findChildByType)(this.props.children, (0, _tooltip.Tooltip));
                    if (tooltipItem && typeof tooltipItem.props.shared === 'boolean') {
                        var eventType = tooltipItem.props.shared ? 'axis' : 'item';
                        return validateTooltipEventTypes.indexOf(eventType) >= 0 ? eventType : defaultTooltipEventType;
                    }
                    return defaultTooltipEventType;
                }
            },
            {
                key: "getMouseInfo",
                value: function getMouseInfo(event) {
                    if (!this.container) return null;
                    var element = this.container;
                    var boundingRect = element.getBoundingClientRect();
                    var containerOffset = (0, _domutils.getOffset)(boundingRect);
                    var e = {
                        chartX: Math.round(event.pageX - containerOffset.left),
                        chartY: Math.round(event.pageY - containerOffset.top)
                    };
                    var scale = boundingRect.width / element.offsetWidth || 1;
                    var rangeObj = this.inRange(e.chartX, e.chartY, scale);
                    if (!rangeObj) return null;
                    var _this$state9 = this.state, xAxisMap = _this$state9.xAxisMap, yAxisMap = _this$state9.yAxisMap;
                    var tooltipEventType = this.getTooltipEventType();
                    var toolTipData = getTooltipData(this.state, this.props.data, this.props.layout, rangeObj);
                    if (tooltipEventType !== 'axis' && xAxisMap && yAxisMap) {
                        var xScale = (0, _dataUtils.getAnyElementOfObject)(xAxisMap).scale;
                        var yScale = (0, _dataUtils.getAnyElementOfObject)(yAxisMap).scale;
                        var xValue = xScale && xScale.invert ? xScale.invert(e.chartX) : null;
                        var yValue = yScale && yScale.invert ? yScale.invert(e.chartY) : null;
                        return _objectSpread(_objectSpread({}, e), {}, {
                            xValue: xValue,
                            yValue: yValue
                        }, toolTipData);
                    }
                    if (toolTipData) return _objectSpread(_objectSpread({}, e), toolTipData);
                    return null;
                }
            },
            {
                key: "inRange",
                value: function inRange(x, y) {
                    var scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
                    var layout = this.props.layout;
                    var scaledX = x / scale, scaledY = y / scale;
                    if (layout === 'horizontal' || layout === 'vertical') {
                        var offset = this.state.offset;
                        var isInRange = scaledX >= offset.left && scaledX <= offset.left + offset.width && scaledY >= offset.top && scaledY <= offset.top + offset.height;
                        return isInRange ? {
                            x: scaledX,
                            y: scaledY
                        } : null;
                    }
                    var _this$state10 = this.state, angleAxisMap = _this$state10.angleAxisMap, radiusAxisMap = _this$state10.radiusAxisMap;
                    if (angleAxisMap && radiusAxisMap) {
                        var angleAxis = (0, _dataUtils.getAnyElementOfObject)(angleAxisMap);
                        return (0, _polarUtils.inRangeOfSector)({
                            x: scaledX,
                            y: scaledY
                        }, angleAxis);
                    }
                    return null;
                }
            },
            {
                key: "parseEventsOfWrapper",
                value: function parseEventsOfWrapper() {
                    var children = this.props.children;
                    var tooltipEventType = this.getTooltipEventType();
                    var tooltipItem = (0, _reactUtils.findChildByType)(children, (0, _tooltip.Tooltip));
                    var tooltipEvents = {};
                    if (tooltipItem && tooltipEventType === 'axis') {
                        if (tooltipItem.props.trigger === 'click') tooltipEvents = {
                            onClick: this.handleClick
                        };
                        else tooltipEvents = {
                            onMouseEnter: this.handleMouseEnter,
                            onDoubleClick: this.handleDoubleClick,
                            onMouseMove: this.handleMouseMove,
                            onMouseLeave: this.handleMouseLeave,
                            onTouchMove: this.handleTouchMove,
                            onTouchStart: this.handleTouchStart,
                            onTouchEnd: this.handleTouchEnd,
                            onContextMenu: this.handleContextMenu
                        };
                    }
                    // @ts-expect-error adaptEventHandlers expects DOM Event but generateCategoricalChart works with React UIEvents
                    var outerEvents = (0, _types.adaptEventHandlers)(this.props, this.handleOuterEvent);
                    return _objectSpread(_objectSpread({}, outerEvents), tooltipEvents);
                }
            },
            {
                key: "addListener",
                value: function addListener() {
                    (0, _events.eventCenter).on((0, _events.SYNC_EVENT), this.handleReceiveSyncEvent);
                }
            },
            {
                key: "removeListener",
                value: function removeListener() {
                    (0, _events.eventCenter).removeListener((0, _events.SYNC_EVENT), this.handleReceiveSyncEvent);
                }
            },
            {
                key: "filterFormatItem",
                value: function filterFormatItem(item, displayName, childIndex) {
                    var formattedGraphicalItems = this.state.formattedGraphicalItems;
                    for(var i = 0, len = formattedGraphicalItems.length; i < len; i++){
                        var entry = formattedGraphicalItems[i];
                        if (entry.item === item || entry.props.key === item.key || displayName === (0, _reactUtils.getDisplayName)(entry.item.type) && childIndex === entry.childIndex) return entry;
                    }
                    return null;
                }
            },
            {
                key: "renderClipPath",
                value: function renderClipPath() {
                    var clipPathId = this.clipPathId;
                    var _this$state$offset = this.state.offset, left = _this$state$offset.left, top = _this$state$offset.top, height = _this$state$offset.height, width = _this$state$offset.width;
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement("defs", null, /*#__PURE__*/ (0, _reactDefault.default).createElement("clipPath", {
                        id: clipPathId
                    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("rect", {
                        x: left,
                        y: top,
                        height: height,
                        width: width
                    })));
                }
            },
            {
                key: "getXScales",
                value: function getXScales() {
                    var xAxisMap = this.state.xAxisMap;
                    return xAxisMap ? Object.entries(xAxisMap).reduce(function(res, _ref13) {
                        var _ref14 = _slicedToArray(_ref13, 2), axisId = _ref14[0], axisProps = _ref14[1];
                        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, axisId, axisProps.scale));
                    }, {}) : null;
                }
            },
            {
                key: "getYScales",
                value: function getYScales() {
                    var yAxisMap = this.state.yAxisMap;
                    return yAxisMap ? Object.entries(yAxisMap).reduce(function(res, _ref15) {
                        var _ref16 = _slicedToArray(_ref15, 2), axisId = _ref16[0], axisProps = _ref16[1];
                        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, axisId, axisProps.scale));
                    }, {}) : null;
                }
            },
            {
                key: "getXScaleByAxisId",
                value: function getXScaleByAxisId(axisId) {
                    var _this$state$xAxisMap;
                    return (_this$state$xAxisMap = this.state.xAxisMap) === null || _this$state$xAxisMap === void 0 || (_this$state$xAxisMap = _this$state$xAxisMap[axisId]) === null || _this$state$xAxisMap === void 0 ? void 0 : _this$state$xAxisMap.scale;
                }
            },
            {
                key: "getYScaleByAxisId",
                value: function getYScaleByAxisId(axisId) {
                    var _this$state$yAxisMap;
                    return (_this$state$yAxisMap = this.state.yAxisMap) === null || _this$state$yAxisMap === void 0 || (_this$state$yAxisMap = _this$state$yAxisMap[axisId]) === null || _this$state$yAxisMap === void 0 ? void 0 : _this$state$yAxisMap.scale;
                }
            },
            {
                key: "getItemByXY",
                value: function getItemByXY(chartXY) {
                    var _this$state11 = this.state, formattedGraphicalItems = _this$state11.formattedGraphicalItems, activeItem = _this$state11.activeItem;
                    if (formattedGraphicalItems && formattedGraphicalItems.length) for(var i = 0, len = formattedGraphicalItems.length; i < len; i++){
                        var graphicalItem = formattedGraphicalItems[i];
                        // graphicalItem is not a React Element so we don't need to resolve defaultProps
                        var props = graphicalItem.props, item = graphicalItem.item;
                        var itemProps = item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
                        var itemDisplayName = (0, _reactUtils.getDisplayName)(item.type);
                        if (itemDisplayName === 'Bar') {
                            var activeBarItem = (props.data || []).find(function(entry) {
                                return (0, _rectangle.isInRectangle)(chartXY, entry);
                            });
                            if (activeBarItem) return {
                                graphicalItem: graphicalItem,
                                payload: activeBarItem
                            };
                        } else if (itemDisplayName === 'RadialBar') {
                            var _activeBarItem = (props.data || []).find(function(entry) {
                                return (0, _polarUtils.inRangeOfSector)(chartXY, entry);
                            });
                            if (_activeBarItem) return {
                                graphicalItem: graphicalItem,
                                payload: _activeBarItem
                            };
                        } else if ((0, _activeShapeUtils.isFunnel)(graphicalItem, activeItem) || (0, _activeShapeUtils.isPie)(graphicalItem, activeItem) || (0, _activeShapeUtils.isScatter)(graphicalItem, activeItem)) {
                            var activeIndex = (0, _activeShapeUtils.getActiveShapeIndexForTooltip)({
                                graphicalItem: graphicalItem,
                                activeTooltipItem: activeItem,
                                itemData: itemProps.data
                            });
                            var childIndex = itemProps.activeIndex === undefined ? activeIndex : itemProps.activeIndex;
                            return {
                                graphicalItem: _objectSpread(_objectSpread({}, graphicalItem), {}, {
                                    childIndex: childIndex
                                }),
                                payload: (0, _activeShapeUtils.isScatter)(graphicalItem, activeItem) ? itemProps.data[activeIndex] : graphicalItem.props.data[activeIndex]
                            };
                        }
                    }
                    return null;
                }
            },
            {
                key: "render",
                value: function render() {
                    var _this3 = this;
                    if (!(0, _reactUtils.validateWidthHeight)(this)) return null;
                    var _this$props6 = this.props, children = _this$props6.children, className = _this$props6.className, width = _this$props6.width, height = _this$props6.height, style = _this$props6.style, compact = _this$props6.compact, title = _this$props6.title, desc = _this$props6.desc, others = _objectWithoutProperties(_this$props6, _excluded2);
                    var attrs = (0, _reactUtils.filterProps)(others, false);
                    // The "compact" mode is mainly used as the panorama within Brush
                    if (compact) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _chartLayoutContext.ChartLayoutContextProvider), {
                        state: this.state,
                        width: this.props.width,
                        height: this.props.height,
                        clipPathId: this.clipPathId
                    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _surface.Surface), _extends({}, attrs, {
                        width: width,
                        height: height,
                        title: title,
                        desc: desc
                    }), this.renderClipPath(), (0, _reactUtils.renderByOrder)(children, this.renderMap)));
                    if (this.props.accessibilityLayer) {
                        var _this$props$tabIndex, _this$props$role;
                        // Set tabIndex to 0 by default (can be overwritten)
                        attrs.tabIndex = (_this$props$tabIndex = this.props.tabIndex) !== null && _this$props$tabIndex !== void 0 ? _this$props$tabIndex : 0;
                        // Set role to img by default (can be overwritten)
                        attrs.role = (_this$props$role = this.props.role) !== null && _this$props$role !== void 0 ? _this$props$role : 'application';
                        attrs.onKeyDown = function(e) {
                            _this3.accessibilityManager.keyboardEvent(e);
                        // 'onKeyDown' is not currently a supported prop that can be passed through
                        // if it's added, this should be added: this.props.onKeyDown(e);
                        };
                        attrs.onFocus = function() {
                            _this3.accessibilityManager.focus();
                        // 'onFocus' is not currently a supported prop that can be passed through
                        // if it's added, the focus event should be forwarded to the prop
                        };
                    }
                    var events = this.parseEventsOfWrapper();
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _chartLayoutContext.ChartLayoutContextProvider), {
                        state: this.state,
                        width: this.props.width,
                        height: this.props.height,
                        clipPathId: this.clipPathId
                    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("div", _extends({
                        className: (0, _clsxDefault.default)('recharts-wrapper', className),
                        style: _objectSpread({
                            position: 'relative',
                            cursor: 'default',
                            width: width,
                            height: height
                        }, style)
                    }, events, {
                        ref: function ref(node) {
                            _this3.container = node;
                        }
                    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _surface.Surface), _extends({}, attrs, {
                        width: width,
                        height: height,
                        title: title,
                        desc: desc,
                        style: FULL_WIDTH_AND_HEIGHT
                    }), this.renderClipPath(), (0, _reactUtils.renderByOrder)(children, this.renderMap)), this.renderLegend(), this.renderTooltip()));
                }
            }
        ]);
    }((0, _react.Component));
    _defineProperty(CategoricalChartWrapper, "displayName", chartName);
    // todo join specific chart propTypes
    _defineProperty(CategoricalChartWrapper, "defaultProps", _objectSpread({
        layout: 'horizontal',
        stackOffset: 'none',
        barCategoryGap: '10%',
        barGap: 4,
        margin: {
            top: 5,
            right: 5,
            bottom: 5,
            left: 5
        },
        reverseStackOrder: false,
        syncMethod: 'index'
    }, defaultProps));
    _defineProperty(CategoricalChartWrapper, "getDerivedStateFromProps", function(nextProps, prevState) {
        var dataKey = nextProps.dataKey, data = nextProps.data, children = nextProps.children, width = nextProps.width, height = nextProps.height, layout = nextProps.layout, stackOffset = nextProps.stackOffset, margin = nextProps.margin;
        var dataStartIndex = prevState.dataStartIndex, dataEndIndex = prevState.dataEndIndex;
        if (prevState.updateId === undefined) {
            var defaultState = createDefaultState(nextProps);
            return _objectSpread(_objectSpread(_objectSpread({}, defaultState), {}, {
                updateId: 0
            }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({
                props: nextProps
            }, defaultState), {}, {
                updateId: 0
            }), prevState)), {}, {
                prevDataKey: dataKey,
                prevData: data,
                prevWidth: width,
                prevHeight: height,
                prevLayout: layout,
                prevStackOffset: stackOffset,
                prevMargin: margin,
                prevChildren: children
            });
        }
        if (dataKey !== prevState.prevDataKey || data !== prevState.prevData || width !== prevState.prevWidth || height !== prevState.prevHeight || layout !== prevState.prevLayout || stackOffset !== prevState.prevStackOffset || !(0, _shallowEqual.shallowEqual)(margin, prevState.prevMargin)) {
            var _defaultState = createDefaultState(nextProps);
            // Fixes https://github.com/recharts/recharts/issues/2143
            var keepFromPrevState = {
                // (chartX, chartY) are (0,0) in default state, but we want to keep the last mouse position to avoid
                // any flickering
                chartX: prevState.chartX,
                chartY: prevState.chartY,
                // The tooltip should stay active when it was active in the previous render. If this is not
                // the case, the tooltip disappears and immediately re-appears, causing a flickering effect
                isTooltipActive: prevState.isTooltipActive
            };
            var updatesToState = _objectSpread(_objectSpread({}, getTooltipData(prevState, data, layout)), {}, {
                updateId: prevState.updateId + 1
            });
            var newState = _objectSpread(_objectSpread(_objectSpread({}, _defaultState), keepFromPrevState), updatesToState);
            return _objectSpread(_objectSpread(_objectSpread({}, newState), updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread({
                props: nextProps
            }, newState), prevState)), {}, {
                prevDataKey: dataKey,
                prevData: data,
                prevWidth: width,
                prevHeight: height,
                prevLayout: layout,
                prevStackOffset: stackOffset,
                prevMargin: margin,
                prevChildren: children
            });
        }
        if (!(0, _reactUtils.isChildrenEqual)(children, prevState.prevChildren)) {
            var _brush$props$startInd, _brush$props, _brush$props$endIndex, _brush$props2;
            // specifically check for Brush - if it exists and the start and end indexes are different, re-render with the new ones
            var brush = (0, _reactUtils.findChildByType)(children, (0, _brush.Brush));
            var startIndex = brush ? (_brush$props$startInd = (_brush$props = brush.props) === null || _brush$props === void 0 ? void 0 : _brush$props.startIndex) !== null && _brush$props$startInd !== void 0 ? _brush$props$startInd : dataStartIndex : dataStartIndex;
            var endIndex = brush ? (_brush$props$endIndex = (_brush$props2 = brush.props) === null || _brush$props2 === void 0 ? void 0 : _brush$props2.endIndex) !== null && _brush$props$endIndex !== void 0 ? _brush$props$endIndex : dataEndIndex : dataEndIndex;
            var hasDifferentStartOrEndIndex = startIndex !== dataStartIndex || endIndex !== dataEndIndex;
            // update configuration in children
            var hasGlobalData = !(0, _isNilDefault.default)(data);
            var newUpdateId = hasGlobalData && !hasDifferentStartOrEndIndex ? prevState.updateId : prevState.updateId + 1;
            return _objectSpread(_objectSpread({
                updateId: newUpdateId
            }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({
                props: nextProps
            }, prevState), {}, {
                updateId: newUpdateId,
                dataStartIndex: startIndex,
                dataEndIndex: endIndex
            }), prevState)), {}, {
                prevChildren: children,
                dataStartIndex: startIndex,
                dataEndIndex: endIndex
            });
        }
        return null;
    });
    _defineProperty(CategoricalChartWrapper, "renderActiveDot", function(option, props, key) {
        var dot;
        if (/*#__PURE__*/ (0, _react.isValidElement)(option)) dot = /*#__PURE__*/ (0, _react.cloneElement)(option, props);
        else if ((0, _isFunctionDefault.default)(option)) dot = option(props);
        else dot = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _dot.Dot), props);
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _layer.Layer), {
            className: "recharts-active-dot",
            key: key
        }, dot);
    });
    var CategoricalChart = /*#__PURE__*/ (0, _react.forwardRef)(function CategoricalChart(props, ref) {
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(CategoricalChartWrapper, _extends({}, props, {
            ref: ref
        }));
    });
    CategoricalChart.displayName = CategoricalChartWrapper.displayName;
    return CategoricalChart;
};

},{"react":"jMk1U","lodash/isNil":"66cvp","lodash/isFunction":"6aeG3","lodash/range":"9ZN9p","lodash/get":"ce8mt","lodash/sortBy":"8hEur","lodash/throttle":"v3vhH","clsx":"dOSJC","tiny-invariant":"ks8CW","../container/Surface":"8sWIv","../container/Layer":"dLJ3P","../component/Tooltip":"hVtpG","../component/Legend":"7BifH","../shape/Dot":"hmhgx","../shape/Rectangle":"6fXjw","../util/ReactUtils":"dvc7w","../cartesian/Brush":"kSd6q","../util/DOMUtils":"b9RVO","../util/DataUtils":"sgnJK","../util/ChartUtils":"58wJX","../util/DetectReferenceElementsDomain":"lSgPG","../util/PolarUtils":"4krqZ","../util/ShallowEqual":"8AJub","../util/Events":"jBKCa","../util/types":"j2YO8","./AccessibilityManager":"4y0MP","../util/isDomainSpecifiedByUser":"7SMiR","../util/ActiveShapeUtils":"48bBV","../component/Cursor":"iYfDj","../context/chartLayoutContext":"dr08Y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lSgPG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "detectReferenceElementsDomain", ()=>detectReferenceElementsDomain);
var _referenceDot = require("../cartesian/ReferenceDot");
var _referenceLine = require("../cartesian/ReferenceLine");
var _referenceArea = require("../cartesian/ReferenceArea");
var _ifOverflowMatches = require("./IfOverflowMatches");
var _reactUtils = require("./ReactUtils");
var _dataUtils = require("./DataUtils");
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
var detectReferenceElementsDomain = function detectReferenceElementsDomain(children, domain, axisId, axisType, specifiedTicks) {
    var lines = (0, _reactUtils.findAllByType)(children, (0, _referenceLine.ReferenceLine));
    var dots = (0, _reactUtils.findAllByType)(children, (0, _referenceDot.ReferenceDot));
    var elements = [].concat(_toConsumableArray(lines), _toConsumableArray(dots));
    var areas = (0, _reactUtils.findAllByType)(children, (0, _referenceArea.ReferenceArea));
    var idKey = "".concat(axisType, "Id");
    var valueKey = axisType[0];
    var finalDomain = domain;
    if (elements.length) finalDomain = elements.reduce(function(result, el) {
        if (el.props[idKey] === axisId && (0, _ifOverflowMatches.ifOverflowMatches)(el.props, 'extendDomain') && (0, _dataUtils.isNumber)(el.props[valueKey])) {
            var value = el.props[valueKey];
            return [
                Math.min(result[0], value),
                Math.max(result[1], value)
            ];
        }
        return result;
    }, finalDomain);
    if (areas.length) {
        var key1 = "".concat(valueKey, "1");
        var key2 = "".concat(valueKey, "2");
        finalDomain = areas.reduce(function(result, el) {
            if (el.props[idKey] === axisId && (0, _ifOverflowMatches.ifOverflowMatches)(el.props, 'extendDomain') && (0, _dataUtils.isNumber)(el.props[key1]) && (0, _dataUtils.isNumber)(el.props[key2])) {
                var value1 = el.props[key1];
                var value2 = el.props[key2];
                return [
                    Math.min(result[0], value1, value2),
                    Math.max(result[1], value1, value2)
                ];
            }
            return result;
        }, finalDomain);
    }
    if (specifiedTicks && specifiedTicks.length) finalDomain = specifiedTicks.reduce(function(result, tick) {
        if ((0, _dataUtils.isNumber)(tick)) return [
            Math.min(result[0], tick),
            Math.max(result[1], tick)
        ];
        return result;
    }, finalDomain);
    return finalDomain;
};

},{"../cartesian/ReferenceDot":"053Os","../cartesian/ReferenceLine":"4RAeR","../cartesian/ReferenceArea":"lqLWU","./IfOverflowMatches":"jHwLu","./ReactUtils":"dvc7w","./DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jBKCa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eventCenter", ()=>eventCenter);
parcelHelpers.export(exports, "SYNC_EVENT", ()=>SYNC_EVENT);
var _eventemitter3 = require("eventemitter3");
var _eventemitter3Default = parcelHelpers.interopDefault(_eventemitter3);
var eventCenter = new (0, _eventemitter3Default.default)();
var SYNC_EVENT = 'recharts.syncMouseEvents';

},{"eventemitter3":"8mZjp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8mZjp":[function(require,module,exports,__globalThis) {
'use strict';
var has = Object.prototype.hasOwnProperty, prefix = '~';
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */ function Events() {}
//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
    Events.prototype = Object.create(null);
    //
    // This hack is needed because the `__proto__` property is still inherited in
    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
    //
    if (!new Events().__proto__) prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */ function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */ function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== 'function') throw new TypeError('The listener must be a function');
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
    else emitter._events[evt] = [
        emitter._events[evt],
        listener
    ];
    return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */ function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0) emitter._events = new Events();
    else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */ function EventEmitter() {
    this._events = new Events();
    this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */ EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0) return names;
    for(name in events = this._events)if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));
    return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */ EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers) return [];
    if (handlers.fn) return [
        handlers.fn
    ];
    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;
    return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */ EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners) return 0;
    if (listeners.fn) return 1;
    return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);
        switch(len){
            case 1:
                return listeners.fn.call(listeners.context), true;
            case 2:
                return listeners.fn.call(listeners.context, a1), true;
            case 3:
                return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
                return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];
        listeners.fn.apply(listeners.context, args);
    } else {
        var length = listeners.length, j;
        for(i = 0; i < length; i++){
            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);
            switch(len){
                case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;
                case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;
                case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;
                case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;
                default:
                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];
                    listeners[i].fn.apply(listeners[i].context, args);
            }
        }
    }
    return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return this;
    if (!fn) {
        clearEvent(this, evt);
        return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) clearEvent(this, evt);
    } else {
        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);
        //
        // Reset the array, or remove it completely if we have no more listeners.
        //
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else clearEvent(this, evt);
    }
    return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt]) clearEvent(this, evt);
    } else {
        this._events = new Events();
        this._eventsCount = 0;
    }
    return this;
};
//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;
//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;
//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;
module.exports = EventEmitter;

},{}],"4y0MP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AccessibilityManager", ()=>AccessibilityManager);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
var AccessibilityManager = /*#__PURE__*/ function() {
    function AccessibilityManager() {
        _classCallCheck(this, AccessibilityManager);
        _defineProperty(this, "activeIndex", 0);
        _defineProperty(this, "coordinateList", []);
        _defineProperty(this, "layout", 'horizontal');
    }
    return _createClass(AccessibilityManager, [
        {
            key: "setDetails",
            value: function setDetails(_ref) {
                var _ref2;
                var _ref$coordinateList = _ref.coordinateList, coordinateList = _ref$coordinateList === void 0 ? null : _ref$coordinateList, _ref$container = _ref.container, container = _ref$container === void 0 ? null : _ref$container, _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? null : _ref$layout, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? null : _ref$offset, _ref$mouseHandlerCall = _ref.mouseHandlerCallback, mouseHandlerCallback = _ref$mouseHandlerCall === void 0 ? null : _ref$mouseHandlerCall;
                this.coordinateList = (_ref2 = coordinateList !== null && coordinateList !== void 0 ? coordinateList : this.coordinateList) !== null && _ref2 !== void 0 ? _ref2 : [];
                this.container = container !== null && container !== void 0 ? container : this.container;
                this.layout = layout !== null && layout !== void 0 ? layout : this.layout;
                this.offset = offset !== null && offset !== void 0 ? offset : this.offset;
                this.mouseHandlerCallback = mouseHandlerCallback !== null && mouseHandlerCallback !== void 0 ? mouseHandlerCallback : this.mouseHandlerCallback;
                // Keep activeIndex in the bounds between 0 and the last coordinate index
                this.activeIndex = Math.min(Math.max(this.activeIndex, 0), this.coordinateList.length - 1);
            }
        },
        {
            key: "focus",
            value: function focus() {
                this.spoofMouse();
            }
        },
        {
            key: "keyboardEvent",
            value: function keyboardEvent(e) {
                // The AccessibilityManager relies on the Tooltip component. When tooltips suddenly stop existing,
                // it can cause errors. We use this function to check. We don't want arrow keys to be processed
                // if there are no tooltips, since that will cause unexpected behavior of users.
                if (this.coordinateList.length === 0) return;
                switch(e.key){
                    case 'ArrowRight':
                        if (this.layout !== 'horizontal') return;
                        this.activeIndex = Math.min(this.activeIndex + 1, this.coordinateList.length - 1);
                        this.spoofMouse();
                        break;
                    case 'ArrowLeft':
                        if (this.layout !== 'horizontal') return;
                        this.activeIndex = Math.max(this.activeIndex - 1, 0);
                        this.spoofMouse();
                        break;
                    default:
                        break;
                }
            }
        },
        {
            key: "setIndex",
            value: function setIndex(newIndex) {
                this.activeIndex = newIndex;
            }
        },
        {
            key: "spoofMouse",
            value: function spoofMouse() {
                var _window, _window2;
                if (this.layout !== 'horizontal') return;
                // This can happen when the tooltips suddenly stop existing as children of the component
                // That update doesn't otherwise fire events, so we have to double check here.
                if (this.coordinateList.length === 0) return;
                var _this$container$getBo = this.container.getBoundingClientRect(), x = _this$container$getBo.x, y = _this$container$getBo.y, height = _this$container$getBo.height;
                var coordinate = this.coordinateList[this.activeIndex].coordinate;
                var scrollOffsetX = ((_window = window) === null || _window === void 0 ? void 0 : _window.scrollX) || 0;
                var scrollOffsetY = ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.scrollY) || 0;
                var pageX = x + coordinate + scrollOffsetX;
                var pageY = y + this.offset.top + height / 2 + scrollOffsetY;
                this.mouseHandlerCallback({
                    pageX: pageX,
                    pageY: pageY
                });
            }
        }
    ]);
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7SMiR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Takes a domain and user props to determine whether he provided the domain via props or if we need to calculate it.
 * @param   {AxisDomain}  domain              The potential domain from props
 * @param   {Boolean}     allowDataOverflow   from props
 * @param   {String}      axisType            from props
 * @returns {Boolean}                         `true` if domain is specified by user
 */ parcelHelpers.export(exports, "isDomainSpecifiedByUser", ()=>isDomainSpecifiedByUser);
var _dataUtils = require("./DataUtils");
function isDomainSpecifiedByUser(domain, allowDataOverflow, axisType) {
    if (axisType === 'number' && allowDataOverflow === true && Array.isArray(domain)) {
        var domainStart = domain === null || domain === void 0 ? void 0 : domain[0];
        var domainEnd = domain === null || domain === void 0 ? void 0 : domain[1];
        /*
     * The `isNumber` check is needed because the user could also provide strings like "dataMin" via the domain props.
     * In such case, we have to compute the domain from the data.
     */ if (!!domainStart && !!domainEnd && (0, _dataUtils.isNumber)(domainStart) && (0, _dataUtils.isNumber)(domainEnd)) return true;
    }
    return false;
}

},{"./DataUtils":"sgnJK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iYfDj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Cursor is the background, or a highlight,
 * that shows when user mouses over or activates
 * an area.
 *
 * It usually shows together with a tooltip
 * to emphasise which part of the chart does the tooltip refer to.
 */ parcelHelpers.export(exports, "Cursor", ()=>Cursor);
var _react = require("react");
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _curve = require("../shape/Curve");
var _cross = require("../shape/Cross");
var _getCursorRectangle = require("../util/cursor/getCursorRectangle");
var _rectangle = require("../shape/Rectangle");
var _getRadialCursorPoints = require("../util/cursor/getRadialCursorPoints");
var _sector = require("../shape/Sector");
var _getCursorPoints = require("../util/cursor/getCursorPoints");
var _reactUtils = require("../util/ReactUtils");
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function Cursor(props) {
    var _element$props$cursor, _defaultProps;
    var element = props.element, tooltipEventType = props.tooltipEventType, isActive = props.isActive, activeCoordinate = props.activeCoordinate, activePayload = props.activePayload, offset = props.offset, activeTooltipIndex = props.activeTooltipIndex, tooltipAxisBandSize = props.tooltipAxisBandSize, layout = props.layout, chartName = props.chartName;
    var elementPropsCursor = (_element$props$cursor = element.props.cursor) !== null && _element$props$cursor !== void 0 ? _element$props$cursor : (_defaultProps = element.type.defaultProps) === null || _defaultProps === void 0 ? void 0 : _defaultProps.cursor;
    if (!element || !elementPropsCursor || !isActive || !activeCoordinate || chartName !== 'ScatterChart' && tooltipEventType !== 'axis') return null;
    var restProps;
    var cursorComp = (0, _curve.Curve);
    if (chartName === 'ScatterChart') {
        restProps = activeCoordinate;
        cursorComp = (0, _cross.Cross);
    } else if (chartName === 'BarChart') {
        restProps = (0, _getCursorRectangle.getCursorRectangle)(layout, activeCoordinate, offset, tooltipAxisBandSize);
        cursorComp = (0, _rectangle.Rectangle);
    } else if (layout === 'radial') {
        var _getRadialCursorPoint = (0, _getRadialCursorPoints.getRadialCursorPoints)(activeCoordinate), cx = _getRadialCursorPoint.cx, cy = _getRadialCursorPoint.cy, radius = _getRadialCursorPoint.radius, startAngle = _getRadialCursorPoint.startAngle, endAngle = _getRadialCursorPoint.endAngle;
        restProps = {
            cx: cx,
            cy: cy,
            startAngle: startAngle,
            endAngle: endAngle,
            innerRadius: radius,
            outerRadius: radius
        };
        cursorComp = (0, _sector.Sector);
    } else {
        restProps = {
            points: (0, _getCursorPoints.getCursorPoints)(layout, activeCoordinate, offset)
        };
        cursorComp = (0, _curve.Curve);
    }
    var cursorProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
        stroke: '#ccc',
        pointerEvents: 'none'
    }, offset), restProps), (0, _reactUtils.filterProps)(elementPropsCursor, false)), {}, {
        payload: activePayload,
        payloadIndex: activeTooltipIndex,
        className: (0, _clsxDefault.default)('recharts-tooltip-cursor', elementPropsCursor.className)
    });
    return /*#__PURE__*/ (0, _react.isValidElement)(elementPropsCursor) ? /*#__PURE__*/ (0, _react.cloneElement)(elementPropsCursor, cursorProps) : /*#__PURE__*/ (0, _react.createElement)(cursorComp, cursorProps);
}

},{"react":"jMk1U","clsx":"dOSJC","../shape/Curve":"fyl1W","../shape/Cross":"cWSR8","../util/cursor/getCursorRectangle":"frgq3","../shape/Rectangle":"6fXjw","../util/cursor/getRadialCursorPoints":"74GKg","../shape/Sector":"gfarJ","../util/cursor/getCursorPoints":"bG7Pv","../util/ReactUtils":"dvc7w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"frgq3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCursorRectangle", ()=>getCursorRectangle);
function getCursorRectangle(layout, activeCoordinate, offset, tooltipAxisBandSize) {
    var halfSize = tooltipAxisBandSize / 2;
    return {
        stroke: 'none',
        fill: '#ccc',
        x: layout === 'horizontal' ? activeCoordinate.x - halfSize : offset.left + 0.5,
        y: layout === 'horizontal' ? offset.top + 0.5 : activeCoordinate.y - halfSize,
        width: layout === 'horizontal' ? tooltipAxisBandSize : offset.width - 1,
        height: layout === 'horizontal' ? offset.height - 1 : tooltipAxisBandSize
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"74GKg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Only applicable for radial layouts
 * @param {Object} activeCoordinate ChartCoordinate
 * @returns {Object} RadialCursorPoints
 */ parcelHelpers.export(exports, "getRadialCursorPoints", ()=>getRadialCursorPoints);
var _polarUtils = require("../PolarUtils");
function getRadialCursorPoints(activeCoordinate) {
    var cx = activeCoordinate.cx, cy = activeCoordinate.cy, radius = activeCoordinate.radius, startAngle = activeCoordinate.startAngle, endAngle = activeCoordinate.endAngle;
    var startPoint = (0, _polarUtils.polarToCartesian)(cx, cy, radius, startAngle);
    var endPoint = (0, _polarUtils.polarToCartesian)(cx, cy, radius, endAngle);
    return {
        points: [
            startPoint,
            endPoint
        ],
        cx: cx,
        cy: cy,
        radius: radius,
        startAngle: startAngle,
        endAngle: endAngle
    };
}

},{"../PolarUtils":"4krqZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bG7Pv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCursorPoints", ()=>getCursorPoints);
var _polarUtils = require("../PolarUtils");
var _getRadialCursorPoints = require("./getRadialCursorPoints");
function getCursorPoints(layout, activeCoordinate, offset) {
    var x1, y1, x2, y2;
    if (layout === 'horizontal') {
        x1 = activeCoordinate.x;
        x2 = x1;
        y1 = offset.top;
        y2 = offset.top + offset.height;
    } else if (layout === 'vertical') {
        y1 = activeCoordinate.y;
        y2 = y1;
        x1 = offset.left;
        x2 = offset.left + offset.width;
    } else if (activeCoordinate.cx != null && activeCoordinate.cy != null) {
        if (layout === 'centric') {
            var cx = activeCoordinate.cx, cy = activeCoordinate.cy, innerRadius = activeCoordinate.innerRadius, outerRadius = activeCoordinate.outerRadius, angle = activeCoordinate.angle;
            var innerPoint = (0, _polarUtils.polarToCartesian)(cx, cy, innerRadius, angle);
            var outerPoint = (0, _polarUtils.polarToCartesian)(cx, cy, outerRadius, angle);
            x1 = innerPoint.x;
            y1 = innerPoint.y;
            x2 = outerPoint.x;
            y2 = outerPoint.y;
        } else return (0, _getRadialCursorPoints.getRadialCursorPoints)(activeCoordinate);
    }
    return [
        {
            x: x1,
            y: y1
        },
        {
            x: x2,
            y: y2
        }
    ];
}

},{"../PolarUtils":"4krqZ","./getRadialCursorPoints":"74GKg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7U9AI":[function(require,module,exports,__globalThis) {
/**
 * @fileOverview Bar Chart
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BarChart", ()=>BarChart);
var _generateCategoricalChart = require("./generateCategoricalChart");
var _bar = require("../cartesian/Bar");
var _xaxis = require("../cartesian/XAxis");
var _yaxis = require("../cartesian/YAxis");
var _cartesianUtils = require("../util/CartesianUtils");
var BarChart = (0, _generateCategoricalChart.generateCategoricalChart)({
    chartName: 'BarChart',
    GraphicalChild: (0, _bar.Bar),
    defaultTooltipEventType: 'axis',
    validateTooltipEventTypes: [
        'axis',
        'item'
    ],
    axisComponents: [
        {
            axisType: 'xAxis',
            AxisComp: (0, _xaxis.XAxis)
        },
        {
            axisType: 'yAxis',
            AxisComp: (0, _yaxis.YAxis)
        }
    ],
    formatAxisMap: (0, _cartesianUtils.formatAxisMap)
});

},{"./generateCategoricalChart":"alJQJ","../cartesian/Bar":"M4yHZ","../cartesian/XAxis":"1BXde","../cartesian/YAxis":"f2O6f","../util/CartesianUtils":"dGbxK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"94rYU":[function(require,module,exports,__globalThis) {
/**
 * @fileOverview Pie Chart
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PieChart", ()=>PieChart);
var _generateCategoricalChart = require("./generateCategoricalChart");
var _polarAngleAxis = require("../polar/PolarAngleAxis");
var _polarRadiusAxis = require("../polar/PolarRadiusAxis");
var _polarUtils = require("../util/PolarUtils");
var _pie = require("../polar/Pie");
var PieChart = (0, _generateCategoricalChart.generateCategoricalChart)({
    chartName: 'PieChart',
    GraphicalChild: (0, _pie.Pie),
    validateTooltipEventTypes: [
        'item'
    ],
    defaultTooltipEventType: 'item',
    legendContent: 'children',
    axisComponents: [
        {
            axisType: 'angleAxis',
            AxisComp: (0, _polarAngleAxis.PolarAngleAxis)
        },
        {
            axisType: 'radiusAxis',
            AxisComp: (0, _polarRadiusAxis.PolarRadiusAxis)
        }
    ],
    formatAxisMap: (0, _polarUtils.formatAxisMap),
    defaultProps: {
        layout: 'centric',
        startAngle: 0,
        endAngle: 360,
        cx: '50%',
        cy: '50%',
        innerRadius: 0,
        outerRadius: '80%'
    }
});

},{"./generateCategoricalChart":"alJQJ","../polar/PolarAngleAxis":"8sygH","../polar/PolarRadiusAxis":"8ZrfF","../util/PolarUtils":"4krqZ","../polar/Pie":"23lCG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h0lhQ":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, '__esModule', {
    value: true
});
var React = require("aae53b5784057af0");
var countup_js = require("75b5b3a2f82ba30a");
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread2(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _toPrimitive(t, r) {
    if ("object" != typeof t || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != typeof i) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == typeof i ? i : String(i);
}
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
/**
 * Silence SSR Warnings.
 * Borrowed from Formik v2.1.1, Licensed MIT.
 *
 * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE
 */ var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? React.useLayoutEffect : React.useEffect;
/* eslint-disable @typescript-eslint/no-explicit-any */ /**
 * Create a stable reference to a callback which is updated after each render is committed.
 * Typed version borrowed from Formik v2.2.1. Licensed MIT.
 *
 * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE
 */ function useEventCallback(fn) {
    var ref = React.useRef(fn);
    // we copy a ref to the callback scoped to the current state/props on each render
    useIsomorphicLayoutEffect(function() {
        ref.current = fn;
    });
    return React.useCallback(function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        return ref.current.apply(void 0, args);
    }, []);
}
var createCountUpInstance = function createCountUpInstance(el, props) {
    var decimal = props.decimal, decimals = props.decimals, duration = props.duration, easingFn = props.easingFn, end = props.end, formattingFn = props.formattingFn, numerals = props.numerals, prefix = props.prefix, separator = props.separator, start = props.start, suffix = props.suffix, useEasing = props.useEasing, useGrouping = props.useGrouping, useIndianSeparators = props.useIndianSeparators, enableScrollSpy = props.enableScrollSpy, scrollSpyDelay = props.scrollSpyDelay, scrollSpyOnce = props.scrollSpyOnce, plugin = props.plugin;
    return new countup_js.CountUp(el, end, {
        startVal: start,
        duration: duration,
        decimal: decimal,
        decimalPlaces: decimals,
        easingFn: easingFn,
        formattingFn: formattingFn,
        numerals: numerals,
        separator: separator,
        prefix: prefix,
        suffix: suffix,
        plugin: plugin,
        useEasing: useEasing,
        useIndianSeparators: useIndianSeparators,
        useGrouping: useGrouping,
        enableScrollSpy: enableScrollSpy,
        scrollSpyDelay: scrollSpyDelay,
        scrollSpyOnce: scrollSpyOnce
    });
};
var _excluded$1 = [
    "ref",
    "startOnMount",
    "enableReinitialize",
    "delay",
    "onEnd",
    "onStart",
    "onPauseResume",
    "onReset",
    "onUpdate"
];
var DEFAULTS = {
    decimal: '.',
    separator: ',',
    delay: null,
    prefix: '',
    suffix: '',
    duration: 2,
    start: 0,
    decimals: 0,
    startOnMount: true,
    enableReinitialize: true,
    useEasing: true,
    useGrouping: true,
    useIndianSeparators: false
};
var useCountUp = function useCountUp(props) {
    var filteredProps = Object.fromEntries(Object.entries(props).filter(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2), value = _ref2[1];
        return value !== undefined;
    }));
    var _useMemo = React.useMemo(function() {
        return _objectSpread2(_objectSpread2({}, DEFAULTS), filteredProps);
    }, [
        props
    ]), ref = _useMemo.ref, startOnMount = _useMemo.startOnMount, enableReinitialize = _useMemo.enableReinitialize, delay = _useMemo.delay, onEnd = _useMemo.onEnd, onStart = _useMemo.onStart, onPauseResume = _useMemo.onPauseResume, onReset = _useMemo.onReset, onUpdate = _useMemo.onUpdate, instanceProps = _objectWithoutProperties(_useMemo, _excluded$1);
    var countUpRef = React.useRef();
    var timerRef = React.useRef();
    var isInitializedRef = React.useRef(false);
    var createInstance = useEventCallback(function() {
        return createCountUpInstance(typeof ref === 'string' ? ref : ref.current, instanceProps);
    });
    var getCountUp = useEventCallback(function(recreate) {
        var countUp = countUpRef.current;
        if (countUp && !recreate) return countUp;
        var newCountUp = createInstance();
        countUpRef.current = newCountUp;
        return newCountUp;
    });
    var start = useEventCallback(function() {
        var run = function run() {
            return getCountUp(true).start(function() {
                onEnd === null || onEnd === void 0 || onEnd({
                    pauseResume: pauseResume,
                    reset: reset,
                    start: restart,
                    update: update
                });
            });
        };
        if (delay && delay > 0) timerRef.current = setTimeout(run, delay * 1000);
        else run();
        onStart === null || onStart === void 0 || onStart({
            pauseResume: pauseResume,
            reset: reset,
            update: update
        });
    });
    var pauseResume = useEventCallback(function() {
        getCountUp().pauseResume();
        onPauseResume === null || onPauseResume === void 0 || onPauseResume({
            reset: reset,
            start: restart,
            update: update
        });
    });
    var reset = useEventCallback(function() {
        // Quick fix for https://github.com/glennreyes/react-countup/issues/736 - should be investigated
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        if (getCountUp().el) {
            timerRef.current && clearTimeout(timerRef.current);
            getCountUp().reset();
            onReset === null || onReset === void 0 || onReset({
                pauseResume: pauseResume,
                start: restart,
                update: update
            });
        }
    });
    var update = useEventCallback(function(newEnd) {
        getCountUp().update(newEnd);
        onUpdate === null || onUpdate === void 0 || onUpdate({
            pauseResume: pauseResume,
            reset: reset,
            start: restart
        });
    });
    var restart = useEventCallback(function() {
        reset();
        start();
    });
    var maybeInitialize = useEventCallback(function(shouldReset) {
        if (startOnMount) {
            if (shouldReset) reset();
            start();
        }
    });
    React.useEffect(function() {
        if (!isInitializedRef.current) {
            isInitializedRef.current = true;
            maybeInitialize();
        } else if (enableReinitialize) maybeInitialize(true);
    }, [
        enableReinitialize,
        isInitializedRef,
        maybeInitialize,
        delay,
        props.start,
        props.suffix,
        props.prefix,
        props.duration,
        props.separator,
        props.decimals,
        props.decimal,
        props.formattingFn
    ]);
    React.useEffect(function() {
        return function() {
            reset();
        };
    }, [
        reset
    ]);
    return {
        start: restart,
        pauseResume: pauseResume,
        reset: reset,
        update: update,
        getCountUp: getCountUp
    };
};
var _excluded = [
    "className",
    "redraw",
    "containerProps",
    "children",
    "style"
];
var CountUp = function CountUp(props) {
    var className = props.className, redraw = props.redraw, containerProps = props.containerProps, children = props.children, style = props.style, useCountUpProps = _objectWithoutProperties(props, _excluded);
    var containerRef = React.useRef(null);
    var isInitializedRef = React.useRef(false);
    var _useCountUp = useCountUp(_objectSpread2(_objectSpread2({}, useCountUpProps), {}, {
        ref: containerRef,
        startOnMount: typeof children !== 'function' || props.delay === 0,
        // component manually restarts
        enableReinitialize: false
    })), start = _useCountUp.start, reset = _useCountUp.reset, updateCountUp = _useCountUp.update, pauseResume = _useCountUp.pauseResume, getCountUp = _useCountUp.getCountUp;
    var restart = useEventCallback(function() {
        start();
    });
    var update = useEventCallback(function(end) {
        if (!props.preserveValue) reset();
        updateCountUp(end);
    });
    var initializeOnMount = useEventCallback(function() {
        if (typeof props.children === 'function') // Warn when user didn't use containerRef at all
        {
            if (!(containerRef.current instanceof Element)) {
                console.error("Couldn't find attached element to hook the CountUp instance into! Try to attach \"containerRef\" from the render prop to a an Element, eg. <span ref={containerRef} />.");
                return;
            }
        }
        // unlike the hook, the CountUp component initializes on mount
        getCountUp();
    });
    React.useEffect(function() {
        initializeOnMount();
    }, [
        initializeOnMount
    ]);
    React.useEffect(function() {
        if (isInitializedRef.current) update(props.end);
    }, [
        props.end,
        update
    ]);
    var redrawDependencies = redraw && props;
    // if props.redraw, call this effect on every props change
    React.useEffect(function() {
        if (redraw && isInitializedRef.current) restart();
    }, [
        restart,
        redraw,
        redrawDependencies
    ]);
    // if not props.redraw, call this effect only when certain props are changed
    React.useEffect(function() {
        if (!redraw && isInitializedRef.current) restart();
    }, [
        restart,
        redraw,
        props.start,
        props.suffix,
        props.prefix,
        props.duration,
        props.separator,
        props.decimals,
        props.decimal,
        props.className,
        props.formattingFn
    ]);
    React.useEffect(function() {
        isInitializedRef.current = true;
    }, []);
    if (typeof children === 'function') // TypeScript forces functional components to return JSX.Element | null.
    return children({
        countUpRef: containerRef,
        start: start,
        reset: reset,
        update: updateCountUp,
        pauseResume: pauseResume,
        getCountUp: getCountUp
    });
    return /*#__PURE__*/ React.createElement("span", _extends({
        className: className,
        ref: containerRef,
        style: style
    }, containerProps), typeof props.start !== 'undefined' ? getCountUp().formattingFn(props.start) : '');
};
exports.default = CountUp;
exports.useCountUp = useCountUp;

},{"aae53b5784057af0":"jMk1U","75b5b3a2f82ba30a":"agtYT"}],"agtYT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CountUp", ()=>i);
var t = function() {
    return t = Object.assign || function(t) {
        for(var i, n = 1, s = arguments.length; n < s; n++)for(var a in i = arguments[n])Object.prototype.hasOwnProperty.call(i, a) && (t[a] = i[a]);
        return t;
    }, t.apply(this, arguments);
}, i = function() {
    function i(i, n, s) {
        var a = this;
        this.endVal = n, this.options = s, this.version = "2.9.0", this.defaults = {
            startVal: 0,
            decimalPlaces: 0,
            duration: 2,
            useEasing: !0,
            useGrouping: !0,
            useIndianSeparators: !1,
            smartEasingThreshold: 999,
            smartEasingAmount: 333,
            separator: ",",
            decimal: ".",
            prefix: "",
            suffix: "",
            enableScrollSpy: !1,
            scrollSpyDelay: 200,
            scrollSpyOnce: !1
        }, this.finalEndVal = null, this.useEasing = !0, this.countDown = !1, this.error = "", this.startVal = 0, this.paused = !0, this.once = !1, this.count = function(t) {
            a.startTime || (a.startTime = t);
            var i = t - a.startTime;
            a.remaining = a.duration - i, a.useEasing ? a.countDown ? a.frameVal = a.startVal - a.easingFn(i, 0, a.startVal - a.endVal, a.duration) : a.frameVal = a.easingFn(i, a.startVal, a.endVal - a.startVal, a.duration) : a.frameVal = a.startVal + (a.endVal - a.startVal) * (i / a.duration);
            var n = a.countDown ? a.frameVal < a.endVal : a.frameVal > a.endVal;
            a.frameVal = n ? a.endVal : a.frameVal, a.frameVal = Number(a.frameVal.toFixed(a.options.decimalPlaces)), a.printValue(a.frameVal), i < a.duration ? a.rAF = requestAnimationFrame(a.count) : null !== a.finalEndVal ? a.update(a.finalEndVal) : a.options.onCompleteCallback && a.options.onCompleteCallback();
        }, this.formatNumber = function(t) {
            var i, n, s, e, o = t < 0 ? "-" : "";
            i = Math.abs(t).toFixed(a.options.decimalPlaces);
            var r = (i += "").split(".");
            if (n = r[0], s = r.length > 1 ? a.options.decimal + r[1] : "", a.options.useGrouping) {
                e = "";
                for(var l = 3, h = 0, u = 0, p = n.length; u < p; ++u)a.options.useIndianSeparators && 4 === u && (l = 2, h = 1), 0 !== u && h % l == 0 && (e = a.options.separator + e), h++, e = n[p - u - 1] + e;
                n = e;
            }
            return a.options.numerals && a.options.numerals.length && (n = n.replace(/[0-9]/g, function(t) {
                return a.options.numerals[+t];
            }), s = s.replace(/[0-9]/g, function(t) {
                return a.options.numerals[+t];
            })), o + a.options.prefix + n + s + a.options.suffix;
        }, this.easeOutExpo = function(t, i, n, s) {
            return n * (1 - Math.pow(2, -10 * t / s)) * 1024 / 1023 + i;
        }, this.options = t(t({}, this.defaults), s), this.formattingFn = this.options.formattingFn ? this.options.formattingFn : this.formatNumber, this.easingFn = this.options.easingFn ? this.options.easingFn : this.easeOutExpo, this.el = "string" == typeof i ? document.getElementById(i) : i, n = null == n ? this.parse(this.el.innerHTML) : n, this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.endVal = this.validateValue(n), this.options.decimalPlaces = Math.max(this.options.decimalPlaces), this.resetDuration(), this.options.separator = String(this.options.separator), this.useEasing = this.options.useEasing, "" === this.options.separator && (this.options.useGrouping = !1), this.el ? this.printValue(this.startVal) : this.error = "[CountUp] target is null or undefined", "undefined" != typeof window && this.options.enableScrollSpy && (this.error ? console.error(this.error, i) : (window.onScrollFns = window.onScrollFns || [], window.onScrollFns.push(function() {
            return a.handleScroll(a);
        }), window.onscroll = function() {
            window.onScrollFns.forEach(function(t) {
                return t();
            });
        }, this.handleScroll(this)));
    }
    return i.prototype.handleScroll = function(t) {
        if (t && window && !t.once) {
            var i = window.innerHeight + window.scrollY, n = t.el.getBoundingClientRect(), s = n.top + window.pageYOffset, a = n.top + n.height + window.pageYOffset;
            a < i && a > window.scrollY && t.paused ? (t.paused = !1, setTimeout(function() {
                return t.start();
            }, t.options.scrollSpyDelay), t.options.scrollSpyOnce && (t.once = !0)) : (window.scrollY > a || s > i) && !t.paused && t.reset();
        }
    }, i.prototype.determineDirectionAndSmartEasing = function() {
        var t = this.finalEndVal ? this.finalEndVal : this.endVal;
        this.countDown = this.startVal > t;
        var i = t - this.startVal;
        if (Math.abs(i) > this.options.smartEasingThreshold && this.options.useEasing) {
            this.finalEndVal = t;
            var n = this.countDown ? 1 : -1;
            this.endVal = t + n * this.options.smartEasingAmount, this.duration = this.duration / 2;
        } else this.endVal = t, this.finalEndVal = null;
        null !== this.finalEndVal ? this.useEasing = !1 : this.useEasing = this.options.useEasing;
    }, i.prototype.start = function(t) {
        this.error || (this.options.onStartCallback && this.options.onStartCallback(), t && (this.options.onCompleteCallback = t), this.duration > 0 ? (this.determineDirectionAndSmartEasing(), this.paused = !1, this.rAF = requestAnimationFrame(this.count)) : this.printValue(this.endVal));
    }, i.prototype.pauseResume = function() {
        this.paused ? (this.startTime = null, this.duration = this.remaining, this.startVal = this.frameVal, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count)) : cancelAnimationFrame(this.rAF), this.paused = !this.paused;
    }, i.prototype.reset = function() {
        cancelAnimationFrame(this.rAF), this.paused = !0, this.resetDuration(), this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.printValue(this.startVal);
    }, i.prototype.update = function(t) {
        cancelAnimationFrame(this.rAF), this.startTime = null, this.endVal = this.validateValue(t), this.endVal !== this.frameVal && (this.startVal = this.frameVal, null == this.finalEndVal && this.resetDuration(), this.finalEndVal = null, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count));
    }, i.prototype.printValue = function(t) {
        var i;
        if (this.el) {
            var n = this.formattingFn(t);
            if (null === (i = this.options.plugin) || void 0 === i ? void 0 : i.render) this.options.plugin.render(this.el, n);
            else if ("INPUT" === this.el.tagName) this.el.value = n;
            else "text" === this.el.tagName || "tspan" === this.el.tagName ? this.el.textContent = n : this.el.innerHTML = n;
        }
    }, i.prototype.ensureNumber = function(t) {
        return "number" == typeof t && !isNaN(t);
    }, i.prototype.validateValue = function(t) {
        var i = Number(t);
        return this.ensureNumber(i) ? i : (this.error = "[CountUp] invalid start or end value: ".concat(t), null);
    }, i.prototype.resetDuration = function() {
        this.startTime = null, this.duration = 1e3 * Number(this.options.duration), this.remaining = this.duration;
    }, i.prototype.parse = function(t) {
        var i = function(t) {
            return t.replace(/([.,'  ])/g, "\\$1");
        }, n = i(this.options.separator), s = i(this.options.decimal), a = t.replace(new RegExp(n, "g"), "").replace(new RegExp(s, "g"), ".");
        return parseFloat(a);
    }, i;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2I7qR":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AlarmCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmCheckIcon", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmClockCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmClockCheckIcon", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmClockMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmClockMinusIcon", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmMinusIcon", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmClockPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "AlarmClockPlusIcon", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "AlarmPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "AlarmPlusIcon", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAZ", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAZIcon", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAz", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAzIcon", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownAZ", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownAz", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownWideNarrow", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowDownWideNarrowIcon", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownWideNarrow", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "LucideSortDesc", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "SortDesc", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "SortDescIcon", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZA", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZAIcon", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZa", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZaIcon", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownZA", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownZa", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAZ", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAZIcon", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAz", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAzIcon", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpAZ", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpAz", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpNarrowWide", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowUpNarrowWideIcon", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpNarrowWide", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "LucideSortAsc", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "SortAsc", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "SortAscIcon", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZA", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZAIcon", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZa", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZaIcon", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpZA", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpZa", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "Axis3D", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "Axis3DIcon", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "Axis3d", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "Axis3dIcon", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "LucideAxis3D", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "LucideAxis3d", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "BadgeCheck", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "BadgeCheckIcon", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeCheck", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "LucideVerified", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "Verified", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "VerifiedIcon", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalEndIcon", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalEndIcon", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizonalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizontalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalStartIcon", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalStartIcon", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizonalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizontalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BookDashed", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "BookDashedIcon", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "BookTemplate", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "BookTemplateIcon", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "LucideBookDashed", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "LucideBookTemplate", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "Braces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "BracesIcon", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "CurlyBraces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "CurlyBracesIcon", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "LucideBraces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "LucideCurlyBraces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "Captions", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "CaptionsIcon", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "LucideCaptions", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "LucideSubtitles", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "Subtitles", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "SubtitlesIcon", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "AreaChart", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "AreaChartIcon", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "ChartArea", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "ChartAreaIcon", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "LucideAreaChart", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "LucideChartArea", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontalBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontalBigIcon", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "ChartBarBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "ChartBarBigIcon", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "LucideBarChartHorizontalBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontal", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontalIcon", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "ChartBar", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "ChartBarIcon", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "LucideBarChartHorizontal", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "LucideChartBar", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "CandlestickChart", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "CandlestickChartIcon", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "ChartCandlestick", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "ChartCandlestickIcon", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "LucideCandlestickChart", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "LucideChartCandlestick", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "BarChartBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "BarChartBigIcon", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "ChartColumnBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "ChartColumnBigIcon", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "LucideBarChartBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "BarChart4", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChart4Icon", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnIncreasing", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnIncreasingIcon", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart4", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnIncreasing", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChart3", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "BarChart3Icon", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "ChartColumn", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "ChartColumnIcon", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart3", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumn", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "ChartLine", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "ChartLineIcon", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LineChart", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LineChartIcon", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LucideChartLine", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LucideLineChart", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "BarChart", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChartIcon", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnIncreasing", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnIncreasingIcon", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesColumnIncreasing", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChart2", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "BarChart2Icon", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumn", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnIcon", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart2", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesColumn", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesGantt", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesGanttIcon", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "GanttChart", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "GanttChartIcon", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesGantt", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "LucideGanttChart", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "ChartScatter", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ChartScatterIcon", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "LucideChartScatter", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "LucideScatterChart", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ScatterChart", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ScatterChartIcon", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ChartPie", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "ChartPieIcon", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "LucideChartPie", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "LucidePieChart", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "PieChart", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "PieChartIcon", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "AlertCircle", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "AlertCircleIcon", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "CircleAlert", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "CircleAlertIcon", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideAlertCircle", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideCircleAlert", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "ArrowDownCircle", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownCircleIcon", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "CircleArrowDown", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "CircleArrowDownIcon", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownCircle", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowDown", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftCircle", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftCircleIcon", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowLeft", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowLeftIcon", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftCircle", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowLeft", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromCircle", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromCircleIcon", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownLeft", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownLeftIcon", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeftFromCircle", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutDownLeft", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromCircle", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromCircleIcon", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownRight", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownRightIcon", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRightFromCircle", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutDownRight", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromCircle", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromCircleIcon", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpRight", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpRightIcon", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRightFromCircle", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutUpRight", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromCircle", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromCircleIcon", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpLeft", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpLeftIcon", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeftFromCircle", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutUpLeft", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowRightCircle", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightCircleIcon", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowRight", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowRightIcon", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightCircle", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowRight", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpCircle", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowUpCircleIcon", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleArrowUp", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleArrowUpIcon", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpCircle", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowUp", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "CheckCircle", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CheckCircleIcon", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CircleCheckBig", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CircleCheckBigIcon", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideCheckCircle", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideCircleCheckBig", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CheckCircle2", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "CheckCircle2Icon", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "CircleCheck", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "CircleCheckIcon", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCheckCircle2", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCircleCheck", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "ChevronDownCircle", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronDownCircleIcon", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "CircleChevronDown", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "CircleChevronDownIcon", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronDownCircle", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronDown", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftCircle", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftCircleIcon", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "CircleChevronLeft", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "CircleChevronLeftIcon", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLeftCircle", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronLeft", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronRightCircle", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronRightCircleIcon", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "CircleChevronRight", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "CircleChevronRightIcon", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronRightCircle", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronRight", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronUpCircle", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronUpCircleIcon", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "CircleChevronUp", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "CircleChevronUpIcon", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronUpCircle", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronUp", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "CircleDivide", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "CircleDivideIcon", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "DivideCircle", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "DivideCircleIcon", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDivide", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "LucideDivideCircle", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "CircleGauge", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "CircleGaugeIcon", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "GaugeCircle", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "GaugeCircleIcon", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "LucideCircleGauge", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "LucideGaugeCircle", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "CircleHelp", ()=>(0, _circleHelpJsDefault.default));
parcelHelpers.export(exports, "CircleHelpIcon", ()=>(0, _circleHelpJsDefault.default));
parcelHelpers.export(exports, "HelpCircle", ()=>(0, _circleHelpJsDefault.default));
parcelHelpers.export(exports, "HelpCircleIcon", ()=>(0, _circleHelpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleHelp", ()=>(0, _circleHelpJsDefault.default));
parcelHelpers.export(exports, "LucideHelpCircle", ()=>(0, _circleHelpJsDefault.default));
parcelHelpers.export(exports, "CircleMinus", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "CircleMinusIcon", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "LucideCircleMinus", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMinusCircle", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "MinusCircle", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "MinusCircleIcon", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "CircleParkingOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "CircleParkingOffIcon", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideCircleParkingOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideParkingCircleOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingCircleOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingCircleOffIcon", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "CircleParking", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "CircleParkingIcon", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "LucideCircleParking", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "LucideParkingCircle", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingCircle", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingCircleIcon", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "CirclePause", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "CirclePauseIcon", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePause", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "LucidePauseCircle", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "PauseCircle", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "PauseCircleIcon", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "CirclePercent", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "CirclePercentIcon", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePercent", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "LucidePercentCircle", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "PercentCircle", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "PercentCircleIcon", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "CirclePlay", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "CirclePlayIcon", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePlay", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "LucidePlayCircle", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "PlayCircle", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "PlayCircleIcon", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "CirclePlus", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "CirclePlusIcon", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePlus", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "LucidePlusCircle", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "PlusCircle", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "PlusCircleIcon", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "CirclePower", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "CirclePowerIcon", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePower", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "LucidePowerCircle", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "PowerCircle", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "PowerCircleIcon", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "CircleSlash2", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleSlash2Icon", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleSlashed", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleSlashedIcon", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "LucideCircleSlash2", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "LucideCircleSlashed", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleStop", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "CircleStopIcon", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "LucideCircleStop", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "LucideStopCircle", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "StopCircle", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "StopCircleIcon", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "CircleUserRound", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "CircleUserRoundIcon", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideCircleUserRound", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUserCircle2", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserCircle2", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserCircle2Icon", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "CircleUser", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "CircleUserIcon", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "LucideCircleUser", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "LucideUserCircle", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "UserCircle", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "UserCircleIcon", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "CircleX", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "CircleXIcon", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "LucideCircleX", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "LucideXCircle", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "XCircle", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "XCircleIcon", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "ClipboardPenLine", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardPenLineIcon", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardSignature", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardSignatureIcon", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPenLine", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardSignature", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardEdit", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "ClipboardEditIcon", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "ClipboardPen", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "ClipboardPenIcon", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardEdit", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPen", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "CloudDownload", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "CloudDownloadIcon", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "DownloadCloud", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "DownloadCloudIcon", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "LucideCloudDownload", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "LucideDownloadCloud", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "CloudUpload", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "CloudUploadIcon", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "LucideCloudUpload", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "LucideUploadCloud", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "UploadCloud", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "UploadCloudIcon", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "Code2", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "Code2Icon", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "CodeXml", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "CodeXmlIcon", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "LucideCode2", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "LucideCodeXml", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "Columns", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "Columns2", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "Columns2Icon", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "ColumnsIcon", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "LucideColumns", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "LucideColumns2", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "Columns3Cog", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "Columns3CogIcon", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "ColumnsSettings", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "ColumnsSettingsIcon", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "LucideColumns3Cog", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "LucideColumnsSettings", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "LucideTableConfig", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "TableConfig", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "TableConfigIcon", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "Columns3", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "Columns3Icon", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "LucideColumns3", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "LucidePanelsLeftRight", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "PanelsLeftRight", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "PanelsLeftRightIcon", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "Contact2", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "Contact2Icon", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "ContactRound", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "ContactRoundIcon", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "LucideContact2", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "LucideContactRound", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "DiamondPercent", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "DiamondPercentIcon", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "LucideDiamondPercent", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "LucidePercentDiamond", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "PercentDiamond", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "PercentDiamondIcon", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "Earth", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "EarthIcon", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "Globe2", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "Globe2Icon", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "LucideEarth", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "LucideGlobe2", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "EllipsisVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "EllipsisVerticalIcon", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideEllipsisVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideMoreVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "MoreVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "MoreVerticalIcon", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "Ellipsis", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "EllipsisIcon", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "LucideEllipsis", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "LucideMoreHorizontal", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "MoreHorizontal", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "MoreHorizontalIcon", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "FileAxis3D", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileAxis3DIcon", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileAxis3d", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileAxis3dIcon", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "LucideFileAxis3D", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "LucideFileAxis3d", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileBarChart", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileBarChartIcon", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileChartColumnIncreasing", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileChartColumnIncreasingIcon", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideFileBarChart", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartColumnIncreasing", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileBarChart2", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileBarChart2Icon", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileChartColumn", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileChartColumnIcon", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideFileBarChart2", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartColumn", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileChartLine", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileChartLineIcon", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileLineChart", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileLineChartIcon", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartLine", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "LucideFileLineChart", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileChartPie", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FileChartPieIcon", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FilePieChart", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FilePieChartIcon", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartPie", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "LucideFilePieChart", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FileCog", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FileCog2", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FileCog2Icon", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FileCogIcon", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "LucideFileCog", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "LucideFileCog2", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FilePenLine", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FilePenLineIcon", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FileSignature", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FileSignatureIcon", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "LucideFilePenLine", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "LucideFileSignature", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FileEdit", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FileEditIcon", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FilePen", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FilePenIcon", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "LucideFileEdit", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "LucideFilePen", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FolderCog", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderCog2", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderCog2Icon", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderCogIcon", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCog", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCog2", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderEdit", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FolderEditIcon", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FolderPen", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FolderPenIcon", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "LucideFolderEdit", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "LucideFolderPen", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FilterX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "FilterXIcon", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "FunnelX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "FunnelXIcon", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "LucideFilterX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "LucideFunnelX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "Filter", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "FilterIcon", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "Funnel", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "FunnelIcon", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "LucideFilter", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "LucideFunnel", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "GitCommit", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "GitCommitHorizontal", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "GitCommitHorizontalIcon", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "GitCommitIcon", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGitCommit", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGitCommitHorizontal", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "Grid2X2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2X2CheckIcon", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2x2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2x2CheckIcon", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2X2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2X2PlusIcon", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2x2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2x2PlusIcon", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2X2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2X2XIcon", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2x2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2x2XIcon", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2X2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid2X2Icon", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid2x2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid2x2Icon", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3X3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3X3Icon", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3x3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3x3Icon", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "GridIcon", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "LucideGrid", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "LucideGrid3X3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "LucideGrid3x3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "HandHelping", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "HandHelpingIcon", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "HelpingHand", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "HelpingHandIcon", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "LucideHandHelping", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "LucideHelpingHand", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "Home", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "HomeIcon", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "House", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "HouseIcon", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "LucideHome", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "LucideHouse", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "IceCream2", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCream2Icon", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCreamBowl", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCreamBowlIcon", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "LucideIceCream2", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "LucideIceCreamBowl", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCream", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IceCreamCone", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IceCreamConeIcon", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IceCreamIcon", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "LucideIceCream", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "LucideIceCreamCone", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IndentDecrease", ()=>(0, _indentDecreaseJsDefault.default));
parcelHelpers.export(exports, "IndentDecreaseIcon", ()=>(0, _indentDecreaseJsDefault.default));
parcelHelpers.export(exports, "LucideIndentDecrease", ()=>(0, _indentDecreaseJsDefault.default));
parcelHelpers.export(exports, "LucideOutdent", ()=>(0, _indentDecreaseJsDefault.default));
parcelHelpers.export(exports, "Outdent", ()=>(0, _indentDecreaseJsDefault.default));
parcelHelpers.export(exports, "OutdentIcon", ()=>(0, _indentDecreaseJsDefault.default));
parcelHelpers.export(exports, "Indent", ()=>(0, _indentIncreaseJsDefault.default));
parcelHelpers.export(exports, "IndentIcon", ()=>(0, _indentIncreaseJsDefault.default));
parcelHelpers.export(exports, "IndentIncrease", ()=>(0, _indentIncreaseJsDefault.default));
parcelHelpers.export(exports, "IndentIncreaseIcon", ()=>(0, _indentIncreaseJsDefault.default));
parcelHelpers.export(exports, "LucideIndent", ()=>(0, _indentIncreaseJsDefault.default));
parcelHelpers.export(exports, "LucideIndentIncrease", ()=>(0, _indentIncreaseJsDefault.default));
parcelHelpers.export(exports, "Laptop2", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "Laptop2Icon", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimal", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimalIcon", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideLaptop2", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideLaptopMinimal", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "Layers", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "Layers3", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "Layers3Icon", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "LayersIcon", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "LucideLayers", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "LucideLayers3", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "Loader2", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "Loader2Icon", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LoaderCircle", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LoaderCircleIcon", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LucideLoader2", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LucideLoaderCircle", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LockKeyholeOpen", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LockKeyholeOpenIcon", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LucideLockKeyholeOpen", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LucideUnlockKeyhole", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "UnlockKeyhole", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "UnlockKeyholeIcon", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LockOpen", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LockOpenIcon", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LucideLockOpen", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LucideUnlock", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "Unlock", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "UnlockIcon", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LucideMic2", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "LucideMicVocal", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "Mic2", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "Mic2Icon", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "MicVocal", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "MicVocalIcon", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "LucideMove3D", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "LucideMove3d", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3D", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3DIcon", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3d", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3dIcon", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "AlertOctagon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "AlertOctagonIcon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "LucideAlertOctagon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonAlert", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "OctagonAlert", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "OctagonAlertIcon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonPause", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "LucidePauseOctagon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "OctagonPause", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "OctagonPauseIcon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "PauseOctagon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "PauseOctagonIcon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonX", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "LucideXOctagon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "OctagonX", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "OctagonXIcon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "XOctagon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "XOctagonIcon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "LucidePaintbrush2", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "LucidePaintbrushVertical", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "Paintbrush2", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "Paintbrush2Icon", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "PaintbrushVertical", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "PaintbrushVerticalIcon", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomDashed", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomInactive", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomDashed", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomDashedIcon", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomInactive", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomInactiveIcon", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "LucideSidebarClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "PanelLeftClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "PanelLeftCloseIcon", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "SidebarClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "SidebarCloseIcon", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftDashed", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftInactive", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftDashed", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftDashedIcon", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftInactive", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftInactiveIcon", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "LucideSidebarOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "PanelLeftOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "PanelLeftOpenIcon", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "SidebarOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "SidebarOpenIcon", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeft", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSidebar", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "PanelLeft", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "PanelLeftIcon", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "Sidebar", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "SidebarIcon", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightDashed", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightInactive", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightDashed", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightDashedIcon", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightInactive", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightInactiveIcon", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopDashed", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopInactive", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopDashed", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopDashedIcon", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopInactive", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopInactiveIcon", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "Layout", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "LayoutIcon", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "LucideLayout", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "LucidePanelsTopLeft", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "PanelsTopLeft", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "PanelsTopLeftIcon", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "Edit3", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "Edit3Icon", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "LucideEdit3", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "LucidePenLine", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "PenLine", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "PenLineIcon", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "Edit2", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "Edit2Icon", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "LucideEdit2", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "LucidePen", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "Pen", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "PenIcon", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "LucidePlugZap", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "LucidePlugZap2", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZap", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZap2", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZap2Icon", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZapIcon", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "FormInput", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "FormInputIcon", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideFormInput", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleEllipsis", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "RectangleEllipsis", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "RectangleEllipsisIcon", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideRotate3D", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "LucideRotate3d", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3D", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3DIcon", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3d", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3dIcon", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "LucideRows", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "LucideRows2", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "Rows", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "Rows2", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "Rows2Icon", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "RowsIcon", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "LucidePanelsTopBottom", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "LucideRows3", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "PanelsTopBottom", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "PanelsTopBottomIcon", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "Rows3", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "Rows3Icon", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "LucideScale3D", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "LucideScale3d", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3D", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3DIcon", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3d", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3dIcon", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "LucideSendHorizonal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSendHorizontal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizonal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizonalIcon", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizontal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizontalIcon", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideShieldClose", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "LucideShieldX", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldClose", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldCloseIcon", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldX", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldXIcon", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "LucideSliders", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSlidersVertical", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "Sliders", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "SlidersIcon", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "SlidersVertical", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "SlidersVerticalIcon", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSparkles", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "LucideStars", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "Sparkles", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "SparklesIcon", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "Stars", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "StarsIcon", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "ActivitySquare", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "ActivitySquareIcon", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "LucideActivitySquare", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "LucideSquareActivity", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "SquareActivity", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "SquareActivityIcon", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftSquare", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftSquareIcon", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeftSquare", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowDownLeft", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownLeft", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownLeftIcon", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightSquare", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightSquareIcon", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRightSquare", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowDownRight", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownRight", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownRightIcon", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownSquare", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownSquareIcon", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownSquare", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowDown", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDown", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownIcon", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftSquare", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftSquareIcon", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftSquare", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowLeft", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowLeft", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowLeftIcon", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromSquare", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromSquareIcon", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeftFromSquare", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutDownLeft", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownLeft", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownLeftIcon", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromSquare", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromSquareIcon", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRightFromSquare", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutDownRight", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownRight", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownRightIcon", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromSquare", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromSquareIcon", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeftFromSquare", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutUpLeft", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpLeft", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpLeftIcon", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromSquare", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromSquareIcon", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRightFromSquare", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutUpRight", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpRight", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpRightIcon", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightSquare", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightSquareIcon", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightSquare", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowRight", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowRight", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowRightIcon", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftSquare", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftSquareIcon", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeftSquare", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowUpLeft", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpLeft", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpLeftIcon", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightSquare", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightSquareIcon", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRightSquare", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowUpRight", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpRight", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpRightIcon", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpSquare", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowUpSquareIcon", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpSquare", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowUp", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUp", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpIcon", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "AsteriskSquare", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "AsteriskSquareIcon", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "LucideAsteriskSquare", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "LucideSquareAsterisk", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "SquareAsterisk", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "SquareAsteriskIcon", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "LucideScissorsSquareDashedBottom", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "LucideSquareBottomDashedScissors", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquareDashedBottom", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquareDashedBottomIcon", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareBottomDashedScissors", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareBottomDashedScissorsIcon", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "GanttChartSquare", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "GanttChartSquareIcon", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideGanttChartSquare", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChartGantt", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideSquareGanttChart", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareChartGantt", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareChartGanttIcon", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareGanttChart", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareGanttChartIcon", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "CheckSquare", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "CheckSquareIcon", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideCheckSquare", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideSquareCheckBig", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "SquareCheckBig", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "SquareCheckBigIcon", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "ChevronDownSquare", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronDownSquareIcon", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronDownSquare", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronDown", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "SquareChevronDown", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "SquareChevronDownIcon", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftSquare", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftSquareIcon", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLeftSquare", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronLeft", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "SquareChevronLeft", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "SquareChevronLeftIcon", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "CheckSquare2", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "CheckSquare2Icon", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCheckSquare2", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "LucideSquareCheck", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "SquareCheck", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "SquareCheckIcon", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "ChevronRightSquare", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronRightSquareIcon", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronRightSquare", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronRight", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "SquareChevronRight", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "SquareChevronRightIcon", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "CodeSquare", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "CodeSquareIcon", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "LucideCodeSquare", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "LucideSquareCode", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "SquareCode", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "SquareCodeIcon", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "ChevronUpSquare", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronUpSquareIcon", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronUpSquare", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronUp", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "SquareChevronUp", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "SquareChevronUpIcon", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointerSquareDashed", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedMousePointer", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointerSquareDashed", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointerSquareDashedIcon", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareDashedMousePointer", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareDashedMousePointerIcon", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "KanbanSquareDashed", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "KanbanSquareDashedIcon", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideKanbanSquareDashed", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedKanban", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareDashedKanban", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareDashedKanbanIcon", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "BoxSelect", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "BoxSelectIcon", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "LucideBoxSelect", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashed", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "SquareDashed", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "SquareDashedIcon", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "DivideSquare", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "DivideSquareIcon", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "LucideDivideSquare", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDivide", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "SquareDivide", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "SquareDivideIcon", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "DotSquare", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "DotSquareIcon", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "LucideDotSquare", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDot", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "SquareDot", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "SquareDotIcon", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "EqualSquare", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "EqualSquareIcon", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "LucideEqualSquare", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "LucideSquareEqual", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "SquareEqual", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "SquareEqualIcon", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "FunctionSquare", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "FunctionSquareIcon", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "LucideFunctionSquare", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "LucideSquareFunction", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "SquareFunction", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "SquareFunctionIcon", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "KanbanSquare", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "KanbanSquareIcon", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideKanbanSquare", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideSquareKanban", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareKanban", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareKanbanIcon", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "LibrarySquare", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LibrarySquareIcon", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LucideLibrarySquare", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LucideSquareLibrary", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "SquareLibrary", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "SquareLibraryIcon", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LucideMSquare", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "LucideSquareM", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "MSquare", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "MSquareIcon", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "SquareM", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "SquareMIcon", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "LucideMenuSquare", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "LucideSquareMenu", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "MenuSquare", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "MenuSquareIcon", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "SquareMenu", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "SquareMenuIcon", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "LucideMinusSquare", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "LucideSquareMinus", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "MinusSquare", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "MinusSquareIcon", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "SquareMinus", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "SquareMinusIcon", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "Inspect", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "InspectIcon", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideInspect", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideSquareMousePointer", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareMousePointer", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareMousePointerIcon", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideParkingSquareOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideSquareParkingOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingSquareOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingSquareOffIcon", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "SquareParkingOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "SquareParkingOffIcon", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideParkingSquare", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "LucideSquareParking", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingSquare", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingSquareIcon", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "SquareParking", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "SquareParkingIcon", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "Edit", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "EditIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucideEdit", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucidePenBox", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucidePenSquare", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePen", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenBox", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenBoxIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenSquare", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenSquareIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "SquarePen", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "SquarePenIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucidePercentSquare", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePercent", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "PercentSquare", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "PercentSquareIcon", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "SquarePercent", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "SquarePercentIcon", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "LucidePiSquare", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePi", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "PiSquare", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "PiSquareIcon", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "SquarePi", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "SquarePiIcon", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrowSquare", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePilcrow", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "PilcrowSquare", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "PilcrowSquareIcon", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "SquarePilcrow", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "SquarePilcrowIcon", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "LucidePlaySquare", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePlay", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "PlaySquare", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "PlaySquareIcon", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "SquarePlay", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "SquarePlayIcon", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "LucidePlusSquare", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePlus", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "PlusSquare", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "PlusSquareIcon", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "SquarePlus", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "SquarePlusIcon", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "LucidePowerSquare", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePower", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "PowerSquare", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "PowerSquareIcon", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "SquarePower", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "SquarePowerIcon", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "LucideScissorsSquare", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "LucideSquareScissors", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquare", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquareIcon", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareScissors", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareScissorsIcon", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "LucideSigmaSquare", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSigma", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SigmaSquare", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SigmaSquareIcon", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SquareSigma", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SquareSigmaIcon", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "LucideSlashSquare", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSlash", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SlashSquare", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SlashSquareIcon", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SquareSlash", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SquareSlashIcon", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "LucideSplitSquareHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSplitHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareHorizontalIcon", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitHorizontalIcon", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSplitSquareVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSplitVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareVerticalIcon", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitVerticalIcon", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareTerminal", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "LucideTerminalSquare", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "SquareTerminal", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "SquareTerminalIcon", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "TerminalSquare", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "TerminalSquareIcon", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareUserRound", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUserSquare2", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "SquareUserRound", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "SquareUserRoundIcon", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserSquare2", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserSquare2Icon", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideSquareUser", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "LucideUserSquare", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "SquareUser", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "SquareUserIcon", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "UserSquare", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "UserSquareIcon", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "LucideSquareX", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "LucideXSquare", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "SquareX", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "SquareXIcon", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "XSquare", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "XSquareIcon", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "LucideTestTube2", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "LucideTestTubeDiagonal", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTube2", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTube2Icon", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTubeDiagonal", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTubeDiagonalIcon", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "LucideTextSelect", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "LucideTextSelection", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelect", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelectIcon", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelection", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelectionIcon", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "LucideTrain", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "LucideTramFront", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "Train", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "TrainIcon", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "TramFront", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "TramFrontIcon", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "LucidePalmtree", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "LucideTreePalm", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "Palmtree", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "PalmtreeIcon", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "TreePalm", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "TreePalmIcon", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "AlertTriangle", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "AlertTriangleIcon", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideAlertTriangle", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideTriangleAlert", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "TriangleAlert", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "TriangleAlertIcon", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideTv2", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideTvMinimal", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "Tv2", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "Tv2Icon", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "TvMinimal", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "TvMinimalIcon", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideSchool2", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "LucideUniversity", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "School2", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "School2Icon", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "University", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "UniversityIcon", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "LucideUserCheck2", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundCheck", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheck2", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheck2Icon", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserRoundCheck", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserRoundCheckIcon", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "LucideUserCog2", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundCog", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserCog2", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserCog2Icon", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserRoundCog", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserRoundCogIcon", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "LucideUserMinus2", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundMinus", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinus2", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinus2Icon", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserRoundMinus", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserRoundMinusIcon", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "LucideUserPlus2", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundPlus", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlus2", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlus2Icon", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserRoundPlus", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserRoundPlusIcon", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundX", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "LucideUserX2", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserRoundX", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserRoundXIcon", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserX2", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserX2Icon", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "LucideUser2", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUserRound", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "User2", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "User2Icon", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "UserRound", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "UserRoundIcon", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUsers2", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUsersRound", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "Users2", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "Users2Icon", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "UsersRound", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "UsersRoundIcon", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "ForkKnifeCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "ForkKnifeCrossedIcon", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "LucideForkKnifeCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "LucideUtensilsCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "UtensilsCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "UtensilsCrossedIcon", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "ForkKnife", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "ForkKnifeIcon", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "LucideForkKnife", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "LucideUtensils", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "Utensils", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "UtensilsIcon", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "LucideWallet2", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideWalletMinimal", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "Wallet2", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "Wallet2Icon", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "WalletMinimal", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "WalletMinimalIcon", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideWand2", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "LucideWandSparkles", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "Wand2", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "Wand2Icon", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "WandSparkles", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "WandSparklesIcon", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "AArrowDown", ()=>(0, _aArrowDownJsDefault.default));
parcelHelpers.export(exports, "AArrowDownIcon", ()=>(0, _aArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideAArrowDown", ()=>(0, _aArrowDownJsDefault.default));
parcelHelpers.export(exports, "AArrowUp", ()=>(0, _aArrowUpJsDefault.default));
parcelHelpers.export(exports, "AArrowUpIcon", ()=>(0, _aArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideAArrowUp", ()=>(0, _aArrowUpJsDefault.default));
parcelHelpers.export(exports, "ALargeSmall", ()=>(0, _aLargeSmallJsDefault.default));
parcelHelpers.export(exports, "ALargeSmallIcon", ()=>(0, _aLargeSmallJsDefault.default));
parcelHelpers.export(exports, "LucideALargeSmall", ()=>(0, _aLargeSmallJsDefault.default));
parcelHelpers.export(exports, "Accessibility", ()=>(0, _accessibilityJsDefault.default));
parcelHelpers.export(exports, "AccessibilityIcon", ()=>(0, _accessibilityJsDefault.default));
parcelHelpers.export(exports, "LucideAccessibility", ()=>(0, _accessibilityJsDefault.default));
parcelHelpers.export(exports, "Activity", ()=>(0, _activityJsDefault.default));
parcelHelpers.export(exports, "ActivityIcon", ()=>(0, _activityJsDefault.default));
parcelHelpers.export(exports, "LucideActivity", ()=>(0, _activityJsDefault.default));
parcelHelpers.export(exports, "AirVent", ()=>(0, _airVentJsDefault.default));
parcelHelpers.export(exports, "AirVentIcon", ()=>(0, _airVentJsDefault.default));
parcelHelpers.export(exports, "LucideAirVent", ()=>(0, _airVentJsDefault.default));
parcelHelpers.export(exports, "Airplay", ()=>(0, _airplayJsDefault.default));
parcelHelpers.export(exports, "AirplayIcon", ()=>(0, _airplayJsDefault.default));
parcelHelpers.export(exports, "LucideAirplay", ()=>(0, _airplayJsDefault.default));
parcelHelpers.export(exports, "AlarmClockOff", ()=>(0, _alarmClockOffJsDefault.default));
parcelHelpers.export(exports, "AlarmClockOffIcon", ()=>(0, _alarmClockOffJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockOff", ()=>(0, _alarmClockOffJsDefault.default));
parcelHelpers.export(exports, "AlarmClock", ()=>(0, _alarmClockJsDefault.default));
parcelHelpers.export(exports, "AlarmClockIcon", ()=>(0, _alarmClockJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClock", ()=>(0, _alarmClockJsDefault.default));
parcelHelpers.export(exports, "AlarmSmoke", ()=>(0, _alarmSmokeJsDefault.default));
parcelHelpers.export(exports, "AlarmSmokeIcon", ()=>(0, _alarmSmokeJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmSmoke", ()=>(0, _alarmSmokeJsDefault.default));
parcelHelpers.export(exports, "Album", ()=>(0, _albumJsDefault.default));
parcelHelpers.export(exports, "AlbumIcon", ()=>(0, _albumJsDefault.default));
parcelHelpers.export(exports, "LucideAlbum", ()=>(0, _albumJsDefault.default));
parcelHelpers.export(exports, "AlignCenterHorizontal", ()=>(0, _alignCenterHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignCenterHorizontalIcon", ()=>(0, _alignCenterHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignCenterHorizontal", ()=>(0, _alignCenterHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignCenterVertical", ()=>(0, _alignCenterVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignCenterVerticalIcon", ()=>(0, _alignCenterVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignCenterVertical", ()=>(0, _alignCenterVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignCenter", ()=>(0, _alignCenterJsDefault.default));
parcelHelpers.export(exports, "AlignCenterIcon", ()=>(0, _alignCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignCenter", ()=>(0, _alignCenterJsDefault.default));
parcelHelpers.export(exports, "AlignEndHorizontal", ()=>(0, _alignEndHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignEndHorizontalIcon", ()=>(0, _alignEndHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignEndHorizontal", ()=>(0, _alignEndHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignEndVertical", ()=>(0, _alignEndVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignEndVerticalIcon", ()=>(0, _alignEndVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignEndVertical", ()=>(0, _alignEndVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeCenter", ()=>(0, _alignHorizontalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeCenterIcon", ()=>(0, _alignHorizontalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalDistributeCenter", ()=>(0, _alignHorizontalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeEnd", ()=>(0, _alignHorizontalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeEndIcon", ()=>(0, _alignHorizontalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalDistributeEnd", ()=>(0, _alignHorizontalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyCenter", ()=>(0, _alignHorizontalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyCenterIcon", ()=>(0, _alignHorizontalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalJustifyCenter", ()=>(0, _alignHorizontalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyEnd", ()=>(0, _alignHorizontalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyEndIcon", ()=>(0, _alignHorizontalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalJustifyEnd", ()=>(0, _alignHorizontalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeStart", ()=>(0, _alignHorizontalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeStartIcon", ()=>(0, _alignHorizontalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalDistributeStart", ()=>(0, _alignHorizontalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyStart", ()=>(0, _alignHorizontalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyStartIcon", ()=>(0, _alignHorizontalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalJustifyStart", ()=>(0, _alignHorizontalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceAround", ()=>(0, _alignHorizontalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceAroundIcon", ()=>(0, _alignHorizontalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalSpaceAround", ()=>(0, _alignHorizontalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceBetween", ()=>(0, _alignHorizontalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceBetweenIcon", ()=>(0, _alignHorizontalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalSpaceBetween", ()=>(0, _alignHorizontalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "AlignJustify", ()=>(0, _alignJustifyJsDefault.default));
parcelHelpers.export(exports, "AlignJustifyIcon", ()=>(0, _alignJustifyJsDefault.default));
parcelHelpers.export(exports, "LucideAlignJustify", ()=>(0, _alignJustifyJsDefault.default));
parcelHelpers.export(exports, "AlignLeft", ()=>(0, _alignLeftJsDefault.default));
parcelHelpers.export(exports, "AlignLeftIcon", ()=>(0, _alignLeftJsDefault.default));
parcelHelpers.export(exports, "LucideAlignLeft", ()=>(0, _alignLeftJsDefault.default));
parcelHelpers.export(exports, "AlignRight", ()=>(0, _alignRightJsDefault.default));
parcelHelpers.export(exports, "AlignRightIcon", ()=>(0, _alignRightJsDefault.default));
parcelHelpers.export(exports, "LucideAlignRight", ()=>(0, _alignRightJsDefault.default));
parcelHelpers.export(exports, "AlignStartHorizontal", ()=>(0, _alignStartHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignStartHorizontalIcon", ()=>(0, _alignStartHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignStartHorizontal", ()=>(0, _alignStartHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignStartVertical", ()=>(0, _alignStartVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignStartVerticalIcon", ()=>(0, _alignStartVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignStartVertical", ()=>(0, _alignStartVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeCenter", ()=>(0, _alignVerticalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeCenterIcon", ()=>(0, _alignVerticalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalDistributeCenter", ()=>(0, _alignVerticalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeEnd", ()=>(0, _alignVerticalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeEndIcon", ()=>(0, _alignVerticalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalDistributeEnd", ()=>(0, _alignVerticalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeStart", ()=>(0, _alignVerticalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeStartIcon", ()=>(0, _alignVerticalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalDistributeStart", ()=>(0, _alignVerticalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyCenter", ()=>(0, _alignVerticalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyCenterIcon", ()=>(0, _alignVerticalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalJustifyCenter", ()=>(0, _alignVerticalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyEnd", ()=>(0, _alignVerticalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyEndIcon", ()=>(0, _alignVerticalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalJustifyEnd", ()=>(0, _alignVerticalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyStart", ()=>(0, _alignVerticalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyStartIcon", ()=>(0, _alignVerticalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalJustifyStart", ()=>(0, _alignVerticalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceAround", ()=>(0, _alignVerticalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceAroundIcon", ()=>(0, _alignVerticalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalSpaceAround", ()=>(0, _alignVerticalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceBetween", ()=>(0, _alignVerticalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceBetweenIcon", ()=>(0, _alignVerticalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalSpaceBetween", ()=>(0, _alignVerticalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "Ambulance", ()=>(0, _ambulanceJsDefault.default));
parcelHelpers.export(exports, "AmbulanceIcon", ()=>(0, _ambulanceJsDefault.default));
parcelHelpers.export(exports, "LucideAmbulance", ()=>(0, _ambulanceJsDefault.default));
parcelHelpers.export(exports, "Ampersand", ()=>(0, _ampersandJsDefault.default));
parcelHelpers.export(exports, "AmpersandIcon", ()=>(0, _ampersandJsDefault.default));
parcelHelpers.export(exports, "LucideAmpersand", ()=>(0, _ampersandJsDefault.default));
parcelHelpers.export(exports, "Ampersands", ()=>(0, _ampersandsJsDefault.default));
parcelHelpers.export(exports, "AmpersandsIcon", ()=>(0, _ampersandsJsDefault.default));
parcelHelpers.export(exports, "LucideAmpersands", ()=>(0, _ampersandsJsDefault.default));
parcelHelpers.export(exports, "Amphora", ()=>(0, _amphoraJsDefault.default));
parcelHelpers.export(exports, "AmphoraIcon", ()=>(0, _amphoraJsDefault.default));
parcelHelpers.export(exports, "LucideAmphora", ()=>(0, _amphoraJsDefault.default));
parcelHelpers.export(exports, "Anchor", ()=>(0, _anchorJsDefault.default));
parcelHelpers.export(exports, "AnchorIcon", ()=>(0, _anchorJsDefault.default));
parcelHelpers.export(exports, "LucideAnchor", ()=>(0, _anchorJsDefault.default));
parcelHelpers.export(exports, "Angry", ()=>(0, _angryJsDefault.default));
parcelHelpers.export(exports, "AngryIcon", ()=>(0, _angryJsDefault.default));
parcelHelpers.export(exports, "LucideAngry", ()=>(0, _angryJsDefault.default));
parcelHelpers.export(exports, "Annoyed", ()=>(0, _annoyedJsDefault.default));
parcelHelpers.export(exports, "AnnoyedIcon", ()=>(0, _annoyedJsDefault.default));
parcelHelpers.export(exports, "LucideAnnoyed", ()=>(0, _annoyedJsDefault.default));
parcelHelpers.export(exports, "Antenna", ()=>(0, _antennaJsDefault.default));
parcelHelpers.export(exports, "AntennaIcon", ()=>(0, _antennaJsDefault.default));
parcelHelpers.export(exports, "LucideAntenna", ()=>(0, _antennaJsDefault.default));
parcelHelpers.export(exports, "Anvil", ()=>(0, _anvilJsDefault.default));
parcelHelpers.export(exports, "AnvilIcon", ()=>(0, _anvilJsDefault.default));
parcelHelpers.export(exports, "LucideAnvil", ()=>(0, _anvilJsDefault.default));
parcelHelpers.export(exports, "Aperture", ()=>(0, _apertureJsDefault.default));
parcelHelpers.export(exports, "ApertureIcon", ()=>(0, _apertureJsDefault.default));
parcelHelpers.export(exports, "LucideAperture", ()=>(0, _apertureJsDefault.default));
parcelHelpers.export(exports, "AppWindowMac", ()=>(0, _appWindowMacJsDefault.default));
parcelHelpers.export(exports, "AppWindowMacIcon", ()=>(0, _appWindowMacJsDefault.default));
parcelHelpers.export(exports, "LucideAppWindowMac", ()=>(0, _appWindowMacJsDefault.default));
parcelHelpers.export(exports, "AppWindow", ()=>(0, _appWindowJsDefault.default));
parcelHelpers.export(exports, "AppWindowIcon", ()=>(0, _appWindowJsDefault.default));
parcelHelpers.export(exports, "LucideAppWindow", ()=>(0, _appWindowJsDefault.default));
parcelHelpers.export(exports, "Apple", ()=>(0, _appleJsDefault.default));
parcelHelpers.export(exports, "AppleIcon", ()=>(0, _appleJsDefault.default));
parcelHelpers.export(exports, "LucideApple", ()=>(0, _appleJsDefault.default));
parcelHelpers.export(exports, "ArchiveRestore", ()=>(0, _archiveRestoreJsDefault.default));
parcelHelpers.export(exports, "ArchiveRestoreIcon", ()=>(0, _archiveRestoreJsDefault.default));
parcelHelpers.export(exports, "LucideArchiveRestore", ()=>(0, _archiveRestoreJsDefault.default));
parcelHelpers.export(exports, "ArchiveX", ()=>(0, _archiveXJsDefault.default));
parcelHelpers.export(exports, "ArchiveXIcon", ()=>(0, _archiveXJsDefault.default));
parcelHelpers.export(exports, "LucideArchiveX", ()=>(0, _archiveXJsDefault.default));
parcelHelpers.export(exports, "Archive", ()=>(0, _archiveJsDefault.default));
parcelHelpers.export(exports, "ArchiveIcon", ()=>(0, _archiveJsDefault.default));
parcelHelpers.export(exports, "LucideArchive", ()=>(0, _archiveJsDefault.default));
parcelHelpers.export(exports, "Armchair", ()=>(0, _armchairJsDefault.default));
parcelHelpers.export(exports, "ArmchairIcon", ()=>(0, _armchairJsDefault.default));
parcelHelpers.export(exports, "LucideArmchair", ()=>(0, _armchairJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDownDash", ()=>(0, _arrowBigDownDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDownDashIcon", ()=>(0, _arrowBigDownDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigDownDash", ()=>(0, _arrowBigDownDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDown", ()=>(0, _arrowBigDownJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDownIcon", ()=>(0, _arrowBigDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigDown", ()=>(0, _arrowBigDownJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeftDash", ()=>(0, _arrowBigLeftDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeftDashIcon", ()=>(0, _arrowBigLeftDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigLeftDash", ()=>(0, _arrowBigLeftDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeft", ()=>(0, _arrowBigLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeftIcon", ()=>(0, _arrowBigLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigLeft", ()=>(0, _arrowBigLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRightDash", ()=>(0, _arrowBigRightDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRightDashIcon", ()=>(0, _arrowBigRightDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigRightDash", ()=>(0, _arrowBigRightDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRight", ()=>(0, _arrowBigRightJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRightIcon", ()=>(0, _arrowBigRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigRight", ()=>(0, _arrowBigRightJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUpDash", ()=>(0, _arrowBigUpDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUpDashIcon", ()=>(0, _arrowBigUpDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigUpDash", ()=>(0, _arrowBigUpDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUp", ()=>(0, _arrowBigUpJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUpIcon", ()=>(0, _arrowBigUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigUp", ()=>(0, _arrowBigUpJsDefault.default));
parcelHelpers.export(exports, "ArrowDownFromLine", ()=>(0, _arrowDownFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownFromLineIcon", ()=>(0, _arrowDownFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownFromLine", ()=>(0, _arrowDownFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeft", ()=>(0, _arrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftIcon", ()=>(0, _arrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeft", ()=>(0, _arrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownNarrowWide", ()=>(0, _arrowDownNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowDownNarrowWideIcon", ()=>(0, _arrowDownNarrowWideJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownNarrowWide", ()=>(0, _arrowDownNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRight", ()=>(0, _arrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightIcon", ()=>(0, _arrowDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRight", ()=>(0, _arrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToDot", ()=>(0, _arrowDownToDotJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToDotIcon", ()=>(0, _arrowDownToDotJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownToDot", ()=>(0, _arrowDownToDotJsDefault.default));
parcelHelpers.export(exports, "ArrowDownUp", ()=>(0, _arrowDownUpJsDefault.default));
parcelHelpers.export(exports, "ArrowDownUpIcon", ()=>(0, _arrowDownUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownUp", ()=>(0, _arrowDownUpJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToLine", ()=>(0, _arrowDownToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToLineIcon", ()=>(0, _arrowDownToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownToLine", ()=>(0, _arrowDownToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDown", ()=>(0, _arrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownIcon", ()=>(0, _arrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDown", ()=>(0, _arrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftFromLine", ()=>(0, _arrowLeftFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftFromLineIcon", ()=>(0, _arrowLeftFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftFromLine", ()=>(0, _arrowLeftFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftToLine", ()=>(0, _arrowLeftToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftToLineIcon", ()=>(0, _arrowLeftToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftToLine", ()=>(0, _arrowLeftToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeft", ()=>(0, _arrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftIcon", ()=>(0, _arrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeft", ()=>(0, _arrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftRight", ()=>(0, _arrowLeftRightJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftRightIcon", ()=>(0, _arrowLeftRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftRight", ()=>(0, _arrowLeftRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightFromLine", ()=>(0, _arrowRightFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRightFromLineIcon", ()=>(0, _arrowRightFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightFromLine", ()=>(0, _arrowRightFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRightLeft", ()=>(0, _arrowRightLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowRightLeftIcon", ()=>(0, _arrowRightLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightLeft", ()=>(0, _arrowRightLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowRightToLine", ()=>(0, _arrowRightToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRightToLineIcon", ()=>(0, _arrowRightToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightToLine", ()=>(0, _arrowRightToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRight", ()=>(0, _arrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightIcon", ()=>(0, _arrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRight", ()=>(0, _arrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpDown", ()=>(0, _arrowUpDownJsDefault.default));
parcelHelpers.export(exports, "ArrowUpDownIcon", ()=>(0, _arrowUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpDown", ()=>(0, _arrowUpDownJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromDot", ()=>(0, _arrowUpFromDotJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromDotIcon", ()=>(0, _arrowUpFromDotJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpFromDot", ()=>(0, _arrowUpFromDotJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromLine", ()=>(0, _arrowUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromLineIcon", ()=>(0, _arrowUpFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpFromLine", ()=>(0, _arrowUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeft", ()=>(0, _arrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftIcon", ()=>(0, _arrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeft", ()=>(0, _arrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRight", ()=>(0, _arrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightIcon", ()=>(0, _arrowUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRight", ()=>(0, _arrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpToLine", ()=>(0, _arrowUpToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpToLineIcon", ()=>(0, _arrowUpToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpToLine", ()=>(0, _arrowUpToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpWideNarrow", ()=>(0, _arrowUpWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowUpWideNarrowIcon", ()=>(0, _arrowUpWideNarrowJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpWideNarrow", ()=>(0, _arrowUpWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowsUpFromLine", ()=>(0, _arrowsUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowsUpFromLineIcon", ()=>(0, _arrowsUpFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowsUpFromLine", ()=>(0, _arrowsUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUp", ()=>(0, _arrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowUpIcon", ()=>(0, _arrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUp", ()=>(0, _arrowUpJsDefault.default));
parcelHelpers.export(exports, "Asterisk", ()=>(0, _asteriskJsDefault.default));
parcelHelpers.export(exports, "AsteriskIcon", ()=>(0, _asteriskJsDefault.default));
parcelHelpers.export(exports, "LucideAsterisk", ()=>(0, _asteriskJsDefault.default));
parcelHelpers.export(exports, "AtSign", ()=>(0, _atSignJsDefault.default));
parcelHelpers.export(exports, "AtSignIcon", ()=>(0, _atSignJsDefault.default));
parcelHelpers.export(exports, "LucideAtSign", ()=>(0, _atSignJsDefault.default));
parcelHelpers.export(exports, "Atom", ()=>(0, _atomJsDefault.default));
parcelHelpers.export(exports, "AtomIcon", ()=>(0, _atomJsDefault.default));
parcelHelpers.export(exports, "LucideAtom", ()=>(0, _atomJsDefault.default));
parcelHelpers.export(exports, "AudioLines", ()=>(0, _audioLinesJsDefault.default));
parcelHelpers.export(exports, "AudioLinesIcon", ()=>(0, _audioLinesJsDefault.default));
parcelHelpers.export(exports, "LucideAudioLines", ()=>(0, _audioLinesJsDefault.default));
parcelHelpers.export(exports, "AudioWaveform", ()=>(0, _audioWaveformJsDefault.default));
parcelHelpers.export(exports, "AudioWaveformIcon", ()=>(0, _audioWaveformJsDefault.default));
parcelHelpers.export(exports, "LucideAudioWaveform", ()=>(0, _audioWaveformJsDefault.default));
parcelHelpers.export(exports, "Award", ()=>(0, _awardJsDefault.default));
parcelHelpers.export(exports, "AwardIcon", ()=>(0, _awardJsDefault.default));
parcelHelpers.export(exports, "LucideAward", ()=>(0, _awardJsDefault.default));
parcelHelpers.export(exports, "Axe", ()=>(0, _axeJsDefault.default));
parcelHelpers.export(exports, "AxeIcon", ()=>(0, _axeJsDefault.default));
parcelHelpers.export(exports, "LucideAxe", ()=>(0, _axeJsDefault.default));
parcelHelpers.export(exports, "Baby", ()=>(0, _babyJsDefault.default));
parcelHelpers.export(exports, "BabyIcon", ()=>(0, _babyJsDefault.default));
parcelHelpers.export(exports, "LucideBaby", ()=>(0, _babyJsDefault.default));
parcelHelpers.export(exports, "Backpack", ()=>(0, _backpackJsDefault.default));
parcelHelpers.export(exports, "BackpackIcon", ()=>(0, _backpackJsDefault.default));
parcelHelpers.export(exports, "LucideBackpack", ()=>(0, _backpackJsDefault.default));
parcelHelpers.export(exports, "BadgeAlert", ()=>(0, _badgeAlertJsDefault.default));
parcelHelpers.export(exports, "BadgeAlertIcon", ()=>(0, _badgeAlertJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeAlert", ()=>(0, _badgeAlertJsDefault.default));
parcelHelpers.export(exports, "BadgeCent", ()=>(0, _badgeCentJsDefault.default));
parcelHelpers.export(exports, "BadgeCentIcon", ()=>(0, _badgeCentJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeCent", ()=>(0, _badgeCentJsDefault.default));
parcelHelpers.export(exports, "BadgeDollarSign", ()=>(0, _badgeDollarSignJsDefault.default));
parcelHelpers.export(exports, "BadgeDollarSignIcon", ()=>(0, _badgeDollarSignJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeDollarSign", ()=>(0, _badgeDollarSignJsDefault.default));
parcelHelpers.export(exports, "BadgeEuro", ()=>(0, _badgeEuroJsDefault.default));
parcelHelpers.export(exports, "BadgeEuroIcon", ()=>(0, _badgeEuroJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeEuro", ()=>(0, _badgeEuroJsDefault.default));
parcelHelpers.export(exports, "BadgeHelp", ()=>(0, _badgeHelpJsDefault.default));
parcelHelpers.export(exports, "BadgeHelpIcon", ()=>(0, _badgeHelpJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeHelp", ()=>(0, _badgeHelpJsDefault.default));
parcelHelpers.export(exports, "BadgeIndianRupee", ()=>(0, _badgeIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "BadgeIndianRupeeIcon", ()=>(0, _badgeIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeIndianRupee", ()=>(0, _badgeIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "BadgeInfo", ()=>(0, _badgeInfoJsDefault.default));
parcelHelpers.export(exports, "BadgeInfoIcon", ()=>(0, _badgeInfoJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeInfo", ()=>(0, _badgeInfoJsDefault.default));
parcelHelpers.export(exports, "BadgeJapaneseYen", ()=>(0, _badgeJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "BadgeJapaneseYenIcon", ()=>(0, _badgeJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeJapaneseYen", ()=>(0, _badgeJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "BadgeMinus", ()=>(0, _badgeMinusJsDefault.default));
parcelHelpers.export(exports, "BadgeMinusIcon", ()=>(0, _badgeMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeMinus", ()=>(0, _badgeMinusJsDefault.default));
parcelHelpers.export(exports, "BadgePercent", ()=>(0, _badgePercentJsDefault.default));
parcelHelpers.export(exports, "BadgePercentIcon", ()=>(0, _badgePercentJsDefault.default));
parcelHelpers.export(exports, "LucideBadgePercent", ()=>(0, _badgePercentJsDefault.default));
parcelHelpers.export(exports, "BadgePlus", ()=>(0, _badgePlusJsDefault.default));
parcelHelpers.export(exports, "BadgePlusIcon", ()=>(0, _badgePlusJsDefault.default));
parcelHelpers.export(exports, "LucideBadgePlus", ()=>(0, _badgePlusJsDefault.default));
parcelHelpers.export(exports, "BadgeRussianRuble", ()=>(0, _badgeRussianRubleJsDefault.default));
parcelHelpers.export(exports, "BadgeRussianRubleIcon", ()=>(0, _badgeRussianRubleJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeRussianRuble", ()=>(0, _badgeRussianRubleJsDefault.default));
parcelHelpers.export(exports, "BadgePoundSterling", ()=>(0, _badgePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "BadgePoundSterlingIcon", ()=>(0, _badgePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucideBadgePoundSterling", ()=>(0, _badgePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "BadgeSwissFranc", ()=>(0, _badgeSwissFrancJsDefault.default));
parcelHelpers.export(exports, "BadgeSwissFrancIcon", ()=>(0, _badgeSwissFrancJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeSwissFranc", ()=>(0, _badgeSwissFrancJsDefault.default));
parcelHelpers.export(exports, "Badge", ()=>(0, _badgeJsDefault.default));
parcelHelpers.export(exports, "BadgeIcon", ()=>(0, _badgeJsDefault.default));
parcelHelpers.export(exports, "LucideBadge", ()=>(0, _badgeJsDefault.default));
parcelHelpers.export(exports, "BadgeX", ()=>(0, _badgeXJsDefault.default));
parcelHelpers.export(exports, "BadgeXIcon", ()=>(0, _badgeXJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeX", ()=>(0, _badgeXJsDefault.default));
parcelHelpers.export(exports, "BaggageClaim", ()=>(0, _baggageClaimJsDefault.default));
parcelHelpers.export(exports, "BaggageClaimIcon", ()=>(0, _baggageClaimJsDefault.default));
parcelHelpers.export(exports, "LucideBaggageClaim", ()=>(0, _baggageClaimJsDefault.default));
parcelHelpers.export(exports, "Ban", ()=>(0, _banJsDefault.default));
parcelHelpers.export(exports, "BanIcon", ()=>(0, _banJsDefault.default));
parcelHelpers.export(exports, "LucideBan", ()=>(0, _banJsDefault.default));
parcelHelpers.export(exports, "Banana", ()=>(0, _bananaJsDefault.default));
parcelHelpers.export(exports, "BananaIcon", ()=>(0, _bananaJsDefault.default));
parcelHelpers.export(exports, "LucideBanana", ()=>(0, _bananaJsDefault.default));
parcelHelpers.export(exports, "Bandage", ()=>(0, _bandageJsDefault.default));
parcelHelpers.export(exports, "BandageIcon", ()=>(0, _bandageJsDefault.default));
parcelHelpers.export(exports, "LucideBandage", ()=>(0, _bandageJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowDown", ()=>(0, _banknoteArrowDownJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowDownIcon", ()=>(0, _banknoteArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideBanknoteArrowDown", ()=>(0, _banknoteArrowDownJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowUp", ()=>(0, _banknoteArrowUpJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowUpIcon", ()=>(0, _banknoteArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideBanknoteArrowUp", ()=>(0, _banknoteArrowUpJsDefault.default));
parcelHelpers.export(exports, "BanknoteX", ()=>(0, _banknoteXJsDefault.default));
parcelHelpers.export(exports, "BanknoteXIcon", ()=>(0, _banknoteXJsDefault.default));
parcelHelpers.export(exports, "LucideBanknoteX", ()=>(0, _banknoteXJsDefault.default));
parcelHelpers.export(exports, "Banknote", ()=>(0, _banknoteJsDefault.default));
parcelHelpers.export(exports, "BanknoteIcon", ()=>(0, _banknoteJsDefault.default));
parcelHelpers.export(exports, "LucideBanknote", ()=>(0, _banknoteJsDefault.default));
parcelHelpers.export(exports, "Barcode", ()=>(0, _barcodeJsDefault.default));
parcelHelpers.export(exports, "BarcodeIcon", ()=>(0, _barcodeJsDefault.default));
parcelHelpers.export(exports, "LucideBarcode", ()=>(0, _barcodeJsDefault.default));
parcelHelpers.export(exports, "Baseline", ()=>(0, _baselineJsDefault.default));
parcelHelpers.export(exports, "BaselineIcon", ()=>(0, _baselineJsDefault.default));
parcelHelpers.export(exports, "LucideBaseline", ()=>(0, _baselineJsDefault.default));
parcelHelpers.export(exports, "Bath", ()=>(0, _bathJsDefault.default));
parcelHelpers.export(exports, "BathIcon", ()=>(0, _bathJsDefault.default));
parcelHelpers.export(exports, "LucideBath", ()=>(0, _bathJsDefault.default));
parcelHelpers.export(exports, "BatteryCharging", ()=>(0, _batteryChargingJsDefault.default));
parcelHelpers.export(exports, "BatteryChargingIcon", ()=>(0, _batteryChargingJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryCharging", ()=>(0, _batteryChargingJsDefault.default));
parcelHelpers.export(exports, "BatteryFull", ()=>(0, _batteryFullJsDefault.default));
parcelHelpers.export(exports, "BatteryFullIcon", ()=>(0, _batteryFullJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryFull", ()=>(0, _batteryFullJsDefault.default));
parcelHelpers.export(exports, "BatteryLow", ()=>(0, _batteryLowJsDefault.default));
parcelHelpers.export(exports, "BatteryLowIcon", ()=>(0, _batteryLowJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryLow", ()=>(0, _batteryLowJsDefault.default));
parcelHelpers.export(exports, "BatteryPlus", ()=>(0, _batteryPlusJsDefault.default));
parcelHelpers.export(exports, "BatteryPlusIcon", ()=>(0, _batteryPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryPlus", ()=>(0, _batteryPlusJsDefault.default));
parcelHelpers.export(exports, "BatteryMedium", ()=>(0, _batteryMediumJsDefault.default));
parcelHelpers.export(exports, "BatteryMediumIcon", ()=>(0, _batteryMediumJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryMedium", ()=>(0, _batteryMediumJsDefault.default));
parcelHelpers.export(exports, "Battery", ()=>(0, _batteryJsDefault.default));
parcelHelpers.export(exports, "BatteryIcon", ()=>(0, _batteryJsDefault.default));
parcelHelpers.export(exports, "LucideBattery", ()=>(0, _batteryJsDefault.default));
parcelHelpers.export(exports, "BatteryWarning", ()=>(0, _batteryWarningJsDefault.default));
parcelHelpers.export(exports, "BatteryWarningIcon", ()=>(0, _batteryWarningJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryWarning", ()=>(0, _batteryWarningJsDefault.default));
parcelHelpers.export(exports, "Beaker", ()=>(0, _beakerJsDefault.default));
parcelHelpers.export(exports, "BeakerIcon", ()=>(0, _beakerJsDefault.default));
parcelHelpers.export(exports, "LucideBeaker", ()=>(0, _beakerJsDefault.default));
parcelHelpers.export(exports, "Bean", ()=>(0, _beanJsDefault.default));
parcelHelpers.export(exports, "BeanIcon", ()=>(0, _beanJsDefault.default));
parcelHelpers.export(exports, "LucideBean", ()=>(0, _beanJsDefault.default));
parcelHelpers.export(exports, "BedDouble", ()=>(0, _bedDoubleJsDefault.default));
parcelHelpers.export(exports, "BedDoubleIcon", ()=>(0, _bedDoubleJsDefault.default));
parcelHelpers.export(exports, "LucideBedDouble", ()=>(0, _bedDoubleJsDefault.default));
parcelHelpers.export(exports, "BeanOff", ()=>(0, _beanOffJsDefault.default));
parcelHelpers.export(exports, "BeanOffIcon", ()=>(0, _beanOffJsDefault.default));
parcelHelpers.export(exports, "LucideBeanOff", ()=>(0, _beanOffJsDefault.default));
parcelHelpers.export(exports, "BedSingle", ()=>(0, _bedSingleJsDefault.default));
parcelHelpers.export(exports, "BedSingleIcon", ()=>(0, _bedSingleJsDefault.default));
parcelHelpers.export(exports, "LucideBedSingle", ()=>(0, _bedSingleJsDefault.default));
parcelHelpers.export(exports, "Bed", ()=>(0, _bedJsDefault.default));
parcelHelpers.export(exports, "BedIcon", ()=>(0, _bedJsDefault.default));
parcelHelpers.export(exports, "LucideBed", ()=>(0, _bedJsDefault.default));
parcelHelpers.export(exports, "Beef", ()=>(0, _beefJsDefault.default));
parcelHelpers.export(exports, "BeefIcon", ()=>(0, _beefJsDefault.default));
parcelHelpers.export(exports, "LucideBeef", ()=>(0, _beefJsDefault.default));
parcelHelpers.export(exports, "BeerOff", ()=>(0, _beerOffJsDefault.default));
parcelHelpers.export(exports, "BeerOffIcon", ()=>(0, _beerOffJsDefault.default));
parcelHelpers.export(exports, "LucideBeerOff", ()=>(0, _beerOffJsDefault.default));
parcelHelpers.export(exports, "Beer", ()=>(0, _beerJsDefault.default));
parcelHelpers.export(exports, "BeerIcon", ()=>(0, _beerJsDefault.default));
parcelHelpers.export(exports, "LucideBeer", ()=>(0, _beerJsDefault.default));
parcelHelpers.export(exports, "BellDot", ()=>(0, _bellDotJsDefault.default));
parcelHelpers.export(exports, "BellDotIcon", ()=>(0, _bellDotJsDefault.default));
parcelHelpers.export(exports, "LucideBellDot", ()=>(0, _bellDotJsDefault.default));
parcelHelpers.export(exports, "BellElectric", ()=>(0, _bellElectricJsDefault.default));
parcelHelpers.export(exports, "BellElectricIcon", ()=>(0, _bellElectricJsDefault.default));
parcelHelpers.export(exports, "LucideBellElectric", ()=>(0, _bellElectricJsDefault.default));
parcelHelpers.export(exports, "BellMinus", ()=>(0, _bellMinusJsDefault.default));
parcelHelpers.export(exports, "BellMinusIcon", ()=>(0, _bellMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBellMinus", ()=>(0, _bellMinusJsDefault.default));
parcelHelpers.export(exports, "BellOff", ()=>(0, _bellOffJsDefault.default));
parcelHelpers.export(exports, "BellOffIcon", ()=>(0, _bellOffJsDefault.default));
parcelHelpers.export(exports, "LucideBellOff", ()=>(0, _bellOffJsDefault.default));
parcelHelpers.export(exports, "BellPlus", ()=>(0, _bellPlusJsDefault.default));
parcelHelpers.export(exports, "BellPlusIcon", ()=>(0, _bellPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBellPlus", ()=>(0, _bellPlusJsDefault.default));
parcelHelpers.export(exports, "BellRing", ()=>(0, _bellRingJsDefault.default));
parcelHelpers.export(exports, "BellRingIcon", ()=>(0, _bellRingJsDefault.default));
parcelHelpers.export(exports, "LucideBellRing", ()=>(0, _bellRingJsDefault.default));
parcelHelpers.export(exports, "Bell", ()=>(0, _bellJsDefault.default));
parcelHelpers.export(exports, "BellIcon", ()=>(0, _bellJsDefault.default));
parcelHelpers.export(exports, "LucideBell", ()=>(0, _bellJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalEnd", ()=>(0, _betweenVerticalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalEndIcon", ()=>(0, _betweenVerticalEndJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenVerticalEnd", ()=>(0, _betweenVerticalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalStart", ()=>(0, _betweenVerticalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalStartIcon", ()=>(0, _betweenVerticalStartJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenVerticalStart", ()=>(0, _betweenVerticalStartJsDefault.default));
parcelHelpers.export(exports, "BicepsFlexed", ()=>(0, _bicepsFlexedJsDefault.default));
parcelHelpers.export(exports, "BicepsFlexedIcon", ()=>(0, _bicepsFlexedJsDefault.default));
parcelHelpers.export(exports, "LucideBicepsFlexed", ()=>(0, _bicepsFlexedJsDefault.default));
parcelHelpers.export(exports, "Bike", ()=>(0, _bikeJsDefault.default));
parcelHelpers.export(exports, "BikeIcon", ()=>(0, _bikeJsDefault.default));
parcelHelpers.export(exports, "LucideBike", ()=>(0, _bikeJsDefault.default));
parcelHelpers.export(exports, "Binary", ()=>(0, _binaryJsDefault.default));
parcelHelpers.export(exports, "BinaryIcon", ()=>(0, _binaryJsDefault.default));
parcelHelpers.export(exports, "LucideBinary", ()=>(0, _binaryJsDefault.default));
parcelHelpers.export(exports, "Binoculars", ()=>(0, _binocularsJsDefault.default));
parcelHelpers.export(exports, "BinocularsIcon", ()=>(0, _binocularsJsDefault.default));
parcelHelpers.export(exports, "LucideBinoculars", ()=>(0, _binocularsJsDefault.default));
parcelHelpers.export(exports, "Biohazard", ()=>(0, _biohazardJsDefault.default));
parcelHelpers.export(exports, "BiohazardIcon", ()=>(0, _biohazardJsDefault.default));
parcelHelpers.export(exports, "LucideBiohazard", ()=>(0, _biohazardJsDefault.default));
parcelHelpers.export(exports, "Bird", ()=>(0, _birdJsDefault.default));
parcelHelpers.export(exports, "BirdIcon", ()=>(0, _birdJsDefault.default));
parcelHelpers.export(exports, "LucideBird", ()=>(0, _birdJsDefault.default));
parcelHelpers.export(exports, "Bitcoin", ()=>(0, _bitcoinJsDefault.default));
parcelHelpers.export(exports, "BitcoinIcon", ()=>(0, _bitcoinJsDefault.default));
parcelHelpers.export(exports, "LucideBitcoin", ()=>(0, _bitcoinJsDefault.default));
parcelHelpers.export(exports, "Blend", ()=>(0, _blendJsDefault.default));
parcelHelpers.export(exports, "BlendIcon", ()=>(0, _blendJsDefault.default));
parcelHelpers.export(exports, "LucideBlend", ()=>(0, _blendJsDefault.default));
parcelHelpers.export(exports, "Blinds", ()=>(0, _blindsJsDefault.default));
parcelHelpers.export(exports, "BlindsIcon", ()=>(0, _blindsJsDefault.default));
parcelHelpers.export(exports, "LucideBlinds", ()=>(0, _blindsJsDefault.default));
parcelHelpers.export(exports, "Blocks", ()=>(0, _blocksJsDefault.default));
parcelHelpers.export(exports, "BlocksIcon", ()=>(0, _blocksJsDefault.default));
parcelHelpers.export(exports, "LucideBlocks", ()=>(0, _blocksJsDefault.default));
parcelHelpers.export(exports, "BluetoothConnected", ()=>(0, _bluetoothConnectedJsDefault.default));
parcelHelpers.export(exports, "BluetoothConnectedIcon", ()=>(0, _bluetoothConnectedJsDefault.default));
parcelHelpers.export(exports, "LucideBluetoothConnected", ()=>(0, _bluetoothConnectedJsDefault.default));
parcelHelpers.export(exports, "BluetoothOff", ()=>(0, _bluetoothOffJsDefault.default));
parcelHelpers.export(exports, "BluetoothOffIcon", ()=>(0, _bluetoothOffJsDefault.default));
parcelHelpers.export(exports, "LucideBluetoothOff", ()=>(0, _bluetoothOffJsDefault.default));
parcelHelpers.export(exports, "BluetoothSearching", ()=>(0, _bluetoothSearchingJsDefault.default));
parcelHelpers.export(exports, "BluetoothSearchingIcon", ()=>(0, _bluetoothSearchingJsDefault.default));
parcelHelpers.export(exports, "LucideBluetoothSearching", ()=>(0, _bluetoothSearchingJsDefault.default));
parcelHelpers.export(exports, "Bluetooth", ()=>(0, _bluetoothJsDefault.default));
parcelHelpers.export(exports, "BluetoothIcon", ()=>(0, _bluetoothJsDefault.default));
parcelHelpers.export(exports, "LucideBluetooth", ()=>(0, _bluetoothJsDefault.default));
parcelHelpers.export(exports, "Bold", ()=>(0, _boldJsDefault.default));
parcelHelpers.export(exports, "BoldIcon", ()=>(0, _boldJsDefault.default));
parcelHelpers.export(exports, "LucideBold", ()=>(0, _boldJsDefault.default));
parcelHelpers.export(exports, "Bolt", ()=>(0, _boltJsDefault.default));
parcelHelpers.export(exports, "BoltIcon", ()=>(0, _boltJsDefault.default));
parcelHelpers.export(exports, "LucideBolt", ()=>(0, _boltJsDefault.default));
parcelHelpers.export(exports, "Bomb", ()=>(0, _bombJsDefault.default));
parcelHelpers.export(exports, "BombIcon", ()=>(0, _bombJsDefault.default));
parcelHelpers.export(exports, "LucideBomb", ()=>(0, _bombJsDefault.default));
parcelHelpers.export(exports, "Bone", ()=>(0, _boneJsDefault.default));
parcelHelpers.export(exports, "BoneIcon", ()=>(0, _boneJsDefault.default));
parcelHelpers.export(exports, "LucideBone", ()=>(0, _boneJsDefault.default));
parcelHelpers.export(exports, "BookA", ()=>(0, _bookAJsDefault.default));
parcelHelpers.export(exports, "BookAIcon", ()=>(0, _bookAJsDefault.default));
parcelHelpers.export(exports, "LucideBookA", ()=>(0, _bookAJsDefault.default));
parcelHelpers.export(exports, "BookAudio", ()=>(0, _bookAudioJsDefault.default));
parcelHelpers.export(exports, "BookAudioIcon", ()=>(0, _bookAudioJsDefault.default));
parcelHelpers.export(exports, "LucideBookAudio", ()=>(0, _bookAudioJsDefault.default));
parcelHelpers.export(exports, "BookCopy", ()=>(0, _bookCopyJsDefault.default));
parcelHelpers.export(exports, "BookCopyIcon", ()=>(0, _bookCopyJsDefault.default));
parcelHelpers.export(exports, "LucideBookCopy", ()=>(0, _bookCopyJsDefault.default));
parcelHelpers.export(exports, "BookCheck", ()=>(0, _bookCheckJsDefault.default));
parcelHelpers.export(exports, "BookCheckIcon", ()=>(0, _bookCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBookCheck", ()=>(0, _bookCheckJsDefault.default));
parcelHelpers.export(exports, "BookDown", ()=>(0, _bookDownJsDefault.default));
parcelHelpers.export(exports, "BookDownIcon", ()=>(0, _bookDownJsDefault.default));
parcelHelpers.export(exports, "LucideBookDown", ()=>(0, _bookDownJsDefault.default));
parcelHelpers.export(exports, "BookHeadphones", ()=>(0, _bookHeadphonesJsDefault.default));
parcelHelpers.export(exports, "BookHeadphonesIcon", ()=>(0, _bookHeadphonesJsDefault.default));
parcelHelpers.export(exports, "LucideBookHeadphones", ()=>(0, _bookHeadphonesJsDefault.default));
parcelHelpers.export(exports, "BookHeart", ()=>(0, _bookHeartJsDefault.default));
parcelHelpers.export(exports, "BookHeartIcon", ()=>(0, _bookHeartJsDefault.default));
parcelHelpers.export(exports, "LucideBookHeart", ()=>(0, _bookHeartJsDefault.default));
parcelHelpers.export(exports, "BookImage", ()=>(0, _bookImageJsDefault.default));
parcelHelpers.export(exports, "BookImageIcon", ()=>(0, _bookImageJsDefault.default));
parcelHelpers.export(exports, "LucideBookImage", ()=>(0, _bookImageJsDefault.default));
parcelHelpers.export(exports, "BookKey", ()=>(0, _bookKeyJsDefault.default));
parcelHelpers.export(exports, "BookKeyIcon", ()=>(0, _bookKeyJsDefault.default));
parcelHelpers.export(exports, "LucideBookKey", ()=>(0, _bookKeyJsDefault.default));
parcelHelpers.export(exports, "BookLock", ()=>(0, _bookLockJsDefault.default));
parcelHelpers.export(exports, "BookLockIcon", ()=>(0, _bookLockJsDefault.default));
parcelHelpers.export(exports, "LucideBookLock", ()=>(0, _bookLockJsDefault.default));
parcelHelpers.export(exports, "BookMarked", ()=>(0, _bookMarkedJsDefault.default));
parcelHelpers.export(exports, "BookMarkedIcon", ()=>(0, _bookMarkedJsDefault.default));
parcelHelpers.export(exports, "LucideBookMarked", ()=>(0, _bookMarkedJsDefault.default));
parcelHelpers.export(exports, "BookMinus", ()=>(0, _bookMinusJsDefault.default));
parcelHelpers.export(exports, "BookMinusIcon", ()=>(0, _bookMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBookMinus", ()=>(0, _bookMinusJsDefault.default));
parcelHelpers.export(exports, "BookOpenCheck", ()=>(0, _bookOpenCheckJsDefault.default));
parcelHelpers.export(exports, "BookOpenCheckIcon", ()=>(0, _bookOpenCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBookOpenCheck", ()=>(0, _bookOpenCheckJsDefault.default));
parcelHelpers.export(exports, "BookOpen", ()=>(0, _bookOpenJsDefault.default));
parcelHelpers.export(exports, "BookOpenIcon", ()=>(0, _bookOpenJsDefault.default));
parcelHelpers.export(exports, "LucideBookOpen", ()=>(0, _bookOpenJsDefault.default));
parcelHelpers.export(exports, "BookOpenText", ()=>(0, _bookOpenTextJsDefault.default));
parcelHelpers.export(exports, "BookOpenTextIcon", ()=>(0, _bookOpenTextJsDefault.default));
parcelHelpers.export(exports, "LucideBookOpenText", ()=>(0, _bookOpenTextJsDefault.default));
parcelHelpers.export(exports, "BookPlus", ()=>(0, _bookPlusJsDefault.default));
parcelHelpers.export(exports, "BookPlusIcon", ()=>(0, _bookPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBookPlus", ()=>(0, _bookPlusJsDefault.default));
parcelHelpers.export(exports, "BookText", ()=>(0, _bookTextJsDefault.default));
parcelHelpers.export(exports, "BookTextIcon", ()=>(0, _bookTextJsDefault.default));
parcelHelpers.export(exports, "LucideBookText", ()=>(0, _bookTextJsDefault.default));
parcelHelpers.export(exports, "BookType", ()=>(0, _bookTypeJsDefault.default));
parcelHelpers.export(exports, "BookTypeIcon", ()=>(0, _bookTypeJsDefault.default));
parcelHelpers.export(exports, "LucideBookType", ()=>(0, _bookTypeJsDefault.default));
parcelHelpers.export(exports, "BookUp2", ()=>(0, _bookUp2JsDefault.default));
parcelHelpers.export(exports, "BookUp2Icon", ()=>(0, _bookUp2JsDefault.default));
parcelHelpers.export(exports, "LucideBookUp2", ()=>(0, _bookUp2JsDefault.default));
parcelHelpers.export(exports, "BookUp", ()=>(0, _bookUpJsDefault.default));
parcelHelpers.export(exports, "BookUpIcon", ()=>(0, _bookUpJsDefault.default));
parcelHelpers.export(exports, "LucideBookUp", ()=>(0, _bookUpJsDefault.default));
parcelHelpers.export(exports, "BookUser", ()=>(0, _bookUserJsDefault.default));
parcelHelpers.export(exports, "BookUserIcon", ()=>(0, _bookUserJsDefault.default));
parcelHelpers.export(exports, "LucideBookUser", ()=>(0, _bookUserJsDefault.default));
parcelHelpers.export(exports, "BookX", ()=>(0, _bookXJsDefault.default));
parcelHelpers.export(exports, "BookXIcon", ()=>(0, _bookXJsDefault.default));
parcelHelpers.export(exports, "LucideBookX", ()=>(0, _bookXJsDefault.default));
parcelHelpers.export(exports, "Book", ()=>(0, _bookJsDefault.default));
parcelHelpers.export(exports, "BookIcon", ()=>(0, _bookJsDefault.default));
parcelHelpers.export(exports, "LucideBook", ()=>(0, _bookJsDefault.default));
parcelHelpers.export(exports, "BookmarkCheck", ()=>(0, _bookmarkCheckJsDefault.default));
parcelHelpers.export(exports, "BookmarkCheckIcon", ()=>(0, _bookmarkCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkCheck", ()=>(0, _bookmarkCheckJsDefault.default));
parcelHelpers.export(exports, "BookmarkMinus", ()=>(0, _bookmarkMinusJsDefault.default));
parcelHelpers.export(exports, "BookmarkMinusIcon", ()=>(0, _bookmarkMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkMinus", ()=>(0, _bookmarkMinusJsDefault.default));
parcelHelpers.export(exports, "BookmarkPlus", ()=>(0, _bookmarkPlusJsDefault.default));
parcelHelpers.export(exports, "BookmarkPlusIcon", ()=>(0, _bookmarkPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkPlus", ()=>(0, _bookmarkPlusJsDefault.default));
parcelHelpers.export(exports, "BookmarkX", ()=>(0, _bookmarkXJsDefault.default));
parcelHelpers.export(exports, "BookmarkXIcon", ()=>(0, _bookmarkXJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkX", ()=>(0, _bookmarkXJsDefault.default));
parcelHelpers.export(exports, "Bookmark", ()=>(0, _bookmarkJsDefault.default));
parcelHelpers.export(exports, "BookmarkIcon", ()=>(0, _bookmarkJsDefault.default));
parcelHelpers.export(exports, "LucideBookmark", ()=>(0, _bookmarkJsDefault.default));
parcelHelpers.export(exports, "BoomBox", ()=>(0, _boomBoxJsDefault.default));
parcelHelpers.export(exports, "BoomBoxIcon", ()=>(0, _boomBoxJsDefault.default));
parcelHelpers.export(exports, "LucideBoomBox", ()=>(0, _boomBoxJsDefault.default));
parcelHelpers.export(exports, "BotMessageSquare", ()=>(0, _botMessageSquareJsDefault.default));
parcelHelpers.export(exports, "BotMessageSquareIcon", ()=>(0, _botMessageSquareJsDefault.default));
parcelHelpers.export(exports, "LucideBotMessageSquare", ()=>(0, _botMessageSquareJsDefault.default));
parcelHelpers.export(exports, "BotOff", ()=>(0, _botOffJsDefault.default));
parcelHelpers.export(exports, "BotOffIcon", ()=>(0, _botOffJsDefault.default));
parcelHelpers.export(exports, "LucideBotOff", ()=>(0, _botOffJsDefault.default));
parcelHelpers.export(exports, "Bot", ()=>(0, _botJsDefault.default));
parcelHelpers.export(exports, "BotIcon", ()=>(0, _botJsDefault.default));
parcelHelpers.export(exports, "LucideBot", ()=>(0, _botJsDefault.default));
parcelHelpers.export(exports, "BowArrow", ()=>(0, _bowArrowJsDefault.default));
parcelHelpers.export(exports, "BowArrowIcon", ()=>(0, _bowArrowJsDefault.default));
parcelHelpers.export(exports, "LucideBowArrow", ()=>(0, _bowArrowJsDefault.default));
parcelHelpers.export(exports, "Box", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "BoxIcon", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "LucideBox", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "Boxes", ()=>(0, _boxesJsDefault.default));
parcelHelpers.export(exports, "BoxesIcon", ()=>(0, _boxesJsDefault.default));
parcelHelpers.export(exports, "LucideBoxes", ()=>(0, _boxesJsDefault.default));
parcelHelpers.export(exports, "Brackets", ()=>(0, _bracketsJsDefault.default));
parcelHelpers.export(exports, "BracketsIcon", ()=>(0, _bracketsJsDefault.default));
parcelHelpers.export(exports, "LucideBrackets", ()=>(0, _bracketsJsDefault.default));
parcelHelpers.export(exports, "BrainCircuit", ()=>(0, _brainCircuitJsDefault.default));
parcelHelpers.export(exports, "BrainCircuitIcon", ()=>(0, _brainCircuitJsDefault.default));
parcelHelpers.export(exports, "LucideBrainCircuit", ()=>(0, _brainCircuitJsDefault.default));
parcelHelpers.export(exports, "BrainCog", ()=>(0, _brainCogJsDefault.default));
parcelHelpers.export(exports, "BrainCogIcon", ()=>(0, _brainCogJsDefault.default));
parcelHelpers.export(exports, "LucideBrainCog", ()=>(0, _brainCogJsDefault.default));
parcelHelpers.export(exports, "Brain", ()=>(0, _brainJsDefault.default));
parcelHelpers.export(exports, "BrainIcon", ()=>(0, _brainJsDefault.default));
parcelHelpers.export(exports, "LucideBrain", ()=>(0, _brainJsDefault.default));
parcelHelpers.export(exports, "BrickWallFire", ()=>(0, _brickWallFireJsDefault.default));
parcelHelpers.export(exports, "BrickWallFireIcon", ()=>(0, _brickWallFireJsDefault.default));
parcelHelpers.export(exports, "LucideBrickWallFire", ()=>(0, _brickWallFireJsDefault.default));
parcelHelpers.export(exports, "BrickWall", ()=>(0, _brickWallJsDefault.default));
parcelHelpers.export(exports, "BrickWallIcon", ()=>(0, _brickWallJsDefault.default));
parcelHelpers.export(exports, "LucideBrickWall", ()=>(0, _brickWallJsDefault.default));
parcelHelpers.export(exports, "BriefcaseBusiness", ()=>(0, _briefcaseBusinessJsDefault.default));
parcelHelpers.export(exports, "BriefcaseBusinessIcon", ()=>(0, _briefcaseBusinessJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcaseBusiness", ()=>(0, _briefcaseBusinessJsDefault.default));
parcelHelpers.export(exports, "BriefcaseConveyorBelt", ()=>(0, _briefcaseConveyorBeltJsDefault.default));
parcelHelpers.export(exports, "BriefcaseConveyorBeltIcon", ()=>(0, _briefcaseConveyorBeltJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcaseConveyorBelt", ()=>(0, _briefcaseConveyorBeltJsDefault.default));
parcelHelpers.export(exports, "BriefcaseMedical", ()=>(0, _briefcaseMedicalJsDefault.default));
parcelHelpers.export(exports, "BriefcaseMedicalIcon", ()=>(0, _briefcaseMedicalJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcaseMedical", ()=>(0, _briefcaseMedicalJsDefault.default));
parcelHelpers.export(exports, "Briefcase", ()=>(0, _briefcaseJsDefault.default));
parcelHelpers.export(exports, "BriefcaseIcon", ()=>(0, _briefcaseJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcase", ()=>(0, _briefcaseJsDefault.default));
parcelHelpers.export(exports, "BringToFront", ()=>(0, _bringToFrontJsDefault.default));
parcelHelpers.export(exports, "BringToFrontIcon", ()=>(0, _bringToFrontJsDefault.default));
parcelHelpers.export(exports, "LucideBringToFront", ()=>(0, _bringToFrontJsDefault.default));
parcelHelpers.export(exports, "BrushCleaning", ()=>(0, _brushCleaningJsDefault.default));
parcelHelpers.export(exports, "BrushCleaningIcon", ()=>(0, _brushCleaningJsDefault.default));
parcelHelpers.export(exports, "LucideBrushCleaning", ()=>(0, _brushCleaningJsDefault.default));
parcelHelpers.export(exports, "Brush", ()=>(0, _brushJsDefault.default));
parcelHelpers.export(exports, "BrushIcon", ()=>(0, _brushJsDefault.default));
parcelHelpers.export(exports, "LucideBrush", ()=>(0, _brushJsDefault.default));
parcelHelpers.export(exports, "Bubbles", ()=>(0, _bubblesJsDefault.default));
parcelHelpers.export(exports, "BubblesIcon", ()=>(0, _bubblesJsDefault.default));
parcelHelpers.export(exports, "LucideBubbles", ()=>(0, _bubblesJsDefault.default));
parcelHelpers.export(exports, "BugOff", ()=>(0, _bugOffJsDefault.default));
parcelHelpers.export(exports, "BugOffIcon", ()=>(0, _bugOffJsDefault.default));
parcelHelpers.export(exports, "LucideBugOff", ()=>(0, _bugOffJsDefault.default));
parcelHelpers.export(exports, "BugPlay", ()=>(0, _bugPlayJsDefault.default));
parcelHelpers.export(exports, "BugPlayIcon", ()=>(0, _bugPlayJsDefault.default));
parcelHelpers.export(exports, "LucideBugPlay", ()=>(0, _bugPlayJsDefault.default));
parcelHelpers.export(exports, "Bug", ()=>(0, _bugJsDefault.default));
parcelHelpers.export(exports, "BugIcon", ()=>(0, _bugJsDefault.default));
parcelHelpers.export(exports, "LucideBug", ()=>(0, _bugJsDefault.default));
parcelHelpers.export(exports, "Building2", ()=>(0, _building2JsDefault.default));
parcelHelpers.export(exports, "Building2Icon", ()=>(0, _building2JsDefault.default));
parcelHelpers.export(exports, "LucideBuilding2", ()=>(0, _building2JsDefault.default));
parcelHelpers.export(exports, "Building", ()=>(0, _buildingJsDefault.default));
parcelHelpers.export(exports, "BuildingIcon", ()=>(0, _buildingJsDefault.default));
parcelHelpers.export(exports, "LucideBuilding", ()=>(0, _buildingJsDefault.default));
parcelHelpers.export(exports, "Bus", ()=>(0, _busJsDefault.default));
parcelHelpers.export(exports, "BusIcon", ()=>(0, _busJsDefault.default));
parcelHelpers.export(exports, "LucideBus", ()=>(0, _busJsDefault.default));
parcelHelpers.export(exports, "BusFront", ()=>(0, _busFrontJsDefault.default));
parcelHelpers.export(exports, "BusFrontIcon", ()=>(0, _busFrontJsDefault.default));
parcelHelpers.export(exports, "LucideBusFront", ()=>(0, _busFrontJsDefault.default));
parcelHelpers.export(exports, "CableCar", ()=>(0, _cableCarJsDefault.default));
parcelHelpers.export(exports, "CableCarIcon", ()=>(0, _cableCarJsDefault.default));
parcelHelpers.export(exports, "LucideCableCar", ()=>(0, _cableCarJsDefault.default));
parcelHelpers.export(exports, "Cable", ()=>(0, _cableJsDefault.default));
parcelHelpers.export(exports, "CableIcon", ()=>(0, _cableJsDefault.default));
parcelHelpers.export(exports, "LucideCable", ()=>(0, _cableJsDefault.default));
parcelHelpers.export(exports, "CakeSlice", ()=>(0, _cakeSliceJsDefault.default));
parcelHelpers.export(exports, "CakeSliceIcon", ()=>(0, _cakeSliceJsDefault.default));
parcelHelpers.export(exports, "LucideCakeSlice", ()=>(0, _cakeSliceJsDefault.default));
parcelHelpers.export(exports, "Cake", ()=>(0, _cakeJsDefault.default));
parcelHelpers.export(exports, "CakeIcon", ()=>(0, _cakeJsDefault.default));
parcelHelpers.export(exports, "LucideCake", ()=>(0, _cakeJsDefault.default));
parcelHelpers.export(exports, "Calculator", ()=>(0, _calculatorJsDefault.default));
parcelHelpers.export(exports, "CalculatorIcon", ()=>(0, _calculatorJsDefault.default));
parcelHelpers.export(exports, "LucideCalculator", ()=>(0, _calculatorJsDefault.default));
parcelHelpers.export(exports, "Calendar1", ()=>(0, _calendar1JsDefault.default));
parcelHelpers.export(exports, "Calendar1Icon", ()=>(0, _calendar1JsDefault.default));
parcelHelpers.export(exports, "LucideCalendar1", ()=>(0, _calendar1JsDefault.default));
parcelHelpers.export(exports, "CalendarArrowUp", ()=>(0, _calendarArrowUpJsDefault.default));
parcelHelpers.export(exports, "CalendarArrowUpIcon", ()=>(0, _calendarArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarArrowUp", ()=>(0, _calendarArrowUpJsDefault.default));
parcelHelpers.export(exports, "CalendarArrowDown", ()=>(0, _calendarArrowDownJsDefault.default));
parcelHelpers.export(exports, "CalendarArrowDownIcon", ()=>(0, _calendarArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarArrowDown", ()=>(0, _calendarArrowDownJsDefault.default));
parcelHelpers.export(exports, "CalendarCheck2", ()=>(0, _calendarCheck2JsDefault.default));
parcelHelpers.export(exports, "CalendarCheck2Icon", ()=>(0, _calendarCheck2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarCheck2", ()=>(0, _calendarCheck2JsDefault.default));
parcelHelpers.export(exports, "CalendarCheck", ()=>(0, _calendarCheckJsDefault.default));
parcelHelpers.export(exports, "CalendarCheckIcon", ()=>(0, _calendarCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarCheck", ()=>(0, _calendarCheckJsDefault.default));
parcelHelpers.export(exports, "CalendarClock", ()=>(0, _calendarClockJsDefault.default));
parcelHelpers.export(exports, "CalendarClockIcon", ()=>(0, _calendarClockJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarClock", ()=>(0, _calendarClockJsDefault.default));
parcelHelpers.export(exports, "CalendarCog", ()=>(0, _calendarCogJsDefault.default));
parcelHelpers.export(exports, "CalendarCogIcon", ()=>(0, _calendarCogJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarCog", ()=>(0, _calendarCogJsDefault.default));
parcelHelpers.export(exports, "CalendarDays", ()=>(0, _calendarDaysJsDefault.default));
parcelHelpers.export(exports, "CalendarDaysIcon", ()=>(0, _calendarDaysJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarDays", ()=>(0, _calendarDaysJsDefault.default));
parcelHelpers.export(exports, "CalendarFold", ()=>(0, _calendarFoldJsDefault.default));
parcelHelpers.export(exports, "CalendarFoldIcon", ()=>(0, _calendarFoldJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarFold", ()=>(0, _calendarFoldJsDefault.default));
parcelHelpers.export(exports, "CalendarHeart", ()=>(0, _calendarHeartJsDefault.default));
parcelHelpers.export(exports, "CalendarHeartIcon", ()=>(0, _calendarHeartJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarHeart", ()=>(0, _calendarHeartJsDefault.default));
parcelHelpers.export(exports, "CalendarMinus2", ()=>(0, _calendarMinus2JsDefault.default));
parcelHelpers.export(exports, "CalendarMinus2Icon", ()=>(0, _calendarMinus2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarMinus2", ()=>(0, _calendarMinus2JsDefault.default));
parcelHelpers.export(exports, "CalendarMinus", ()=>(0, _calendarMinusJsDefault.default));
parcelHelpers.export(exports, "CalendarMinusIcon", ()=>(0, _calendarMinusJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarMinus", ()=>(0, _calendarMinusJsDefault.default));
parcelHelpers.export(exports, "CalendarOff", ()=>(0, _calendarOffJsDefault.default));
parcelHelpers.export(exports, "CalendarOffIcon", ()=>(0, _calendarOffJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarOff", ()=>(0, _calendarOffJsDefault.default));
parcelHelpers.export(exports, "CalendarPlus2", ()=>(0, _calendarPlus2JsDefault.default));
parcelHelpers.export(exports, "CalendarPlus2Icon", ()=>(0, _calendarPlus2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarPlus2", ()=>(0, _calendarPlus2JsDefault.default));
parcelHelpers.export(exports, "CalendarPlus", ()=>(0, _calendarPlusJsDefault.default));
parcelHelpers.export(exports, "CalendarPlusIcon", ()=>(0, _calendarPlusJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarPlus", ()=>(0, _calendarPlusJsDefault.default));
parcelHelpers.export(exports, "CalendarRange", ()=>(0, _calendarRangeJsDefault.default));
parcelHelpers.export(exports, "CalendarRangeIcon", ()=>(0, _calendarRangeJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarRange", ()=>(0, _calendarRangeJsDefault.default));
parcelHelpers.export(exports, "CalendarSearch", ()=>(0, _calendarSearchJsDefault.default));
parcelHelpers.export(exports, "CalendarSearchIcon", ()=>(0, _calendarSearchJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarSearch", ()=>(0, _calendarSearchJsDefault.default));
parcelHelpers.export(exports, "CalendarX2", ()=>(0, _calendarX2JsDefault.default));
parcelHelpers.export(exports, "CalendarX2Icon", ()=>(0, _calendarX2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarX2", ()=>(0, _calendarX2JsDefault.default));
parcelHelpers.export(exports, "CalendarSync", ()=>(0, _calendarSyncJsDefault.default));
parcelHelpers.export(exports, "CalendarSyncIcon", ()=>(0, _calendarSyncJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarSync", ()=>(0, _calendarSyncJsDefault.default));
parcelHelpers.export(exports, "CalendarX", ()=>(0, _calendarXJsDefault.default));
parcelHelpers.export(exports, "CalendarXIcon", ()=>(0, _calendarXJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarX", ()=>(0, _calendarXJsDefault.default));
parcelHelpers.export(exports, "Calendar", ()=>(0, _calendarJsDefault.default));
parcelHelpers.export(exports, "CalendarIcon", ()=>(0, _calendarJsDefault.default));
parcelHelpers.export(exports, "LucideCalendar", ()=>(0, _calendarJsDefault.default));
parcelHelpers.export(exports, "CameraOff", ()=>(0, _cameraOffJsDefault.default));
parcelHelpers.export(exports, "CameraOffIcon", ()=>(0, _cameraOffJsDefault.default));
parcelHelpers.export(exports, "LucideCameraOff", ()=>(0, _cameraOffJsDefault.default));
parcelHelpers.export(exports, "Camera", ()=>(0, _cameraJsDefault.default));
parcelHelpers.export(exports, "CameraIcon", ()=>(0, _cameraJsDefault.default));
parcelHelpers.export(exports, "LucideCamera", ()=>(0, _cameraJsDefault.default));
parcelHelpers.export(exports, "CandyCane", ()=>(0, _candyCaneJsDefault.default));
parcelHelpers.export(exports, "CandyCaneIcon", ()=>(0, _candyCaneJsDefault.default));
parcelHelpers.export(exports, "LucideCandyCane", ()=>(0, _candyCaneJsDefault.default));
parcelHelpers.export(exports, "CandyOff", ()=>(0, _candyOffJsDefault.default));
parcelHelpers.export(exports, "CandyOffIcon", ()=>(0, _candyOffJsDefault.default));
parcelHelpers.export(exports, "LucideCandyOff", ()=>(0, _candyOffJsDefault.default));
parcelHelpers.export(exports, "Candy", ()=>(0, _candyJsDefault.default));
parcelHelpers.export(exports, "CandyIcon", ()=>(0, _candyJsDefault.default));
parcelHelpers.export(exports, "LucideCandy", ()=>(0, _candyJsDefault.default));
parcelHelpers.export(exports, "Cannabis", ()=>(0, _cannabisJsDefault.default));
parcelHelpers.export(exports, "CannabisIcon", ()=>(0, _cannabisJsDefault.default));
parcelHelpers.export(exports, "LucideCannabis", ()=>(0, _cannabisJsDefault.default));
parcelHelpers.export(exports, "CaptionsOff", ()=>(0, _captionsOffJsDefault.default));
parcelHelpers.export(exports, "CaptionsOffIcon", ()=>(0, _captionsOffJsDefault.default));
parcelHelpers.export(exports, "LucideCaptionsOff", ()=>(0, _captionsOffJsDefault.default));
parcelHelpers.export(exports, "CarFront", ()=>(0, _carFrontJsDefault.default));
parcelHelpers.export(exports, "CarFrontIcon", ()=>(0, _carFrontJsDefault.default));
parcelHelpers.export(exports, "LucideCarFront", ()=>(0, _carFrontJsDefault.default));
parcelHelpers.export(exports, "CarTaxiFront", ()=>(0, _carTaxiFrontJsDefault.default));
parcelHelpers.export(exports, "CarTaxiFrontIcon", ()=>(0, _carTaxiFrontJsDefault.default));
parcelHelpers.export(exports, "LucideCarTaxiFront", ()=>(0, _carTaxiFrontJsDefault.default));
parcelHelpers.export(exports, "Car", ()=>(0, _carJsDefault.default));
parcelHelpers.export(exports, "CarIcon", ()=>(0, _carJsDefault.default));
parcelHelpers.export(exports, "LucideCar", ()=>(0, _carJsDefault.default));
parcelHelpers.export(exports, "Caravan", ()=>(0, _caravanJsDefault.default));
parcelHelpers.export(exports, "CaravanIcon", ()=>(0, _caravanJsDefault.default));
parcelHelpers.export(exports, "LucideCaravan", ()=>(0, _caravanJsDefault.default));
parcelHelpers.export(exports, "CardSim", ()=>(0, _cardSimJsDefault.default));
parcelHelpers.export(exports, "CardSimIcon", ()=>(0, _cardSimJsDefault.default));
parcelHelpers.export(exports, "LucideCardSim", ()=>(0, _cardSimJsDefault.default));
parcelHelpers.export(exports, "Carrot", ()=>(0, _carrotJsDefault.default));
parcelHelpers.export(exports, "CarrotIcon", ()=>(0, _carrotJsDefault.default));
parcelHelpers.export(exports, "LucideCarrot", ()=>(0, _carrotJsDefault.default));
parcelHelpers.export(exports, "CaseLower", ()=>(0, _caseLowerJsDefault.default));
parcelHelpers.export(exports, "CaseLowerIcon", ()=>(0, _caseLowerJsDefault.default));
parcelHelpers.export(exports, "LucideCaseLower", ()=>(0, _caseLowerJsDefault.default));
parcelHelpers.export(exports, "CaseSensitive", ()=>(0, _caseSensitiveJsDefault.default));
parcelHelpers.export(exports, "CaseSensitiveIcon", ()=>(0, _caseSensitiveJsDefault.default));
parcelHelpers.export(exports, "LucideCaseSensitive", ()=>(0, _caseSensitiveJsDefault.default));
parcelHelpers.export(exports, "CaseUpper", ()=>(0, _caseUpperJsDefault.default));
parcelHelpers.export(exports, "CaseUpperIcon", ()=>(0, _caseUpperJsDefault.default));
parcelHelpers.export(exports, "LucideCaseUpper", ()=>(0, _caseUpperJsDefault.default));
parcelHelpers.export(exports, "CassetteTape", ()=>(0, _cassetteTapeJsDefault.default));
parcelHelpers.export(exports, "CassetteTapeIcon", ()=>(0, _cassetteTapeJsDefault.default));
parcelHelpers.export(exports, "LucideCassetteTape", ()=>(0, _cassetteTapeJsDefault.default));
parcelHelpers.export(exports, "Cast", ()=>(0, _castJsDefault.default));
parcelHelpers.export(exports, "CastIcon", ()=>(0, _castJsDefault.default));
parcelHelpers.export(exports, "LucideCast", ()=>(0, _castJsDefault.default));
parcelHelpers.export(exports, "Castle", ()=>(0, _castleJsDefault.default));
parcelHelpers.export(exports, "CastleIcon", ()=>(0, _castleJsDefault.default));
parcelHelpers.export(exports, "LucideCastle", ()=>(0, _castleJsDefault.default));
parcelHelpers.export(exports, "Cat", ()=>(0, _catJsDefault.default));
parcelHelpers.export(exports, "CatIcon", ()=>(0, _catJsDefault.default));
parcelHelpers.export(exports, "LucideCat", ()=>(0, _catJsDefault.default));
parcelHelpers.export(exports, "Cctv", ()=>(0, _cctvJsDefault.default));
parcelHelpers.export(exports, "CctvIcon", ()=>(0, _cctvJsDefault.default));
parcelHelpers.export(exports, "LucideCctv", ()=>(0, _cctvJsDefault.default));
parcelHelpers.export(exports, "ChartBarDecreasing", ()=>(0, _chartBarDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarDecreasingIcon", ()=>(0, _chartBarDecreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarDecreasing", ()=>(0, _chartBarDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarIncreasing", ()=>(0, _chartBarIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarIncreasingIcon", ()=>(0, _chartBarIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarIncreasing", ()=>(0, _chartBarIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarStacked", ()=>(0, _chartBarStackedJsDefault.default));
parcelHelpers.export(exports, "ChartBarStackedIcon", ()=>(0, _chartBarStackedJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarStacked", ()=>(0, _chartBarStackedJsDefault.default));
parcelHelpers.export(exports, "ChartColumnDecreasing", ()=>(0, _chartColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnDecreasingIcon", ()=>(0, _chartColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnDecreasing", ()=>(0, _chartColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnStacked", ()=>(0, _chartColumnStackedJsDefault.default));
parcelHelpers.export(exports, "ChartColumnStackedIcon", ()=>(0, _chartColumnStackedJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnStacked", ()=>(0, _chartColumnStackedJsDefault.default));
parcelHelpers.export(exports, "ChartGantt", ()=>(0, _chartGanttJsDefault.default));
parcelHelpers.export(exports, "ChartGanttIcon", ()=>(0, _chartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideChartGantt", ()=>(0, _chartGanttJsDefault.default));
parcelHelpers.export(exports, "ChartNetwork", ()=>(0, _chartNetworkJsDefault.default));
parcelHelpers.export(exports, "ChartNetworkIcon", ()=>(0, _chartNetworkJsDefault.default));
parcelHelpers.export(exports, "LucideChartNetwork", ()=>(0, _chartNetworkJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnDecreasing", ()=>(0, _chartNoAxesColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnDecreasingIcon", ()=>(0, _chartNoAxesColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesColumnDecreasing", ()=>(0, _chartNoAxesColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesCombined", ()=>(0, _chartNoAxesCombinedJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesCombinedIcon", ()=>(0, _chartNoAxesCombinedJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesCombined", ()=>(0, _chartNoAxesCombinedJsDefault.default));
parcelHelpers.export(exports, "ChartSpline", ()=>(0, _chartSplineJsDefault.default));
parcelHelpers.export(exports, "ChartSplineIcon", ()=>(0, _chartSplineJsDefault.default));
parcelHelpers.export(exports, "LucideChartSpline", ()=>(0, _chartSplineJsDefault.default));
parcelHelpers.export(exports, "CheckCheck", ()=>(0, _checkCheckJsDefault.default));
parcelHelpers.export(exports, "CheckCheckIcon", ()=>(0, _checkCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCheckCheck", ()=>(0, _checkCheckJsDefault.default));
parcelHelpers.export(exports, "Check", ()=>(0, _checkJsDefault.default));
parcelHelpers.export(exports, "CheckIcon", ()=>(0, _checkJsDefault.default));
parcelHelpers.export(exports, "LucideCheck", ()=>(0, _checkJsDefault.default));
parcelHelpers.export(exports, "CheckLine", ()=>(0, _checkLineJsDefault.default));
parcelHelpers.export(exports, "CheckLineIcon", ()=>(0, _checkLineJsDefault.default));
parcelHelpers.export(exports, "LucideCheckLine", ()=>(0, _checkLineJsDefault.default));
parcelHelpers.export(exports, "ChefHat", ()=>(0, _chefHatJsDefault.default));
parcelHelpers.export(exports, "ChefHatIcon", ()=>(0, _chefHatJsDefault.default));
parcelHelpers.export(exports, "LucideChefHat", ()=>(0, _chefHatJsDefault.default));
parcelHelpers.export(exports, "Cherry", ()=>(0, _cherryJsDefault.default));
parcelHelpers.export(exports, "CherryIcon", ()=>(0, _cherryJsDefault.default));
parcelHelpers.export(exports, "LucideCherry", ()=>(0, _cherryJsDefault.default));
parcelHelpers.export(exports, "ChevronDown", ()=>(0, _chevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronDownIcon", ()=>(0, _chevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronDown", ()=>(0, _chevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronFirst", ()=>(0, _chevronFirstJsDefault.default));
parcelHelpers.export(exports, "ChevronFirstIcon", ()=>(0, _chevronFirstJsDefault.default));
parcelHelpers.export(exports, "LucideChevronFirst", ()=>(0, _chevronFirstJsDefault.default));
parcelHelpers.export(exports, "ChevronLast", ()=>(0, _chevronLastJsDefault.default));
parcelHelpers.export(exports, "ChevronLastIcon", ()=>(0, _chevronLastJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLast", ()=>(0, _chevronLastJsDefault.default));
parcelHelpers.export(exports, "ChevronLeft", ()=>(0, _chevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftIcon", ()=>(0, _chevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLeft", ()=>(0, _chevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronRight", ()=>(0, _chevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronRightIcon", ()=>(0, _chevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronRight", ()=>(0, _chevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronUp", ()=>(0, _chevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronUpIcon", ()=>(0, _chevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronUp", ()=>(0, _chevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsDownUp", ()=>(0, _chevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsDownUpIcon", ()=>(0, _chevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsDownUp", ()=>(0, _chevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsDown", ()=>(0, _chevronsDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsDownIcon", ()=>(0, _chevronsDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsDown", ()=>(0, _chevronsDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRightEllipsis", ()=>(0, _chevronsLeftRightEllipsisJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRightEllipsisIcon", ()=>(0, _chevronsLeftRightEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsLeftRightEllipsis", ()=>(0, _chevronsLeftRightEllipsisJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRight", ()=>(0, _chevronsLeftRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRightIcon", ()=>(0, _chevronsLeftRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsLeftRight", ()=>(0, _chevronsLeftRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeft", ()=>(0, _chevronsLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftIcon", ()=>(0, _chevronsLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsLeft", ()=>(0, _chevronsLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsRightLeft", ()=>(0, _chevronsRightLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsRightLeftIcon", ()=>(0, _chevronsRightLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsRightLeft", ()=>(0, _chevronsRightLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsRight", ()=>(0, _chevronsRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsRightIcon", ()=>(0, _chevronsRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsRight", ()=>(0, _chevronsRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsUpDown", ()=>(0, _chevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsUpDownIcon", ()=>(0, _chevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsUpDown", ()=>(0, _chevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsUp", ()=>(0, _chevronsUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsUpIcon", ()=>(0, _chevronsUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsUp", ()=>(0, _chevronsUpJsDefault.default));
parcelHelpers.export(exports, "Chrome", ()=>(0, _chromeJsDefault.default));
parcelHelpers.export(exports, "ChromeIcon", ()=>(0, _chromeJsDefault.default));
parcelHelpers.export(exports, "LucideChrome", ()=>(0, _chromeJsDefault.default));
parcelHelpers.export(exports, "Church", ()=>(0, _churchJsDefault.default));
parcelHelpers.export(exports, "ChurchIcon", ()=>(0, _churchJsDefault.default));
parcelHelpers.export(exports, "LucideChurch", ()=>(0, _churchJsDefault.default));
parcelHelpers.export(exports, "CigaretteOff", ()=>(0, _cigaretteOffJsDefault.default));
parcelHelpers.export(exports, "CigaretteOffIcon", ()=>(0, _cigaretteOffJsDefault.default));
parcelHelpers.export(exports, "LucideCigaretteOff", ()=>(0, _cigaretteOffJsDefault.default));
parcelHelpers.export(exports, "Cigarette", ()=>(0, _cigaretteJsDefault.default));
parcelHelpers.export(exports, "CigaretteIcon", ()=>(0, _cigaretteJsDefault.default));
parcelHelpers.export(exports, "LucideCigarette", ()=>(0, _cigaretteJsDefault.default));
parcelHelpers.export(exports, "CircleDashed", ()=>(0, _circleDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDashedIcon", ()=>(0, _circleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDashed", ()=>(0, _circleDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDollarSign", ()=>(0, _circleDollarSignJsDefault.default));
parcelHelpers.export(exports, "CircleDollarSignIcon", ()=>(0, _circleDollarSignJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDollarSign", ()=>(0, _circleDollarSignJsDefault.default));
parcelHelpers.export(exports, "CircleDotDashed", ()=>(0, _circleDotDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDotDashedIcon", ()=>(0, _circleDotDashedJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDotDashed", ()=>(0, _circleDotDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDot", ()=>(0, _circleDotJsDefault.default));
parcelHelpers.export(exports, "CircleDotIcon", ()=>(0, _circleDotJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDot", ()=>(0, _circleDotJsDefault.default));
parcelHelpers.export(exports, "CircleEllipsis", ()=>(0, _circleEllipsisJsDefault.default));
parcelHelpers.export(exports, "CircleEllipsisIcon", ()=>(0, _circleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideCircleEllipsis", ()=>(0, _circleEllipsisJsDefault.default));
parcelHelpers.export(exports, "CircleEqual", ()=>(0, _circleEqualJsDefault.default));
parcelHelpers.export(exports, "CircleEqualIcon", ()=>(0, _circleEqualJsDefault.default));
parcelHelpers.export(exports, "LucideCircleEqual", ()=>(0, _circleEqualJsDefault.default));
parcelHelpers.export(exports, "CircleFadingPlus", ()=>(0, _circleFadingPlusJsDefault.default));
parcelHelpers.export(exports, "CircleFadingPlusIcon", ()=>(0, _circleFadingPlusJsDefault.default));
parcelHelpers.export(exports, "LucideCircleFadingPlus", ()=>(0, _circleFadingPlusJsDefault.default));
parcelHelpers.export(exports, "CircleFadingArrowUp", ()=>(0, _circleFadingArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleFadingArrowUpIcon", ()=>(0, _circleFadingArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleFadingArrowUp", ()=>(0, _circleFadingArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleOff", ()=>(0, _circleOffJsDefault.default));
parcelHelpers.export(exports, "CircleOffIcon", ()=>(0, _circleOffJsDefault.default));
parcelHelpers.export(exports, "LucideCircleOff", ()=>(0, _circleOffJsDefault.default));
parcelHelpers.export(exports, "CirclePoundSterling", ()=>(0, _circlePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "CirclePoundSterlingIcon", ()=>(0, _circlePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePoundSterling", ()=>(0, _circlePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "CircleSlash", ()=>(0, _circleSlashJsDefault.default));
parcelHelpers.export(exports, "CircleSlashIcon", ()=>(0, _circleSlashJsDefault.default));
parcelHelpers.export(exports, "LucideCircleSlash", ()=>(0, _circleSlashJsDefault.default));
parcelHelpers.export(exports, "CircleSmall", ()=>(0, _circleSmallJsDefault.default));
parcelHelpers.export(exports, "CircleSmallIcon", ()=>(0, _circleSmallJsDefault.default));
parcelHelpers.export(exports, "LucideCircleSmall", ()=>(0, _circleSmallJsDefault.default));
parcelHelpers.export(exports, "Circle", ()=>(0, _circleJsDefault.default));
parcelHelpers.export(exports, "CircleIcon", ()=>(0, _circleJsDefault.default));
parcelHelpers.export(exports, "LucideCircle", ()=>(0, _circleJsDefault.default));
parcelHelpers.export(exports, "CircuitBoard", ()=>(0, _circuitBoardJsDefault.default));
parcelHelpers.export(exports, "CircuitBoardIcon", ()=>(0, _circuitBoardJsDefault.default));
parcelHelpers.export(exports, "LucideCircuitBoard", ()=>(0, _circuitBoardJsDefault.default));
parcelHelpers.export(exports, "Citrus", ()=>(0, _citrusJsDefault.default));
parcelHelpers.export(exports, "CitrusIcon", ()=>(0, _citrusJsDefault.default));
parcelHelpers.export(exports, "LucideCitrus", ()=>(0, _citrusJsDefault.default));
parcelHelpers.export(exports, "Clapperboard", ()=>(0, _clapperboardJsDefault.default));
parcelHelpers.export(exports, "ClapperboardIcon", ()=>(0, _clapperboardJsDefault.default));
parcelHelpers.export(exports, "LucideClapperboard", ()=>(0, _clapperboardJsDefault.default));
parcelHelpers.export(exports, "ClipboardCheck", ()=>(0, _clipboardCheckJsDefault.default));
parcelHelpers.export(exports, "ClipboardCheckIcon", ()=>(0, _clipboardCheckJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardCheck", ()=>(0, _clipboardCheckJsDefault.default));
parcelHelpers.export(exports, "ClipboardCopy", ()=>(0, _clipboardCopyJsDefault.default));
parcelHelpers.export(exports, "ClipboardCopyIcon", ()=>(0, _clipboardCopyJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardCopy", ()=>(0, _clipboardCopyJsDefault.default));
parcelHelpers.export(exports, "ClipboardList", ()=>(0, _clipboardListJsDefault.default));
parcelHelpers.export(exports, "ClipboardListIcon", ()=>(0, _clipboardListJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardList", ()=>(0, _clipboardListJsDefault.default));
parcelHelpers.export(exports, "ClipboardMinus", ()=>(0, _clipboardMinusJsDefault.default));
parcelHelpers.export(exports, "ClipboardMinusIcon", ()=>(0, _clipboardMinusJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardMinus", ()=>(0, _clipboardMinusJsDefault.default));
parcelHelpers.export(exports, "ClipboardPaste", ()=>(0, _clipboardPasteJsDefault.default));
parcelHelpers.export(exports, "ClipboardPasteIcon", ()=>(0, _clipboardPasteJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPaste", ()=>(0, _clipboardPasteJsDefault.default));
parcelHelpers.export(exports, "ClipboardPlus", ()=>(0, _clipboardPlusJsDefault.default));
parcelHelpers.export(exports, "ClipboardPlusIcon", ()=>(0, _clipboardPlusJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPlus", ()=>(0, _clipboardPlusJsDefault.default));
parcelHelpers.export(exports, "ClipboardType", ()=>(0, _clipboardTypeJsDefault.default));
parcelHelpers.export(exports, "ClipboardTypeIcon", ()=>(0, _clipboardTypeJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardType", ()=>(0, _clipboardTypeJsDefault.default));
parcelHelpers.export(exports, "ClipboardX", ()=>(0, _clipboardXJsDefault.default));
parcelHelpers.export(exports, "ClipboardXIcon", ()=>(0, _clipboardXJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardX", ()=>(0, _clipboardXJsDefault.default));
parcelHelpers.export(exports, "Clipboard", ()=>(0, _clipboardJsDefault.default));
parcelHelpers.export(exports, "ClipboardIcon", ()=>(0, _clipboardJsDefault.default));
parcelHelpers.export(exports, "LucideClipboard", ()=>(0, _clipboardJsDefault.default));
parcelHelpers.export(exports, "Clock1", ()=>(0, _clock1JsDefault.default));
parcelHelpers.export(exports, "Clock1Icon", ()=>(0, _clock1JsDefault.default));
parcelHelpers.export(exports, "LucideClock1", ()=>(0, _clock1JsDefault.default));
parcelHelpers.export(exports, "Clock10", ()=>(0, _clock10JsDefault.default));
parcelHelpers.export(exports, "Clock10Icon", ()=>(0, _clock10JsDefault.default));
parcelHelpers.export(exports, "LucideClock10", ()=>(0, _clock10JsDefault.default));
parcelHelpers.export(exports, "Clock11", ()=>(0, _clock11JsDefault.default));
parcelHelpers.export(exports, "Clock11Icon", ()=>(0, _clock11JsDefault.default));
parcelHelpers.export(exports, "LucideClock11", ()=>(0, _clock11JsDefault.default));
parcelHelpers.export(exports, "Clock12", ()=>(0, _clock12JsDefault.default));
parcelHelpers.export(exports, "Clock12Icon", ()=>(0, _clock12JsDefault.default));
parcelHelpers.export(exports, "LucideClock12", ()=>(0, _clock12JsDefault.default));
parcelHelpers.export(exports, "Clock2", ()=>(0, _clock2JsDefault.default));
parcelHelpers.export(exports, "Clock2Icon", ()=>(0, _clock2JsDefault.default));
parcelHelpers.export(exports, "LucideClock2", ()=>(0, _clock2JsDefault.default));
parcelHelpers.export(exports, "Clock4", ()=>(0, _clock4JsDefault.default));
parcelHelpers.export(exports, "Clock4Icon", ()=>(0, _clock4JsDefault.default));
parcelHelpers.export(exports, "LucideClock4", ()=>(0, _clock4JsDefault.default));
parcelHelpers.export(exports, "Clock5", ()=>(0, _clock5JsDefault.default));
parcelHelpers.export(exports, "Clock5Icon", ()=>(0, _clock5JsDefault.default));
parcelHelpers.export(exports, "LucideClock5", ()=>(0, _clock5JsDefault.default));
parcelHelpers.export(exports, "Clock3", ()=>(0, _clock3JsDefault.default));
parcelHelpers.export(exports, "Clock3Icon", ()=>(0, _clock3JsDefault.default));
parcelHelpers.export(exports, "LucideClock3", ()=>(0, _clock3JsDefault.default));
parcelHelpers.export(exports, "Clock6", ()=>(0, _clock6JsDefault.default));
parcelHelpers.export(exports, "Clock6Icon", ()=>(0, _clock6JsDefault.default));
parcelHelpers.export(exports, "LucideClock6", ()=>(0, _clock6JsDefault.default));
parcelHelpers.export(exports, "Clock7", ()=>(0, _clock7JsDefault.default));
parcelHelpers.export(exports, "Clock7Icon", ()=>(0, _clock7JsDefault.default));
parcelHelpers.export(exports, "LucideClock7", ()=>(0, _clock7JsDefault.default));
parcelHelpers.export(exports, "Clock8", ()=>(0, _clock8JsDefault.default));
parcelHelpers.export(exports, "Clock8Icon", ()=>(0, _clock8JsDefault.default));
parcelHelpers.export(exports, "LucideClock8", ()=>(0, _clock8JsDefault.default));
parcelHelpers.export(exports, "Clock9", ()=>(0, _clock9JsDefault.default));
parcelHelpers.export(exports, "Clock9Icon", ()=>(0, _clock9JsDefault.default));
parcelHelpers.export(exports, "LucideClock9", ()=>(0, _clock9JsDefault.default));
parcelHelpers.export(exports, "ClockAlert", ()=>(0, _clockAlertJsDefault.default));
parcelHelpers.export(exports, "ClockAlertIcon", ()=>(0, _clockAlertJsDefault.default));
parcelHelpers.export(exports, "LucideClockAlert", ()=>(0, _clockAlertJsDefault.default));
parcelHelpers.export(exports, "ClockArrowDown", ()=>(0, _clockArrowDownJsDefault.default));
parcelHelpers.export(exports, "ClockArrowDownIcon", ()=>(0, _clockArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideClockArrowDown", ()=>(0, _clockArrowDownJsDefault.default));
parcelHelpers.export(exports, "ClockArrowUp", ()=>(0, _clockArrowUpJsDefault.default));
parcelHelpers.export(exports, "ClockArrowUpIcon", ()=>(0, _clockArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideClockArrowUp", ()=>(0, _clockArrowUpJsDefault.default));
parcelHelpers.export(exports, "ClockFading", ()=>(0, _clockFadingJsDefault.default));
parcelHelpers.export(exports, "ClockFadingIcon", ()=>(0, _clockFadingJsDefault.default));
parcelHelpers.export(exports, "LucideClockFading", ()=>(0, _clockFadingJsDefault.default));
parcelHelpers.export(exports, "ClockPlus", ()=>(0, _clockPlusJsDefault.default));
parcelHelpers.export(exports, "ClockPlusIcon", ()=>(0, _clockPlusJsDefault.default));
parcelHelpers.export(exports, "LucideClockPlus", ()=>(0, _clockPlusJsDefault.default));
parcelHelpers.export(exports, "Clock", ()=>(0, _clockJsDefault.default));
parcelHelpers.export(exports, "ClockIcon", ()=>(0, _clockJsDefault.default));
parcelHelpers.export(exports, "LucideClock", ()=>(0, _clockJsDefault.default));
parcelHelpers.export(exports, "CloudCheck", ()=>(0, _cloudCheckJsDefault.default));
parcelHelpers.export(exports, "CloudCheckIcon", ()=>(0, _cloudCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCloudCheck", ()=>(0, _cloudCheckJsDefault.default));
parcelHelpers.export(exports, "CloudAlert", ()=>(0, _cloudAlertJsDefault.default));
parcelHelpers.export(exports, "CloudAlertIcon", ()=>(0, _cloudAlertJsDefault.default));
parcelHelpers.export(exports, "LucideCloudAlert", ()=>(0, _cloudAlertJsDefault.default));
parcelHelpers.export(exports, "CloudCog", ()=>(0, _cloudCogJsDefault.default));
parcelHelpers.export(exports, "CloudCogIcon", ()=>(0, _cloudCogJsDefault.default));
parcelHelpers.export(exports, "LucideCloudCog", ()=>(0, _cloudCogJsDefault.default));
parcelHelpers.export(exports, "CloudDrizzle", ()=>(0, _cloudDrizzleJsDefault.default));
parcelHelpers.export(exports, "CloudDrizzleIcon", ()=>(0, _cloudDrizzleJsDefault.default));
parcelHelpers.export(exports, "LucideCloudDrizzle", ()=>(0, _cloudDrizzleJsDefault.default));
parcelHelpers.export(exports, "CloudFog", ()=>(0, _cloudFogJsDefault.default));
parcelHelpers.export(exports, "CloudFogIcon", ()=>(0, _cloudFogJsDefault.default));
parcelHelpers.export(exports, "LucideCloudFog", ()=>(0, _cloudFogJsDefault.default));
parcelHelpers.export(exports, "CloudHail", ()=>(0, _cloudHailJsDefault.default));
parcelHelpers.export(exports, "CloudHailIcon", ()=>(0, _cloudHailJsDefault.default));
parcelHelpers.export(exports, "LucideCloudHail", ()=>(0, _cloudHailJsDefault.default));
parcelHelpers.export(exports, "CloudLightning", ()=>(0, _cloudLightningJsDefault.default));
parcelHelpers.export(exports, "CloudLightningIcon", ()=>(0, _cloudLightningJsDefault.default));
parcelHelpers.export(exports, "LucideCloudLightning", ()=>(0, _cloudLightningJsDefault.default));
parcelHelpers.export(exports, "CloudMoonRain", ()=>(0, _cloudMoonRainJsDefault.default));
parcelHelpers.export(exports, "CloudMoonRainIcon", ()=>(0, _cloudMoonRainJsDefault.default));
parcelHelpers.export(exports, "LucideCloudMoonRain", ()=>(0, _cloudMoonRainJsDefault.default));
parcelHelpers.export(exports, "CloudOff", ()=>(0, _cloudOffJsDefault.default));
parcelHelpers.export(exports, "CloudOffIcon", ()=>(0, _cloudOffJsDefault.default));
parcelHelpers.export(exports, "LucideCloudOff", ()=>(0, _cloudOffJsDefault.default));
parcelHelpers.export(exports, "CloudMoon", ()=>(0, _cloudMoonJsDefault.default));
parcelHelpers.export(exports, "CloudMoonIcon", ()=>(0, _cloudMoonJsDefault.default));
parcelHelpers.export(exports, "LucideCloudMoon", ()=>(0, _cloudMoonJsDefault.default));
parcelHelpers.export(exports, "CloudRainWind", ()=>(0, _cloudRainWindJsDefault.default));
parcelHelpers.export(exports, "CloudRainWindIcon", ()=>(0, _cloudRainWindJsDefault.default));
parcelHelpers.export(exports, "LucideCloudRainWind", ()=>(0, _cloudRainWindJsDefault.default));
parcelHelpers.export(exports, "CloudRain", ()=>(0, _cloudRainJsDefault.default));
parcelHelpers.export(exports, "CloudRainIcon", ()=>(0, _cloudRainJsDefault.default));
parcelHelpers.export(exports, "LucideCloudRain", ()=>(0, _cloudRainJsDefault.default));
parcelHelpers.export(exports, "CloudSnow", ()=>(0, _cloudSnowJsDefault.default));
parcelHelpers.export(exports, "CloudSnowIcon", ()=>(0, _cloudSnowJsDefault.default));
parcelHelpers.export(exports, "LucideCloudSnow", ()=>(0, _cloudSnowJsDefault.default));
parcelHelpers.export(exports, "CloudSunRain", ()=>(0, _cloudSunRainJsDefault.default));
parcelHelpers.export(exports, "CloudSunRainIcon", ()=>(0, _cloudSunRainJsDefault.default));
parcelHelpers.export(exports, "LucideCloudSunRain", ()=>(0, _cloudSunRainJsDefault.default));
parcelHelpers.export(exports, "CloudSun", ()=>(0, _cloudSunJsDefault.default));
parcelHelpers.export(exports, "CloudSunIcon", ()=>(0, _cloudSunJsDefault.default));
parcelHelpers.export(exports, "LucideCloudSun", ()=>(0, _cloudSunJsDefault.default));
parcelHelpers.export(exports, "Cloud", ()=>(0, _cloudJsDefault.default));
parcelHelpers.export(exports, "CloudIcon", ()=>(0, _cloudJsDefault.default));
parcelHelpers.export(exports, "LucideCloud", ()=>(0, _cloudJsDefault.default));
parcelHelpers.export(exports, "Cloudy", ()=>(0, _cloudyJsDefault.default));
parcelHelpers.export(exports, "CloudyIcon", ()=>(0, _cloudyJsDefault.default));
parcelHelpers.export(exports, "LucideCloudy", ()=>(0, _cloudyJsDefault.default));
parcelHelpers.export(exports, "Club", ()=>(0, _clubJsDefault.default));
parcelHelpers.export(exports, "ClubIcon", ()=>(0, _clubJsDefault.default));
parcelHelpers.export(exports, "LucideClub", ()=>(0, _clubJsDefault.default));
parcelHelpers.export(exports, "Clover", ()=>(0, _cloverJsDefault.default));
parcelHelpers.export(exports, "CloverIcon", ()=>(0, _cloverJsDefault.default));
parcelHelpers.export(exports, "LucideClover", ()=>(0, _cloverJsDefault.default));
parcelHelpers.export(exports, "Code", ()=>(0, _codeJsDefault.default));
parcelHelpers.export(exports, "CodeIcon", ()=>(0, _codeJsDefault.default));
parcelHelpers.export(exports, "LucideCode", ()=>(0, _codeJsDefault.default));
parcelHelpers.export(exports, "Codepen", ()=>(0, _codepenJsDefault.default));
parcelHelpers.export(exports, "CodepenIcon", ()=>(0, _codepenJsDefault.default));
parcelHelpers.export(exports, "LucideCodepen", ()=>(0, _codepenJsDefault.default));
parcelHelpers.export(exports, "Coffee", ()=>(0, _coffeeJsDefault.default));
parcelHelpers.export(exports, "CoffeeIcon", ()=>(0, _coffeeJsDefault.default));
parcelHelpers.export(exports, "LucideCoffee", ()=>(0, _coffeeJsDefault.default));
parcelHelpers.export(exports, "Codesandbox", ()=>(0, _codesandboxJsDefault.default));
parcelHelpers.export(exports, "CodesandboxIcon", ()=>(0, _codesandboxJsDefault.default));
parcelHelpers.export(exports, "LucideCodesandbox", ()=>(0, _codesandboxJsDefault.default));
parcelHelpers.export(exports, "Cog", ()=>(0, _cogJsDefault.default));
parcelHelpers.export(exports, "CogIcon", ()=>(0, _cogJsDefault.default));
parcelHelpers.export(exports, "LucideCog", ()=>(0, _cogJsDefault.default));
parcelHelpers.export(exports, "Coins", ()=>(0, _coinsJsDefault.default));
parcelHelpers.export(exports, "CoinsIcon", ()=>(0, _coinsJsDefault.default));
parcelHelpers.export(exports, "LucideCoins", ()=>(0, _coinsJsDefault.default));
parcelHelpers.export(exports, "Columns4", ()=>(0, _columns4JsDefault.default));
parcelHelpers.export(exports, "Columns4Icon", ()=>(0, _columns4JsDefault.default));
parcelHelpers.export(exports, "LucideColumns4", ()=>(0, _columns4JsDefault.default));
parcelHelpers.export(exports, "Combine", ()=>(0, _combineJsDefault.default));
parcelHelpers.export(exports, "CombineIcon", ()=>(0, _combineJsDefault.default));
parcelHelpers.export(exports, "LucideCombine", ()=>(0, _combineJsDefault.default));
parcelHelpers.export(exports, "Command", ()=>(0, _commandJsDefault.default));
parcelHelpers.export(exports, "CommandIcon", ()=>(0, _commandJsDefault.default));
parcelHelpers.export(exports, "LucideCommand", ()=>(0, _commandJsDefault.default));
parcelHelpers.export(exports, "Compass", ()=>(0, _compassJsDefault.default));
parcelHelpers.export(exports, "CompassIcon", ()=>(0, _compassJsDefault.default));
parcelHelpers.export(exports, "LucideCompass", ()=>(0, _compassJsDefault.default));
parcelHelpers.export(exports, "Component", ()=>(0, _componentJsDefault.default));
parcelHelpers.export(exports, "ComponentIcon", ()=>(0, _componentJsDefault.default));
parcelHelpers.export(exports, "LucideComponent", ()=>(0, _componentJsDefault.default));
parcelHelpers.export(exports, "Computer", ()=>(0, _computerJsDefault.default));
parcelHelpers.export(exports, "ComputerIcon", ()=>(0, _computerJsDefault.default));
parcelHelpers.export(exports, "LucideComputer", ()=>(0, _computerJsDefault.default));
parcelHelpers.export(exports, "ConciergeBell", ()=>(0, _conciergeBellJsDefault.default));
parcelHelpers.export(exports, "ConciergeBellIcon", ()=>(0, _conciergeBellJsDefault.default));
parcelHelpers.export(exports, "LucideConciergeBell", ()=>(0, _conciergeBellJsDefault.default));
parcelHelpers.export(exports, "Construction", ()=>(0, _constructionJsDefault.default));
parcelHelpers.export(exports, "ConstructionIcon", ()=>(0, _constructionJsDefault.default));
parcelHelpers.export(exports, "LucideConstruction", ()=>(0, _constructionJsDefault.default));
parcelHelpers.export(exports, "Cone", ()=>(0, _coneJsDefault.default));
parcelHelpers.export(exports, "ConeIcon", ()=>(0, _coneJsDefault.default));
parcelHelpers.export(exports, "LucideCone", ()=>(0, _coneJsDefault.default));
parcelHelpers.export(exports, "Container", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "ContainerIcon", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "LucideContainer", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "Contrast", ()=>(0, _contrastJsDefault.default));
parcelHelpers.export(exports, "ContrastIcon", ()=>(0, _contrastJsDefault.default));
parcelHelpers.export(exports, "LucideContrast", ()=>(0, _contrastJsDefault.default));
parcelHelpers.export(exports, "Contact", ()=>(0, _contactJsDefault.default));
parcelHelpers.export(exports, "ContactIcon", ()=>(0, _contactJsDefault.default));
parcelHelpers.export(exports, "LucideContact", ()=>(0, _contactJsDefault.default));
parcelHelpers.export(exports, "Cookie", ()=>(0, _cookieJsDefault.default));
parcelHelpers.export(exports, "CookieIcon", ()=>(0, _cookieJsDefault.default));
parcelHelpers.export(exports, "LucideCookie", ()=>(0, _cookieJsDefault.default));
parcelHelpers.export(exports, "CookingPot", ()=>(0, _cookingPotJsDefault.default));
parcelHelpers.export(exports, "CookingPotIcon", ()=>(0, _cookingPotJsDefault.default));
parcelHelpers.export(exports, "LucideCookingPot", ()=>(0, _cookingPotJsDefault.default));
parcelHelpers.export(exports, "CopyCheck", ()=>(0, _copyCheckJsDefault.default));
parcelHelpers.export(exports, "CopyCheckIcon", ()=>(0, _copyCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCopyCheck", ()=>(0, _copyCheckJsDefault.default));
parcelHelpers.export(exports, "CopyMinus", ()=>(0, _copyMinusJsDefault.default));
parcelHelpers.export(exports, "CopyMinusIcon", ()=>(0, _copyMinusJsDefault.default));
parcelHelpers.export(exports, "LucideCopyMinus", ()=>(0, _copyMinusJsDefault.default));
parcelHelpers.export(exports, "CopyPlus", ()=>(0, _copyPlusJsDefault.default));
parcelHelpers.export(exports, "CopyPlusIcon", ()=>(0, _copyPlusJsDefault.default));
parcelHelpers.export(exports, "LucideCopyPlus", ()=>(0, _copyPlusJsDefault.default));
parcelHelpers.export(exports, "CopySlash", ()=>(0, _copySlashJsDefault.default));
parcelHelpers.export(exports, "CopySlashIcon", ()=>(0, _copySlashJsDefault.default));
parcelHelpers.export(exports, "LucideCopySlash", ()=>(0, _copySlashJsDefault.default));
parcelHelpers.export(exports, "CopyX", ()=>(0, _copyXJsDefault.default));
parcelHelpers.export(exports, "CopyXIcon", ()=>(0, _copyXJsDefault.default));
parcelHelpers.export(exports, "LucideCopyX", ()=>(0, _copyXJsDefault.default));
parcelHelpers.export(exports, "Copy", ()=>(0, _copyJsDefault.default));
parcelHelpers.export(exports, "CopyIcon", ()=>(0, _copyJsDefault.default));
parcelHelpers.export(exports, "LucideCopy", ()=>(0, _copyJsDefault.default));
parcelHelpers.export(exports, "Copyleft", ()=>(0, _copyleftJsDefault.default));
parcelHelpers.export(exports, "CopyleftIcon", ()=>(0, _copyleftJsDefault.default));
parcelHelpers.export(exports, "LucideCopyleft", ()=>(0, _copyleftJsDefault.default));
parcelHelpers.export(exports, "Copyright", ()=>(0, _copyrightJsDefault.default));
parcelHelpers.export(exports, "CopyrightIcon", ()=>(0, _copyrightJsDefault.default));
parcelHelpers.export(exports, "LucideCopyright", ()=>(0, _copyrightJsDefault.default));
parcelHelpers.export(exports, "CornerDownLeft", ()=>(0, _cornerDownLeftJsDefault.default));
parcelHelpers.export(exports, "CornerDownLeftIcon", ()=>(0, _cornerDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCornerDownLeft", ()=>(0, _cornerDownLeftJsDefault.default));
parcelHelpers.export(exports, "CornerDownRight", ()=>(0, _cornerDownRightJsDefault.default));
parcelHelpers.export(exports, "CornerDownRightIcon", ()=>(0, _cornerDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideCornerDownRight", ()=>(0, _cornerDownRightJsDefault.default));
parcelHelpers.export(exports, "CornerLeftDown", ()=>(0, _cornerLeftDownJsDefault.default));
parcelHelpers.export(exports, "CornerLeftDownIcon", ()=>(0, _cornerLeftDownJsDefault.default));
parcelHelpers.export(exports, "LucideCornerLeftDown", ()=>(0, _cornerLeftDownJsDefault.default));
parcelHelpers.export(exports, "CornerLeftUp", ()=>(0, _cornerLeftUpJsDefault.default));
parcelHelpers.export(exports, "CornerLeftUpIcon", ()=>(0, _cornerLeftUpJsDefault.default));
parcelHelpers.export(exports, "LucideCornerLeftUp", ()=>(0, _cornerLeftUpJsDefault.default));
parcelHelpers.export(exports, "CornerRightDown", ()=>(0, _cornerRightDownJsDefault.default));
parcelHelpers.export(exports, "CornerRightDownIcon", ()=>(0, _cornerRightDownJsDefault.default));
parcelHelpers.export(exports, "LucideCornerRightDown", ()=>(0, _cornerRightDownJsDefault.default));
parcelHelpers.export(exports, "CornerRightUp", ()=>(0, _cornerRightUpJsDefault.default));
parcelHelpers.export(exports, "CornerRightUpIcon", ()=>(0, _cornerRightUpJsDefault.default));
parcelHelpers.export(exports, "LucideCornerRightUp", ()=>(0, _cornerRightUpJsDefault.default));
parcelHelpers.export(exports, "CornerUpLeft", ()=>(0, _cornerUpLeftJsDefault.default));
parcelHelpers.export(exports, "CornerUpLeftIcon", ()=>(0, _cornerUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCornerUpLeft", ()=>(0, _cornerUpLeftJsDefault.default));
parcelHelpers.export(exports, "CornerUpRight", ()=>(0, _cornerUpRightJsDefault.default));
parcelHelpers.export(exports, "CornerUpRightIcon", ()=>(0, _cornerUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideCornerUpRight", ()=>(0, _cornerUpRightJsDefault.default));
parcelHelpers.export(exports, "Cpu", ()=>(0, _cpuJsDefault.default));
parcelHelpers.export(exports, "CpuIcon", ()=>(0, _cpuJsDefault.default));
parcelHelpers.export(exports, "LucideCpu", ()=>(0, _cpuJsDefault.default));
parcelHelpers.export(exports, "CreditCard", ()=>(0, _creditCardJsDefault.default));
parcelHelpers.export(exports, "CreditCardIcon", ()=>(0, _creditCardJsDefault.default));
parcelHelpers.export(exports, "LucideCreditCard", ()=>(0, _creditCardJsDefault.default));
parcelHelpers.export(exports, "Croissant", ()=>(0, _croissantJsDefault.default));
parcelHelpers.export(exports, "CroissantIcon", ()=>(0, _croissantJsDefault.default));
parcelHelpers.export(exports, "LucideCroissant", ()=>(0, _croissantJsDefault.default));
parcelHelpers.export(exports, "CreativeCommons", ()=>(0, _creativeCommonsJsDefault.default));
parcelHelpers.export(exports, "CreativeCommonsIcon", ()=>(0, _creativeCommonsJsDefault.default));
parcelHelpers.export(exports, "LucideCreativeCommons", ()=>(0, _creativeCommonsJsDefault.default));
parcelHelpers.export(exports, "Crop", ()=>(0, _cropJsDefault.default));
parcelHelpers.export(exports, "CropIcon", ()=>(0, _cropJsDefault.default));
parcelHelpers.export(exports, "LucideCrop", ()=>(0, _cropJsDefault.default));
parcelHelpers.export(exports, "Cross", ()=>(0, _crossJsDefault.default));
parcelHelpers.export(exports, "CrossIcon", ()=>(0, _crossJsDefault.default));
parcelHelpers.export(exports, "LucideCross", ()=>(0, _crossJsDefault.default));
parcelHelpers.export(exports, "Crosshair", ()=>(0, _crosshairJsDefault.default));
parcelHelpers.export(exports, "CrosshairIcon", ()=>(0, _crosshairJsDefault.default));
parcelHelpers.export(exports, "LucideCrosshair", ()=>(0, _crosshairJsDefault.default));
parcelHelpers.export(exports, "Crown", ()=>(0, _crownJsDefault.default));
parcelHelpers.export(exports, "CrownIcon", ()=>(0, _crownJsDefault.default));
parcelHelpers.export(exports, "LucideCrown", ()=>(0, _crownJsDefault.default));
parcelHelpers.export(exports, "CupSoda", ()=>(0, _cupSodaJsDefault.default));
parcelHelpers.export(exports, "CupSodaIcon", ()=>(0, _cupSodaJsDefault.default));
parcelHelpers.export(exports, "LucideCupSoda", ()=>(0, _cupSodaJsDefault.default));
parcelHelpers.export(exports, "Cuboid", ()=>(0, _cuboidJsDefault.default));
parcelHelpers.export(exports, "CuboidIcon", ()=>(0, _cuboidJsDefault.default));
parcelHelpers.export(exports, "LucideCuboid", ()=>(0, _cuboidJsDefault.default));
parcelHelpers.export(exports, "Currency", ()=>(0, _currencyJsDefault.default));
parcelHelpers.export(exports, "CurrencyIcon", ()=>(0, _currencyJsDefault.default));
parcelHelpers.export(exports, "LucideCurrency", ()=>(0, _currencyJsDefault.default));
parcelHelpers.export(exports, "Cylinder", ()=>(0, _cylinderJsDefault.default));
parcelHelpers.export(exports, "CylinderIcon", ()=>(0, _cylinderJsDefault.default));
parcelHelpers.export(exports, "LucideCylinder", ()=>(0, _cylinderJsDefault.default));
parcelHelpers.export(exports, "Dam", ()=>(0, _damJsDefault.default));
parcelHelpers.export(exports, "DamIcon", ()=>(0, _damJsDefault.default));
parcelHelpers.export(exports, "LucideDam", ()=>(0, _damJsDefault.default));
parcelHelpers.export(exports, "DatabaseBackup", ()=>(0, _databaseBackupJsDefault.default));
parcelHelpers.export(exports, "DatabaseBackupIcon", ()=>(0, _databaseBackupJsDefault.default));
parcelHelpers.export(exports, "LucideDatabaseBackup", ()=>(0, _databaseBackupJsDefault.default));
parcelHelpers.export(exports, "Database", ()=>(0, _databaseJsDefault.default));
parcelHelpers.export(exports, "DatabaseIcon", ()=>(0, _databaseJsDefault.default));
parcelHelpers.export(exports, "LucideDatabase", ()=>(0, _databaseJsDefault.default));
parcelHelpers.export(exports, "DatabaseZap", ()=>(0, _databaseZapJsDefault.default));
parcelHelpers.export(exports, "DatabaseZapIcon", ()=>(0, _databaseZapJsDefault.default));
parcelHelpers.export(exports, "LucideDatabaseZap", ()=>(0, _databaseZapJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowRight", ()=>(0, _decimalsArrowRightJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowRightIcon", ()=>(0, _decimalsArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideDecimalsArrowRight", ()=>(0, _decimalsArrowRightJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowLeft", ()=>(0, _decimalsArrowLeftJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowLeftIcon", ()=>(0, _decimalsArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideDecimalsArrowLeft", ()=>(0, _decimalsArrowLeftJsDefault.default));
parcelHelpers.export(exports, "Delete", ()=>(0, _deleteJsDefault.default));
parcelHelpers.export(exports, "DeleteIcon", ()=>(0, _deleteJsDefault.default));
parcelHelpers.export(exports, "LucideDelete", ()=>(0, _deleteJsDefault.default));
parcelHelpers.export(exports, "Dessert", ()=>(0, _dessertJsDefault.default));
parcelHelpers.export(exports, "DessertIcon", ()=>(0, _dessertJsDefault.default));
parcelHelpers.export(exports, "LucideDessert", ()=>(0, _dessertJsDefault.default));
parcelHelpers.export(exports, "Diameter", ()=>(0, _diameterJsDefault.default));
parcelHelpers.export(exports, "DiameterIcon", ()=>(0, _diameterJsDefault.default));
parcelHelpers.export(exports, "LucideDiameter", ()=>(0, _diameterJsDefault.default));
parcelHelpers.export(exports, "DiamondMinus", ()=>(0, _diamondMinusJsDefault.default));
parcelHelpers.export(exports, "DiamondMinusIcon", ()=>(0, _diamondMinusJsDefault.default));
parcelHelpers.export(exports, "LucideDiamondMinus", ()=>(0, _diamondMinusJsDefault.default));
parcelHelpers.export(exports, "DiamondPlus", ()=>(0, _diamondPlusJsDefault.default));
parcelHelpers.export(exports, "DiamondPlusIcon", ()=>(0, _diamondPlusJsDefault.default));
parcelHelpers.export(exports, "LucideDiamondPlus", ()=>(0, _diamondPlusJsDefault.default));
parcelHelpers.export(exports, "Diamond", ()=>(0, _diamondJsDefault.default));
parcelHelpers.export(exports, "DiamondIcon", ()=>(0, _diamondJsDefault.default));
parcelHelpers.export(exports, "LucideDiamond", ()=>(0, _diamondJsDefault.default));
parcelHelpers.export(exports, "Dice1", ()=>(0, _dice1JsDefault.default));
parcelHelpers.export(exports, "Dice1Icon", ()=>(0, _dice1JsDefault.default));
parcelHelpers.export(exports, "LucideDice1", ()=>(0, _dice1JsDefault.default));
parcelHelpers.export(exports, "Dice3", ()=>(0, _dice3JsDefault.default));
parcelHelpers.export(exports, "Dice3Icon", ()=>(0, _dice3JsDefault.default));
parcelHelpers.export(exports, "LucideDice3", ()=>(0, _dice3JsDefault.default));
parcelHelpers.export(exports, "Dice4", ()=>(0, _dice4JsDefault.default));
parcelHelpers.export(exports, "Dice4Icon", ()=>(0, _dice4JsDefault.default));
parcelHelpers.export(exports, "LucideDice4", ()=>(0, _dice4JsDefault.default));
parcelHelpers.export(exports, "Dice2", ()=>(0, _dice2JsDefault.default));
parcelHelpers.export(exports, "Dice2Icon", ()=>(0, _dice2JsDefault.default));
parcelHelpers.export(exports, "LucideDice2", ()=>(0, _dice2JsDefault.default));
parcelHelpers.export(exports, "Dice5", ()=>(0, _dice5JsDefault.default));
parcelHelpers.export(exports, "Dice5Icon", ()=>(0, _dice5JsDefault.default));
parcelHelpers.export(exports, "LucideDice5", ()=>(0, _dice5JsDefault.default));
parcelHelpers.export(exports, "Dice6", ()=>(0, _dice6JsDefault.default));
parcelHelpers.export(exports, "Dice6Icon", ()=>(0, _dice6JsDefault.default));
parcelHelpers.export(exports, "LucideDice6", ()=>(0, _dice6JsDefault.default));
parcelHelpers.export(exports, "Dices", ()=>(0, _dicesJsDefault.default));
parcelHelpers.export(exports, "DicesIcon", ()=>(0, _dicesJsDefault.default));
parcelHelpers.export(exports, "LucideDices", ()=>(0, _dicesJsDefault.default));
parcelHelpers.export(exports, "Disc2", ()=>(0, _disc2JsDefault.default));
parcelHelpers.export(exports, "Disc2Icon", ()=>(0, _disc2JsDefault.default));
parcelHelpers.export(exports, "LucideDisc2", ()=>(0, _disc2JsDefault.default));
parcelHelpers.export(exports, "Diff", ()=>(0, _diffJsDefault.default));
parcelHelpers.export(exports, "DiffIcon", ()=>(0, _diffJsDefault.default));
parcelHelpers.export(exports, "LucideDiff", ()=>(0, _diffJsDefault.default));
parcelHelpers.export(exports, "Disc3", ()=>(0, _disc3JsDefault.default));
parcelHelpers.export(exports, "Disc3Icon", ()=>(0, _disc3JsDefault.default));
parcelHelpers.export(exports, "LucideDisc3", ()=>(0, _disc3JsDefault.default));
parcelHelpers.export(exports, "DiscAlbum", ()=>(0, _discAlbumJsDefault.default));
parcelHelpers.export(exports, "DiscAlbumIcon", ()=>(0, _discAlbumJsDefault.default));
parcelHelpers.export(exports, "LucideDiscAlbum", ()=>(0, _discAlbumJsDefault.default));
parcelHelpers.export(exports, "Disc", ()=>(0, _discJsDefault.default));
parcelHelpers.export(exports, "DiscIcon", ()=>(0, _discJsDefault.default));
parcelHelpers.export(exports, "LucideDisc", ()=>(0, _discJsDefault.default));
parcelHelpers.export(exports, "Divide", ()=>(0, _divideJsDefault.default));
parcelHelpers.export(exports, "DivideIcon", ()=>(0, _divideJsDefault.default));
parcelHelpers.export(exports, "LucideDivide", ()=>(0, _divideJsDefault.default));
parcelHelpers.export(exports, "DnaOff", ()=>(0, _dnaOffJsDefault.default));
parcelHelpers.export(exports, "DnaOffIcon", ()=>(0, _dnaOffJsDefault.default));
parcelHelpers.export(exports, "LucideDnaOff", ()=>(0, _dnaOffJsDefault.default));
parcelHelpers.export(exports, "Dna", ()=>(0, _dnaJsDefault.default));
parcelHelpers.export(exports, "DnaIcon", ()=>(0, _dnaJsDefault.default));
parcelHelpers.export(exports, "LucideDna", ()=>(0, _dnaJsDefault.default));
parcelHelpers.export(exports, "Dock", ()=>(0, _dockJsDefault.default));
parcelHelpers.export(exports, "DockIcon", ()=>(0, _dockJsDefault.default));
parcelHelpers.export(exports, "LucideDock", ()=>(0, _dockJsDefault.default));
parcelHelpers.export(exports, "Dog", ()=>(0, _dogJsDefault.default));
parcelHelpers.export(exports, "DogIcon", ()=>(0, _dogJsDefault.default));
parcelHelpers.export(exports, "LucideDog", ()=>(0, _dogJsDefault.default));
parcelHelpers.export(exports, "DollarSign", ()=>(0, _dollarSignJsDefault.default));
parcelHelpers.export(exports, "DollarSignIcon", ()=>(0, _dollarSignJsDefault.default));
parcelHelpers.export(exports, "LucideDollarSign", ()=>(0, _dollarSignJsDefault.default));
parcelHelpers.export(exports, "Donut", ()=>(0, _donutJsDefault.default));
parcelHelpers.export(exports, "DonutIcon", ()=>(0, _donutJsDefault.default));
parcelHelpers.export(exports, "LucideDonut", ()=>(0, _donutJsDefault.default));
parcelHelpers.export(exports, "DoorClosedLocked", ()=>(0, _doorClosedLockedJsDefault.default));
parcelHelpers.export(exports, "DoorClosedLockedIcon", ()=>(0, _doorClosedLockedJsDefault.default));
parcelHelpers.export(exports, "LucideDoorClosedLocked", ()=>(0, _doorClosedLockedJsDefault.default));
parcelHelpers.export(exports, "DoorClosed", ()=>(0, _doorClosedJsDefault.default));
parcelHelpers.export(exports, "DoorClosedIcon", ()=>(0, _doorClosedJsDefault.default));
parcelHelpers.export(exports, "LucideDoorClosed", ()=>(0, _doorClosedJsDefault.default));
parcelHelpers.export(exports, "DoorOpen", ()=>(0, _doorOpenJsDefault.default));
parcelHelpers.export(exports, "DoorOpenIcon", ()=>(0, _doorOpenJsDefault.default));
parcelHelpers.export(exports, "LucideDoorOpen", ()=>(0, _doorOpenJsDefault.default));
parcelHelpers.export(exports, "Dot", ()=>(0, _dotJsDefault.default));
parcelHelpers.export(exports, "DotIcon", ()=>(0, _dotJsDefault.default));
parcelHelpers.export(exports, "LucideDot", ()=>(0, _dotJsDefault.default));
parcelHelpers.export(exports, "Download", ()=>(0, _downloadJsDefault.default));
parcelHelpers.export(exports, "DownloadIcon", ()=>(0, _downloadJsDefault.default));
parcelHelpers.export(exports, "LucideDownload", ()=>(0, _downloadJsDefault.default));
parcelHelpers.export(exports, "DraftingCompass", ()=>(0, _draftingCompassJsDefault.default));
parcelHelpers.export(exports, "DraftingCompassIcon", ()=>(0, _draftingCompassJsDefault.default));
parcelHelpers.export(exports, "LucideDraftingCompass", ()=>(0, _draftingCompassJsDefault.default));
parcelHelpers.export(exports, "Drama", ()=>(0, _dramaJsDefault.default));
parcelHelpers.export(exports, "DramaIcon", ()=>(0, _dramaJsDefault.default));
parcelHelpers.export(exports, "LucideDrama", ()=>(0, _dramaJsDefault.default));
parcelHelpers.export(exports, "Dribbble", ()=>(0, _dribbbleJsDefault.default));
parcelHelpers.export(exports, "DribbbleIcon", ()=>(0, _dribbbleJsDefault.default));
parcelHelpers.export(exports, "LucideDribbble", ()=>(0, _dribbbleJsDefault.default));
parcelHelpers.export(exports, "Drill", ()=>(0, _drillJsDefault.default));
parcelHelpers.export(exports, "DrillIcon", ()=>(0, _drillJsDefault.default));
parcelHelpers.export(exports, "LucideDrill", ()=>(0, _drillJsDefault.default));
parcelHelpers.export(exports, "DropletOff", ()=>(0, _dropletOffJsDefault.default));
parcelHelpers.export(exports, "DropletOffIcon", ()=>(0, _dropletOffJsDefault.default));
parcelHelpers.export(exports, "LucideDropletOff", ()=>(0, _dropletOffJsDefault.default));
parcelHelpers.export(exports, "Droplet", ()=>(0, _dropletJsDefault.default));
parcelHelpers.export(exports, "DropletIcon", ()=>(0, _dropletJsDefault.default));
parcelHelpers.export(exports, "LucideDroplet", ()=>(0, _dropletJsDefault.default));
parcelHelpers.export(exports, "Droplets", ()=>(0, _dropletsJsDefault.default));
parcelHelpers.export(exports, "DropletsIcon", ()=>(0, _dropletsJsDefault.default));
parcelHelpers.export(exports, "LucideDroplets", ()=>(0, _dropletsJsDefault.default));
parcelHelpers.export(exports, "Drum", ()=>(0, _drumJsDefault.default));
parcelHelpers.export(exports, "DrumIcon", ()=>(0, _drumJsDefault.default));
parcelHelpers.export(exports, "LucideDrum", ()=>(0, _drumJsDefault.default));
parcelHelpers.export(exports, "Drumstick", ()=>(0, _drumstickJsDefault.default));
parcelHelpers.export(exports, "DrumstickIcon", ()=>(0, _drumstickJsDefault.default));
parcelHelpers.export(exports, "LucideDrumstick", ()=>(0, _drumstickJsDefault.default));
parcelHelpers.export(exports, "Dumbbell", ()=>(0, _dumbbellJsDefault.default));
parcelHelpers.export(exports, "DumbbellIcon", ()=>(0, _dumbbellJsDefault.default));
parcelHelpers.export(exports, "LucideDumbbell", ()=>(0, _dumbbellJsDefault.default));
parcelHelpers.export(exports, "EarOff", ()=>(0, _earOffJsDefault.default));
parcelHelpers.export(exports, "EarOffIcon", ()=>(0, _earOffJsDefault.default));
parcelHelpers.export(exports, "LucideEarOff", ()=>(0, _earOffJsDefault.default));
parcelHelpers.export(exports, "Ear", ()=>(0, _earJsDefault.default));
parcelHelpers.export(exports, "EarIcon", ()=>(0, _earJsDefault.default));
parcelHelpers.export(exports, "LucideEar", ()=>(0, _earJsDefault.default));
parcelHelpers.export(exports, "EarthLock", ()=>(0, _earthLockJsDefault.default));
parcelHelpers.export(exports, "EarthLockIcon", ()=>(0, _earthLockJsDefault.default));
parcelHelpers.export(exports, "LucideEarthLock", ()=>(0, _earthLockJsDefault.default));
parcelHelpers.export(exports, "Eclipse", ()=>(0, _eclipseJsDefault.default));
parcelHelpers.export(exports, "EclipseIcon", ()=>(0, _eclipseJsDefault.default));
parcelHelpers.export(exports, "LucideEclipse", ()=>(0, _eclipseJsDefault.default));
parcelHelpers.export(exports, "EggFried", ()=>(0, _eggFriedJsDefault.default));
parcelHelpers.export(exports, "EggFriedIcon", ()=>(0, _eggFriedJsDefault.default));
parcelHelpers.export(exports, "LucideEggFried", ()=>(0, _eggFriedJsDefault.default));
parcelHelpers.export(exports, "EggOff", ()=>(0, _eggOffJsDefault.default));
parcelHelpers.export(exports, "EggOffIcon", ()=>(0, _eggOffJsDefault.default));
parcelHelpers.export(exports, "LucideEggOff", ()=>(0, _eggOffJsDefault.default));
parcelHelpers.export(exports, "Egg", ()=>(0, _eggJsDefault.default));
parcelHelpers.export(exports, "EggIcon", ()=>(0, _eggJsDefault.default));
parcelHelpers.export(exports, "LucideEgg", ()=>(0, _eggJsDefault.default));
parcelHelpers.export(exports, "EqualApproximately", ()=>(0, _equalApproximatelyJsDefault.default));
parcelHelpers.export(exports, "EqualApproximatelyIcon", ()=>(0, _equalApproximatelyJsDefault.default));
parcelHelpers.export(exports, "LucideEqualApproximately", ()=>(0, _equalApproximatelyJsDefault.default));
parcelHelpers.export(exports, "EqualNot", ()=>(0, _equalNotJsDefault.default));
parcelHelpers.export(exports, "EqualNotIcon", ()=>(0, _equalNotJsDefault.default));
parcelHelpers.export(exports, "LucideEqualNot", ()=>(0, _equalNotJsDefault.default));
parcelHelpers.export(exports, "Equal", ()=>(0, _equalJsDefault.default));
parcelHelpers.export(exports, "EqualIcon", ()=>(0, _equalJsDefault.default));
parcelHelpers.export(exports, "LucideEqual", ()=>(0, _equalJsDefault.default));
parcelHelpers.export(exports, "Eraser", ()=>(0, _eraserJsDefault.default));
parcelHelpers.export(exports, "EraserIcon", ()=>(0, _eraserJsDefault.default));
parcelHelpers.export(exports, "LucideEraser", ()=>(0, _eraserJsDefault.default));
parcelHelpers.export(exports, "EthernetPort", ()=>(0, _ethernetPortJsDefault.default));
parcelHelpers.export(exports, "EthernetPortIcon", ()=>(0, _ethernetPortJsDefault.default));
parcelHelpers.export(exports, "LucideEthernetPort", ()=>(0, _ethernetPortJsDefault.default));
parcelHelpers.export(exports, "Euro", ()=>(0, _euroJsDefault.default));
parcelHelpers.export(exports, "EuroIcon", ()=>(0, _euroJsDefault.default));
parcelHelpers.export(exports, "LucideEuro", ()=>(0, _euroJsDefault.default));
parcelHelpers.export(exports, "Expand", ()=>(0, _expandJsDefault.default));
parcelHelpers.export(exports, "ExpandIcon", ()=>(0, _expandJsDefault.default));
parcelHelpers.export(exports, "LucideExpand", ()=>(0, _expandJsDefault.default));
parcelHelpers.export(exports, "ExternalLink", ()=>(0, _externalLinkJsDefault.default));
parcelHelpers.export(exports, "ExternalLinkIcon", ()=>(0, _externalLinkJsDefault.default));
parcelHelpers.export(exports, "LucideExternalLink", ()=>(0, _externalLinkJsDefault.default));
parcelHelpers.export(exports, "EyeClosed", ()=>(0, _eyeClosedJsDefault.default));
parcelHelpers.export(exports, "EyeClosedIcon", ()=>(0, _eyeClosedJsDefault.default));
parcelHelpers.export(exports, "LucideEyeClosed", ()=>(0, _eyeClosedJsDefault.default));
parcelHelpers.export(exports, "EyeOff", ()=>(0, _eyeOffJsDefault.default));
parcelHelpers.export(exports, "EyeOffIcon", ()=>(0, _eyeOffJsDefault.default));
parcelHelpers.export(exports, "LucideEyeOff", ()=>(0, _eyeOffJsDefault.default));
parcelHelpers.export(exports, "Eye", ()=>(0, _eyeJsDefault.default));
parcelHelpers.export(exports, "EyeIcon", ()=>(0, _eyeJsDefault.default));
parcelHelpers.export(exports, "LucideEye", ()=>(0, _eyeJsDefault.default));
parcelHelpers.export(exports, "Facebook", ()=>(0, _facebookJsDefault.default));
parcelHelpers.export(exports, "FacebookIcon", ()=>(0, _facebookJsDefault.default));
parcelHelpers.export(exports, "LucideFacebook", ()=>(0, _facebookJsDefault.default));
parcelHelpers.export(exports, "Factory", ()=>(0, _factoryJsDefault.default));
parcelHelpers.export(exports, "FactoryIcon", ()=>(0, _factoryJsDefault.default));
parcelHelpers.export(exports, "LucideFactory", ()=>(0, _factoryJsDefault.default));
parcelHelpers.export(exports, "Fan", ()=>(0, _fanJsDefault.default));
parcelHelpers.export(exports, "FanIcon", ()=>(0, _fanJsDefault.default));
parcelHelpers.export(exports, "LucideFan", ()=>(0, _fanJsDefault.default));
parcelHelpers.export(exports, "FastForward", ()=>(0, _fastForwardJsDefault.default));
parcelHelpers.export(exports, "FastForwardIcon", ()=>(0, _fastForwardJsDefault.default));
parcelHelpers.export(exports, "LucideFastForward", ()=>(0, _fastForwardJsDefault.default));
parcelHelpers.export(exports, "Feather", ()=>(0, _featherJsDefault.default));
parcelHelpers.export(exports, "FeatherIcon", ()=>(0, _featherJsDefault.default));
parcelHelpers.export(exports, "LucideFeather", ()=>(0, _featherJsDefault.default));
parcelHelpers.export(exports, "Fence", ()=>(0, _fenceJsDefault.default));
parcelHelpers.export(exports, "FenceIcon", ()=>(0, _fenceJsDefault.default));
parcelHelpers.export(exports, "LucideFence", ()=>(0, _fenceJsDefault.default));
parcelHelpers.export(exports, "FerrisWheel", ()=>(0, _ferrisWheelJsDefault.default));
parcelHelpers.export(exports, "FerrisWheelIcon", ()=>(0, _ferrisWheelJsDefault.default));
parcelHelpers.export(exports, "LucideFerrisWheel", ()=>(0, _ferrisWheelJsDefault.default));
parcelHelpers.export(exports, "Figma", ()=>(0, _figmaJsDefault.default));
parcelHelpers.export(exports, "FigmaIcon", ()=>(0, _figmaJsDefault.default));
parcelHelpers.export(exports, "LucideFigma", ()=>(0, _figmaJsDefault.default));
parcelHelpers.export(exports, "FileArchive", ()=>(0, _fileArchiveJsDefault.default));
parcelHelpers.export(exports, "FileArchiveIcon", ()=>(0, _fileArchiveJsDefault.default));
parcelHelpers.export(exports, "LucideFileArchive", ()=>(0, _fileArchiveJsDefault.default));
parcelHelpers.export(exports, "FileAudio2", ()=>(0, _fileAudio2JsDefault.default));
parcelHelpers.export(exports, "FileAudio2Icon", ()=>(0, _fileAudio2JsDefault.default));
parcelHelpers.export(exports, "LucideFileAudio2", ()=>(0, _fileAudio2JsDefault.default));
parcelHelpers.export(exports, "FileAudio", ()=>(0, _fileAudioJsDefault.default));
parcelHelpers.export(exports, "FileAudioIcon", ()=>(0, _fileAudioJsDefault.default));
parcelHelpers.export(exports, "LucideFileAudio", ()=>(0, _fileAudioJsDefault.default));
parcelHelpers.export(exports, "FileBadge2", ()=>(0, _fileBadge2JsDefault.default));
parcelHelpers.export(exports, "FileBadge2Icon", ()=>(0, _fileBadge2JsDefault.default));
parcelHelpers.export(exports, "LucideFileBadge2", ()=>(0, _fileBadge2JsDefault.default));
parcelHelpers.export(exports, "FileBox", ()=>(0, _fileBoxJsDefault.default));
parcelHelpers.export(exports, "FileBoxIcon", ()=>(0, _fileBoxJsDefault.default));
parcelHelpers.export(exports, "LucideFileBox", ()=>(0, _fileBoxJsDefault.default));
parcelHelpers.export(exports, "FileBadge", ()=>(0, _fileBadgeJsDefault.default));
parcelHelpers.export(exports, "FileBadgeIcon", ()=>(0, _fileBadgeJsDefault.default));
parcelHelpers.export(exports, "LucideFileBadge", ()=>(0, _fileBadgeJsDefault.default));
parcelHelpers.export(exports, "FileCheck2", ()=>(0, _fileCheck2JsDefault.default));
parcelHelpers.export(exports, "FileCheck2Icon", ()=>(0, _fileCheck2JsDefault.default));
parcelHelpers.export(exports, "LucideFileCheck2", ()=>(0, _fileCheck2JsDefault.default));
parcelHelpers.export(exports, "FileCheck", ()=>(0, _fileCheckJsDefault.default));
parcelHelpers.export(exports, "FileCheckIcon", ()=>(0, _fileCheckJsDefault.default));
parcelHelpers.export(exports, "LucideFileCheck", ()=>(0, _fileCheckJsDefault.default));
parcelHelpers.export(exports, "FileClock", ()=>(0, _fileClockJsDefault.default));
parcelHelpers.export(exports, "FileClockIcon", ()=>(0, _fileClockJsDefault.default));
parcelHelpers.export(exports, "LucideFileClock", ()=>(0, _fileClockJsDefault.default));
parcelHelpers.export(exports, "FileCode2", ()=>(0, _fileCode2JsDefault.default));
parcelHelpers.export(exports, "FileCode2Icon", ()=>(0, _fileCode2JsDefault.default));
parcelHelpers.export(exports, "LucideFileCode2", ()=>(0, _fileCode2JsDefault.default));
parcelHelpers.export(exports, "FileCode", ()=>(0, _fileCodeJsDefault.default));
parcelHelpers.export(exports, "FileCodeIcon", ()=>(0, _fileCodeJsDefault.default));
parcelHelpers.export(exports, "LucideFileCode", ()=>(0, _fileCodeJsDefault.default));
parcelHelpers.export(exports, "FileDiff", ()=>(0, _fileDiffJsDefault.default));
parcelHelpers.export(exports, "FileDiffIcon", ()=>(0, _fileDiffJsDefault.default));
parcelHelpers.export(exports, "LucideFileDiff", ()=>(0, _fileDiffJsDefault.default));
parcelHelpers.export(exports, "FileDigit", ()=>(0, _fileDigitJsDefault.default));
parcelHelpers.export(exports, "FileDigitIcon", ()=>(0, _fileDigitJsDefault.default));
parcelHelpers.export(exports, "LucideFileDigit", ()=>(0, _fileDigitJsDefault.default));
parcelHelpers.export(exports, "FileDown", ()=>(0, _fileDownJsDefault.default));
parcelHelpers.export(exports, "FileDownIcon", ()=>(0, _fileDownJsDefault.default));
parcelHelpers.export(exports, "LucideFileDown", ()=>(0, _fileDownJsDefault.default));
parcelHelpers.export(exports, "FileHeart", ()=>(0, _fileHeartJsDefault.default));
parcelHelpers.export(exports, "FileHeartIcon", ()=>(0, _fileHeartJsDefault.default));
parcelHelpers.export(exports, "LucideFileHeart", ()=>(0, _fileHeartJsDefault.default));
parcelHelpers.export(exports, "FileImage", ()=>(0, _fileImageJsDefault.default));
parcelHelpers.export(exports, "FileImageIcon", ()=>(0, _fileImageJsDefault.default));
parcelHelpers.export(exports, "LucideFileImage", ()=>(0, _fileImageJsDefault.default));
parcelHelpers.export(exports, "FileInput", ()=>(0, _fileInputJsDefault.default));
parcelHelpers.export(exports, "FileInputIcon", ()=>(0, _fileInputJsDefault.default));
parcelHelpers.export(exports, "LucideFileInput", ()=>(0, _fileInputJsDefault.default));
parcelHelpers.export(exports, "FileJson2", ()=>(0, _fileJson2JsDefault.default));
parcelHelpers.export(exports, "FileJson2Icon", ()=>(0, _fileJson2JsDefault.default));
parcelHelpers.export(exports, "LucideFileJson2", ()=>(0, _fileJson2JsDefault.default));
parcelHelpers.export(exports, "FileJson", ()=>(0, _fileJsonJsDefault.default));
parcelHelpers.export(exports, "FileJsonIcon", ()=>(0, _fileJsonJsDefault.default));
parcelHelpers.export(exports, "LucideFileJson", ()=>(0, _fileJsonJsDefault.default));
parcelHelpers.export(exports, "FileKey2", ()=>(0, _fileKey2JsDefault.default));
parcelHelpers.export(exports, "FileKey2Icon", ()=>(0, _fileKey2JsDefault.default));
parcelHelpers.export(exports, "LucideFileKey2", ()=>(0, _fileKey2JsDefault.default));
parcelHelpers.export(exports, "FileLock2", ()=>(0, _fileLock2JsDefault.default));
parcelHelpers.export(exports, "FileLock2Icon", ()=>(0, _fileLock2JsDefault.default));
parcelHelpers.export(exports, "LucideFileLock2", ()=>(0, _fileLock2JsDefault.default));
parcelHelpers.export(exports, "FileKey", ()=>(0, _fileKeyJsDefault.default));
parcelHelpers.export(exports, "FileKeyIcon", ()=>(0, _fileKeyJsDefault.default));
parcelHelpers.export(exports, "LucideFileKey", ()=>(0, _fileKeyJsDefault.default));
parcelHelpers.export(exports, "FileLock", ()=>(0, _fileLockJsDefault.default));
parcelHelpers.export(exports, "FileLockIcon", ()=>(0, _fileLockJsDefault.default));
parcelHelpers.export(exports, "LucideFileLock", ()=>(0, _fileLockJsDefault.default));
parcelHelpers.export(exports, "FileMinus2", ()=>(0, _fileMinus2JsDefault.default));
parcelHelpers.export(exports, "FileMinus2Icon", ()=>(0, _fileMinus2JsDefault.default));
parcelHelpers.export(exports, "LucideFileMinus2", ()=>(0, _fileMinus2JsDefault.default));
parcelHelpers.export(exports, "FileMinus", ()=>(0, _fileMinusJsDefault.default));
parcelHelpers.export(exports, "FileMinusIcon", ()=>(0, _fileMinusJsDefault.default));
parcelHelpers.export(exports, "LucideFileMinus", ()=>(0, _fileMinusJsDefault.default));
parcelHelpers.export(exports, "FileMusic", ()=>(0, _fileMusicJsDefault.default));
parcelHelpers.export(exports, "FileMusicIcon", ()=>(0, _fileMusicJsDefault.default));
parcelHelpers.export(exports, "LucideFileMusic", ()=>(0, _fileMusicJsDefault.default));
parcelHelpers.export(exports, "FileOutput", ()=>(0, _fileOutputJsDefault.default));
parcelHelpers.export(exports, "FileOutputIcon", ()=>(0, _fileOutputJsDefault.default));
parcelHelpers.export(exports, "LucideFileOutput", ()=>(0, _fileOutputJsDefault.default));
parcelHelpers.export(exports, "FilePlus2", ()=>(0, _filePlus2JsDefault.default));
parcelHelpers.export(exports, "FilePlus2Icon", ()=>(0, _filePlus2JsDefault.default));
parcelHelpers.export(exports, "LucideFilePlus2", ()=>(0, _filePlus2JsDefault.default));
parcelHelpers.export(exports, "FilePlus", ()=>(0, _filePlusJsDefault.default));
parcelHelpers.export(exports, "FilePlusIcon", ()=>(0, _filePlusJsDefault.default));
parcelHelpers.export(exports, "LucideFilePlus", ()=>(0, _filePlusJsDefault.default));
parcelHelpers.export(exports, "FileQuestion", ()=>(0, _fileQuestionJsDefault.default));
parcelHelpers.export(exports, "FileQuestionIcon", ()=>(0, _fileQuestionJsDefault.default));
parcelHelpers.export(exports, "LucideFileQuestion", ()=>(0, _fileQuestionJsDefault.default));
parcelHelpers.export(exports, "FileScan", ()=>(0, _fileScanJsDefault.default));
parcelHelpers.export(exports, "FileScanIcon", ()=>(0, _fileScanJsDefault.default));
parcelHelpers.export(exports, "LucideFileScan", ()=>(0, _fileScanJsDefault.default));
parcelHelpers.export(exports, "FileSearch2", ()=>(0, _fileSearch2JsDefault.default));
parcelHelpers.export(exports, "FileSearch2Icon", ()=>(0, _fileSearch2JsDefault.default));
parcelHelpers.export(exports, "LucideFileSearch2", ()=>(0, _fileSearch2JsDefault.default));
parcelHelpers.export(exports, "FileSearch", ()=>(0, _fileSearchJsDefault.default));
parcelHelpers.export(exports, "FileSearchIcon", ()=>(0, _fileSearchJsDefault.default));
parcelHelpers.export(exports, "LucideFileSearch", ()=>(0, _fileSearchJsDefault.default));
parcelHelpers.export(exports, "FileSliders", ()=>(0, _fileSlidersJsDefault.default));
parcelHelpers.export(exports, "FileSlidersIcon", ()=>(0, _fileSlidersJsDefault.default));
parcelHelpers.export(exports, "LucideFileSliders", ()=>(0, _fileSlidersJsDefault.default));
parcelHelpers.export(exports, "FileSpreadsheet", ()=>(0, _fileSpreadsheetJsDefault.default));
parcelHelpers.export(exports, "FileSpreadsheetIcon", ()=>(0, _fileSpreadsheetJsDefault.default));
parcelHelpers.export(exports, "LucideFileSpreadsheet", ()=>(0, _fileSpreadsheetJsDefault.default));
parcelHelpers.export(exports, "FileStack", ()=>(0, _fileStackJsDefault.default));
parcelHelpers.export(exports, "FileStackIcon", ()=>(0, _fileStackJsDefault.default));
parcelHelpers.export(exports, "LucideFileStack", ()=>(0, _fileStackJsDefault.default));
parcelHelpers.export(exports, "FileTerminal", ()=>(0, _fileTerminalJsDefault.default));
parcelHelpers.export(exports, "FileTerminalIcon", ()=>(0, _fileTerminalJsDefault.default));
parcelHelpers.export(exports, "LucideFileTerminal", ()=>(0, _fileTerminalJsDefault.default));
parcelHelpers.export(exports, "FileSymlink", ()=>(0, _fileSymlinkJsDefault.default));
parcelHelpers.export(exports, "FileSymlinkIcon", ()=>(0, _fileSymlinkJsDefault.default));
parcelHelpers.export(exports, "LucideFileSymlink", ()=>(0, _fileSymlinkJsDefault.default));
parcelHelpers.export(exports, "FileType2", ()=>(0, _fileType2JsDefault.default));
parcelHelpers.export(exports, "FileType2Icon", ()=>(0, _fileType2JsDefault.default));
parcelHelpers.export(exports, "LucideFileType2", ()=>(0, _fileType2JsDefault.default));
parcelHelpers.export(exports, "FileText", ()=>(0, _fileTextJsDefault.default));
parcelHelpers.export(exports, "FileTextIcon", ()=>(0, _fileTextJsDefault.default));
parcelHelpers.export(exports, "LucideFileText", ()=>(0, _fileTextJsDefault.default));
parcelHelpers.export(exports, "FileType", ()=>(0, _fileTypeJsDefault.default));
parcelHelpers.export(exports, "FileTypeIcon", ()=>(0, _fileTypeJsDefault.default));
parcelHelpers.export(exports, "LucideFileType", ()=>(0, _fileTypeJsDefault.default));
parcelHelpers.export(exports, "FileUp", ()=>(0, _fileUpJsDefault.default));
parcelHelpers.export(exports, "FileUpIcon", ()=>(0, _fileUpJsDefault.default));
parcelHelpers.export(exports, "LucideFileUp", ()=>(0, _fileUpJsDefault.default));
parcelHelpers.export(exports, "FileUser", ()=>(0, _fileUserJsDefault.default));
parcelHelpers.export(exports, "FileUserIcon", ()=>(0, _fileUserJsDefault.default));
parcelHelpers.export(exports, "LucideFileUser", ()=>(0, _fileUserJsDefault.default));
parcelHelpers.export(exports, "FileVideo2", ()=>(0, _fileVideo2JsDefault.default));
parcelHelpers.export(exports, "FileVideo2Icon", ()=>(0, _fileVideo2JsDefault.default));
parcelHelpers.export(exports, "LucideFileVideo2", ()=>(0, _fileVideo2JsDefault.default));
parcelHelpers.export(exports, "FileVideo", ()=>(0, _fileVideoJsDefault.default));
parcelHelpers.export(exports, "FileVideoIcon", ()=>(0, _fileVideoJsDefault.default));
parcelHelpers.export(exports, "LucideFileVideo", ()=>(0, _fileVideoJsDefault.default));
parcelHelpers.export(exports, "FileVolume2", ()=>(0, _fileVolume2JsDefault.default));
parcelHelpers.export(exports, "FileVolume2Icon", ()=>(0, _fileVolume2JsDefault.default));
parcelHelpers.export(exports, "LucideFileVolume2", ()=>(0, _fileVolume2JsDefault.default));
parcelHelpers.export(exports, "FileVolume", ()=>(0, _fileVolumeJsDefault.default));
parcelHelpers.export(exports, "FileVolumeIcon", ()=>(0, _fileVolumeJsDefault.default));
parcelHelpers.export(exports, "LucideFileVolume", ()=>(0, _fileVolumeJsDefault.default));
parcelHelpers.export(exports, "FileWarning", ()=>(0, _fileWarningJsDefault.default));
parcelHelpers.export(exports, "FileWarningIcon", ()=>(0, _fileWarningJsDefault.default));
parcelHelpers.export(exports, "LucideFileWarning", ()=>(0, _fileWarningJsDefault.default));
parcelHelpers.export(exports, "FileX2", ()=>(0, _fileX2JsDefault.default));
parcelHelpers.export(exports, "FileX2Icon", ()=>(0, _fileX2JsDefault.default));
parcelHelpers.export(exports, "LucideFileX2", ()=>(0, _fileX2JsDefault.default));
parcelHelpers.export(exports, "FileX", ()=>(0, _fileXJsDefault.default));
parcelHelpers.export(exports, "FileXIcon", ()=>(0, _fileXJsDefault.default));
parcelHelpers.export(exports, "LucideFileX", ()=>(0, _fileXJsDefault.default));
parcelHelpers.export(exports, "File", ()=>(0, _fileJsDefault.default));
parcelHelpers.export(exports, "FileIcon", ()=>(0, _fileJsDefault.default));
parcelHelpers.export(exports, "LucideFile", ()=>(0, _fileJsDefault.default));
parcelHelpers.export(exports, "Files", ()=>(0, _filesJsDefault.default));
parcelHelpers.export(exports, "FilesIcon", ()=>(0, _filesJsDefault.default));
parcelHelpers.export(exports, "LucideFiles", ()=>(0, _filesJsDefault.default));
parcelHelpers.export(exports, "Film", ()=>(0, _filmJsDefault.default));
parcelHelpers.export(exports, "FilmIcon", ()=>(0, _filmJsDefault.default));
parcelHelpers.export(exports, "LucideFilm", ()=>(0, _filmJsDefault.default));
parcelHelpers.export(exports, "Fingerprint", ()=>(0, _fingerprintJsDefault.default));
parcelHelpers.export(exports, "FingerprintIcon", ()=>(0, _fingerprintJsDefault.default));
parcelHelpers.export(exports, "LucideFingerprint", ()=>(0, _fingerprintJsDefault.default));
parcelHelpers.export(exports, "FireExtinguisher", ()=>(0, _fireExtinguisherJsDefault.default));
parcelHelpers.export(exports, "FireExtinguisherIcon", ()=>(0, _fireExtinguisherJsDefault.default));
parcelHelpers.export(exports, "LucideFireExtinguisher", ()=>(0, _fireExtinguisherJsDefault.default));
parcelHelpers.export(exports, "FishOff", ()=>(0, _fishOffJsDefault.default));
parcelHelpers.export(exports, "FishOffIcon", ()=>(0, _fishOffJsDefault.default));
parcelHelpers.export(exports, "LucideFishOff", ()=>(0, _fishOffJsDefault.default));
parcelHelpers.export(exports, "Fish", ()=>(0, _fishJsDefault.default));
parcelHelpers.export(exports, "FishIcon", ()=>(0, _fishJsDefault.default));
parcelHelpers.export(exports, "LucideFish", ()=>(0, _fishJsDefault.default));
parcelHelpers.export(exports, "FishSymbol", ()=>(0, _fishSymbolJsDefault.default));
parcelHelpers.export(exports, "FishSymbolIcon", ()=>(0, _fishSymbolJsDefault.default));
parcelHelpers.export(exports, "LucideFishSymbol", ()=>(0, _fishSymbolJsDefault.default));
parcelHelpers.export(exports, "FlagOff", ()=>(0, _flagOffJsDefault.default));
parcelHelpers.export(exports, "FlagOffIcon", ()=>(0, _flagOffJsDefault.default));
parcelHelpers.export(exports, "LucideFlagOff", ()=>(0, _flagOffJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleLeft", ()=>(0, _flagTriangleLeftJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleLeftIcon", ()=>(0, _flagTriangleLeftJsDefault.default));
parcelHelpers.export(exports, "LucideFlagTriangleLeft", ()=>(0, _flagTriangleLeftJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleRight", ()=>(0, _flagTriangleRightJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleRightIcon", ()=>(0, _flagTriangleRightJsDefault.default));
parcelHelpers.export(exports, "LucideFlagTriangleRight", ()=>(0, _flagTriangleRightJsDefault.default));
parcelHelpers.export(exports, "FlameKindling", ()=>(0, _flameKindlingJsDefault.default));
parcelHelpers.export(exports, "FlameKindlingIcon", ()=>(0, _flameKindlingJsDefault.default));
parcelHelpers.export(exports, "LucideFlameKindling", ()=>(0, _flameKindlingJsDefault.default));
parcelHelpers.export(exports, "Flag", ()=>(0, _flagJsDefault.default));
parcelHelpers.export(exports, "FlagIcon", ()=>(0, _flagJsDefault.default));
parcelHelpers.export(exports, "LucideFlag", ()=>(0, _flagJsDefault.default));
parcelHelpers.export(exports, "Flame", ()=>(0, _flameJsDefault.default));
parcelHelpers.export(exports, "FlameIcon", ()=>(0, _flameJsDefault.default));
parcelHelpers.export(exports, "LucideFlame", ()=>(0, _flameJsDefault.default));
parcelHelpers.export(exports, "FlashlightOff", ()=>(0, _flashlightOffJsDefault.default));
parcelHelpers.export(exports, "FlashlightOffIcon", ()=>(0, _flashlightOffJsDefault.default));
parcelHelpers.export(exports, "LucideFlashlightOff", ()=>(0, _flashlightOffJsDefault.default));
parcelHelpers.export(exports, "Flashlight", ()=>(0, _flashlightJsDefault.default));
parcelHelpers.export(exports, "FlashlightIcon", ()=>(0, _flashlightJsDefault.default));
parcelHelpers.export(exports, "LucideFlashlight", ()=>(0, _flashlightJsDefault.default));
parcelHelpers.export(exports, "FlaskConicalOff", ()=>(0, _flaskConicalOffJsDefault.default));
parcelHelpers.export(exports, "FlaskConicalOffIcon", ()=>(0, _flaskConicalOffJsDefault.default));
parcelHelpers.export(exports, "LucideFlaskConicalOff", ()=>(0, _flaskConicalOffJsDefault.default));
parcelHelpers.export(exports, "FlaskConical", ()=>(0, _flaskConicalJsDefault.default));
parcelHelpers.export(exports, "FlaskConicalIcon", ()=>(0, _flaskConicalJsDefault.default));
parcelHelpers.export(exports, "LucideFlaskConical", ()=>(0, _flaskConicalJsDefault.default));
parcelHelpers.export(exports, "FlaskRound", ()=>(0, _flaskRoundJsDefault.default));
parcelHelpers.export(exports, "FlaskRoundIcon", ()=>(0, _flaskRoundJsDefault.default));
parcelHelpers.export(exports, "LucideFlaskRound", ()=>(0, _flaskRoundJsDefault.default));
parcelHelpers.export(exports, "FlipHorizontal", ()=>(0, _flipHorizontalJsDefault.default));
parcelHelpers.export(exports, "FlipHorizontalIcon", ()=>(0, _flipHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideFlipHorizontal", ()=>(0, _flipHorizontalJsDefault.default));
parcelHelpers.export(exports, "FlipHorizontal2", ()=>(0, _flipHorizontal2JsDefault.default));
parcelHelpers.export(exports, "FlipHorizontal2Icon", ()=>(0, _flipHorizontal2JsDefault.default));
parcelHelpers.export(exports, "LucideFlipHorizontal2", ()=>(0, _flipHorizontal2JsDefault.default));
parcelHelpers.export(exports, "FlipVertical2", ()=>(0, _flipVertical2JsDefault.default));
parcelHelpers.export(exports, "FlipVertical2Icon", ()=>(0, _flipVertical2JsDefault.default));
parcelHelpers.export(exports, "LucideFlipVertical2", ()=>(0, _flipVertical2JsDefault.default));
parcelHelpers.export(exports, "FlipVertical", ()=>(0, _flipVerticalJsDefault.default));
parcelHelpers.export(exports, "FlipVerticalIcon", ()=>(0, _flipVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideFlipVertical", ()=>(0, _flipVerticalJsDefault.default));
parcelHelpers.export(exports, "Flower2", ()=>(0, _flower2JsDefault.default));
parcelHelpers.export(exports, "Flower2Icon", ()=>(0, _flower2JsDefault.default));
parcelHelpers.export(exports, "LucideFlower2", ()=>(0, _flower2JsDefault.default));
parcelHelpers.export(exports, "Flower", ()=>(0, _flowerJsDefault.default));
parcelHelpers.export(exports, "FlowerIcon", ()=>(0, _flowerJsDefault.default));
parcelHelpers.export(exports, "LucideFlower", ()=>(0, _flowerJsDefault.default));
parcelHelpers.export(exports, "Focus", ()=>(0, _focusJsDefault.default));
parcelHelpers.export(exports, "FocusIcon", ()=>(0, _focusJsDefault.default));
parcelHelpers.export(exports, "LucideFocus", ()=>(0, _focusJsDefault.default));
parcelHelpers.export(exports, "FoldHorizontal", ()=>(0, _foldHorizontalJsDefault.default));
parcelHelpers.export(exports, "FoldHorizontalIcon", ()=>(0, _foldHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideFoldHorizontal", ()=>(0, _foldHorizontalJsDefault.default));
parcelHelpers.export(exports, "FolderArchive", ()=>(0, _folderArchiveJsDefault.default));
parcelHelpers.export(exports, "FolderArchiveIcon", ()=>(0, _folderArchiveJsDefault.default));
parcelHelpers.export(exports, "LucideFolderArchive", ()=>(0, _folderArchiveJsDefault.default));
parcelHelpers.export(exports, "FoldVertical", ()=>(0, _foldVerticalJsDefault.default));
parcelHelpers.export(exports, "FoldVerticalIcon", ()=>(0, _foldVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideFoldVertical", ()=>(0, _foldVerticalJsDefault.default));
parcelHelpers.export(exports, "FolderCheck", ()=>(0, _folderCheckJsDefault.default));
parcelHelpers.export(exports, "FolderCheckIcon", ()=>(0, _folderCheckJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCheck", ()=>(0, _folderCheckJsDefault.default));
parcelHelpers.export(exports, "FolderClock", ()=>(0, _folderClockJsDefault.default));
parcelHelpers.export(exports, "FolderClockIcon", ()=>(0, _folderClockJsDefault.default));
parcelHelpers.export(exports, "LucideFolderClock", ()=>(0, _folderClockJsDefault.default));
parcelHelpers.export(exports, "FolderClosed", ()=>(0, _folderClosedJsDefault.default));
parcelHelpers.export(exports, "FolderClosedIcon", ()=>(0, _folderClosedJsDefault.default));
parcelHelpers.export(exports, "LucideFolderClosed", ()=>(0, _folderClosedJsDefault.default));
parcelHelpers.export(exports, "FolderCode", ()=>(0, _folderCodeJsDefault.default));
parcelHelpers.export(exports, "FolderCodeIcon", ()=>(0, _folderCodeJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCode", ()=>(0, _folderCodeJsDefault.default));
parcelHelpers.export(exports, "FolderDown", ()=>(0, _folderDownJsDefault.default));
parcelHelpers.export(exports, "FolderDownIcon", ()=>(0, _folderDownJsDefault.default));
parcelHelpers.export(exports, "LucideFolderDown", ()=>(0, _folderDownJsDefault.default));
parcelHelpers.export(exports, "FolderDot", ()=>(0, _folderDotJsDefault.default));
parcelHelpers.export(exports, "FolderDotIcon", ()=>(0, _folderDotJsDefault.default));
parcelHelpers.export(exports, "LucideFolderDot", ()=>(0, _folderDotJsDefault.default));
parcelHelpers.export(exports, "FolderGit2", ()=>(0, _folderGit2JsDefault.default));
parcelHelpers.export(exports, "FolderGit2Icon", ()=>(0, _folderGit2JsDefault.default));
parcelHelpers.export(exports, "LucideFolderGit2", ()=>(0, _folderGit2JsDefault.default));
parcelHelpers.export(exports, "FolderGit", ()=>(0, _folderGitJsDefault.default));
parcelHelpers.export(exports, "FolderGitIcon", ()=>(0, _folderGitJsDefault.default));
parcelHelpers.export(exports, "LucideFolderGit", ()=>(0, _folderGitJsDefault.default));
parcelHelpers.export(exports, "FolderHeart", ()=>(0, _folderHeartJsDefault.default));
parcelHelpers.export(exports, "FolderHeartIcon", ()=>(0, _folderHeartJsDefault.default));
parcelHelpers.export(exports, "LucideFolderHeart", ()=>(0, _folderHeartJsDefault.default));
parcelHelpers.export(exports, "FolderKanban", ()=>(0, _folderKanbanJsDefault.default));
parcelHelpers.export(exports, "FolderKanbanIcon", ()=>(0, _folderKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideFolderKanban", ()=>(0, _folderKanbanJsDefault.default));
parcelHelpers.export(exports, "FolderInput", ()=>(0, _folderInputJsDefault.default));
parcelHelpers.export(exports, "FolderInputIcon", ()=>(0, _folderInputJsDefault.default));
parcelHelpers.export(exports, "LucideFolderInput", ()=>(0, _folderInputJsDefault.default));
parcelHelpers.export(exports, "FolderKey", ()=>(0, _folderKeyJsDefault.default));
parcelHelpers.export(exports, "FolderKeyIcon", ()=>(0, _folderKeyJsDefault.default));
parcelHelpers.export(exports, "LucideFolderKey", ()=>(0, _folderKeyJsDefault.default));
parcelHelpers.export(exports, "FolderLock", ()=>(0, _folderLockJsDefault.default));
parcelHelpers.export(exports, "FolderLockIcon", ()=>(0, _folderLockJsDefault.default));
parcelHelpers.export(exports, "LucideFolderLock", ()=>(0, _folderLockJsDefault.default));
parcelHelpers.export(exports, "FolderMinus", ()=>(0, _folderMinusJsDefault.default));
parcelHelpers.export(exports, "FolderMinusIcon", ()=>(0, _folderMinusJsDefault.default));
parcelHelpers.export(exports, "LucideFolderMinus", ()=>(0, _folderMinusJsDefault.default));
parcelHelpers.export(exports, "FolderOpenDot", ()=>(0, _folderOpenDotJsDefault.default));
parcelHelpers.export(exports, "FolderOpenDotIcon", ()=>(0, _folderOpenDotJsDefault.default));
parcelHelpers.export(exports, "LucideFolderOpenDot", ()=>(0, _folderOpenDotJsDefault.default));
parcelHelpers.export(exports, "FolderOpen", ()=>(0, _folderOpenJsDefault.default));
parcelHelpers.export(exports, "FolderOpenIcon", ()=>(0, _folderOpenJsDefault.default));
parcelHelpers.export(exports, "LucideFolderOpen", ()=>(0, _folderOpenJsDefault.default));
parcelHelpers.export(exports, "FolderOutput", ()=>(0, _folderOutputJsDefault.default));
parcelHelpers.export(exports, "FolderOutputIcon", ()=>(0, _folderOutputJsDefault.default));
parcelHelpers.export(exports, "LucideFolderOutput", ()=>(0, _folderOutputJsDefault.default));
parcelHelpers.export(exports, "FolderPlus", ()=>(0, _folderPlusJsDefault.default));
parcelHelpers.export(exports, "FolderPlusIcon", ()=>(0, _folderPlusJsDefault.default));
parcelHelpers.export(exports, "LucideFolderPlus", ()=>(0, _folderPlusJsDefault.default));
parcelHelpers.export(exports, "FolderRoot", ()=>(0, _folderRootJsDefault.default));
parcelHelpers.export(exports, "FolderRootIcon", ()=>(0, _folderRootJsDefault.default));
parcelHelpers.export(exports, "LucideFolderRoot", ()=>(0, _folderRootJsDefault.default));
parcelHelpers.export(exports, "FolderSearch2", ()=>(0, _folderSearch2JsDefault.default));
parcelHelpers.export(exports, "FolderSearch2Icon", ()=>(0, _folderSearch2JsDefault.default));
parcelHelpers.export(exports, "LucideFolderSearch2", ()=>(0, _folderSearch2JsDefault.default));
parcelHelpers.export(exports, "FolderSearch", ()=>(0, _folderSearchJsDefault.default));
parcelHelpers.export(exports, "FolderSearchIcon", ()=>(0, _folderSearchJsDefault.default));
parcelHelpers.export(exports, "LucideFolderSearch", ()=>(0, _folderSearchJsDefault.default));
parcelHelpers.export(exports, "FolderSymlink", ()=>(0, _folderSymlinkJsDefault.default));
parcelHelpers.export(exports, "FolderSymlinkIcon", ()=>(0, _folderSymlinkJsDefault.default));
parcelHelpers.export(exports, "LucideFolderSymlink", ()=>(0, _folderSymlinkJsDefault.default));
parcelHelpers.export(exports, "FolderSync", ()=>(0, _folderSyncJsDefault.default));
parcelHelpers.export(exports, "FolderSyncIcon", ()=>(0, _folderSyncJsDefault.default));
parcelHelpers.export(exports, "LucideFolderSync", ()=>(0, _folderSyncJsDefault.default));
parcelHelpers.export(exports, "FolderTree", ()=>(0, _folderTreeJsDefault.default));
parcelHelpers.export(exports, "FolderTreeIcon", ()=>(0, _folderTreeJsDefault.default));
parcelHelpers.export(exports, "LucideFolderTree", ()=>(0, _folderTreeJsDefault.default));
parcelHelpers.export(exports, "FolderUp", ()=>(0, _folderUpJsDefault.default));
parcelHelpers.export(exports, "FolderUpIcon", ()=>(0, _folderUpJsDefault.default));
parcelHelpers.export(exports, "LucideFolderUp", ()=>(0, _folderUpJsDefault.default));
parcelHelpers.export(exports, "FolderX", ()=>(0, _folderXJsDefault.default));
parcelHelpers.export(exports, "FolderXIcon", ()=>(0, _folderXJsDefault.default));
parcelHelpers.export(exports, "LucideFolderX", ()=>(0, _folderXJsDefault.default));
parcelHelpers.export(exports, "Folder", ()=>(0, _folderJsDefault.default));
parcelHelpers.export(exports, "FolderIcon", ()=>(0, _folderJsDefault.default));
parcelHelpers.export(exports, "LucideFolder", ()=>(0, _folderJsDefault.default));
parcelHelpers.export(exports, "Folders", ()=>(0, _foldersJsDefault.default));
parcelHelpers.export(exports, "FoldersIcon", ()=>(0, _foldersJsDefault.default));
parcelHelpers.export(exports, "LucideFolders", ()=>(0, _foldersJsDefault.default));
parcelHelpers.export(exports, "Forklift", ()=>(0, _forkliftJsDefault.default));
parcelHelpers.export(exports, "ForkliftIcon", ()=>(0, _forkliftJsDefault.default));
parcelHelpers.export(exports, "LucideForklift", ()=>(0, _forkliftJsDefault.default));
parcelHelpers.export(exports, "Footprints", ()=>(0, _footprintsJsDefault.default));
parcelHelpers.export(exports, "FootprintsIcon", ()=>(0, _footprintsJsDefault.default));
parcelHelpers.export(exports, "LucideFootprints", ()=>(0, _footprintsJsDefault.default));
parcelHelpers.export(exports, "Forward", ()=>(0, _forwardJsDefault.default));
parcelHelpers.export(exports, "ForwardIcon", ()=>(0, _forwardJsDefault.default));
parcelHelpers.export(exports, "LucideForward", ()=>(0, _forwardJsDefault.default));
parcelHelpers.export(exports, "Frame", ()=>(0, _frameJsDefault.default));
parcelHelpers.export(exports, "FrameIcon", ()=>(0, _frameJsDefault.default));
parcelHelpers.export(exports, "LucideFrame", ()=>(0, _frameJsDefault.default));
parcelHelpers.export(exports, "Framer", ()=>(0, _framerJsDefault.default));
parcelHelpers.export(exports, "FramerIcon", ()=>(0, _framerJsDefault.default));
parcelHelpers.export(exports, "LucideFramer", ()=>(0, _framerJsDefault.default));
parcelHelpers.export(exports, "Frown", ()=>(0, _frownJsDefault.default));
parcelHelpers.export(exports, "FrownIcon", ()=>(0, _frownJsDefault.default));
parcelHelpers.export(exports, "LucideFrown", ()=>(0, _frownJsDefault.default));
parcelHelpers.export(exports, "Fuel", ()=>(0, _fuelJsDefault.default));
parcelHelpers.export(exports, "FuelIcon", ()=>(0, _fuelJsDefault.default));
parcelHelpers.export(exports, "LucideFuel", ()=>(0, _fuelJsDefault.default));
parcelHelpers.export(exports, "Fullscreen", ()=>(0, _fullscreenJsDefault.default));
parcelHelpers.export(exports, "FullscreenIcon", ()=>(0, _fullscreenJsDefault.default));
parcelHelpers.export(exports, "LucideFullscreen", ()=>(0, _fullscreenJsDefault.default));
parcelHelpers.export(exports, "FunnelPlus", ()=>(0, _funnelPlusJsDefault.default));
parcelHelpers.export(exports, "FunnelPlusIcon", ()=>(0, _funnelPlusJsDefault.default));
parcelHelpers.export(exports, "LucideFunnelPlus", ()=>(0, _funnelPlusJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontalEnd", ()=>(0, _galleryHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontalEndIcon", ()=>(0, _galleryHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryHorizontalEnd", ()=>(0, _galleryHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontal", ()=>(0, _galleryHorizontalJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontalIcon", ()=>(0, _galleryHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryHorizontal", ()=>(0, _galleryHorizontalJsDefault.default));
parcelHelpers.export(exports, "GalleryThumbnails", ()=>(0, _galleryThumbnailsJsDefault.default));
parcelHelpers.export(exports, "GalleryThumbnailsIcon", ()=>(0, _galleryThumbnailsJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryThumbnails", ()=>(0, _galleryThumbnailsJsDefault.default));
parcelHelpers.export(exports, "GalleryVerticalEnd", ()=>(0, _galleryVerticalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryVerticalEndIcon", ()=>(0, _galleryVerticalEndJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryVerticalEnd", ()=>(0, _galleryVerticalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryVertical", ()=>(0, _galleryVerticalJsDefault.default));
parcelHelpers.export(exports, "GalleryVerticalIcon", ()=>(0, _galleryVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryVertical", ()=>(0, _galleryVerticalJsDefault.default));
parcelHelpers.export(exports, "Gamepad2", ()=>(0, _gamepad2JsDefault.default));
parcelHelpers.export(exports, "Gamepad2Icon", ()=>(0, _gamepad2JsDefault.default));
parcelHelpers.export(exports, "LucideGamepad2", ()=>(0, _gamepad2JsDefault.default));
parcelHelpers.export(exports, "Gamepad", ()=>(0, _gamepadJsDefault.default));
parcelHelpers.export(exports, "GamepadIcon", ()=>(0, _gamepadJsDefault.default));
parcelHelpers.export(exports, "LucideGamepad", ()=>(0, _gamepadJsDefault.default));
parcelHelpers.export(exports, "Gauge", ()=>(0, _gaugeJsDefault.default));
parcelHelpers.export(exports, "GaugeIcon", ()=>(0, _gaugeJsDefault.default));
parcelHelpers.export(exports, "LucideGauge", ()=>(0, _gaugeJsDefault.default));
parcelHelpers.export(exports, "Gavel", ()=>(0, _gavelJsDefault.default));
parcelHelpers.export(exports, "GavelIcon", ()=>(0, _gavelJsDefault.default));
parcelHelpers.export(exports, "LucideGavel", ()=>(0, _gavelJsDefault.default));
parcelHelpers.export(exports, "Gem", ()=>(0, _gemJsDefault.default));
parcelHelpers.export(exports, "GemIcon", ()=>(0, _gemJsDefault.default));
parcelHelpers.export(exports, "LucideGem", ()=>(0, _gemJsDefault.default));
parcelHelpers.export(exports, "Ghost", ()=>(0, _ghostJsDefault.default));
parcelHelpers.export(exports, "GhostIcon", ()=>(0, _ghostJsDefault.default));
parcelHelpers.export(exports, "LucideGhost", ()=>(0, _ghostJsDefault.default));
parcelHelpers.export(exports, "Gift", ()=>(0, _giftJsDefault.default));
parcelHelpers.export(exports, "GiftIcon", ()=>(0, _giftJsDefault.default));
parcelHelpers.export(exports, "LucideGift", ()=>(0, _giftJsDefault.default));
parcelHelpers.export(exports, "GitBranchPlus", ()=>(0, _gitBranchPlusJsDefault.default));
parcelHelpers.export(exports, "GitBranchPlusIcon", ()=>(0, _gitBranchPlusJsDefault.default));
parcelHelpers.export(exports, "LucideGitBranchPlus", ()=>(0, _gitBranchPlusJsDefault.default));
parcelHelpers.export(exports, "GitBranch", ()=>(0, _gitBranchJsDefault.default));
parcelHelpers.export(exports, "GitBranchIcon", ()=>(0, _gitBranchJsDefault.default));
parcelHelpers.export(exports, "LucideGitBranch", ()=>(0, _gitBranchJsDefault.default));
parcelHelpers.export(exports, "GitCommitVertical", ()=>(0, _gitCommitVerticalJsDefault.default));
parcelHelpers.export(exports, "GitCommitVerticalIcon", ()=>(0, _gitCommitVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideGitCommitVertical", ()=>(0, _gitCommitVerticalJsDefault.default));
parcelHelpers.export(exports, "GitCompareArrows", ()=>(0, _gitCompareArrowsJsDefault.default));
parcelHelpers.export(exports, "GitCompareArrowsIcon", ()=>(0, _gitCompareArrowsJsDefault.default));
parcelHelpers.export(exports, "LucideGitCompareArrows", ()=>(0, _gitCompareArrowsJsDefault.default));
parcelHelpers.export(exports, "GitCompare", ()=>(0, _gitCompareJsDefault.default));
parcelHelpers.export(exports, "GitCompareIcon", ()=>(0, _gitCompareJsDefault.default));
parcelHelpers.export(exports, "LucideGitCompare", ()=>(0, _gitCompareJsDefault.default));
parcelHelpers.export(exports, "GitFork", ()=>(0, _gitForkJsDefault.default));
parcelHelpers.export(exports, "GitForkIcon", ()=>(0, _gitForkJsDefault.default));
parcelHelpers.export(exports, "LucideGitFork", ()=>(0, _gitForkJsDefault.default));
parcelHelpers.export(exports, "GitGraph", ()=>(0, _gitGraphJsDefault.default));
parcelHelpers.export(exports, "GitGraphIcon", ()=>(0, _gitGraphJsDefault.default));
parcelHelpers.export(exports, "LucideGitGraph", ()=>(0, _gitGraphJsDefault.default));
parcelHelpers.export(exports, "GitMerge", ()=>(0, _gitMergeJsDefault.default));
parcelHelpers.export(exports, "GitMergeIcon", ()=>(0, _gitMergeJsDefault.default));
parcelHelpers.export(exports, "LucideGitMerge", ()=>(0, _gitMergeJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestArrow", ()=>(0, _gitPullRequestArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestArrowIcon", ()=>(0, _gitPullRequestArrowJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestArrow", ()=>(0, _gitPullRequestArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestClosed", ()=>(0, _gitPullRequestClosedJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestClosedIcon", ()=>(0, _gitPullRequestClosedJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestClosed", ()=>(0, _gitPullRequestClosedJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreateArrow", ()=>(0, _gitPullRequestCreateArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreateArrowIcon", ()=>(0, _gitPullRequestCreateArrowJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestCreateArrow", ()=>(0, _gitPullRequestCreateArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreate", ()=>(0, _gitPullRequestCreateJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreateIcon", ()=>(0, _gitPullRequestCreateJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestCreate", ()=>(0, _gitPullRequestCreateJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestDraft", ()=>(0, _gitPullRequestDraftJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestDraftIcon", ()=>(0, _gitPullRequestDraftJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestDraft", ()=>(0, _gitPullRequestDraftJsDefault.default));
parcelHelpers.export(exports, "Github", ()=>(0, _githubJsDefault.default));
parcelHelpers.export(exports, "GithubIcon", ()=>(0, _githubJsDefault.default));
parcelHelpers.export(exports, "LucideGithub", ()=>(0, _githubJsDefault.default));
parcelHelpers.export(exports, "GitPullRequest", ()=>(0, _gitPullRequestJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestIcon", ()=>(0, _gitPullRequestJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequest", ()=>(0, _gitPullRequestJsDefault.default));
parcelHelpers.export(exports, "Gitlab", ()=>(0, _gitlabJsDefault.default));
parcelHelpers.export(exports, "GitlabIcon", ()=>(0, _gitlabJsDefault.default));
parcelHelpers.export(exports, "LucideGitlab", ()=>(0, _gitlabJsDefault.default));
parcelHelpers.export(exports, "GlassWater", ()=>(0, _glassWaterJsDefault.default));
parcelHelpers.export(exports, "GlassWaterIcon", ()=>(0, _glassWaterJsDefault.default));
parcelHelpers.export(exports, "LucideGlassWater", ()=>(0, _glassWaterJsDefault.default));
parcelHelpers.export(exports, "Glasses", ()=>(0, _glassesJsDefault.default));
parcelHelpers.export(exports, "GlassesIcon", ()=>(0, _glassesJsDefault.default));
parcelHelpers.export(exports, "LucideGlasses", ()=>(0, _glassesJsDefault.default));
parcelHelpers.export(exports, "GlobeLock", ()=>(0, _globeLockJsDefault.default));
parcelHelpers.export(exports, "GlobeLockIcon", ()=>(0, _globeLockJsDefault.default));
parcelHelpers.export(exports, "LucideGlobeLock", ()=>(0, _globeLockJsDefault.default));
parcelHelpers.export(exports, "Globe", ()=>(0, _globeJsDefault.default));
parcelHelpers.export(exports, "GlobeIcon", ()=>(0, _globeJsDefault.default));
parcelHelpers.export(exports, "LucideGlobe", ()=>(0, _globeJsDefault.default));
parcelHelpers.export(exports, "Goal", ()=>(0, _goalJsDefault.default));
parcelHelpers.export(exports, "GoalIcon", ()=>(0, _goalJsDefault.default));
parcelHelpers.export(exports, "LucideGoal", ()=>(0, _goalJsDefault.default));
parcelHelpers.export(exports, "Gpu", ()=>(0, _gpuJsDefault.default));
parcelHelpers.export(exports, "GpuIcon", ()=>(0, _gpuJsDefault.default));
parcelHelpers.export(exports, "LucideGpu", ()=>(0, _gpuJsDefault.default));
parcelHelpers.export(exports, "Grab", ()=>(0, _grabJsDefault.default));
parcelHelpers.export(exports, "GrabIcon", ()=>(0, _grabJsDefault.default));
parcelHelpers.export(exports, "LucideGrab", ()=>(0, _grabJsDefault.default));
parcelHelpers.export(exports, "GraduationCap", ()=>(0, _graduationCapJsDefault.default));
parcelHelpers.export(exports, "GraduationCapIcon", ()=>(0, _graduationCapJsDefault.default));
parcelHelpers.export(exports, "LucideGraduationCap", ()=>(0, _graduationCapJsDefault.default));
parcelHelpers.export(exports, "Grape", ()=>(0, _grapeJsDefault.default));
parcelHelpers.export(exports, "GrapeIcon", ()=>(0, _grapeJsDefault.default));
parcelHelpers.export(exports, "LucideGrape", ()=>(0, _grapeJsDefault.default));
parcelHelpers.export(exports, "Grid3x2", ()=>(0, _grid3X2JsDefault.default));
parcelHelpers.export(exports, "Grid3x2Icon", ()=>(0, _grid3X2JsDefault.default));
parcelHelpers.export(exports, "LucideGrid3x2", ()=>(0, _grid3X2JsDefault.default));
parcelHelpers.export(exports, "GripHorizontal", ()=>(0, _gripHorizontalJsDefault.default));
parcelHelpers.export(exports, "GripHorizontalIcon", ()=>(0, _gripHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGripHorizontal", ()=>(0, _gripHorizontalJsDefault.default));
parcelHelpers.export(exports, "GripVertical", ()=>(0, _gripVerticalJsDefault.default));
parcelHelpers.export(exports, "GripVerticalIcon", ()=>(0, _gripVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideGripVertical", ()=>(0, _gripVerticalJsDefault.default));
parcelHelpers.export(exports, "Grip", ()=>(0, _gripJsDefault.default));
parcelHelpers.export(exports, "GripIcon", ()=>(0, _gripJsDefault.default));
parcelHelpers.export(exports, "LucideGrip", ()=>(0, _gripJsDefault.default));
parcelHelpers.export(exports, "Group", ()=>(0, _groupJsDefault.default));
parcelHelpers.export(exports, "GroupIcon", ()=>(0, _groupJsDefault.default));
parcelHelpers.export(exports, "LucideGroup", ()=>(0, _groupJsDefault.default));
parcelHelpers.export(exports, "Guitar", ()=>(0, _guitarJsDefault.default));
parcelHelpers.export(exports, "GuitarIcon", ()=>(0, _guitarJsDefault.default));
parcelHelpers.export(exports, "LucideGuitar", ()=>(0, _guitarJsDefault.default));
parcelHelpers.export(exports, "Ham", ()=>(0, _hamJsDefault.default));
parcelHelpers.export(exports, "HamIcon", ()=>(0, _hamJsDefault.default));
parcelHelpers.export(exports, "LucideHam", ()=>(0, _hamJsDefault.default));
parcelHelpers.export(exports, "Hammer", ()=>(0, _hammerJsDefault.default));
parcelHelpers.export(exports, "HammerIcon", ()=>(0, _hammerJsDefault.default));
parcelHelpers.export(exports, "LucideHammer", ()=>(0, _hammerJsDefault.default));
parcelHelpers.export(exports, "Hamburger", ()=>(0, _hamburgerJsDefault.default));
parcelHelpers.export(exports, "HamburgerIcon", ()=>(0, _hamburgerJsDefault.default));
parcelHelpers.export(exports, "LucideHamburger", ()=>(0, _hamburgerJsDefault.default));
parcelHelpers.export(exports, "HandCoins", ()=>(0, _handCoinsJsDefault.default));
parcelHelpers.export(exports, "HandCoinsIcon", ()=>(0, _handCoinsJsDefault.default));
parcelHelpers.export(exports, "LucideHandCoins", ()=>(0, _handCoinsJsDefault.default));
parcelHelpers.export(exports, "HandHeart", ()=>(0, _handHeartJsDefault.default));
parcelHelpers.export(exports, "HandHeartIcon", ()=>(0, _handHeartJsDefault.default));
parcelHelpers.export(exports, "LucideHandHeart", ()=>(0, _handHeartJsDefault.default));
parcelHelpers.export(exports, "HandMetal", ()=>(0, _handMetalJsDefault.default));
parcelHelpers.export(exports, "HandMetalIcon", ()=>(0, _handMetalJsDefault.default));
parcelHelpers.export(exports, "LucideHandMetal", ()=>(0, _handMetalJsDefault.default));
parcelHelpers.export(exports, "HandPlatter", ()=>(0, _handPlatterJsDefault.default));
parcelHelpers.export(exports, "HandPlatterIcon", ()=>(0, _handPlatterJsDefault.default));
parcelHelpers.export(exports, "LucideHandPlatter", ()=>(0, _handPlatterJsDefault.default));
parcelHelpers.export(exports, "Hand", ()=>(0, _handJsDefault.default));
parcelHelpers.export(exports, "HandIcon", ()=>(0, _handJsDefault.default));
parcelHelpers.export(exports, "LucideHand", ()=>(0, _handJsDefault.default));
parcelHelpers.export(exports, "Handshake", ()=>(0, _handshakeJsDefault.default));
parcelHelpers.export(exports, "HandshakeIcon", ()=>(0, _handshakeJsDefault.default));
parcelHelpers.export(exports, "LucideHandshake", ()=>(0, _handshakeJsDefault.default));
parcelHelpers.export(exports, "HardDriveDownload", ()=>(0, _hardDriveDownloadJsDefault.default));
parcelHelpers.export(exports, "HardDriveDownloadIcon", ()=>(0, _hardDriveDownloadJsDefault.default));
parcelHelpers.export(exports, "LucideHardDriveDownload", ()=>(0, _hardDriveDownloadJsDefault.default));
parcelHelpers.export(exports, "HardDrive", ()=>(0, _hardDriveJsDefault.default));
parcelHelpers.export(exports, "HardDriveIcon", ()=>(0, _hardDriveJsDefault.default));
parcelHelpers.export(exports, "LucideHardDrive", ()=>(0, _hardDriveJsDefault.default));
parcelHelpers.export(exports, "HardDriveUpload", ()=>(0, _hardDriveUploadJsDefault.default));
parcelHelpers.export(exports, "HardDriveUploadIcon", ()=>(0, _hardDriveUploadJsDefault.default));
parcelHelpers.export(exports, "LucideHardDriveUpload", ()=>(0, _hardDriveUploadJsDefault.default));
parcelHelpers.export(exports, "HardHat", ()=>(0, _hardHatJsDefault.default));
parcelHelpers.export(exports, "HardHatIcon", ()=>(0, _hardHatJsDefault.default));
parcelHelpers.export(exports, "LucideHardHat", ()=>(0, _hardHatJsDefault.default));
parcelHelpers.export(exports, "Hash", ()=>(0, _hashJsDefault.default));
parcelHelpers.export(exports, "HashIcon", ()=>(0, _hashJsDefault.default));
parcelHelpers.export(exports, "LucideHash", ()=>(0, _hashJsDefault.default));
parcelHelpers.export(exports, "Haze", ()=>(0, _hazeJsDefault.default));
parcelHelpers.export(exports, "HazeIcon", ()=>(0, _hazeJsDefault.default));
parcelHelpers.export(exports, "LucideHaze", ()=>(0, _hazeJsDefault.default));
parcelHelpers.export(exports, "HdmiPort", ()=>(0, _hdmiPortJsDefault.default));
parcelHelpers.export(exports, "HdmiPortIcon", ()=>(0, _hdmiPortJsDefault.default));
parcelHelpers.export(exports, "LucideHdmiPort", ()=>(0, _hdmiPortJsDefault.default));
parcelHelpers.export(exports, "Heading1", ()=>(0, _heading1JsDefault.default));
parcelHelpers.export(exports, "Heading1Icon", ()=>(0, _heading1JsDefault.default));
parcelHelpers.export(exports, "LucideHeading1", ()=>(0, _heading1JsDefault.default));
parcelHelpers.export(exports, "Heading2", ()=>(0, _heading2JsDefault.default));
parcelHelpers.export(exports, "Heading2Icon", ()=>(0, _heading2JsDefault.default));
parcelHelpers.export(exports, "LucideHeading2", ()=>(0, _heading2JsDefault.default));
parcelHelpers.export(exports, "Heading3", ()=>(0, _heading3JsDefault.default));
parcelHelpers.export(exports, "Heading3Icon", ()=>(0, _heading3JsDefault.default));
parcelHelpers.export(exports, "LucideHeading3", ()=>(0, _heading3JsDefault.default));
parcelHelpers.export(exports, "Heading4", ()=>(0, _heading4JsDefault.default));
parcelHelpers.export(exports, "Heading4Icon", ()=>(0, _heading4JsDefault.default));
parcelHelpers.export(exports, "LucideHeading4", ()=>(0, _heading4JsDefault.default));
parcelHelpers.export(exports, "Heading5", ()=>(0, _heading5JsDefault.default));
parcelHelpers.export(exports, "Heading5Icon", ()=>(0, _heading5JsDefault.default));
parcelHelpers.export(exports, "LucideHeading5", ()=>(0, _heading5JsDefault.default));
parcelHelpers.export(exports, "Heading6", ()=>(0, _heading6JsDefault.default));
parcelHelpers.export(exports, "Heading6Icon", ()=>(0, _heading6JsDefault.default));
parcelHelpers.export(exports, "LucideHeading6", ()=>(0, _heading6JsDefault.default));
parcelHelpers.export(exports, "Heading", ()=>(0, _headingJsDefault.default));
parcelHelpers.export(exports, "HeadingIcon", ()=>(0, _headingJsDefault.default));
parcelHelpers.export(exports, "LucideHeading", ()=>(0, _headingJsDefault.default));
parcelHelpers.export(exports, "HeadphoneOff", ()=>(0, _headphoneOffJsDefault.default));
parcelHelpers.export(exports, "HeadphoneOffIcon", ()=>(0, _headphoneOffJsDefault.default));
parcelHelpers.export(exports, "LucideHeadphoneOff", ()=>(0, _headphoneOffJsDefault.default));
parcelHelpers.export(exports, "Headphones", ()=>(0, _headphonesJsDefault.default));
parcelHelpers.export(exports, "HeadphonesIcon", ()=>(0, _headphonesJsDefault.default));
parcelHelpers.export(exports, "LucideHeadphones", ()=>(0, _headphonesJsDefault.default));
parcelHelpers.export(exports, "Headset", ()=>(0, _headsetJsDefault.default));
parcelHelpers.export(exports, "HeadsetIcon", ()=>(0, _headsetJsDefault.default));
parcelHelpers.export(exports, "LucideHeadset", ()=>(0, _headsetJsDefault.default));
parcelHelpers.export(exports, "HeartCrack", ()=>(0, _heartCrackJsDefault.default));
parcelHelpers.export(exports, "HeartCrackIcon", ()=>(0, _heartCrackJsDefault.default));
parcelHelpers.export(exports, "LucideHeartCrack", ()=>(0, _heartCrackJsDefault.default));
parcelHelpers.export(exports, "HeartHandshake", ()=>(0, _heartHandshakeJsDefault.default));
parcelHelpers.export(exports, "HeartHandshakeIcon", ()=>(0, _heartHandshakeJsDefault.default));
parcelHelpers.export(exports, "LucideHeartHandshake", ()=>(0, _heartHandshakeJsDefault.default));
parcelHelpers.export(exports, "HeartMinus", ()=>(0, _heartMinusJsDefault.default));
parcelHelpers.export(exports, "HeartMinusIcon", ()=>(0, _heartMinusJsDefault.default));
parcelHelpers.export(exports, "LucideHeartMinus", ()=>(0, _heartMinusJsDefault.default));
parcelHelpers.export(exports, "HeartOff", ()=>(0, _heartOffJsDefault.default));
parcelHelpers.export(exports, "HeartOffIcon", ()=>(0, _heartOffJsDefault.default));
parcelHelpers.export(exports, "LucideHeartOff", ()=>(0, _heartOffJsDefault.default));
parcelHelpers.export(exports, "HeartPlus", ()=>(0, _heartPlusJsDefault.default));
parcelHelpers.export(exports, "HeartPlusIcon", ()=>(0, _heartPlusJsDefault.default));
parcelHelpers.export(exports, "LucideHeartPlus", ()=>(0, _heartPlusJsDefault.default));
parcelHelpers.export(exports, "HeartPulse", ()=>(0, _heartPulseJsDefault.default));
parcelHelpers.export(exports, "HeartPulseIcon", ()=>(0, _heartPulseJsDefault.default));
parcelHelpers.export(exports, "LucideHeartPulse", ()=>(0, _heartPulseJsDefault.default));
parcelHelpers.export(exports, "Heart", ()=>(0, _heartJsDefault.default));
parcelHelpers.export(exports, "HeartIcon", ()=>(0, _heartJsDefault.default));
parcelHelpers.export(exports, "LucideHeart", ()=>(0, _heartJsDefault.default));
parcelHelpers.export(exports, "Heater", ()=>(0, _heaterJsDefault.default));
parcelHelpers.export(exports, "HeaterIcon", ()=>(0, _heaterJsDefault.default));
parcelHelpers.export(exports, "LucideHeater", ()=>(0, _heaterJsDefault.default));
parcelHelpers.export(exports, "Hexagon", ()=>(0, _hexagonJsDefault.default));
parcelHelpers.export(exports, "HexagonIcon", ()=>(0, _hexagonJsDefault.default));
parcelHelpers.export(exports, "LucideHexagon", ()=>(0, _hexagonJsDefault.default));
parcelHelpers.export(exports, "Highlighter", ()=>(0, _highlighterJsDefault.default));
parcelHelpers.export(exports, "HighlighterIcon", ()=>(0, _highlighterJsDefault.default));
parcelHelpers.export(exports, "LucideHighlighter", ()=>(0, _highlighterJsDefault.default));
parcelHelpers.export(exports, "HopOff", ()=>(0, _hopOffJsDefault.default));
parcelHelpers.export(exports, "HopOffIcon", ()=>(0, _hopOffJsDefault.default));
parcelHelpers.export(exports, "LucideHopOff", ()=>(0, _hopOffJsDefault.default));
parcelHelpers.export(exports, "History", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "HistoryIcon", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "LucideHistory", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "Hop", ()=>(0, _hopJsDefault.default));
parcelHelpers.export(exports, "HopIcon", ()=>(0, _hopJsDefault.default));
parcelHelpers.export(exports, "LucideHop", ()=>(0, _hopJsDefault.default));
parcelHelpers.export(exports, "Hospital", ()=>(0, _hospitalJsDefault.default));
parcelHelpers.export(exports, "HospitalIcon", ()=>(0, _hospitalJsDefault.default));
parcelHelpers.export(exports, "LucideHospital", ()=>(0, _hospitalJsDefault.default));
parcelHelpers.export(exports, "Hotel", ()=>(0, _hotelJsDefault.default));
parcelHelpers.export(exports, "HotelIcon", ()=>(0, _hotelJsDefault.default));
parcelHelpers.export(exports, "LucideHotel", ()=>(0, _hotelJsDefault.default));
parcelHelpers.export(exports, "HousePlug", ()=>(0, _housePlugJsDefault.default));
parcelHelpers.export(exports, "HousePlugIcon", ()=>(0, _housePlugJsDefault.default));
parcelHelpers.export(exports, "LucideHousePlug", ()=>(0, _housePlugJsDefault.default));
parcelHelpers.export(exports, "Hourglass", ()=>(0, _hourglassJsDefault.default));
parcelHelpers.export(exports, "HourglassIcon", ()=>(0, _hourglassJsDefault.default));
parcelHelpers.export(exports, "LucideHourglass", ()=>(0, _hourglassJsDefault.default));
parcelHelpers.export(exports, "HouseWifi", ()=>(0, _houseWifiJsDefault.default));
parcelHelpers.export(exports, "HouseWifiIcon", ()=>(0, _houseWifiJsDefault.default));
parcelHelpers.export(exports, "LucideHouseWifi", ()=>(0, _houseWifiJsDefault.default));
parcelHelpers.export(exports, "HousePlus", ()=>(0, _housePlusJsDefault.default));
parcelHelpers.export(exports, "HousePlusIcon", ()=>(0, _housePlusJsDefault.default));
parcelHelpers.export(exports, "LucideHousePlus", ()=>(0, _housePlusJsDefault.default));
parcelHelpers.export(exports, "IdCardLanyard", ()=>(0, _idCardLanyardJsDefault.default));
parcelHelpers.export(exports, "IdCardLanyardIcon", ()=>(0, _idCardLanyardJsDefault.default));
parcelHelpers.export(exports, "LucideIdCardLanyard", ()=>(0, _idCardLanyardJsDefault.default));
parcelHelpers.export(exports, "IdCard", ()=>(0, _idCardJsDefault.default));
parcelHelpers.export(exports, "IdCardIcon", ()=>(0, _idCardJsDefault.default));
parcelHelpers.export(exports, "LucideIdCard", ()=>(0, _idCardJsDefault.default));
parcelHelpers.export(exports, "ImageDown", ()=>(0, _imageDownJsDefault.default));
parcelHelpers.export(exports, "ImageDownIcon", ()=>(0, _imageDownJsDefault.default));
parcelHelpers.export(exports, "LucideImageDown", ()=>(0, _imageDownJsDefault.default));
parcelHelpers.export(exports, "ImageMinus", ()=>(0, _imageMinusJsDefault.default));
parcelHelpers.export(exports, "ImageMinusIcon", ()=>(0, _imageMinusJsDefault.default));
parcelHelpers.export(exports, "LucideImageMinus", ()=>(0, _imageMinusJsDefault.default));
parcelHelpers.export(exports, "ImageOff", ()=>(0, _imageOffJsDefault.default));
parcelHelpers.export(exports, "ImageOffIcon", ()=>(0, _imageOffJsDefault.default));
parcelHelpers.export(exports, "LucideImageOff", ()=>(0, _imageOffJsDefault.default));
parcelHelpers.export(exports, "ImagePlay", ()=>(0, _imagePlayJsDefault.default));
parcelHelpers.export(exports, "ImagePlayIcon", ()=>(0, _imagePlayJsDefault.default));
parcelHelpers.export(exports, "LucideImagePlay", ()=>(0, _imagePlayJsDefault.default));
parcelHelpers.export(exports, "ImagePlus", ()=>(0, _imagePlusJsDefault.default));
parcelHelpers.export(exports, "ImagePlusIcon", ()=>(0, _imagePlusJsDefault.default));
parcelHelpers.export(exports, "LucideImagePlus", ()=>(0, _imagePlusJsDefault.default));
parcelHelpers.export(exports, "ImageUp", ()=>(0, _imageUpJsDefault.default));
parcelHelpers.export(exports, "ImageUpIcon", ()=>(0, _imageUpJsDefault.default));
parcelHelpers.export(exports, "LucideImageUp", ()=>(0, _imageUpJsDefault.default));
parcelHelpers.export(exports, "Image", ()=>(0, _imageJsDefault.default));
parcelHelpers.export(exports, "ImageIcon", ()=>(0, _imageJsDefault.default));
parcelHelpers.export(exports, "LucideImage", ()=>(0, _imageJsDefault.default));
parcelHelpers.export(exports, "ImageUpscale", ()=>(0, _imageUpscaleJsDefault.default));
parcelHelpers.export(exports, "ImageUpscaleIcon", ()=>(0, _imageUpscaleJsDefault.default));
parcelHelpers.export(exports, "LucideImageUpscale", ()=>(0, _imageUpscaleJsDefault.default));
parcelHelpers.export(exports, "Images", ()=>(0, _imagesJsDefault.default));
parcelHelpers.export(exports, "ImagesIcon", ()=>(0, _imagesJsDefault.default));
parcelHelpers.export(exports, "LucideImages", ()=>(0, _imagesJsDefault.default));
parcelHelpers.export(exports, "Import", ()=>(0, _importJsDefault.default));
parcelHelpers.export(exports, "ImportIcon", ()=>(0, _importJsDefault.default));
parcelHelpers.export(exports, "LucideImport", ()=>(0, _importJsDefault.default));
parcelHelpers.export(exports, "Inbox", ()=>(0, _inboxJsDefault.default));
parcelHelpers.export(exports, "InboxIcon", ()=>(0, _inboxJsDefault.default));
parcelHelpers.export(exports, "LucideInbox", ()=>(0, _inboxJsDefault.default));
parcelHelpers.export(exports, "IndianRupee", ()=>(0, _indianRupeeJsDefault.default));
parcelHelpers.export(exports, "IndianRupeeIcon", ()=>(0, _indianRupeeJsDefault.default));
parcelHelpers.export(exports, "LucideIndianRupee", ()=>(0, _indianRupeeJsDefault.default));
parcelHelpers.export(exports, "Infinity", ()=>(0, _infinityJsDefault.default));
parcelHelpers.export(exports, "InfinityIcon", ()=>(0, _infinityJsDefault.default));
parcelHelpers.export(exports, "LucideInfinity", ()=>(0, _infinityJsDefault.default));
parcelHelpers.export(exports, "InspectionPanel", ()=>(0, _inspectionPanelJsDefault.default));
parcelHelpers.export(exports, "InspectionPanelIcon", ()=>(0, _inspectionPanelJsDefault.default));
parcelHelpers.export(exports, "LucideInspectionPanel", ()=>(0, _inspectionPanelJsDefault.default));
parcelHelpers.export(exports, "Info", ()=>(0, _infoJsDefault.default));
parcelHelpers.export(exports, "InfoIcon", ()=>(0, _infoJsDefault.default));
parcelHelpers.export(exports, "LucideInfo", ()=>(0, _infoJsDefault.default));
parcelHelpers.export(exports, "Instagram", ()=>(0, _instagramJsDefault.default));
parcelHelpers.export(exports, "InstagramIcon", ()=>(0, _instagramJsDefault.default));
parcelHelpers.export(exports, "LucideInstagram", ()=>(0, _instagramJsDefault.default));
parcelHelpers.export(exports, "Italic", ()=>(0, _italicJsDefault.default));
parcelHelpers.export(exports, "ItalicIcon", ()=>(0, _italicJsDefault.default));
parcelHelpers.export(exports, "LucideItalic", ()=>(0, _italicJsDefault.default));
parcelHelpers.export(exports, "IterationCcw", ()=>(0, _iterationCcwJsDefault.default));
parcelHelpers.export(exports, "IterationCcwIcon", ()=>(0, _iterationCcwJsDefault.default));
parcelHelpers.export(exports, "LucideIterationCcw", ()=>(0, _iterationCcwJsDefault.default));
parcelHelpers.export(exports, "IterationCw", ()=>(0, _iterationCwJsDefault.default));
parcelHelpers.export(exports, "IterationCwIcon", ()=>(0, _iterationCwJsDefault.default));
parcelHelpers.export(exports, "LucideIterationCw", ()=>(0, _iterationCwJsDefault.default));
parcelHelpers.export(exports, "JapaneseYen", ()=>(0, _japaneseYenJsDefault.default));
parcelHelpers.export(exports, "JapaneseYenIcon", ()=>(0, _japaneseYenJsDefault.default));
parcelHelpers.export(exports, "LucideJapaneseYen", ()=>(0, _japaneseYenJsDefault.default));
parcelHelpers.export(exports, "Joystick", ()=>(0, _joystickJsDefault.default));
parcelHelpers.export(exports, "JoystickIcon", ()=>(0, _joystickJsDefault.default));
parcelHelpers.export(exports, "LucideJoystick", ()=>(0, _joystickJsDefault.default));
parcelHelpers.export(exports, "Kanban", ()=>(0, _kanbanJsDefault.default));
parcelHelpers.export(exports, "KanbanIcon", ()=>(0, _kanbanJsDefault.default));
parcelHelpers.export(exports, "LucideKanban", ()=>(0, _kanbanJsDefault.default));
parcelHelpers.export(exports, "KeyRound", ()=>(0, _keyRoundJsDefault.default));
parcelHelpers.export(exports, "KeyRoundIcon", ()=>(0, _keyRoundJsDefault.default));
parcelHelpers.export(exports, "LucideKeyRound", ()=>(0, _keyRoundJsDefault.default));
parcelHelpers.export(exports, "KeySquare", ()=>(0, _keySquareJsDefault.default));
parcelHelpers.export(exports, "KeySquareIcon", ()=>(0, _keySquareJsDefault.default));
parcelHelpers.export(exports, "LucideKeySquare", ()=>(0, _keySquareJsDefault.default));
parcelHelpers.export(exports, "Key", ()=>(0, _keyJsDefault.default));
parcelHelpers.export(exports, "KeyIcon", ()=>(0, _keyJsDefault.default));
parcelHelpers.export(exports, "LucideKey", ()=>(0, _keyJsDefault.default));
parcelHelpers.export(exports, "KeyboardMusic", ()=>(0, _keyboardMusicJsDefault.default));
parcelHelpers.export(exports, "KeyboardMusicIcon", ()=>(0, _keyboardMusicJsDefault.default));
parcelHelpers.export(exports, "LucideKeyboardMusic", ()=>(0, _keyboardMusicJsDefault.default));
parcelHelpers.export(exports, "KeyboardOff", ()=>(0, _keyboardOffJsDefault.default));
parcelHelpers.export(exports, "KeyboardOffIcon", ()=>(0, _keyboardOffJsDefault.default));
parcelHelpers.export(exports, "LucideKeyboardOff", ()=>(0, _keyboardOffJsDefault.default));
parcelHelpers.export(exports, "Keyboard", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "KeyboardIcon", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "LucideKeyboard", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "LampCeiling", ()=>(0, _lampCeilingJsDefault.default));
parcelHelpers.export(exports, "LampCeilingIcon", ()=>(0, _lampCeilingJsDefault.default));
parcelHelpers.export(exports, "LucideLampCeiling", ()=>(0, _lampCeilingJsDefault.default));
parcelHelpers.export(exports, "LampDesk", ()=>(0, _lampDeskJsDefault.default));
parcelHelpers.export(exports, "LampDeskIcon", ()=>(0, _lampDeskJsDefault.default));
parcelHelpers.export(exports, "LucideLampDesk", ()=>(0, _lampDeskJsDefault.default));
parcelHelpers.export(exports, "LampFloor", ()=>(0, _lampFloorJsDefault.default));
parcelHelpers.export(exports, "LampFloorIcon", ()=>(0, _lampFloorJsDefault.default));
parcelHelpers.export(exports, "LucideLampFloor", ()=>(0, _lampFloorJsDefault.default));
parcelHelpers.export(exports, "LampWallDown", ()=>(0, _lampWallDownJsDefault.default));
parcelHelpers.export(exports, "LampWallDownIcon", ()=>(0, _lampWallDownJsDefault.default));
parcelHelpers.export(exports, "LucideLampWallDown", ()=>(0, _lampWallDownJsDefault.default));
parcelHelpers.export(exports, "LampWallUp", ()=>(0, _lampWallUpJsDefault.default));
parcelHelpers.export(exports, "LampWallUpIcon", ()=>(0, _lampWallUpJsDefault.default));
parcelHelpers.export(exports, "LucideLampWallUp", ()=>(0, _lampWallUpJsDefault.default));
parcelHelpers.export(exports, "Lamp", ()=>(0, _lampJsDefault.default));
parcelHelpers.export(exports, "LampIcon", ()=>(0, _lampJsDefault.default));
parcelHelpers.export(exports, "LucideLamp", ()=>(0, _lampJsDefault.default));
parcelHelpers.export(exports, "LandPlot", ()=>(0, _landPlotJsDefault.default));
parcelHelpers.export(exports, "LandPlotIcon", ()=>(0, _landPlotJsDefault.default));
parcelHelpers.export(exports, "LucideLandPlot", ()=>(0, _landPlotJsDefault.default));
parcelHelpers.export(exports, "Landmark", ()=>(0, _landmarkJsDefault.default));
parcelHelpers.export(exports, "LandmarkIcon", ()=>(0, _landmarkJsDefault.default));
parcelHelpers.export(exports, "LucideLandmark", ()=>(0, _landmarkJsDefault.default));
parcelHelpers.export(exports, "Languages", ()=>(0, _languagesJsDefault.default));
parcelHelpers.export(exports, "LanguagesIcon", ()=>(0, _languagesJsDefault.default));
parcelHelpers.export(exports, "LucideLanguages", ()=>(0, _languagesJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimalCheck", ()=>(0, _laptopMinimalCheckJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimalCheckIcon", ()=>(0, _laptopMinimalCheckJsDefault.default));
parcelHelpers.export(exports, "LucideLaptopMinimalCheck", ()=>(0, _laptopMinimalCheckJsDefault.default));
parcelHelpers.export(exports, "Laptop", ()=>(0, _laptopJsDefault.default));
parcelHelpers.export(exports, "LaptopIcon", ()=>(0, _laptopJsDefault.default));
parcelHelpers.export(exports, "LucideLaptop", ()=>(0, _laptopJsDefault.default));
parcelHelpers.export(exports, "LassoSelect", ()=>(0, _lassoSelectJsDefault.default));
parcelHelpers.export(exports, "LassoSelectIcon", ()=>(0, _lassoSelectJsDefault.default));
parcelHelpers.export(exports, "LucideLassoSelect", ()=>(0, _lassoSelectJsDefault.default));
parcelHelpers.export(exports, "Lasso", ()=>(0, _lassoJsDefault.default));
parcelHelpers.export(exports, "LassoIcon", ()=>(0, _lassoJsDefault.default));
parcelHelpers.export(exports, "LucideLasso", ()=>(0, _lassoJsDefault.default));
parcelHelpers.export(exports, "Laugh", ()=>(0, _laughJsDefault.default));
parcelHelpers.export(exports, "LaughIcon", ()=>(0, _laughJsDefault.default));
parcelHelpers.export(exports, "LucideLaugh", ()=>(0, _laughJsDefault.default));
parcelHelpers.export(exports, "Layers2", ()=>(0, _layers2JsDefault.default));
parcelHelpers.export(exports, "Layers2Icon", ()=>(0, _layers2JsDefault.default));
parcelHelpers.export(exports, "LucideLayers2", ()=>(0, _layers2JsDefault.default));
parcelHelpers.export(exports, "LayoutDashboard", ()=>(0, _layoutDashboardJsDefault.default));
parcelHelpers.export(exports, "LayoutDashboardIcon", ()=>(0, _layoutDashboardJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutDashboard", ()=>(0, _layoutDashboardJsDefault.default));
parcelHelpers.export(exports, "LayoutGrid", ()=>(0, _layoutGridJsDefault.default));
parcelHelpers.export(exports, "LayoutGridIcon", ()=>(0, _layoutGridJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutGrid", ()=>(0, _layoutGridJsDefault.default));
parcelHelpers.export(exports, "LayoutList", ()=>(0, _layoutListJsDefault.default));
parcelHelpers.export(exports, "LayoutListIcon", ()=>(0, _layoutListJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutList", ()=>(0, _layoutListJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelLeft", ()=>(0, _layoutPanelLeftJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelLeftIcon", ()=>(0, _layoutPanelLeftJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutPanelLeft", ()=>(0, _layoutPanelLeftJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelTop", ()=>(0, _layoutPanelTopJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelTopIcon", ()=>(0, _layoutPanelTopJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutPanelTop", ()=>(0, _layoutPanelTopJsDefault.default));
parcelHelpers.export(exports, "LayoutTemplate", ()=>(0, _layoutTemplateJsDefault.default));
parcelHelpers.export(exports, "LayoutTemplateIcon", ()=>(0, _layoutTemplateJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutTemplate", ()=>(0, _layoutTemplateJsDefault.default));
parcelHelpers.export(exports, "Leaf", ()=>(0, _leafJsDefault.default));
parcelHelpers.export(exports, "LeafIcon", ()=>(0, _leafJsDefault.default));
parcelHelpers.export(exports, "LucideLeaf", ()=>(0, _leafJsDefault.default));
parcelHelpers.export(exports, "Lectern", ()=>(0, _lecternJsDefault.default));
parcelHelpers.export(exports, "LecternIcon", ()=>(0, _lecternJsDefault.default));
parcelHelpers.export(exports, "LucideLectern", ()=>(0, _lecternJsDefault.default));
parcelHelpers.export(exports, "LeafyGreen", ()=>(0, _leafyGreenJsDefault.default));
parcelHelpers.export(exports, "LeafyGreenIcon", ()=>(0, _leafyGreenJsDefault.default));
parcelHelpers.export(exports, "LucideLeafyGreen", ()=>(0, _leafyGreenJsDefault.default));
parcelHelpers.export(exports, "LetterText", ()=>(0, _letterTextJsDefault.default));
parcelHelpers.export(exports, "LetterTextIcon", ()=>(0, _letterTextJsDefault.default));
parcelHelpers.export(exports, "LucideLetterText", ()=>(0, _letterTextJsDefault.default));
parcelHelpers.export(exports, "LibraryBig", ()=>(0, _libraryBigJsDefault.default));
parcelHelpers.export(exports, "LibraryBigIcon", ()=>(0, _libraryBigJsDefault.default));
parcelHelpers.export(exports, "LucideLibraryBig", ()=>(0, _libraryBigJsDefault.default));
parcelHelpers.export(exports, "Library", ()=>(0, _libraryJsDefault.default));
parcelHelpers.export(exports, "LibraryIcon", ()=>(0, _libraryJsDefault.default));
parcelHelpers.export(exports, "LucideLibrary", ()=>(0, _libraryJsDefault.default));
parcelHelpers.export(exports, "LifeBuoy", ()=>(0, _lifeBuoyJsDefault.default));
parcelHelpers.export(exports, "LifeBuoyIcon", ()=>(0, _lifeBuoyJsDefault.default));
parcelHelpers.export(exports, "LucideLifeBuoy", ()=>(0, _lifeBuoyJsDefault.default));
parcelHelpers.export(exports, "Ligature", ()=>(0, _ligatureJsDefault.default));
parcelHelpers.export(exports, "LigatureIcon", ()=>(0, _ligatureJsDefault.default));
parcelHelpers.export(exports, "LucideLigature", ()=>(0, _ligatureJsDefault.default));
parcelHelpers.export(exports, "LightbulbOff", ()=>(0, _lightbulbOffJsDefault.default));
parcelHelpers.export(exports, "LightbulbOffIcon", ()=>(0, _lightbulbOffJsDefault.default));
parcelHelpers.export(exports, "LucideLightbulbOff", ()=>(0, _lightbulbOffJsDefault.default));
parcelHelpers.export(exports, "Lightbulb", ()=>(0, _lightbulbJsDefault.default));
parcelHelpers.export(exports, "LightbulbIcon", ()=>(0, _lightbulbJsDefault.default));
parcelHelpers.export(exports, "LucideLightbulb", ()=>(0, _lightbulbJsDefault.default));
parcelHelpers.export(exports, "Link2Off", ()=>(0, _link2OffJsDefault.default));
parcelHelpers.export(exports, "Link2OffIcon", ()=>(0, _link2OffJsDefault.default));
parcelHelpers.export(exports, "LucideLink2Off", ()=>(0, _link2OffJsDefault.default));
parcelHelpers.export(exports, "Link", ()=>(0, _linkJsDefault.default));
parcelHelpers.export(exports, "LinkIcon", ()=>(0, _linkJsDefault.default));
parcelHelpers.export(exports, "LucideLink", ()=>(0, _linkJsDefault.default));
parcelHelpers.export(exports, "Link2", ()=>(0, _link2JsDefault.default));
parcelHelpers.export(exports, "Link2Icon", ()=>(0, _link2JsDefault.default));
parcelHelpers.export(exports, "LucideLink2", ()=>(0, _link2JsDefault.default));
parcelHelpers.export(exports, "Linkedin", ()=>(0, _linkedinJsDefault.default));
parcelHelpers.export(exports, "LinkedinIcon", ()=>(0, _linkedinJsDefault.default));
parcelHelpers.export(exports, "LucideLinkedin", ()=>(0, _linkedinJsDefault.default));
parcelHelpers.export(exports, "ListCheck", ()=>(0, _listCheckJsDefault.default));
parcelHelpers.export(exports, "ListCheckIcon", ()=>(0, _listCheckJsDefault.default));
parcelHelpers.export(exports, "LucideListCheck", ()=>(0, _listCheckJsDefault.default));
parcelHelpers.export(exports, "ListChecks", ()=>(0, _listChecksJsDefault.default));
parcelHelpers.export(exports, "ListChecksIcon", ()=>(0, _listChecksJsDefault.default));
parcelHelpers.export(exports, "LucideListChecks", ()=>(0, _listChecksJsDefault.default));
parcelHelpers.export(exports, "ListCollapse", ()=>(0, _listCollapseJsDefault.default));
parcelHelpers.export(exports, "ListCollapseIcon", ()=>(0, _listCollapseJsDefault.default));
parcelHelpers.export(exports, "LucideListCollapse", ()=>(0, _listCollapseJsDefault.default));
parcelHelpers.export(exports, "ListFilter", ()=>(0, _listFilterJsDefault.default));
parcelHelpers.export(exports, "ListFilterIcon", ()=>(0, _listFilterJsDefault.default));
parcelHelpers.export(exports, "LucideListFilter", ()=>(0, _listFilterJsDefault.default));
parcelHelpers.export(exports, "ListEnd", ()=>(0, _listEndJsDefault.default));
parcelHelpers.export(exports, "ListEndIcon", ()=>(0, _listEndJsDefault.default));
parcelHelpers.export(exports, "LucideListEnd", ()=>(0, _listEndJsDefault.default));
parcelHelpers.export(exports, "ListFilterPlus", ()=>(0, _listFilterPlusJsDefault.default));
parcelHelpers.export(exports, "ListFilterPlusIcon", ()=>(0, _listFilterPlusJsDefault.default));
parcelHelpers.export(exports, "LucideListFilterPlus", ()=>(0, _listFilterPlusJsDefault.default));
parcelHelpers.export(exports, "ListMinus", ()=>(0, _listMinusJsDefault.default));
parcelHelpers.export(exports, "ListMinusIcon", ()=>(0, _listMinusJsDefault.default));
parcelHelpers.export(exports, "LucideListMinus", ()=>(0, _listMinusJsDefault.default));
parcelHelpers.export(exports, "ListMusic", ()=>(0, _listMusicJsDefault.default));
parcelHelpers.export(exports, "ListMusicIcon", ()=>(0, _listMusicJsDefault.default));
parcelHelpers.export(exports, "LucideListMusic", ()=>(0, _listMusicJsDefault.default));
parcelHelpers.export(exports, "ListPlus", ()=>(0, _listPlusJsDefault.default));
parcelHelpers.export(exports, "ListPlusIcon", ()=>(0, _listPlusJsDefault.default));
parcelHelpers.export(exports, "LucideListPlus", ()=>(0, _listPlusJsDefault.default));
parcelHelpers.export(exports, "ListOrdered", ()=>(0, _listOrderedJsDefault.default));
parcelHelpers.export(exports, "ListOrderedIcon", ()=>(0, _listOrderedJsDefault.default));
parcelHelpers.export(exports, "LucideListOrdered", ()=>(0, _listOrderedJsDefault.default));
parcelHelpers.export(exports, "ListRestart", ()=>(0, _listRestartJsDefault.default));
parcelHelpers.export(exports, "ListRestartIcon", ()=>(0, _listRestartJsDefault.default));
parcelHelpers.export(exports, "LucideListRestart", ()=>(0, _listRestartJsDefault.default));
parcelHelpers.export(exports, "ListStart", ()=>(0, _listStartJsDefault.default));
parcelHelpers.export(exports, "ListStartIcon", ()=>(0, _listStartJsDefault.default));
parcelHelpers.export(exports, "LucideListStart", ()=>(0, _listStartJsDefault.default));
parcelHelpers.export(exports, "ListTodo", ()=>(0, _listTodoJsDefault.default));
parcelHelpers.export(exports, "ListTodoIcon", ()=>(0, _listTodoJsDefault.default));
parcelHelpers.export(exports, "LucideListTodo", ()=>(0, _listTodoJsDefault.default));
parcelHelpers.export(exports, "ListTree", ()=>(0, _listTreeJsDefault.default));
parcelHelpers.export(exports, "ListTreeIcon", ()=>(0, _listTreeJsDefault.default));
parcelHelpers.export(exports, "LucideListTree", ()=>(0, _listTreeJsDefault.default));
parcelHelpers.export(exports, "ListVideo", ()=>(0, _listVideoJsDefault.default));
parcelHelpers.export(exports, "ListVideoIcon", ()=>(0, _listVideoJsDefault.default));
parcelHelpers.export(exports, "LucideListVideo", ()=>(0, _listVideoJsDefault.default));
parcelHelpers.export(exports, "ListX", ()=>(0, _listXJsDefault.default));
parcelHelpers.export(exports, "ListXIcon", ()=>(0, _listXJsDefault.default));
parcelHelpers.export(exports, "LucideListX", ()=>(0, _listXJsDefault.default));
parcelHelpers.export(exports, "LoaderPinwheel", ()=>(0, _loaderPinwheelJsDefault.default));
parcelHelpers.export(exports, "LoaderPinwheelIcon", ()=>(0, _loaderPinwheelJsDefault.default));
parcelHelpers.export(exports, "LucideLoaderPinwheel", ()=>(0, _loaderPinwheelJsDefault.default));
parcelHelpers.export(exports, "Loader", ()=>(0, _loaderJsDefault.default));
parcelHelpers.export(exports, "LoaderIcon", ()=>(0, _loaderJsDefault.default));
parcelHelpers.export(exports, "LucideLoader", ()=>(0, _loaderJsDefault.default));
parcelHelpers.export(exports, "List", ()=>(0, _listJsDefault.default));
parcelHelpers.export(exports, "ListIcon", ()=>(0, _listJsDefault.default));
parcelHelpers.export(exports, "LucideList", ()=>(0, _listJsDefault.default));
parcelHelpers.export(exports, "LocateFixed", ()=>(0, _locateFixedJsDefault.default));
parcelHelpers.export(exports, "LocateFixedIcon", ()=>(0, _locateFixedJsDefault.default));
parcelHelpers.export(exports, "LucideLocateFixed", ()=>(0, _locateFixedJsDefault.default));
parcelHelpers.export(exports, "LocateOff", ()=>(0, _locateOffJsDefault.default));
parcelHelpers.export(exports, "LocateOffIcon", ()=>(0, _locateOffJsDefault.default));
parcelHelpers.export(exports, "LucideLocateOff", ()=>(0, _locateOffJsDefault.default));
parcelHelpers.export(exports, "Locate", ()=>(0, _locateJsDefault.default));
parcelHelpers.export(exports, "LocateIcon", ()=>(0, _locateJsDefault.default));
parcelHelpers.export(exports, "LucideLocate", ()=>(0, _locateJsDefault.default));
parcelHelpers.export(exports, "LocationEdit", ()=>(0, _locationEditJsDefault.default));
parcelHelpers.export(exports, "LocationEditIcon", ()=>(0, _locationEditJsDefault.default));
parcelHelpers.export(exports, "LucideLocationEdit", ()=>(0, _locationEditJsDefault.default));
parcelHelpers.export(exports, "LockKeyhole", ()=>(0, _lockKeyholeJsDefault.default));
parcelHelpers.export(exports, "LockKeyholeIcon", ()=>(0, _lockKeyholeJsDefault.default));
parcelHelpers.export(exports, "LucideLockKeyhole", ()=>(0, _lockKeyholeJsDefault.default));
parcelHelpers.export(exports, "Lock", ()=>(0, _lockJsDefault.default));
parcelHelpers.export(exports, "LockIcon", ()=>(0, _lockJsDefault.default));
parcelHelpers.export(exports, "LucideLock", ()=>(0, _lockJsDefault.default));
parcelHelpers.export(exports, "LogIn", ()=>(0, _logInJsDefault.default));
parcelHelpers.export(exports, "LogInIcon", ()=>(0, _logInJsDefault.default));
parcelHelpers.export(exports, "LucideLogIn", ()=>(0, _logInJsDefault.default));
parcelHelpers.export(exports, "LogOut", ()=>(0, _logOutJsDefault.default));
parcelHelpers.export(exports, "LogOutIcon", ()=>(0, _logOutJsDefault.default));
parcelHelpers.export(exports, "LucideLogOut", ()=>(0, _logOutJsDefault.default));
parcelHelpers.export(exports, "Logs", ()=>(0, _logsJsDefault.default));
parcelHelpers.export(exports, "LogsIcon", ()=>(0, _logsJsDefault.default));
parcelHelpers.export(exports, "LucideLogs", ()=>(0, _logsJsDefault.default));
parcelHelpers.export(exports, "Lollipop", ()=>(0, _lollipopJsDefault.default));
parcelHelpers.export(exports, "LollipopIcon", ()=>(0, _lollipopJsDefault.default));
parcelHelpers.export(exports, "LucideLollipop", ()=>(0, _lollipopJsDefault.default));
parcelHelpers.export(exports, "LucideLuggage", ()=>(0, _luggageJsDefault.default));
parcelHelpers.export(exports, "Luggage", ()=>(0, _luggageJsDefault.default));
parcelHelpers.export(exports, "LuggageIcon", ()=>(0, _luggageJsDefault.default));
parcelHelpers.export(exports, "LucideMagnet", ()=>(0, _magnetJsDefault.default));
parcelHelpers.export(exports, "Magnet", ()=>(0, _magnetJsDefault.default));
parcelHelpers.export(exports, "MagnetIcon", ()=>(0, _magnetJsDefault.default));
parcelHelpers.export(exports, "LucideMailMinus", ()=>(0, _mailMinusJsDefault.default));
parcelHelpers.export(exports, "MailMinus", ()=>(0, _mailMinusJsDefault.default));
parcelHelpers.export(exports, "MailMinusIcon", ()=>(0, _mailMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMailOpen", ()=>(0, _mailOpenJsDefault.default));
parcelHelpers.export(exports, "MailOpen", ()=>(0, _mailOpenJsDefault.default));
parcelHelpers.export(exports, "MailOpenIcon", ()=>(0, _mailOpenJsDefault.default));
parcelHelpers.export(exports, "LucideMailCheck", ()=>(0, _mailCheckJsDefault.default));
parcelHelpers.export(exports, "MailCheck", ()=>(0, _mailCheckJsDefault.default));
parcelHelpers.export(exports, "MailCheckIcon", ()=>(0, _mailCheckJsDefault.default));
parcelHelpers.export(exports, "LucideMailPlus", ()=>(0, _mailPlusJsDefault.default));
parcelHelpers.export(exports, "MailPlus", ()=>(0, _mailPlusJsDefault.default));
parcelHelpers.export(exports, "MailPlusIcon", ()=>(0, _mailPlusJsDefault.default));
parcelHelpers.export(exports, "LucideMailSearch", ()=>(0, _mailSearchJsDefault.default));
parcelHelpers.export(exports, "MailSearch", ()=>(0, _mailSearchJsDefault.default));
parcelHelpers.export(exports, "MailSearchIcon", ()=>(0, _mailSearchJsDefault.default));
parcelHelpers.export(exports, "LucideMailQuestion", ()=>(0, _mailQuestionJsDefault.default));
parcelHelpers.export(exports, "MailQuestion", ()=>(0, _mailQuestionJsDefault.default));
parcelHelpers.export(exports, "MailQuestionIcon", ()=>(0, _mailQuestionJsDefault.default));
parcelHelpers.export(exports, "LucideMailWarning", ()=>(0, _mailWarningJsDefault.default));
parcelHelpers.export(exports, "MailWarning", ()=>(0, _mailWarningJsDefault.default));
parcelHelpers.export(exports, "MailWarningIcon", ()=>(0, _mailWarningJsDefault.default));
parcelHelpers.export(exports, "LucideMailX", ()=>(0, _mailXJsDefault.default));
parcelHelpers.export(exports, "MailX", ()=>(0, _mailXJsDefault.default));
parcelHelpers.export(exports, "MailXIcon", ()=>(0, _mailXJsDefault.default));
parcelHelpers.export(exports, "LucideMail", ()=>(0, _mailJsDefault.default));
parcelHelpers.export(exports, "Mail", ()=>(0, _mailJsDefault.default));
parcelHelpers.export(exports, "MailIcon", ()=>(0, _mailJsDefault.default));
parcelHelpers.export(exports, "LucideMailbox", ()=>(0, _mailboxJsDefault.default));
parcelHelpers.export(exports, "Mailbox", ()=>(0, _mailboxJsDefault.default));
parcelHelpers.export(exports, "MailboxIcon", ()=>(0, _mailboxJsDefault.default));
parcelHelpers.export(exports, "LucideMails", ()=>(0, _mailsJsDefault.default));
parcelHelpers.export(exports, "Mails", ()=>(0, _mailsJsDefault.default));
parcelHelpers.export(exports, "MailsIcon", ()=>(0, _mailsJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinCheckInside", ()=>(0, _mapPinCheckInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinCheckInside", ()=>(0, _mapPinCheckInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinCheckInsideIcon", ()=>(0, _mapPinCheckInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinCheck", ()=>(0, _mapPinCheckJsDefault.default));
parcelHelpers.export(exports, "MapPinCheck", ()=>(0, _mapPinCheckJsDefault.default));
parcelHelpers.export(exports, "MapPinCheckIcon", ()=>(0, _mapPinCheckJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinHouse", ()=>(0, _mapPinHouseJsDefault.default));
parcelHelpers.export(exports, "MapPinHouse", ()=>(0, _mapPinHouseJsDefault.default));
parcelHelpers.export(exports, "MapPinHouseIcon", ()=>(0, _mapPinHouseJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinMinusInside", ()=>(0, _mapPinMinusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinMinusInside", ()=>(0, _mapPinMinusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinMinusInsideIcon", ()=>(0, _mapPinMinusInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinMinus", ()=>(0, _mapPinMinusJsDefault.default));
parcelHelpers.export(exports, "MapPinMinus", ()=>(0, _mapPinMinusJsDefault.default));
parcelHelpers.export(exports, "MapPinMinusIcon", ()=>(0, _mapPinMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinOff", ()=>(0, _mapPinOffJsDefault.default));
parcelHelpers.export(exports, "MapPinOff", ()=>(0, _mapPinOffJsDefault.default));
parcelHelpers.export(exports, "MapPinOffIcon", ()=>(0, _mapPinOffJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinPlusInside", ()=>(0, _mapPinPlusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinPlusInside", ()=>(0, _mapPinPlusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinPlusInsideIcon", ()=>(0, _mapPinPlusInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinPlus", ()=>(0, _mapPinPlusJsDefault.default));
parcelHelpers.export(exports, "MapPinPlus", ()=>(0, _mapPinPlusJsDefault.default));
parcelHelpers.export(exports, "MapPinPlusIcon", ()=>(0, _mapPinPlusJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinXInside", ()=>(0, _mapPinXInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinXInside", ()=>(0, _mapPinXInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinXInsideIcon", ()=>(0, _mapPinXInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinX", ()=>(0, _mapPinXJsDefault.default));
parcelHelpers.export(exports, "MapPinX", ()=>(0, _mapPinXJsDefault.default));
parcelHelpers.export(exports, "MapPinXIcon", ()=>(0, _mapPinXJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinned", ()=>(0, _mapPinnedJsDefault.default));
parcelHelpers.export(exports, "MapPinned", ()=>(0, _mapPinnedJsDefault.default));
parcelHelpers.export(exports, "MapPinnedIcon", ()=>(0, _mapPinnedJsDefault.default));
parcelHelpers.export(exports, "LucideMapPin", ()=>(0, _mapPinJsDefault.default));
parcelHelpers.export(exports, "MapPin", ()=>(0, _mapPinJsDefault.default));
parcelHelpers.export(exports, "MapPinIcon", ()=>(0, _mapPinJsDefault.default));
parcelHelpers.export(exports, "LucideMapPlus", ()=>(0, _mapPlusJsDefault.default));
parcelHelpers.export(exports, "MapPlus", ()=>(0, _mapPlusJsDefault.default));
parcelHelpers.export(exports, "MapPlusIcon", ()=>(0, _mapPlusJsDefault.default));
parcelHelpers.export(exports, "LucideMap", ()=>(0, _mapJsDefault.default));
parcelHelpers.export(exports, "Map", ()=>(0, _mapJsDefault.default));
parcelHelpers.export(exports, "MapIcon", ()=>(0, _mapJsDefault.default));
parcelHelpers.export(exports, "LucideMarsStroke", ()=>(0, _marsStrokeJsDefault.default));
parcelHelpers.export(exports, "MarsStroke", ()=>(0, _marsStrokeJsDefault.default));
parcelHelpers.export(exports, "MarsStrokeIcon", ()=>(0, _marsStrokeJsDefault.default));
parcelHelpers.export(exports, "LucideMartini", ()=>(0, _martiniJsDefault.default));
parcelHelpers.export(exports, "Martini", ()=>(0, _martiniJsDefault.default));
parcelHelpers.export(exports, "MartiniIcon", ()=>(0, _martiniJsDefault.default));
parcelHelpers.export(exports, "LucideMars", ()=>(0, _marsJsDefault.default));
parcelHelpers.export(exports, "Mars", ()=>(0, _marsJsDefault.default));
parcelHelpers.export(exports, "MarsIcon", ()=>(0, _marsJsDefault.default));
parcelHelpers.export(exports, "LucideMaximize2", ()=>(0, _maximize2JsDefault.default));
parcelHelpers.export(exports, "Maximize2", ()=>(0, _maximize2JsDefault.default));
parcelHelpers.export(exports, "Maximize2Icon", ()=>(0, _maximize2JsDefault.default));
parcelHelpers.export(exports, "LucideMaximize", ()=>(0, _maximizeJsDefault.default));
parcelHelpers.export(exports, "Maximize", ()=>(0, _maximizeJsDefault.default));
parcelHelpers.export(exports, "MaximizeIcon", ()=>(0, _maximizeJsDefault.default));
parcelHelpers.export(exports, "LucideMedal", ()=>(0, _medalJsDefault.default));
parcelHelpers.export(exports, "Medal", ()=>(0, _medalJsDefault.default));
parcelHelpers.export(exports, "MedalIcon", ()=>(0, _medalJsDefault.default));
parcelHelpers.export(exports, "LucideMegaphoneOff", ()=>(0, _megaphoneOffJsDefault.default));
parcelHelpers.export(exports, "MegaphoneOff", ()=>(0, _megaphoneOffJsDefault.default));
parcelHelpers.export(exports, "MegaphoneOffIcon", ()=>(0, _megaphoneOffJsDefault.default));
parcelHelpers.export(exports, "LucideMegaphone", ()=>(0, _megaphoneJsDefault.default));
parcelHelpers.export(exports, "Megaphone", ()=>(0, _megaphoneJsDefault.default));
parcelHelpers.export(exports, "MegaphoneIcon", ()=>(0, _megaphoneJsDefault.default));
parcelHelpers.export(exports, "LucideMeh", ()=>(0, _mehJsDefault.default));
parcelHelpers.export(exports, "Meh", ()=>(0, _mehJsDefault.default));
parcelHelpers.export(exports, "MehIcon", ()=>(0, _mehJsDefault.default));
parcelHelpers.export(exports, "LucideMemoryStick", ()=>(0, _memoryStickJsDefault.default));
parcelHelpers.export(exports, "MemoryStick", ()=>(0, _memoryStickJsDefault.default));
parcelHelpers.export(exports, "MemoryStickIcon", ()=>(0, _memoryStickJsDefault.default));
parcelHelpers.export(exports, "LucideMerge", ()=>(0, _mergeJsDefault.default));
parcelHelpers.export(exports, "Merge", ()=>(0, _mergeJsDefault.default));
parcelHelpers.export(exports, "MergeIcon", ()=>(0, _mergeJsDefault.default));
parcelHelpers.export(exports, "LucideMenu", ()=>(0, _menuJsDefault.default));
parcelHelpers.export(exports, "Menu", ()=>(0, _menuJsDefault.default));
parcelHelpers.export(exports, "MenuIcon", ()=>(0, _menuJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleCode", ()=>(0, _messageCircleCodeJsDefault.default));
parcelHelpers.export(exports, "MessageCircleCode", ()=>(0, _messageCircleCodeJsDefault.default));
parcelHelpers.export(exports, "MessageCircleCodeIcon", ()=>(0, _messageCircleCodeJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleDashed", ()=>(0, _messageCircleDashedJsDefault.default));
parcelHelpers.export(exports, "MessageCircleDashed", ()=>(0, _messageCircleDashedJsDefault.default));
parcelHelpers.export(exports, "MessageCircleDashedIcon", ()=>(0, _messageCircleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleHeart", ()=>(0, _messageCircleHeartJsDefault.default));
parcelHelpers.export(exports, "MessageCircleHeart", ()=>(0, _messageCircleHeartJsDefault.default));
parcelHelpers.export(exports, "MessageCircleHeartIcon", ()=>(0, _messageCircleHeartJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleMore", ()=>(0, _messageCircleMoreJsDefault.default));
parcelHelpers.export(exports, "MessageCircleMore", ()=>(0, _messageCircleMoreJsDefault.default));
parcelHelpers.export(exports, "MessageCircleMoreIcon", ()=>(0, _messageCircleMoreJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleOff", ()=>(0, _messageCircleOffJsDefault.default));
parcelHelpers.export(exports, "MessageCircleOff", ()=>(0, _messageCircleOffJsDefault.default));
parcelHelpers.export(exports, "MessageCircleOffIcon", ()=>(0, _messageCircleOffJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCirclePlus", ()=>(0, _messageCirclePlusJsDefault.default));
parcelHelpers.export(exports, "MessageCirclePlus", ()=>(0, _messageCirclePlusJsDefault.default));
parcelHelpers.export(exports, "MessageCirclePlusIcon", ()=>(0, _messageCirclePlusJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleQuestion", ()=>(0, _messageCircleQuestionJsDefault.default));
parcelHelpers.export(exports, "MessageCircleQuestion", ()=>(0, _messageCircleQuestionJsDefault.default));
parcelHelpers.export(exports, "MessageCircleQuestionIcon", ()=>(0, _messageCircleQuestionJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleReply", ()=>(0, _messageCircleReplyJsDefault.default));
parcelHelpers.export(exports, "MessageCircleReply", ()=>(0, _messageCircleReplyJsDefault.default));
parcelHelpers.export(exports, "MessageCircleReplyIcon", ()=>(0, _messageCircleReplyJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleWarning", ()=>(0, _messageCircleWarningJsDefault.default));
parcelHelpers.export(exports, "MessageCircleWarning", ()=>(0, _messageCircleWarningJsDefault.default));
parcelHelpers.export(exports, "MessageCircleWarningIcon", ()=>(0, _messageCircleWarningJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleX", ()=>(0, _messageCircleXJsDefault.default));
parcelHelpers.export(exports, "MessageCircleX", ()=>(0, _messageCircleXJsDefault.default));
parcelHelpers.export(exports, "MessageCircleXIcon", ()=>(0, _messageCircleXJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircle", ()=>(0, _messageCircleJsDefault.default));
parcelHelpers.export(exports, "MessageCircle", ()=>(0, _messageCircleJsDefault.default));
parcelHelpers.export(exports, "MessageCircleIcon", ()=>(0, _messageCircleJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareCode", ()=>(0, _messageSquareCodeJsDefault.default));
parcelHelpers.export(exports, "MessageSquareCode", ()=>(0, _messageSquareCodeJsDefault.default));
parcelHelpers.export(exports, "MessageSquareCodeIcon", ()=>(0, _messageSquareCodeJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareDashed", ()=>(0, _messageSquareDashedJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDashed", ()=>(0, _messageSquareDashedJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDashedIcon", ()=>(0, _messageSquareDashedJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareDot", ()=>(0, _messageSquareDotJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDot", ()=>(0, _messageSquareDotJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDotIcon", ()=>(0, _messageSquareDotJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareDiff", ()=>(0, _messageSquareDiffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDiff", ()=>(0, _messageSquareDiffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDiffIcon", ()=>(0, _messageSquareDiffJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareHeart", ()=>(0, _messageSquareHeartJsDefault.default));
parcelHelpers.export(exports, "MessageSquareHeart", ()=>(0, _messageSquareHeartJsDefault.default));
parcelHelpers.export(exports, "MessageSquareHeartIcon", ()=>(0, _messageSquareHeartJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareLock", ()=>(0, _messageSquareLockJsDefault.default));
parcelHelpers.export(exports, "MessageSquareLock", ()=>(0, _messageSquareLockJsDefault.default));
parcelHelpers.export(exports, "MessageSquareLockIcon", ()=>(0, _messageSquareLockJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareMore", ()=>(0, _messageSquareMoreJsDefault.default));
parcelHelpers.export(exports, "MessageSquareMore", ()=>(0, _messageSquareMoreJsDefault.default));
parcelHelpers.export(exports, "MessageSquareMoreIcon", ()=>(0, _messageSquareMoreJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareOff", ()=>(0, _messageSquareOffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareOff", ()=>(0, _messageSquareOffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareOffIcon", ()=>(0, _messageSquareOffJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquarePlus", ()=>(0, _messageSquarePlusJsDefault.default));
parcelHelpers.export(exports, "MessageSquarePlus", ()=>(0, _messageSquarePlusJsDefault.default));
parcelHelpers.export(exports, "MessageSquarePlusIcon", ()=>(0, _messageSquarePlusJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareQuote", ()=>(0, _messageSquareQuoteJsDefault.default));
parcelHelpers.export(exports, "MessageSquareQuote", ()=>(0, _messageSquareQuoteJsDefault.default));
parcelHelpers.export(exports, "MessageSquareQuoteIcon", ()=>(0, _messageSquareQuoteJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareReply", ()=>(0, _messageSquareReplyJsDefault.default));
parcelHelpers.export(exports, "MessageSquareReply", ()=>(0, _messageSquareReplyJsDefault.default));
parcelHelpers.export(exports, "MessageSquareReplyIcon", ()=>(0, _messageSquareReplyJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareShare", ()=>(0, _messageSquareShareJsDefault.default));
parcelHelpers.export(exports, "MessageSquareShare", ()=>(0, _messageSquareShareJsDefault.default));
parcelHelpers.export(exports, "MessageSquareShareIcon", ()=>(0, _messageSquareShareJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareText", ()=>(0, _messageSquareTextJsDefault.default));
parcelHelpers.export(exports, "MessageSquareText", ()=>(0, _messageSquareTextJsDefault.default));
parcelHelpers.export(exports, "MessageSquareTextIcon", ()=>(0, _messageSquareTextJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareX", ()=>(0, _messageSquareXJsDefault.default));
parcelHelpers.export(exports, "MessageSquareX", ()=>(0, _messageSquareXJsDefault.default));
parcelHelpers.export(exports, "MessageSquareXIcon", ()=>(0, _messageSquareXJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareWarning", ()=>(0, _messageSquareWarningJsDefault.default));
parcelHelpers.export(exports, "MessageSquareWarning", ()=>(0, _messageSquareWarningJsDefault.default));
parcelHelpers.export(exports, "MessageSquareWarningIcon", ()=>(0, _messageSquareWarningJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquare", ()=>(0, _messageSquareJsDefault.default));
parcelHelpers.export(exports, "MessageSquare", ()=>(0, _messageSquareJsDefault.default));
parcelHelpers.export(exports, "MessageSquareIcon", ()=>(0, _messageSquareJsDefault.default));
parcelHelpers.export(exports, "LucideMessagesSquare", ()=>(0, _messagesSquareJsDefault.default));
parcelHelpers.export(exports, "MessagesSquare", ()=>(0, _messagesSquareJsDefault.default));
parcelHelpers.export(exports, "MessagesSquareIcon", ()=>(0, _messagesSquareJsDefault.default));
parcelHelpers.export(exports, "LucideMicOff", ()=>(0, _micOffJsDefault.default));
parcelHelpers.export(exports, "MicOff", ()=>(0, _micOffJsDefault.default));
parcelHelpers.export(exports, "MicOffIcon", ()=>(0, _micOffJsDefault.default));
parcelHelpers.export(exports, "LucideMic", ()=>(0, _micJsDefault.default));
parcelHelpers.export(exports, "Mic", ()=>(0, _micJsDefault.default));
parcelHelpers.export(exports, "MicIcon", ()=>(0, _micJsDefault.default));
parcelHelpers.export(exports, "LucideMicrochip", ()=>(0, _microchipJsDefault.default));
parcelHelpers.export(exports, "Microchip", ()=>(0, _microchipJsDefault.default));
parcelHelpers.export(exports, "MicrochipIcon", ()=>(0, _microchipJsDefault.default));
parcelHelpers.export(exports, "LucideMicroscope", ()=>(0, _microscopeJsDefault.default));
parcelHelpers.export(exports, "Microscope", ()=>(0, _microscopeJsDefault.default));
parcelHelpers.export(exports, "MicroscopeIcon", ()=>(0, _microscopeJsDefault.default));
parcelHelpers.export(exports, "LucideMicrowave", ()=>(0, _microwaveJsDefault.default));
parcelHelpers.export(exports, "Microwave", ()=>(0, _microwaveJsDefault.default));
parcelHelpers.export(exports, "MicrowaveIcon", ()=>(0, _microwaveJsDefault.default));
parcelHelpers.export(exports, "LucideMilestone", ()=>(0, _milestoneJsDefault.default));
parcelHelpers.export(exports, "Milestone", ()=>(0, _milestoneJsDefault.default));
parcelHelpers.export(exports, "MilestoneIcon", ()=>(0, _milestoneJsDefault.default));
parcelHelpers.export(exports, "LucideMilkOff", ()=>(0, _milkOffJsDefault.default));
parcelHelpers.export(exports, "MilkOff", ()=>(0, _milkOffJsDefault.default));
parcelHelpers.export(exports, "MilkOffIcon", ()=>(0, _milkOffJsDefault.default));
parcelHelpers.export(exports, "LucideMilk", ()=>(0, _milkJsDefault.default));
parcelHelpers.export(exports, "Milk", ()=>(0, _milkJsDefault.default));
parcelHelpers.export(exports, "MilkIcon", ()=>(0, _milkJsDefault.default));
parcelHelpers.export(exports, "LucideMinimize2", ()=>(0, _minimize2JsDefault.default));
parcelHelpers.export(exports, "Minimize2", ()=>(0, _minimize2JsDefault.default));
parcelHelpers.export(exports, "Minimize2Icon", ()=>(0, _minimize2JsDefault.default));
parcelHelpers.export(exports, "LucideMinimize", ()=>(0, _minimizeJsDefault.default));
parcelHelpers.export(exports, "Minimize", ()=>(0, _minimizeJsDefault.default));
parcelHelpers.export(exports, "MinimizeIcon", ()=>(0, _minimizeJsDefault.default));
parcelHelpers.export(exports, "LucideMinus", ()=>(0, _minusJsDefault.default));
parcelHelpers.export(exports, "Minus", ()=>(0, _minusJsDefault.default));
parcelHelpers.export(exports, "MinusIcon", ()=>(0, _minusJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorCheck", ()=>(0, _monitorCheckJsDefault.default));
parcelHelpers.export(exports, "MonitorCheck", ()=>(0, _monitorCheckJsDefault.default));
parcelHelpers.export(exports, "MonitorCheckIcon", ()=>(0, _monitorCheckJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorCog", ()=>(0, _monitorCogJsDefault.default));
parcelHelpers.export(exports, "MonitorCog", ()=>(0, _monitorCogJsDefault.default));
parcelHelpers.export(exports, "MonitorCogIcon", ()=>(0, _monitorCogJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorDot", ()=>(0, _monitorDotJsDefault.default));
parcelHelpers.export(exports, "MonitorDot", ()=>(0, _monitorDotJsDefault.default));
parcelHelpers.export(exports, "MonitorDotIcon", ()=>(0, _monitorDotJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorOff", ()=>(0, _monitorOffJsDefault.default));
parcelHelpers.export(exports, "MonitorOff", ()=>(0, _monitorOffJsDefault.default));
parcelHelpers.export(exports, "MonitorOffIcon", ()=>(0, _monitorOffJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorDown", ()=>(0, _monitorDownJsDefault.default));
parcelHelpers.export(exports, "MonitorDown", ()=>(0, _monitorDownJsDefault.default));
parcelHelpers.export(exports, "MonitorDownIcon", ()=>(0, _monitorDownJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorPause", ()=>(0, _monitorPauseJsDefault.default));
parcelHelpers.export(exports, "MonitorPause", ()=>(0, _monitorPauseJsDefault.default));
parcelHelpers.export(exports, "MonitorPauseIcon", ()=>(0, _monitorPauseJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorSmartphone", ()=>(0, _monitorSmartphoneJsDefault.default));
parcelHelpers.export(exports, "MonitorSmartphone", ()=>(0, _monitorSmartphoneJsDefault.default));
parcelHelpers.export(exports, "MonitorSmartphoneIcon", ()=>(0, _monitorSmartphoneJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorPlay", ()=>(0, _monitorPlayJsDefault.default));
parcelHelpers.export(exports, "MonitorPlay", ()=>(0, _monitorPlayJsDefault.default));
parcelHelpers.export(exports, "MonitorPlayIcon", ()=>(0, _monitorPlayJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorSpeaker", ()=>(0, _monitorSpeakerJsDefault.default));
parcelHelpers.export(exports, "MonitorSpeaker", ()=>(0, _monitorSpeakerJsDefault.default));
parcelHelpers.export(exports, "MonitorSpeakerIcon", ()=>(0, _monitorSpeakerJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorUp", ()=>(0, _monitorUpJsDefault.default));
parcelHelpers.export(exports, "MonitorUp", ()=>(0, _monitorUpJsDefault.default));
parcelHelpers.export(exports, "MonitorUpIcon", ()=>(0, _monitorUpJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorStop", ()=>(0, _monitorStopJsDefault.default));
parcelHelpers.export(exports, "MonitorStop", ()=>(0, _monitorStopJsDefault.default));
parcelHelpers.export(exports, "MonitorStopIcon", ()=>(0, _monitorStopJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorX", ()=>(0, _monitorXJsDefault.default));
parcelHelpers.export(exports, "MonitorX", ()=>(0, _monitorXJsDefault.default));
parcelHelpers.export(exports, "MonitorXIcon", ()=>(0, _monitorXJsDefault.default));
parcelHelpers.export(exports, "LucideMonitor", ()=>(0, _monitorJsDefault.default));
parcelHelpers.export(exports, "Monitor", ()=>(0, _monitorJsDefault.default));
parcelHelpers.export(exports, "MonitorIcon", ()=>(0, _monitorJsDefault.default));
parcelHelpers.export(exports, "LucideMoonStar", ()=>(0, _moonStarJsDefault.default));
parcelHelpers.export(exports, "MoonStar", ()=>(0, _moonStarJsDefault.default));
parcelHelpers.export(exports, "MoonStarIcon", ()=>(0, _moonStarJsDefault.default));
parcelHelpers.export(exports, "LucideMoon", ()=>(0, _moonJsDefault.default));
parcelHelpers.export(exports, "Moon", ()=>(0, _moonJsDefault.default));
parcelHelpers.export(exports, "MoonIcon", ()=>(0, _moonJsDefault.default));
parcelHelpers.export(exports, "LucideMountainSnow", ()=>(0, _mountainSnowJsDefault.default));
parcelHelpers.export(exports, "MountainSnow", ()=>(0, _mountainSnowJsDefault.default));
parcelHelpers.export(exports, "MountainSnowIcon", ()=>(0, _mountainSnowJsDefault.default));
parcelHelpers.export(exports, "LucideMouseOff", ()=>(0, _mouseOffJsDefault.default));
parcelHelpers.export(exports, "MouseOff", ()=>(0, _mouseOffJsDefault.default));
parcelHelpers.export(exports, "MouseOffIcon", ()=>(0, _mouseOffJsDefault.default));
parcelHelpers.export(exports, "LucideMountain", ()=>(0, _mountainJsDefault.default));
parcelHelpers.export(exports, "Mountain", ()=>(0, _mountainJsDefault.default));
parcelHelpers.export(exports, "MountainIcon", ()=>(0, _mountainJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointer2", ()=>(0, _mousePointer2JsDefault.default));
parcelHelpers.export(exports, "MousePointer2", ()=>(0, _mousePointer2JsDefault.default));
parcelHelpers.export(exports, "MousePointer2Icon", ()=>(0, _mousePointer2JsDefault.default));
parcelHelpers.export(exports, "LucideMousePointerBan", ()=>(0, _mousePointerBanJsDefault.default));
parcelHelpers.export(exports, "MousePointerBan", ()=>(0, _mousePointerBanJsDefault.default));
parcelHelpers.export(exports, "MousePointerBanIcon", ()=>(0, _mousePointerBanJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointerClick", ()=>(0, _mousePointerClickJsDefault.default));
parcelHelpers.export(exports, "MousePointerClick", ()=>(0, _mousePointerClickJsDefault.default));
parcelHelpers.export(exports, "MousePointerClickIcon", ()=>(0, _mousePointerClickJsDefault.default));
parcelHelpers.export(exports, "LucideMouse", ()=>(0, _mouseJsDefault.default));
parcelHelpers.export(exports, "Mouse", ()=>(0, _mouseJsDefault.default));
parcelHelpers.export(exports, "MouseIcon", ()=>(0, _mouseJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDiagonal2", ()=>(0, _moveDiagonal2JsDefault.default));
parcelHelpers.export(exports, "MoveDiagonal2", ()=>(0, _moveDiagonal2JsDefault.default));
parcelHelpers.export(exports, "MoveDiagonal2Icon", ()=>(0, _moveDiagonal2JsDefault.default));
parcelHelpers.export(exports, "LucideMousePointer", ()=>(0, _mousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointer", ()=>(0, _mousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointerIcon", ()=>(0, _mousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDiagonal", ()=>(0, _moveDiagonalJsDefault.default));
parcelHelpers.export(exports, "MoveDiagonal", ()=>(0, _moveDiagonalJsDefault.default));
parcelHelpers.export(exports, "MoveDiagonalIcon", ()=>(0, _moveDiagonalJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDownLeft", ()=>(0, _moveDownLeftJsDefault.default));
parcelHelpers.export(exports, "MoveDownLeft", ()=>(0, _moveDownLeftJsDefault.default));
parcelHelpers.export(exports, "MoveDownLeftIcon", ()=>(0, _moveDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDownRight", ()=>(0, _moveDownRightJsDefault.default));
parcelHelpers.export(exports, "MoveDownRight", ()=>(0, _moveDownRightJsDefault.default));
parcelHelpers.export(exports, "MoveDownRightIcon", ()=>(0, _moveDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDown", ()=>(0, _moveDownJsDefault.default));
parcelHelpers.export(exports, "MoveDown", ()=>(0, _moveDownJsDefault.default));
parcelHelpers.export(exports, "MoveDownIcon", ()=>(0, _moveDownJsDefault.default));
parcelHelpers.export(exports, "LucideMoveHorizontal", ()=>(0, _moveHorizontalJsDefault.default));
parcelHelpers.export(exports, "MoveHorizontal", ()=>(0, _moveHorizontalJsDefault.default));
parcelHelpers.export(exports, "MoveHorizontalIcon", ()=>(0, _moveHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideMoveLeft", ()=>(0, _moveLeftJsDefault.default));
parcelHelpers.export(exports, "MoveLeft", ()=>(0, _moveLeftJsDefault.default));
parcelHelpers.export(exports, "MoveLeftIcon", ()=>(0, _moveLeftJsDefault.default));
parcelHelpers.export(exports, "LucideMoveRight", ()=>(0, _moveRightJsDefault.default));
parcelHelpers.export(exports, "MoveRight", ()=>(0, _moveRightJsDefault.default));
parcelHelpers.export(exports, "MoveRightIcon", ()=>(0, _moveRightJsDefault.default));
parcelHelpers.export(exports, "LucideMoveUpLeft", ()=>(0, _moveUpLeftJsDefault.default));
parcelHelpers.export(exports, "MoveUpLeft", ()=>(0, _moveUpLeftJsDefault.default));
parcelHelpers.export(exports, "MoveUpLeftIcon", ()=>(0, _moveUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideMoveUpRight", ()=>(0, _moveUpRightJsDefault.default));
parcelHelpers.export(exports, "MoveUpRight", ()=>(0, _moveUpRightJsDefault.default));
parcelHelpers.export(exports, "MoveUpRightIcon", ()=>(0, _moveUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideMoveUp", ()=>(0, _moveUpJsDefault.default));
parcelHelpers.export(exports, "MoveUp", ()=>(0, _moveUpJsDefault.default));
parcelHelpers.export(exports, "MoveUpIcon", ()=>(0, _moveUpJsDefault.default));
parcelHelpers.export(exports, "LucideMoveVertical", ()=>(0, _moveVerticalJsDefault.default));
parcelHelpers.export(exports, "MoveVertical", ()=>(0, _moveVerticalJsDefault.default));
parcelHelpers.export(exports, "MoveVerticalIcon", ()=>(0, _moveVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideMove", ()=>(0, _moveJsDefault.default));
parcelHelpers.export(exports, "Move", ()=>(0, _moveJsDefault.default));
parcelHelpers.export(exports, "MoveIcon", ()=>(0, _moveJsDefault.default));
parcelHelpers.export(exports, "LucideMusic2", ()=>(0, _music2JsDefault.default));
parcelHelpers.export(exports, "Music2", ()=>(0, _music2JsDefault.default));
parcelHelpers.export(exports, "Music2Icon", ()=>(0, _music2JsDefault.default));
parcelHelpers.export(exports, "LucideMusic3", ()=>(0, _music3JsDefault.default));
parcelHelpers.export(exports, "Music3", ()=>(0, _music3JsDefault.default));
parcelHelpers.export(exports, "Music3Icon", ()=>(0, _music3JsDefault.default));
parcelHelpers.export(exports, "LucideMusic4", ()=>(0, _music4JsDefault.default));
parcelHelpers.export(exports, "Music4", ()=>(0, _music4JsDefault.default));
parcelHelpers.export(exports, "Music4Icon", ()=>(0, _music4JsDefault.default));
parcelHelpers.export(exports, "LucideNavigation2Off", ()=>(0, _navigation2OffJsDefault.default));
parcelHelpers.export(exports, "Navigation2Off", ()=>(0, _navigation2OffJsDefault.default));
parcelHelpers.export(exports, "Navigation2OffIcon", ()=>(0, _navigation2OffJsDefault.default));
parcelHelpers.export(exports, "LucideMusic", ()=>(0, _musicJsDefault.default));
parcelHelpers.export(exports, "Music", ()=>(0, _musicJsDefault.default));
parcelHelpers.export(exports, "MusicIcon", ()=>(0, _musicJsDefault.default));
parcelHelpers.export(exports, "LucideNavigationOff", ()=>(0, _navigationOffJsDefault.default));
parcelHelpers.export(exports, "NavigationOff", ()=>(0, _navigationOffJsDefault.default));
parcelHelpers.export(exports, "NavigationOffIcon", ()=>(0, _navigationOffJsDefault.default));
parcelHelpers.export(exports, "LucideNavigation2", ()=>(0, _navigation2JsDefault.default));
parcelHelpers.export(exports, "Navigation2", ()=>(0, _navigation2JsDefault.default));
parcelHelpers.export(exports, "Navigation2Icon", ()=>(0, _navigation2JsDefault.default));
parcelHelpers.export(exports, "LucideNavigation", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "Navigation", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "NavigationIcon", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "LucideNetwork", ()=>(0, _networkJsDefault.default));
parcelHelpers.export(exports, "Network", ()=>(0, _networkJsDefault.default));
parcelHelpers.export(exports, "NetworkIcon", ()=>(0, _networkJsDefault.default));
parcelHelpers.export(exports, "LucideNewspaper", ()=>(0, _newspaperJsDefault.default));
parcelHelpers.export(exports, "Newspaper", ()=>(0, _newspaperJsDefault.default));
parcelHelpers.export(exports, "NewspaperIcon", ()=>(0, _newspaperJsDefault.default));
parcelHelpers.export(exports, "LucideNfc", ()=>(0, _nfcJsDefault.default));
parcelHelpers.export(exports, "Nfc", ()=>(0, _nfcJsDefault.default));
parcelHelpers.export(exports, "NfcIcon", ()=>(0, _nfcJsDefault.default));
parcelHelpers.export(exports, "LucideNonBinary", ()=>(0, _nonBinaryJsDefault.default));
parcelHelpers.export(exports, "NonBinary", ()=>(0, _nonBinaryJsDefault.default));
parcelHelpers.export(exports, "NonBinaryIcon", ()=>(0, _nonBinaryJsDefault.default));
parcelHelpers.export(exports, "LucideNotebookPen", ()=>(0, _notebookPenJsDefault.default));
parcelHelpers.export(exports, "NotebookPen", ()=>(0, _notebookPenJsDefault.default));
parcelHelpers.export(exports, "NotebookPenIcon", ()=>(0, _notebookPenJsDefault.default));
parcelHelpers.export(exports, "LucideNotebookTabs", ()=>(0, _notebookTabsJsDefault.default));
parcelHelpers.export(exports, "NotebookTabs", ()=>(0, _notebookTabsJsDefault.default));
parcelHelpers.export(exports, "NotebookTabsIcon", ()=>(0, _notebookTabsJsDefault.default));
parcelHelpers.export(exports, "LucideNotebookText", ()=>(0, _notebookTextJsDefault.default));
parcelHelpers.export(exports, "NotebookText", ()=>(0, _notebookTextJsDefault.default));
parcelHelpers.export(exports, "NotebookTextIcon", ()=>(0, _notebookTextJsDefault.default));
parcelHelpers.export(exports, "LucideNotebook", ()=>(0, _notebookJsDefault.default));
parcelHelpers.export(exports, "Notebook", ()=>(0, _notebookJsDefault.default));
parcelHelpers.export(exports, "NotebookIcon", ()=>(0, _notebookJsDefault.default));
parcelHelpers.export(exports, "LucideNotepadTextDashed", ()=>(0, _notepadTextDashedJsDefault.default));
parcelHelpers.export(exports, "NotepadTextDashed", ()=>(0, _notepadTextDashedJsDefault.default));
parcelHelpers.export(exports, "NotepadTextDashedIcon", ()=>(0, _notepadTextDashedJsDefault.default));
parcelHelpers.export(exports, "LucideNotepadText", ()=>(0, _notepadTextJsDefault.default));
parcelHelpers.export(exports, "NotepadText", ()=>(0, _notepadTextJsDefault.default));
parcelHelpers.export(exports, "NotepadTextIcon", ()=>(0, _notepadTextJsDefault.default));
parcelHelpers.export(exports, "LucideNutOff", ()=>(0, _nutOffJsDefault.default));
parcelHelpers.export(exports, "NutOff", ()=>(0, _nutOffJsDefault.default));
parcelHelpers.export(exports, "NutOffIcon", ()=>(0, _nutOffJsDefault.default));
parcelHelpers.export(exports, "LucideNut", ()=>(0, _nutJsDefault.default));
parcelHelpers.export(exports, "Nut", ()=>(0, _nutJsDefault.default));
parcelHelpers.export(exports, "NutIcon", ()=>(0, _nutJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonMinus", ()=>(0, _octagonMinusJsDefault.default));
parcelHelpers.export(exports, "OctagonMinus", ()=>(0, _octagonMinusJsDefault.default));
parcelHelpers.export(exports, "OctagonMinusIcon", ()=>(0, _octagonMinusJsDefault.default));
parcelHelpers.export(exports, "LucideOctagon", ()=>(0, _octagonJsDefault.default));
parcelHelpers.export(exports, "Octagon", ()=>(0, _octagonJsDefault.default));
parcelHelpers.export(exports, "OctagonIcon", ()=>(0, _octagonJsDefault.default));
parcelHelpers.export(exports, "LucideOmega", ()=>(0, _omegaJsDefault.default));
parcelHelpers.export(exports, "Omega", ()=>(0, _omegaJsDefault.default));
parcelHelpers.export(exports, "OmegaIcon", ()=>(0, _omegaJsDefault.default));
parcelHelpers.export(exports, "LucideOption", ()=>(0, _optionJsDefault.default));
parcelHelpers.export(exports, "Option", ()=>(0, _optionJsDefault.default));
parcelHelpers.export(exports, "OptionIcon", ()=>(0, _optionJsDefault.default));
parcelHelpers.export(exports, "LucideOrbit", ()=>(0, _orbitJsDefault.default));
parcelHelpers.export(exports, "Orbit", ()=>(0, _orbitJsDefault.default));
parcelHelpers.export(exports, "OrbitIcon", ()=>(0, _orbitJsDefault.default));
parcelHelpers.export(exports, "LucideOrigami", ()=>(0, _origamiJsDefault.default));
parcelHelpers.export(exports, "Origami", ()=>(0, _origamiJsDefault.default));
parcelHelpers.export(exports, "OrigamiIcon", ()=>(0, _origamiJsDefault.default));
parcelHelpers.export(exports, "LucidePackage2", ()=>(0, _package2JsDefault.default));
parcelHelpers.export(exports, "Package2", ()=>(0, _package2JsDefault.default));
parcelHelpers.export(exports, "Package2Icon", ()=>(0, _package2JsDefault.default));
parcelHelpers.export(exports, "LucidePackageCheck", ()=>(0, _packageCheckJsDefault.default));
parcelHelpers.export(exports, "PackageCheck", ()=>(0, _packageCheckJsDefault.default));
parcelHelpers.export(exports, "PackageCheckIcon", ()=>(0, _packageCheckJsDefault.default));
parcelHelpers.export(exports, "LucidePackageMinus", ()=>(0, _packageMinusJsDefault.default));
parcelHelpers.export(exports, "PackageMinus", ()=>(0, _packageMinusJsDefault.default));
parcelHelpers.export(exports, "PackageMinusIcon", ()=>(0, _packageMinusJsDefault.default));
parcelHelpers.export(exports, "LucidePackageOpen", ()=>(0, _packageOpenJsDefault.default));
parcelHelpers.export(exports, "PackageOpen", ()=>(0, _packageOpenJsDefault.default));
parcelHelpers.export(exports, "PackageOpenIcon", ()=>(0, _packageOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePackagePlus", ()=>(0, _packagePlusJsDefault.default));
parcelHelpers.export(exports, "PackagePlus", ()=>(0, _packagePlusJsDefault.default));
parcelHelpers.export(exports, "PackagePlusIcon", ()=>(0, _packagePlusJsDefault.default));
parcelHelpers.export(exports, "LucidePackageSearch", ()=>(0, _packageSearchJsDefault.default));
parcelHelpers.export(exports, "PackageSearch", ()=>(0, _packageSearchJsDefault.default));
parcelHelpers.export(exports, "PackageSearchIcon", ()=>(0, _packageSearchJsDefault.default));
parcelHelpers.export(exports, "LucidePackageX", ()=>(0, _packageXJsDefault.default));
parcelHelpers.export(exports, "PackageX", ()=>(0, _packageXJsDefault.default));
parcelHelpers.export(exports, "PackageXIcon", ()=>(0, _packageXJsDefault.default));
parcelHelpers.export(exports, "LucidePackage", ()=>(0, _packageJsDefault.default));
parcelHelpers.export(exports, "Package", ()=>(0, _packageJsDefault.default));
parcelHelpers.export(exports, "PackageIcon", ()=>(0, _packageJsDefault.default));
parcelHelpers.export(exports, "LucidePaintBucket", ()=>(0, _paintBucketJsDefault.default));
parcelHelpers.export(exports, "PaintBucket", ()=>(0, _paintBucketJsDefault.default));
parcelHelpers.export(exports, "PaintBucketIcon", ()=>(0, _paintBucketJsDefault.default));
parcelHelpers.export(exports, "LucidePaintRoller", ()=>(0, _paintRollerJsDefault.default));
parcelHelpers.export(exports, "PaintRoller", ()=>(0, _paintRollerJsDefault.default));
parcelHelpers.export(exports, "PaintRollerIcon", ()=>(0, _paintRollerJsDefault.default));
parcelHelpers.export(exports, "LucidePaintbrush", ()=>(0, _paintbrushJsDefault.default));
parcelHelpers.export(exports, "Paintbrush", ()=>(0, _paintbrushJsDefault.default));
parcelHelpers.export(exports, "PaintbrushIcon", ()=>(0, _paintbrushJsDefault.default));
parcelHelpers.export(exports, "LucidePalette", ()=>(0, _paletteJsDefault.default));
parcelHelpers.export(exports, "Palette", ()=>(0, _paletteJsDefault.default));
parcelHelpers.export(exports, "PaletteIcon", ()=>(0, _paletteJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomClose", ()=>(0, _panelBottomCloseJsDefault.default));
parcelHelpers.export(exports, "PanelBottomClose", ()=>(0, _panelBottomCloseJsDefault.default));
parcelHelpers.export(exports, "PanelBottomCloseIcon", ()=>(0, _panelBottomCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanda", ()=>(0, _pandaJsDefault.default));
parcelHelpers.export(exports, "Panda", ()=>(0, _pandaJsDefault.default));
parcelHelpers.export(exports, "PandaIcon", ()=>(0, _pandaJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomOpen", ()=>(0, _panelBottomOpenJsDefault.default));
parcelHelpers.export(exports, "PanelBottomOpen", ()=>(0, _panelBottomOpenJsDefault.default));
parcelHelpers.export(exports, "PanelBottomOpenIcon", ()=>(0, _panelBottomOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottom", ()=>(0, _panelBottomJsDefault.default));
parcelHelpers.export(exports, "PanelBottom", ()=>(0, _panelBottomJsDefault.default));
parcelHelpers.export(exports, "PanelBottomIcon", ()=>(0, _panelBottomJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightClose", ()=>(0, _panelRightCloseJsDefault.default));
parcelHelpers.export(exports, "PanelRightClose", ()=>(0, _panelRightCloseJsDefault.default));
parcelHelpers.export(exports, "PanelRightCloseIcon", ()=>(0, _panelRightCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightOpen", ()=>(0, _panelRightOpenJsDefault.default));
parcelHelpers.export(exports, "PanelRightOpen", ()=>(0, _panelRightOpenJsDefault.default));
parcelHelpers.export(exports, "PanelRightOpenIcon", ()=>(0, _panelRightOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRight", ()=>(0, _panelRightJsDefault.default));
parcelHelpers.export(exports, "PanelRight", ()=>(0, _panelRightJsDefault.default));
parcelHelpers.export(exports, "PanelRightIcon", ()=>(0, _panelRightJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopClose", ()=>(0, _panelTopCloseJsDefault.default));
parcelHelpers.export(exports, "PanelTopClose", ()=>(0, _panelTopCloseJsDefault.default));
parcelHelpers.export(exports, "PanelTopCloseIcon", ()=>(0, _panelTopCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopOpen", ()=>(0, _panelTopOpenJsDefault.default));
parcelHelpers.export(exports, "PanelTopOpen", ()=>(0, _panelTopOpenJsDefault.default));
parcelHelpers.export(exports, "PanelTopOpenIcon", ()=>(0, _panelTopOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTop", ()=>(0, _panelTopJsDefault.default));
parcelHelpers.export(exports, "PanelTop", ()=>(0, _panelTopJsDefault.default));
parcelHelpers.export(exports, "PanelTopIcon", ()=>(0, _panelTopJsDefault.default));
parcelHelpers.export(exports, "LucidePanelsLeftBottom", ()=>(0, _panelsLeftBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsLeftBottom", ()=>(0, _panelsLeftBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsLeftBottomIcon", ()=>(0, _panelsLeftBottomJsDefault.default));
parcelHelpers.export(exports, "LucidePanelsRightBottom", ()=>(0, _panelsRightBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsRightBottom", ()=>(0, _panelsRightBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsRightBottomIcon", ()=>(0, _panelsRightBottomJsDefault.default));
parcelHelpers.export(exports, "LucidePaperclip", ()=>(0, _paperclipJsDefault.default));
parcelHelpers.export(exports, "Paperclip", ()=>(0, _paperclipJsDefault.default));
parcelHelpers.export(exports, "PaperclipIcon", ()=>(0, _paperclipJsDefault.default));
parcelHelpers.export(exports, "LucideParentheses", ()=>(0, _parenthesesJsDefault.default));
parcelHelpers.export(exports, "Parentheses", ()=>(0, _parenthesesJsDefault.default));
parcelHelpers.export(exports, "ParenthesesIcon", ()=>(0, _parenthesesJsDefault.default));
parcelHelpers.export(exports, "LucideParkingMeter", ()=>(0, _parkingMeterJsDefault.default));
parcelHelpers.export(exports, "ParkingMeter", ()=>(0, _parkingMeterJsDefault.default));
parcelHelpers.export(exports, "ParkingMeterIcon", ()=>(0, _parkingMeterJsDefault.default));
parcelHelpers.export(exports, "LucidePartyPopper", ()=>(0, _partyPopperJsDefault.default));
parcelHelpers.export(exports, "PartyPopper", ()=>(0, _partyPopperJsDefault.default));
parcelHelpers.export(exports, "PartyPopperIcon", ()=>(0, _partyPopperJsDefault.default));
parcelHelpers.export(exports, "LucidePause", ()=>(0, _pauseJsDefault.default));
parcelHelpers.export(exports, "Pause", ()=>(0, _pauseJsDefault.default));
parcelHelpers.export(exports, "PauseIcon", ()=>(0, _pauseJsDefault.default));
parcelHelpers.export(exports, "LucidePawPrint", ()=>(0, _pawPrintJsDefault.default));
parcelHelpers.export(exports, "PawPrint", ()=>(0, _pawPrintJsDefault.default));
parcelHelpers.export(exports, "PawPrintIcon", ()=>(0, _pawPrintJsDefault.default));
parcelHelpers.export(exports, "LucidePcCase", ()=>(0, _pcCaseJsDefault.default));
parcelHelpers.export(exports, "PcCase", ()=>(0, _pcCaseJsDefault.default));
parcelHelpers.export(exports, "PcCaseIcon", ()=>(0, _pcCaseJsDefault.default));
parcelHelpers.export(exports, "LucidePenOff", ()=>(0, _penOffJsDefault.default));
parcelHelpers.export(exports, "PenOff", ()=>(0, _penOffJsDefault.default));
parcelHelpers.export(exports, "PenOffIcon", ()=>(0, _penOffJsDefault.default));
parcelHelpers.export(exports, "LucidePenTool", ()=>(0, _penToolJsDefault.default));
parcelHelpers.export(exports, "PenTool", ()=>(0, _penToolJsDefault.default));
parcelHelpers.export(exports, "PenToolIcon", ()=>(0, _penToolJsDefault.default));
parcelHelpers.export(exports, "LucidePencilLine", ()=>(0, _pencilLineJsDefault.default));
parcelHelpers.export(exports, "PencilLine", ()=>(0, _pencilLineJsDefault.default));
parcelHelpers.export(exports, "PencilLineIcon", ()=>(0, _pencilLineJsDefault.default));
parcelHelpers.export(exports, "LucidePencilOff", ()=>(0, _pencilOffJsDefault.default));
parcelHelpers.export(exports, "PencilOff", ()=>(0, _pencilOffJsDefault.default));
parcelHelpers.export(exports, "PencilOffIcon", ()=>(0, _pencilOffJsDefault.default));
parcelHelpers.export(exports, "LucidePencil", ()=>(0, _pencilJsDefault.default));
parcelHelpers.export(exports, "Pencil", ()=>(0, _pencilJsDefault.default));
parcelHelpers.export(exports, "PencilIcon", ()=>(0, _pencilJsDefault.default));
parcelHelpers.export(exports, "LucidePencilRuler", ()=>(0, _pencilRulerJsDefault.default));
parcelHelpers.export(exports, "PencilRuler", ()=>(0, _pencilRulerJsDefault.default));
parcelHelpers.export(exports, "PencilRulerIcon", ()=>(0, _pencilRulerJsDefault.default));
parcelHelpers.export(exports, "LucidePentagon", ()=>(0, _pentagonJsDefault.default));
parcelHelpers.export(exports, "Pentagon", ()=>(0, _pentagonJsDefault.default));
parcelHelpers.export(exports, "PentagonIcon", ()=>(0, _pentagonJsDefault.default));
parcelHelpers.export(exports, "LucidePercent", ()=>(0, _percentJsDefault.default));
parcelHelpers.export(exports, "Percent", ()=>(0, _percentJsDefault.default));
parcelHelpers.export(exports, "PercentIcon", ()=>(0, _percentJsDefault.default));
parcelHelpers.export(exports, "LucidePersonStanding", ()=>(0, _personStandingJsDefault.default));
parcelHelpers.export(exports, "PersonStanding", ()=>(0, _personStandingJsDefault.default));
parcelHelpers.export(exports, "PersonStandingIcon", ()=>(0, _personStandingJsDefault.default));
parcelHelpers.export(exports, "LucidePhilippinePeso", ()=>(0, _philippinePesoJsDefault.default));
parcelHelpers.export(exports, "PhilippinePeso", ()=>(0, _philippinePesoJsDefault.default));
parcelHelpers.export(exports, "PhilippinePesoIcon", ()=>(0, _philippinePesoJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneCall", ()=>(0, _phoneCallJsDefault.default));
parcelHelpers.export(exports, "PhoneCall", ()=>(0, _phoneCallJsDefault.default));
parcelHelpers.export(exports, "PhoneCallIcon", ()=>(0, _phoneCallJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneForwarded", ()=>(0, _phoneForwardedJsDefault.default));
parcelHelpers.export(exports, "PhoneForwarded", ()=>(0, _phoneForwardedJsDefault.default));
parcelHelpers.export(exports, "PhoneForwardedIcon", ()=>(0, _phoneForwardedJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneIncoming", ()=>(0, _phoneIncomingJsDefault.default));
parcelHelpers.export(exports, "PhoneIncoming", ()=>(0, _phoneIncomingJsDefault.default));
parcelHelpers.export(exports, "PhoneIncomingIcon", ()=>(0, _phoneIncomingJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneMissed", ()=>(0, _phoneMissedJsDefault.default));
parcelHelpers.export(exports, "PhoneMissed", ()=>(0, _phoneMissedJsDefault.default));
parcelHelpers.export(exports, "PhoneMissedIcon", ()=>(0, _phoneMissedJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneOff", ()=>(0, _phoneOffJsDefault.default));
parcelHelpers.export(exports, "PhoneOff", ()=>(0, _phoneOffJsDefault.default));
parcelHelpers.export(exports, "PhoneOffIcon", ()=>(0, _phoneOffJsDefault.default));
parcelHelpers.export(exports, "LucidePhone", ()=>(0, _phoneJsDefault.default));
parcelHelpers.export(exports, "Phone", ()=>(0, _phoneJsDefault.default));
parcelHelpers.export(exports, "PhoneIcon", ()=>(0, _phoneJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneOutgoing", ()=>(0, _phoneOutgoingJsDefault.default));
parcelHelpers.export(exports, "PhoneOutgoing", ()=>(0, _phoneOutgoingJsDefault.default));
parcelHelpers.export(exports, "PhoneOutgoingIcon", ()=>(0, _phoneOutgoingJsDefault.default));
parcelHelpers.export(exports, "LucidePi", ()=>(0, _piJsDefault.default));
parcelHelpers.export(exports, "Pi", ()=>(0, _piJsDefault.default));
parcelHelpers.export(exports, "PiIcon", ()=>(0, _piJsDefault.default));
parcelHelpers.export(exports, "LucidePiano", ()=>(0, _pianoJsDefault.default));
parcelHelpers.export(exports, "Piano", ()=>(0, _pianoJsDefault.default));
parcelHelpers.export(exports, "PianoIcon", ()=>(0, _pianoJsDefault.default));
parcelHelpers.export(exports, "LucidePickaxe", ()=>(0, _pickaxeJsDefault.default));
parcelHelpers.export(exports, "Pickaxe", ()=>(0, _pickaxeJsDefault.default));
parcelHelpers.export(exports, "PickaxeIcon", ()=>(0, _pickaxeJsDefault.default));
parcelHelpers.export(exports, "LucidePictureInPicture2", ()=>(0, _pictureInPicture2JsDefault.default));
parcelHelpers.export(exports, "PictureInPicture2", ()=>(0, _pictureInPicture2JsDefault.default));
parcelHelpers.export(exports, "PictureInPicture2Icon", ()=>(0, _pictureInPicture2JsDefault.default));
parcelHelpers.export(exports, "LucidePictureInPicture", ()=>(0, _pictureInPictureJsDefault.default));
parcelHelpers.export(exports, "PictureInPicture", ()=>(0, _pictureInPictureJsDefault.default));
parcelHelpers.export(exports, "PictureInPictureIcon", ()=>(0, _pictureInPictureJsDefault.default));
parcelHelpers.export(exports, "LucidePiggyBank", ()=>(0, _piggyBankJsDefault.default));
parcelHelpers.export(exports, "PiggyBank", ()=>(0, _piggyBankJsDefault.default));
parcelHelpers.export(exports, "PiggyBankIcon", ()=>(0, _piggyBankJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrowLeft", ()=>(0, _pilcrowLeftJsDefault.default));
parcelHelpers.export(exports, "PilcrowLeft", ()=>(0, _pilcrowLeftJsDefault.default));
parcelHelpers.export(exports, "PilcrowLeftIcon", ()=>(0, _pilcrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrowRight", ()=>(0, _pilcrowRightJsDefault.default));
parcelHelpers.export(exports, "PilcrowRight", ()=>(0, _pilcrowRightJsDefault.default));
parcelHelpers.export(exports, "PilcrowRightIcon", ()=>(0, _pilcrowRightJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrow", ()=>(0, _pilcrowJsDefault.default));
parcelHelpers.export(exports, "Pilcrow", ()=>(0, _pilcrowJsDefault.default));
parcelHelpers.export(exports, "PilcrowIcon", ()=>(0, _pilcrowJsDefault.default));
parcelHelpers.export(exports, "LucidePillBottle", ()=>(0, _pillBottleJsDefault.default));
parcelHelpers.export(exports, "PillBottle", ()=>(0, _pillBottleJsDefault.default));
parcelHelpers.export(exports, "PillBottleIcon", ()=>(0, _pillBottleJsDefault.default));
parcelHelpers.export(exports, "LucidePill", ()=>(0, _pillJsDefault.default));
parcelHelpers.export(exports, "Pill", ()=>(0, _pillJsDefault.default));
parcelHelpers.export(exports, "PillIcon", ()=>(0, _pillJsDefault.default));
parcelHelpers.export(exports, "LucidePinOff", ()=>(0, _pinOffJsDefault.default));
parcelHelpers.export(exports, "PinOff", ()=>(0, _pinOffJsDefault.default));
parcelHelpers.export(exports, "PinOffIcon", ()=>(0, _pinOffJsDefault.default));
parcelHelpers.export(exports, "LucidePin", ()=>(0, _pinJsDefault.default));
parcelHelpers.export(exports, "Pin", ()=>(0, _pinJsDefault.default));
parcelHelpers.export(exports, "PinIcon", ()=>(0, _pinJsDefault.default));
parcelHelpers.export(exports, "LucidePipette", ()=>(0, _pipetteJsDefault.default));
parcelHelpers.export(exports, "Pipette", ()=>(0, _pipetteJsDefault.default));
parcelHelpers.export(exports, "PipetteIcon", ()=>(0, _pipetteJsDefault.default));
parcelHelpers.export(exports, "LucidePizza", ()=>(0, _pizzaJsDefault.default));
parcelHelpers.export(exports, "Pizza", ()=>(0, _pizzaJsDefault.default));
parcelHelpers.export(exports, "PizzaIcon", ()=>(0, _pizzaJsDefault.default));
parcelHelpers.export(exports, "LucidePlaneLanding", ()=>(0, _planeLandingJsDefault.default));
parcelHelpers.export(exports, "PlaneLanding", ()=>(0, _planeLandingJsDefault.default));
parcelHelpers.export(exports, "PlaneLandingIcon", ()=>(0, _planeLandingJsDefault.default));
parcelHelpers.export(exports, "LucidePlaneTakeoff", ()=>(0, _planeTakeoffJsDefault.default));
parcelHelpers.export(exports, "PlaneTakeoff", ()=>(0, _planeTakeoffJsDefault.default));
parcelHelpers.export(exports, "PlaneTakeoffIcon", ()=>(0, _planeTakeoffJsDefault.default));
parcelHelpers.export(exports, "LucidePlane", ()=>(0, _planeJsDefault.default));
parcelHelpers.export(exports, "Plane", ()=>(0, _planeJsDefault.default));
parcelHelpers.export(exports, "PlaneIcon", ()=>(0, _planeJsDefault.default));
parcelHelpers.export(exports, "LucidePlay", ()=>(0, _playJsDefault.default));
parcelHelpers.export(exports, "Play", ()=>(0, _playJsDefault.default));
parcelHelpers.export(exports, "PlayIcon", ()=>(0, _playJsDefault.default));
parcelHelpers.export(exports, "LucidePlug2", ()=>(0, _plug2JsDefault.default));
parcelHelpers.export(exports, "Plug2", ()=>(0, _plug2JsDefault.default));
parcelHelpers.export(exports, "Plug2Icon", ()=>(0, _plug2JsDefault.default));
parcelHelpers.export(exports, "LucidePlug", ()=>(0, _plugJsDefault.default));
parcelHelpers.export(exports, "Plug", ()=>(0, _plugJsDefault.default));
parcelHelpers.export(exports, "PlugIcon", ()=>(0, _plugJsDefault.default));
parcelHelpers.export(exports, "LucidePlus", ()=>(0, _plusJsDefault.default));
parcelHelpers.export(exports, "Plus", ()=>(0, _plusJsDefault.default));
parcelHelpers.export(exports, "PlusIcon", ()=>(0, _plusJsDefault.default));
parcelHelpers.export(exports, "LucidePocketKnife", ()=>(0, _pocketKnifeJsDefault.default));
parcelHelpers.export(exports, "PocketKnife", ()=>(0, _pocketKnifeJsDefault.default));
parcelHelpers.export(exports, "PocketKnifeIcon", ()=>(0, _pocketKnifeJsDefault.default));
parcelHelpers.export(exports, "LucidePocket", ()=>(0, _pocketJsDefault.default));
parcelHelpers.export(exports, "Pocket", ()=>(0, _pocketJsDefault.default));
parcelHelpers.export(exports, "PocketIcon", ()=>(0, _pocketJsDefault.default));
parcelHelpers.export(exports, "LucidePodcast", ()=>(0, _podcastJsDefault.default));
parcelHelpers.export(exports, "Podcast", ()=>(0, _podcastJsDefault.default));
parcelHelpers.export(exports, "PodcastIcon", ()=>(0, _podcastJsDefault.default));
parcelHelpers.export(exports, "LucidePointerOff", ()=>(0, _pointerOffJsDefault.default));
parcelHelpers.export(exports, "PointerOff", ()=>(0, _pointerOffJsDefault.default));
parcelHelpers.export(exports, "PointerOffIcon", ()=>(0, _pointerOffJsDefault.default));
parcelHelpers.export(exports, "LucidePointer", ()=>(0, _pointerJsDefault.default));
parcelHelpers.export(exports, "Pointer", ()=>(0, _pointerJsDefault.default));
parcelHelpers.export(exports, "PointerIcon", ()=>(0, _pointerJsDefault.default));
parcelHelpers.export(exports, "LucidePopcorn", ()=>(0, _popcornJsDefault.default));
parcelHelpers.export(exports, "Popcorn", ()=>(0, _popcornJsDefault.default));
parcelHelpers.export(exports, "PopcornIcon", ()=>(0, _popcornJsDefault.default));
parcelHelpers.export(exports, "LucidePoundSterling", ()=>(0, _poundSterlingJsDefault.default));
parcelHelpers.export(exports, "PoundSterling", ()=>(0, _poundSterlingJsDefault.default));
parcelHelpers.export(exports, "PoundSterlingIcon", ()=>(0, _poundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucidePopsicle", ()=>(0, _popsicleJsDefault.default));
parcelHelpers.export(exports, "Popsicle", ()=>(0, _popsicleJsDefault.default));
parcelHelpers.export(exports, "PopsicleIcon", ()=>(0, _popsicleJsDefault.default));
parcelHelpers.export(exports, "LucidePower", ()=>(0, _powerJsDefault.default));
parcelHelpers.export(exports, "Power", ()=>(0, _powerJsDefault.default));
parcelHelpers.export(exports, "PowerIcon", ()=>(0, _powerJsDefault.default));
parcelHelpers.export(exports, "LucidePowerOff", ()=>(0, _powerOffJsDefault.default));
parcelHelpers.export(exports, "PowerOff", ()=>(0, _powerOffJsDefault.default));
parcelHelpers.export(exports, "PowerOffIcon", ()=>(0, _powerOffJsDefault.default));
parcelHelpers.export(exports, "LucidePresentation", ()=>(0, _presentationJsDefault.default));
parcelHelpers.export(exports, "Presentation", ()=>(0, _presentationJsDefault.default));
parcelHelpers.export(exports, "PresentationIcon", ()=>(0, _presentationJsDefault.default));
parcelHelpers.export(exports, "LucidePrinterCheck", ()=>(0, _printerCheckJsDefault.default));
parcelHelpers.export(exports, "PrinterCheck", ()=>(0, _printerCheckJsDefault.default));
parcelHelpers.export(exports, "PrinterCheckIcon", ()=>(0, _printerCheckJsDefault.default));
parcelHelpers.export(exports, "LucidePrinter", ()=>(0, _printerJsDefault.default));
parcelHelpers.export(exports, "Printer", ()=>(0, _printerJsDefault.default));
parcelHelpers.export(exports, "PrinterIcon", ()=>(0, _printerJsDefault.default));
parcelHelpers.export(exports, "LucideProjector", ()=>(0, _projectorJsDefault.default));
parcelHelpers.export(exports, "Projector", ()=>(0, _projectorJsDefault.default));
parcelHelpers.export(exports, "ProjectorIcon", ()=>(0, _projectorJsDefault.default));
parcelHelpers.export(exports, "LucideProportions", ()=>(0, _proportionsJsDefault.default));
parcelHelpers.export(exports, "Proportions", ()=>(0, _proportionsJsDefault.default));
parcelHelpers.export(exports, "ProportionsIcon", ()=>(0, _proportionsJsDefault.default));
parcelHelpers.export(exports, "LucidePuzzle", ()=>(0, _puzzleJsDefault.default));
parcelHelpers.export(exports, "Puzzle", ()=>(0, _puzzleJsDefault.default));
parcelHelpers.export(exports, "PuzzleIcon", ()=>(0, _puzzleJsDefault.default));
parcelHelpers.export(exports, "LucidePyramid", ()=>(0, _pyramidJsDefault.default));
parcelHelpers.export(exports, "Pyramid", ()=>(0, _pyramidJsDefault.default));
parcelHelpers.export(exports, "PyramidIcon", ()=>(0, _pyramidJsDefault.default));
parcelHelpers.export(exports, "LucideQrCode", ()=>(0, _qrCodeJsDefault.default));
parcelHelpers.export(exports, "QrCode", ()=>(0, _qrCodeJsDefault.default));
parcelHelpers.export(exports, "QrCodeIcon", ()=>(0, _qrCodeJsDefault.default));
parcelHelpers.export(exports, "LucideQuote", ()=>(0, _quoteJsDefault.default));
parcelHelpers.export(exports, "Quote", ()=>(0, _quoteJsDefault.default));
parcelHelpers.export(exports, "QuoteIcon", ()=>(0, _quoteJsDefault.default));
parcelHelpers.export(exports, "LucideRabbit", ()=>(0, _rabbitJsDefault.default));
parcelHelpers.export(exports, "Rabbit", ()=>(0, _rabbitJsDefault.default));
parcelHelpers.export(exports, "RabbitIcon", ()=>(0, _rabbitJsDefault.default));
parcelHelpers.export(exports, "LucideRadar", ()=>(0, _radarJsDefault.default));
parcelHelpers.export(exports, "Radar", ()=>(0, _radarJsDefault.default));
parcelHelpers.export(exports, "RadarIcon", ()=>(0, _radarJsDefault.default));
parcelHelpers.export(exports, "LucideRadiation", ()=>(0, _radiationJsDefault.default));
parcelHelpers.export(exports, "Radiation", ()=>(0, _radiationJsDefault.default));
parcelHelpers.export(exports, "RadiationIcon", ()=>(0, _radiationJsDefault.default));
parcelHelpers.export(exports, "LucideRadical", ()=>(0, _radicalJsDefault.default));
parcelHelpers.export(exports, "Radical", ()=>(0, _radicalJsDefault.default));
parcelHelpers.export(exports, "RadicalIcon", ()=>(0, _radicalJsDefault.default));
parcelHelpers.export(exports, "LucideRadioTower", ()=>(0, _radioTowerJsDefault.default));
parcelHelpers.export(exports, "RadioTower", ()=>(0, _radioTowerJsDefault.default));
parcelHelpers.export(exports, "RadioTowerIcon", ()=>(0, _radioTowerJsDefault.default));
parcelHelpers.export(exports, "LucideRadioReceiver", ()=>(0, _radioReceiverJsDefault.default));
parcelHelpers.export(exports, "RadioReceiver", ()=>(0, _radioReceiverJsDefault.default));
parcelHelpers.export(exports, "RadioReceiverIcon", ()=>(0, _radioReceiverJsDefault.default));
parcelHelpers.export(exports, "LucideRadio", ()=>(0, _radioJsDefault.default));
parcelHelpers.export(exports, "Radio", ()=>(0, _radioJsDefault.default));
parcelHelpers.export(exports, "RadioIcon", ()=>(0, _radioJsDefault.default));
parcelHelpers.export(exports, "LucideRadius", ()=>(0, _radiusJsDefault.default));
parcelHelpers.export(exports, "Radius", ()=>(0, _radiusJsDefault.default));
parcelHelpers.export(exports, "RadiusIcon", ()=>(0, _radiusJsDefault.default));
parcelHelpers.export(exports, "LucideRailSymbol", ()=>(0, _railSymbolJsDefault.default));
parcelHelpers.export(exports, "RailSymbol", ()=>(0, _railSymbolJsDefault.default));
parcelHelpers.export(exports, "RailSymbolIcon", ()=>(0, _railSymbolJsDefault.default));
parcelHelpers.export(exports, "LucideRainbow", ()=>(0, _rainbowJsDefault.default));
parcelHelpers.export(exports, "Rainbow", ()=>(0, _rainbowJsDefault.default));
parcelHelpers.export(exports, "RainbowIcon", ()=>(0, _rainbowJsDefault.default));
parcelHelpers.export(exports, "LucideRat", ()=>(0, _ratJsDefault.default));
parcelHelpers.export(exports, "Rat", ()=>(0, _ratJsDefault.default));
parcelHelpers.export(exports, "RatIcon", ()=>(0, _ratJsDefault.default));
parcelHelpers.export(exports, "LucideRatio", ()=>(0, _ratioJsDefault.default));
parcelHelpers.export(exports, "Ratio", ()=>(0, _ratioJsDefault.default));
parcelHelpers.export(exports, "RatioIcon", ()=>(0, _ratioJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptCent", ()=>(0, _receiptCentJsDefault.default));
parcelHelpers.export(exports, "ReceiptCent", ()=>(0, _receiptCentJsDefault.default));
parcelHelpers.export(exports, "ReceiptCentIcon", ()=>(0, _receiptCentJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptIndianRupee", ()=>(0, _receiptIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "ReceiptIndianRupee", ()=>(0, _receiptIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "ReceiptIndianRupeeIcon", ()=>(0, _receiptIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptJapaneseYen", ()=>(0, _receiptJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "ReceiptJapaneseYen", ()=>(0, _receiptJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "ReceiptJapaneseYenIcon", ()=>(0, _receiptJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptEuro", ()=>(0, _receiptEuroJsDefault.default));
parcelHelpers.export(exports, "ReceiptEuro", ()=>(0, _receiptEuroJsDefault.default));
parcelHelpers.export(exports, "ReceiptEuroIcon", ()=>(0, _receiptEuroJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptPoundSterling", ()=>(0, _receiptPoundSterlingJsDefault.default));
parcelHelpers.export(exports, "ReceiptPoundSterling", ()=>(0, _receiptPoundSterlingJsDefault.default));
parcelHelpers.export(exports, "ReceiptPoundSterlingIcon", ()=>(0, _receiptPoundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptRussianRuble", ()=>(0, _receiptRussianRubleJsDefault.default));
parcelHelpers.export(exports, "ReceiptRussianRuble", ()=>(0, _receiptRussianRubleJsDefault.default));
parcelHelpers.export(exports, "ReceiptRussianRubleIcon", ()=>(0, _receiptRussianRubleJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptSwissFranc", ()=>(0, _receiptSwissFrancJsDefault.default));
parcelHelpers.export(exports, "ReceiptSwissFranc", ()=>(0, _receiptSwissFrancJsDefault.default));
parcelHelpers.export(exports, "ReceiptSwissFrancIcon", ()=>(0, _receiptSwissFrancJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptText", ()=>(0, _receiptTextJsDefault.default));
parcelHelpers.export(exports, "ReceiptText", ()=>(0, _receiptTextJsDefault.default));
parcelHelpers.export(exports, "ReceiptTextIcon", ()=>(0, _receiptTextJsDefault.default));
parcelHelpers.export(exports, "LucideReceipt", ()=>(0, _receiptJsDefault.default));
parcelHelpers.export(exports, "Receipt", ()=>(0, _receiptJsDefault.default));
parcelHelpers.export(exports, "ReceiptIcon", ()=>(0, _receiptJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleGoggles", ()=>(0, _rectangleGogglesJsDefault.default));
parcelHelpers.export(exports, "RectangleGoggles", ()=>(0, _rectangleGogglesJsDefault.default));
parcelHelpers.export(exports, "RectangleGogglesIcon", ()=>(0, _rectangleGogglesJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleHorizontal", ()=>(0, _rectangleHorizontalJsDefault.default));
parcelHelpers.export(exports, "RectangleHorizontal", ()=>(0, _rectangleHorizontalJsDefault.default));
parcelHelpers.export(exports, "RectangleHorizontalIcon", ()=>(0, _rectangleHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleVertical", ()=>(0, _rectangleVerticalJsDefault.default));
parcelHelpers.export(exports, "RectangleVertical", ()=>(0, _rectangleVerticalJsDefault.default));
parcelHelpers.export(exports, "RectangleVerticalIcon", ()=>(0, _rectangleVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideRecycle", ()=>(0, _recycleJsDefault.default));
parcelHelpers.export(exports, "Recycle", ()=>(0, _recycleJsDefault.default));
parcelHelpers.export(exports, "RecycleIcon", ()=>(0, _recycleJsDefault.default));
parcelHelpers.export(exports, "LucideRedo2", ()=>(0, _redo2JsDefault.default));
parcelHelpers.export(exports, "Redo2", ()=>(0, _redo2JsDefault.default));
parcelHelpers.export(exports, "Redo2Icon", ()=>(0, _redo2JsDefault.default));
parcelHelpers.export(exports, "LucideRedoDot", ()=>(0, _redoDotJsDefault.default));
parcelHelpers.export(exports, "RedoDot", ()=>(0, _redoDotJsDefault.default));
parcelHelpers.export(exports, "RedoDotIcon", ()=>(0, _redoDotJsDefault.default));
parcelHelpers.export(exports, "LucideRedo", ()=>(0, _redoJsDefault.default));
parcelHelpers.export(exports, "Redo", ()=>(0, _redoJsDefault.default));
parcelHelpers.export(exports, "RedoIcon", ()=>(0, _redoJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCcwDot", ()=>(0, _refreshCcwDotJsDefault.default));
parcelHelpers.export(exports, "RefreshCcwDot", ()=>(0, _refreshCcwDotJsDefault.default));
parcelHelpers.export(exports, "RefreshCcwDotIcon", ()=>(0, _refreshCcwDotJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCcw", ()=>(0, _refreshCcwJsDefault.default));
parcelHelpers.export(exports, "RefreshCcw", ()=>(0, _refreshCcwJsDefault.default));
parcelHelpers.export(exports, "RefreshCcwIcon", ()=>(0, _refreshCcwJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCwOff", ()=>(0, _refreshCwOffJsDefault.default));
parcelHelpers.export(exports, "RefreshCwOff", ()=>(0, _refreshCwOffJsDefault.default));
parcelHelpers.export(exports, "RefreshCwOffIcon", ()=>(0, _refreshCwOffJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCw", ()=>(0, _refreshCwJsDefault.default));
parcelHelpers.export(exports, "RefreshCw", ()=>(0, _refreshCwJsDefault.default));
parcelHelpers.export(exports, "RefreshCwIcon", ()=>(0, _refreshCwJsDefault.default));
parcelHelpers.export(exports, "LucideRefrigerator", ()=>(0, _refrigeratorJsDefault.default));
parcelHelpers.export(exports, "Refrigerator", ()=>(0, _refrigeratorJsDefault.default));
parcelHelpers.export(exports, "RefrigeratorIcon", ()=>(0, _refrigeratorJsDefault.default));
parcelHelpers.export(exports, "LucideRegex", ()=>(0, _regexJsDefault.default));
parcelHelpers.export(exports, "Regex", ()=>(0, _regexJsDefault.default));
parcelHelpers.export(exports, "RegexIcon", ()=>(0, _regexJsDefault.default));
parcelHelpers.export(exports, "LucideRemoveFormatting", ()=>(0, _removeFormattingJsDefault.default));
parcelHelpers.export(exports, "RemoveFormatting", ()=>(0, _removeFormattingJsDefault.default));
parcelHelpers.export(exports, "RemoveFormattingIcon", ()=>(0, _removeFormattingJsDefault.default));
parcelHelpers.export(exports, "LucideRepeat1", ()=>(0, _repeat1JsDefault.default));
parcelHelpers.export(exports, "Repeat1", ()=>(0, _repeat1JsDefault.default));
parcelHelpers.export(exports, "Repeat1Icon", ()=>(0, _repeat1JsDefault.default));
parcelHelpers.export(exports, "LucideRepeat2", ()=>(0, _repeat2JsDefault.default));
parcelHelpers.export(exports, "Repeat2", ()=>(0, _repeat2JsDefault.default));
parcelHelpers.export(exports, "Repeat2Icon", ()=>(0, _repeat2JsDefault.default));
parcelHelpers.export(exports, "LucideRepeat", ()=>(0, _repeatJsDefault.default));
parcelHelpers.export(exports, "Repeat", ()=>(0, _repeatJsDefault.default));
parcelHelpers.export(exports, "RepeatIcon", ()=>(0, _repeatJsDefault.default));
parcelHelpers.export(exports, "LucideReplaceAll", ()=>(0, _replaceAllJsDefault.default));
parcelHelpers.export(exports, "ReplaceAll", ()=>(0, _replaceAllJsDefault.default));
parcelHelpers.export(exports, "ReplaceAllIcon", ()=>(0, _replaceAllJsDefault.default));
parcelHelpers.export(exports, "LucideReplace", ()=>(0, _replaceJsDefault.default));
parcelHelpers.export(exports, "Replace", ()=>(0, _replaceJsDefault.default));
parcelHelpers.export(exports, "ReplaceIcon", ()=>(0, _replaceJsDefault.default));
parcelHelpers.export(exports, "LucideReplyAll", ()=>(0, _replyAllJsDefault.default));
parcelHelpers.export(exports, "ReplyAll", ()=>(0, _replyAllJsDefault.default));
parcelHelpers.export(exports, "ReplyAllIcon", ()=>(0, _replyAllJsDefault.default));
parcelHelpers.export(exports, "LucideReply", ()=>(0, _replyJsDefault.default));
parcelHelpers.export(exports, "Reply", ()=>(0, _replyJsDefault.default));
parcelHelpers.export(exports, "ReplyIcon", ()=>(0, _replyJsDefault.default));
parcelHelpers.export(exports, "LucideRewind", ()=>(0, _rewindJsDefault.default));
parcelHelpers.export(exports, "Rewind", ()=>(0, _rewindJsDefault.default));
parcelHelpers.export(exports, "RewindIcon", ()=>(0, _rewindJsDefault.default));
parcelHelpers.export(exports, "LucideRibbon", ()=>(0, _ribbonJsDefault.default));
parcelHelpers.export(exports, "Ribbon", ()=>(0, _ribbonJsDefault.default));
parcelHelpers.export(exports, "RibbonIcon", ()=>(0, _ribbonJsDefault.default));
parcelHelpers.export(exports, "LucideRocket", ()=>(0, _rocketJsDefault.default));
parcelHelpers.export(exports, "Rocket", ()=>(0, _rocketJsDefault.default));
parcelHelpers.export(exports, "RocketIcon", ()=>(0, _rocketJsDefault.default));
parcelHelpers.export(exports, "LucideRockingChair", ()=>(0, _rockingChairJsDefault.default));
parcelHelpers.export(exports, "RockingChair", ()=>(0, _rockingChairJsDefault.default));
parcelHelpers.export(exports, "RockingChairIcon", ()=>(0, _rockingChairJsDefault.default));
parcelHelpers.export(exports, "LucideRollerCoaster", ()=>(0, _rollerCoasterJsDefault.default));
parcelHelpers.export(exports, "RollerCoaster", ()=>(0, _rollerCoasterJsDefault.default));
parcelHelpers.export(exports, "RollerCoasterIcon", ()=>(0, _rollerCoasterJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCcwKey", ()=>(0, _rotateCcwKeyJsDefault.default));
parcelHelpers.export(exports, "RotateCcwKey", ()=>(0, _rotateCcwKeyJsDefault.default));
parcelHelpers.export(exports, "RotateCcwKeyIcon", ()=>(0, _rotateCcwKeyJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCcwSquare", ()=>(0, _rotateCcwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCcwSquare", ()=>(0, _rotateCcwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCcwSquareIcon", ()=>(0, _rotateCcwSquareJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCcw", ()=>(0, _rotateCcwJsDefault.default));
parcelHelpers.export(exports, "RotateCcw", ()=>(0, _rotateCcwJsDefault.default));
parcelHelpers.export(exports, "RotateCcwIcon", ()=>(0, _rotateCcwJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCwSquare", ()=>(0, _rotateCwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCwSquare", ()=>(0, _rotateCwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCwSquareIcon", ()=>(0, _rotateCwSquareJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCw", ()=>(0, _rotateCwJsDefault.default));
parcelHelpers.export(exports, "RotateCw", ()=>(0, _rotateCwJsDefault.default));
parcelHelpers.export(exports, "RotateCwIcon", ()=>(0, _rotateCwJsDefault.default));
parcelHelpers.export(exports, "LucideRouteOff", ()=>(0, _routeOffJsDefault.default));
parcelHelpers.export(exports, "RouteOff", ()=>(0, _routeOffJsDefault.default));
parcelHelpers.export(exports, "RouteOffIcon", ()=>(0, _routeOffJsDefault.default));
parcelHelpers.export(exports, "LucideRoute", ()=>(0, _routeJsDefault.default));
parcelHelpers.export(exports, "Route", ()=>(0, _routeJsDefault.default));
parcelHelpers.export(exports, "RouteIcon", ()=>(0, _routeJsDefault.default));
parcelHelpers.export(exports, "LucideRouter", ()=>(0, _routerJsDefault.default));
parcelHelpers.export(exports, "Router", ()=>(0, _routerJsDefault.default));
parcelHelpers.export(exports, "RouterIcon", ()=>(0, _routerJsDefault.default));
parcelHelpers.export(exports, "LucideRows4", ()=>(0, _rows4JsDefault.default));
parcelHelpers.export(exports, "Rows4", ()=>(0, _rows4JsDefault.default));
parcelHelpers.export(exports, "Rows4Icon", ()=>(0, _rows4JsDefault.default));
parcelHelpers.export(exports, "LucideRss", ()=>(0, _rssJsDefault.default));
parcelHelpers.export(exports, "Rss", ()=>(0, _rssJsDefault.default));
parcelHelpers.export(exports, "RssIcon", ()=>(0, _rssJsDefault.default));
parcelHelpers.export(exports, "LucideRulerDimensionLine", ()=>(0, _rulerDimensionLineJsDefault.default));
parcelHelpers.export(exports, "RulerDimensionLine", ()=>(0, _rulerDimensionLineJsDefault.default));
parcelHelpers.export(exports, "RulerDimensionLineIcon", ()=>(0, _rulerDimensionLineJsDefault.default));
parcelHelpers.export(exports, "LucideRuler", ()=>(0, _rulerJsDefault.default));
parcelHelpers.export(exports, "Ruler", ()=>(0, _rulerJsDefault.default));
parcelHelpers.export(exports, "RulerIcon", ()=>(0, _rulerJsDefault.default));
parcelHelpers.export(exports, "LucideRussianRuble", ()=>(0, _russianRubleJsDefault.default));
parcelHelpers.export(exports, "RussianRuble", ()=>(0, _russianRubleJsDefault.default));
parcelHelpers.export(exports, "RussianRubleIcon", ()=>(0, _russianRubleJsDefault.default));
parcelHelpers.export(exports, "LucideSailboat", ()=>(0, _sailboatJsDefault.default));
parcelHelpers.export(exports, "Sailboat", ()=>(0, _sailboatJsDefault.default));
parcelHelpers.export(exports, "SailboatIcon", ()=>(0, _sailboatJsDefault.default));
parcelHelpers.export(exports, "LucideSalad", ()=>(0, _saladJsDefault.default));
parcelHelpers.export(exports, "Salad", ()=>(0, _saladJsDefault.default));
parcelHelpers.export(exports, "SaladIcon", ()=>(0, _saladJsDefault.default));
parcelHelpers.export(exports, "LucideSandwich", ()=>(0, _sandwichJsDefault.default));
parcelHelpers.export(exports, "Sandwich", ()=>(0, _sandwichJsDefault.default));
parcelHelpers.export(exports, "SandwichIcon", ()=>(0, _sandwichJsDefault.default));
parcelHelpers.export(exports, "LucideSatelliteDish", ()=>(0, _satelliteDishJsDefault.default));
parcelHelpers.export(exports, "SatelliteDish", ()=>(0, _satelliteDishJsDefault.default));
parcelHelpers.export(exports, "SatelliteDishIcon", ()=>(0, _satelliteDishJsDefault.default));
parcelHelpers.export(exports, "LucideSatellite", ()=>(0, _satelliteJsDefault.default));
parcelHelpers.export(exports, "Satellite", ()=>(0, _satelliteJsDefault.default));
parcelHelpers.export(exports, "SatelliteIcon", ()=>(0, _satelliteJsDefault.default));
parcelHelpers.export(exports, "LucideSaudiRiyal", ()=>(0, _saudiRiyalJsDefault.default));
parcelHelpers.export(exports, "SaudiRiyal", ()=>(0, _saudiRiyalJsDefault.default));
parcelHelpers.export(exports, "SaudiRiyalIcon", ()=>(0, _saudiRiyalJsDefault.default));
parcelHelpers.export(exports, "LucideSaveAll", ()=>(0, _saveAllJsDefault.default));
parcelHelpers.export(exports, "SaveAll", ()=>(0, _saveAllJsDefault.default));
parcelHelpers.export(exports, "SaveAllIcon", ()=>(0, _saveAllJsDefault.default));
parcelHelpers.export(exports, "LucideSaveOff", ()=>(0, _saveOffJsDefault.default));
parcelHelpers.export(exports, "SaveOff", ()=>(0, _saveOffJsDefault.default));
parcelHelpers.export(exports, "SaveOffIcon", ()=>(0, _saveOffJsDefault.default));
parcelHelpers.export(exports, "LucideSave", ()=>(0, _saveJsDefault.default));
parcelHelpers.export(exports, "Save", ()=>(0, _saveJsDefault.default));
parcelHelpers.export(exports, "SaveIcon", ()=>(0, _saveJsDefault.default));
parcelHelpers.export(exports, "LucideScale", ()=>(0, _scaleJsDefault.default));
parcelHelpers.export(exports, "Scale", ()=>(0, _scaleJsDefault.default));
parcelHelpers.export(exports, "ScaleIcon", ()=>(0, _scaleJsDefault.default));
parcelHelpers.export(exports, "LucideScaling", ()=>(0, _scalingJsDefault.default));
parcelHelpers.export(exports, "Scaling", ()=>(0, _scalingJsDefault.default));
parcelHelpers.export(exports, "ScalingIcon", ()=>(0, _scalingJsDefault.default));
parcelHelpers.export(exports, "LucideScanBarcode", ()=>(0, _scanBarcodeJsDefault.default));
parcelHelpers.export(exports, "ScanBarcode", ()=>(0, _scanBarcodeJsDefault.default));
parcelHelpers.export(exports, "ScanBarcodeIcon", ()=>(0, _scanBarcodeJsDefault.default));
parcelHelpers.export(exports, "LucideScanFace", ()=>(0, _scanFaceJsDefault.default));
parcelHelpers.export(exports, "ScanFace", ()=>(0, _scanFaceJsDefault.default));
parcelHelpers.export(exports, "ScanFaceIcon", ()=>(0, _scanFaceJsDefault.default));
parcelHelpers.export(exports, "LucideScanEye", ()=>(0, _scanEyeJsDefault.default));
parcelHelpers.export(exports, "ScanEye", ()=>(0, _scanEyeJsDefault.default));
parcelHelpers.export(exports, "ScanEyeIcon", ()=>(0, _scanEyeJsDefault.default));
parcelHelpers.export(exports, "LucideScanHeart", ()=>(0, _scanHeartJsDefault.default));
parcelHelpers.export(exports, "ScanHeart", ()=>(0, _scanHeartJsDefault.default));
parcelHelpers.export(exports, "ScanHeartIcon", ()=>(0, _scanHeartJsDefault.default));
parcelHelpers.export(exports, "LucideScanLine", ()=>(0, _scanLineJsDefault.default));
parcelHelpers.export(exports, "ScanLine", ()=>(0, _scanLineJsDefault.default));
parcelHelpers.export(exports, "ScanLineIcon", ()=>(0, _scanLineJsDefault.default));
parcelHelpers.export(exports, "LucideScanQrCode", ()=>(0, _scanQrCodeJsDefault.default));
parcelHelpers.export(exports, "ScanQrCode", ()=>(0, _scanQrCodeJsDefault.default));
parcelHelpers.export(exports, "ScanQrCodeIcon", ()=>(0, _scanQrCodeJsDefault.default));
parcelHelpers.export(exports, "LucideScanSearch", ()=>(0, _scanSearchJsDefault.default));
parcelHelpers.export(exports, "ScanSearch", ()=>(0, _scanSearchJsDefault.default));
parcelHelpers.export(exports, "ScanSearchIcon", ()=>(0, _scanSearchJsDefault.default));
parcelHelpers.export(exports, "LucideScanText", ()=>(0, _scanTextJsDefault.default));
parcelHelpers.export(exports, "ScanText", ()=>(0, _scanTextJsDefault.default));
parcelHelpers.export(exports, "ScanTextIcon", ()=>(0, _scanTextJsDefault.default));
parcelHelpers.export(exports, "LucideScan", ()=>(0, _scanJsDefault.default));
parcelHelpers.export(exports, "Scan", ()=>(0, _scanJsDefault.default));
parcelHelpers.export(exports, "ScanIcon", ()=>(0, _scanJsDefault.default));
parcelHelpers.export(exports, "LucideSchool", ()=>(0, _schoolJsDefault.default));
parcelHelpers.export(exports, "School", ()=>(0, _schoolJsDefault.default));
parcelHelpers.export(exports, "SchoolIcon", ()=>(0, _schoolJsDefault.default));
parcelHelpers.export(exports, "LucideScissors", ()=>(0, _scissorsJsDefault.default));
parcelHelpers.export(exports, "Scissors", ()=>(0, _scissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsIcon", ()=>(0, _scissorsJsDefault.default));
parcelHelpers.export(exports, "LucideScissorsLineDashed", ()=>(0, _scissorsLineDashedJsDefault.default));
parcelHelpers.export(exports, "ScissorsLineDashed", ()=>(0, _scissorsLineDashedJsDefault.default));
parcelHelpers.export(exports, "ScissorsLineDashedIcon", ()=>(0, _scissorsLineDashedJsDefault.default));
parcelHelpers.export(exports, "LucideScreenShareOff", ()=>(0, _screenShareOffJsDefault.default));
parcelHelpers.export(exports, "ScreenShareOff", ()=>(0, _screenShareOffJsDefault.default));
parcelHelpers.export(exports, "ScreenShareOffIcon", ()=>(0, _screenShareOffJsDefault.default));
parcelHelpers.export(exports, "LucideScreenShare", ()=>(0, _screenShareJsDefault.default));
parcelHelpers.export(exports, "ScreenShare", ()=>(0, _screenShareJsDefault.default));
parcelHelpers.export(exports, "ScreenShareIcon", ()=>(0, _screenShareJsDefault.default));
parcelHelpers.export(exports, "LucideScrollText", ()=>(0, _scrollTextJsDefault.default));
parcelHelpers.export(exports, "ScrollText", ()=>(0, _scrollTextJsDefault.default));
parcelHelpers.export(exports, "ScrollTextIcon", ()=>(0, _scrollTextJsDefault.default));
parcelHelpers.export(exports, "LucideScroll", ()=>(0, _scrollJsDefault.default));
parcelHelpers.export(exports, "Scroll", ()=>(0, _scrollJsDefault.default));
parcelHelpers.export(exports, "ScrollIcon", ()=>(0, _scrollJsDefault.default));
parcelHelpers.export(exports, "LucideSearchCheck", ()=>(0, _searchCheckJsDefault.default));
parcelHelpers.export(exports, "SearchCheck", ()=>(0, _searchCheckJsDefault.default));
parcelHelpers.export(exports, "SearchCheckIcon", ()=>(0, _searchCheckJsDefault.default));
parcelHelpers.export(exports, "LucideSearchCode", ()=>(0, _searchCodeJsDefault.default));
parcelHelpers.export(exports, "SearchCode", ()=>(0, _searchCodeJsDefault.default));
parcelHelpers.export(exports, "SearchCodeIcon", ()=>(0, _searchCodeJsDefault.default));
parcelHelpers.export(exports, "LucideSearchSlash", ()=>(0, _searchSlashJsDefault.default));
parcelHelpers.export(exports, "SearchSlash", ()=>(0, _searchSlashJsDefault.default));
parcelHelpers.export(exports, "SearchSlashIcon", ()=>(0, _searchSlashJsDefault.default));
parcelHelpers.export(exports, "LucideSearchX", ()=>(0, _searchXJsDefault.default));
parcelHelpers.export(exports, "SearchX", ()=>(0, _searchXJsDefault.default));
parcelHelpers.export(exports, "SearchXIcon", ()=>(0, _searchXJsDefault.default));
parcelHelpers.export(exports, "LucideSearch", ()=>(0, _searchJsDefault.default));
parcelHelpers.export(exports, "Search", ()=>(0, _searchJsDefault.default));
parcelHelpers.export(exports, "SearchIcon", ()=>(0, _searchJsDefault.default));
parcelHelpers.export(exports, "LucideSection", ()=>(0, _sectionJsDefault.default));
parcelHelpers.export(exports, "Section", ()=>(0, _sectionJsDefault.default));
parcelHelpers.export(exports, "SectionIcon", ()=>(0, _sectionJsDefault.default));
parcelHelpers.export(exports, "LucideSendToBack", ()=>(0, _sendToBackJsDefault.default));
parcelHelpers.export(exports, "SendToBack", ()=>(0, _sendToBackJsDefault.default));
parcelHelpers.export(exports, "SendToBackIcon", ()=>(0, _sendToBackJsDefault.default));
parcelHelpers.export(exports, "LucideSend", ()=>(0, _sendJsDefault.default));
parcelHelpers.export(exports, "Send", ()=>(0, _sendJsDefault.default));
parcelHelpers.export(exports, "SendIcon", ()=>(0, _sendJsDefault.default));
parcelHelpers.export(exports, "LucideSeparatorHorizontal", ()=>(0, _separatorHorizontalJsDefault.default));
parcelHelpers.export(exports, "SeparatorHorizontal", ()=>(0, _separatorHorizontalJsDefault.default));
parcelHelpers.export(exports, "SeparatorHorizontalIcon", ()=>(0, _separatorHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSeparatorVertical", ()=>(0, _separatorVerticalJsDefault.default));
parcelHelpers.export(exports, "SeparatorVertical", ()=>(0, _separatorVerticalJsDefault.default));
parcelHelpers.export(exports, "SeparatorVerticalIcon", ()=>(0, _separatorVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideServerCog", ()=>(0, _serverCogJsDefault.default));
parcelHelpers.export(exports, "ServerCog", ()=>(0, _serverCogJsDefault.default));
parcelHelpers.export(exports, "ServerCogIcon", ()=>(0, _serverCogJsDefault.default));
parcelHelpers.export(exports, "LucideServerCrash", ()=>(0, _serverCrashJsDefault.default));
parcelHelpers.export(exports, "ServerCrash", ()=>(0, _serverCrashJsDefault.default));
parcelHelpers.export(exports, "ServerCrashIcon", ()=>(0, _serverCrashJsDefault.default));
parcelHelpers.export(exports, "LucideServerOff", ()=>(0, _serverOffJsDefault.default));
parcelHelpers.export(exports, "ServerOff", ()=>(0, _serverOffJsDefault.default));
parcelHelpers.export(exports, "ServerOffIcon", ()=>(0, _serverOffJsDefault.default));
parcelHelpers.export(exports, "LucideServer", ()=>(0, _serverJsDefault.default));
parcelHelpers.export(exports, "Server", ()=>(0, _serverJsDefault.default));
parcelHelpers.export(exports, "ServerIcon", ()=>(0, _serverJsDefault.default));
parcelHelpers.export(exports, "LucideSettings2", ()=>(0, _settings2JsDefault.default));
parcelHelpers.export(exports, "Settings2", ()=>(0, _settings2JsDefault.default));
parcelHelpers.export(exports, "Settings2Icon", ()=>(0, _settings2JsDefault.default));
parcelHelpers.export(exports, "LucideSettings", ()=>(0, _settingsJsDefault.default));
parcelHelpers.export(exports, "Settings", ()=>(0, _settingsJsDefault.default));
parcelHelpers.export(exports, "SettingsIcon", ()=>(0, _settingsJsDefault.default));
parcelHelpers.export(exports, "LucideShapes", ()=>(0, _shapesJsDefault.default));
parcelHelpers.export(exports, "Shapes", ()=>(0, _shapesJsDefault.default));
parcelHelpers.export(exports, "ShapesIcon", ()=>(0, _shapesJsDefault.default));
parcelHelpers.export(exports, "LucideShare2", ()=>(0, _share2JsDefault.default));
parcelHelpers.export(exports, "Share2", ()=>(0, _share2JsDefault.default));
parcelHelpers.export(exports, "Share2Icon", ()=>(0, _share2JsDefault.default));
parcelHelpers.export(exports, "LucideShare", ()=>(0, _shareJsDefault.default));
parcelHelpers.export(exports, "Share", ()=>(0, _shareJsDefault.default));
parcelHelpers.export(exports, "ShareIcon", ()=>(0, _shareJsDefault.default));
parcelHelpers.export(exports, "LucideShell", ()=>(0, _shellJsDefault.default));
parcelHelpers.export(exports, "Shell", ()=>(0, _shellJsDefault.default));
parcelHelpers.export(exports, "ShellIcon", ()=>(0, _shellJsDefault.default));
parcelHelpers.export(exports, "LucideSheet", ()=>(0, _sheetJsDefault.default));
parcelHelpers.export(exports, "Sheet", ()=>(0, _sheetJsDefault.default));
parcelHelpers.export(exports, "SheetIcon", ()=>(0, _sheetJsDefault.default));
parcelHelpers.export(exports, "LucideShieldAlert", ()=>(0, _shieldAlertJsDefault.default));
parcelHelpers.export(exports, "ShieldAlert", ()=>(0, _shieldAlertJsDefault.default));
parcelHelpers.export(exports, "ShieldAlertIcon", ()=>(0, _shieldAlertJsDefault.default));
parcelHelpers.export(exports, "LucideShieldBan", ()=>(0, _shieldBanJsDefault.default));
parcelHelpers.export(exports, "ShieldBan", ()=>(0, _shieldBanJsDefault.default));
parcelHelpers.export(exports, "ShieldBanIcon", ()=>(0, _shieldBanJsDefault.default));
parcelHelpers.export(exports, "LucideShieldCheck", ()=>(0, _shieldCheckJsDefault.default));
parcelHelpers.export(exports, "ShieldCheck", ()=>(0, _shieldCheckJsDefault.default));
parcelHelpers.export(exports, "ShieldCheckIcon", ()=>(0, _shieldCheckJsDefault.default));
parcelHelpers.export(exports, "LucideShieldEllipsis", ()=>(0, _shieldEllipsisJsDefault.default));
parcelHelpers.export(exports, "ShieldEllipsis", ()=>(0, _shieldEllipsisJsDefault.default));
parcelHelpers.export(exports, "ShieldEllipsisIcon", ()=>(0, _shieldEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideShieldHalf", ()=>(0, _shieldHalfJsDefault.default));
parcelHelpers.export(exports, "ShieldHalf", ()=>(0, _shieldHalfJsDefault.default));
parcelHelpers.export(exports, "ShieldHalfIcon", ()=>(0, _shieldHalfJsDefault.default));
parcelHelpers.export(exports, "LucideShieldMinus", ()=>(0, _shieldMinusJsDefault.default));
parcelHelpers.export(exports, "ShieldMinus", ()=>(0, _shieldMinusJsDefault.default));
parcelHelpers.export(exports, "ShieldMinusIcon", ()=>(0, _shieldMinusJsDefault.default));
parcelHelpers.export(exports, "LucideShieldOff", ()=>(0, _shieldOffJsDefault.default));
parcelHelpers.export(exports, "ShieldOff", ()=>(0, _shieldOffJsDefault.default));
parcelHelpers.export(exports, "ShieldOffIcon", ()=>(0, _shieldOffJsDefault.default));
parcelHelpers.export(exports, "LucideShieldPlus", ()=>(0, _shieldPlusJsDefault.default));
parcelHelpers.export(exports, "ShieldPlus", ()=>(0, _shieldPlusJsDefault.default));
parcelHelpers.export(exports, "ShieldPlusIcon", ()=>(0, _shieldPlusJsDefault.default));
parcelHelpers.export(exports, "LucideShieldQuestion", ()=>(0, _shieldQuestionJsDefault.default));
parcelHelpers.export(exports, "ShieldQuestion", ()=>(0, _shieldQuestionJsDefault.default));
parcelHelpers.export(exports, "ShieldQuestionIcon", ()=>(0, _shieldQuestionJsDefault.default));
parcelHelpers.export(exports, "LucideShieldUser", ()=>(0, _shieldUserJsDefault.default));
parcelHelpers.export(exports, "ShieldUser", ()=>(0, _shieldUserJsDefault.default));
parcelHelpers.export(exports, "ShieldUserIcon", ()=>(0, _shieldUserJsDefault.default));
parcelHelpers.export(exports, "LucideShield", ()=>(0, _shieldJsDefault.default));
parcelHelpers.export(exports, "Shield", ()=>(0, _shieldJsDefault.default));
parcelHelpers.export(exports, "ShieldIcon", ()=>(0, _shieldJsDefault.default));
parcelHelpers.export(exports, "LucideShipWheel", ()=>(0, _shipWheelJsDefault.default));
parcelHelpers.export(exports, "ShipWheel", ()=>(0, _shipWheelJsDefault.default));
parcelHelpers.export(exports, "ShipWheelIcon", ()=>(0, _shipWheelJsDefault.default));
parcelHelpers.export(exports, "LucideShip", ()=>(0, _shipJsDefault.default));
parcelHelpers.export(exports, "Ship", ()=>(0, _shipJsDefault.default));
parcelHelpers.export(exports, "ShipIcon", ()=>(0, _shipJsDefault.default));
parcelHelpers.export(exports, "LucideShirt", ()=>(0, _shirtJsDefault.default));
parcelHelpers.export(exports, "Shirt", ()=>(0, _shirtJsDefault.default));
parcelHelpers.export(exports, "ShirtIcon", ()=>(0, _shirtJsDefault.default));
parcelHelpers.export(exports, "LucideShoppingBag", ()=>(0, _shoppingBagJsDefault.default));
parcelHelpers.export(exports, "ShoppingBag", ()=>(0, _shoppingBagJsDefault.default));
parcelHelpers.export(exports, "ShoppingBagIcon", ()=>(0, _shoppingBagJsDefault.default));
parcelHelpers.export(exports, "LucideShoppingBasket", ()=>(0, _shoppingBasketJsDefault.default));
parcelHelpers.export(exports, "ShoppingBasket", ()=>(0, _shoppingBasketJsDefault.default));
parcelHelpers.export(exports, "ShoppingBasketIcon", ()=>(0, _shoppingBasketJsDefault.default));
parcelHelpers.export(exports, "LucideShoppingCart", ()=>(0, _shoppingCartJsDefault.default));
parcelHelpers.export(exports, "ShoppingCart", ()=>(0, _shoppingCartJsDefault.default));
parcelHelpers.export(exports, "ShoppingCartIcon", ()=>(0, _shoppingCartJsDefault.default));
parcelHelpers.export(exports, "LucideShovel", ()=>(0, _shovelJsDefault.default));
parcelHelpers.export(exports, "Shovel", ()=>(0, _shovelJsDefault.default));
parcelHelpers.export(exports, "ShovelIcon", ()=>(0, _shovelJsDefault.default));
parcelHelpers.export(exports, "LucideShowerHead", ()=>(0, _showerHeadJsDefault.default));
parcelHelpers.export(exports, "ShowerHead", ()=>(0, _showerHeadJsDefault.default));
parcelHelpers.export(exports, "ShowerHeadIcon", ()=>(0, _showerHeadJsDefault.default));
parcelHelpers.export(exports, "LucideShredder", ()=>(0, _shredderJsDefault.default));
parcelHelpers.export(exports, "Shredder", ()=>(0, _shredderJsDefault.default));
parcelHelpers.export(exports, "ShredderIcon", ()=>(0, _shredderJsDefault.default));
parcelHelpers.export(exports, "LucideShrimp", ()=>(0, _shrimpJsDefault.default));
parcelHelpers.export(exports, "Shrimp", ()=>(0, _shrimpJsDefault.default));
parcelHelpers.export(exports, "ShrimpIcon", ()=>(0, _shrimpJsDefault.default));
parcelHelpers.export(exports, "LucideShrink", ()=>(0, _shrinkJsDefault.default));
parcelHelpers.export(exports, "Shrink", ()=>(0, _shrinkJsDefault.default));
parcelHelpers.export(exports, "ShrinkIcon", ()=>(0, _shrinkJsDefault.default));
parcelHelpers.export(exports, "LucideShrub", ()=>(0, _shrubJsDefault.default));
parcelHelpers.export(exports, "Shrub", ()=>(0, _shrubJsDefault.default));
parcelHelpers.export(exports, "ShrubIcon", ()=>(0, _shrubJsDefault.default));
parcelHelpers.export(exports, "LucideShuffle", ()=>(0, _shuffleJsDefault.default));
parcelHelpers.export(exports, "Shuffle", ()=>(0, _shuffleJsDefault.default));
parcelHelpers.export(exports, "ShuffleIcon", ()=>(0, _shuffleJsDefault.default));
parcelHelpers.export(exports, "LucideSigma", ()=>(0, _sigmaJsDefault.default));
parcelHelpers.export(exports, "Sigma", ()=>(0, _sigmaJsDefault.default));
parcelHelpers.export(exports, "SigmaIcon", ()=>(0, _sigmaJsDefault.default));
parcelHelpers.export(exports, "LucideSignalHigh", ()=>(0, _signalHighJsDefault.default));
parcelHelpers.export(exports, "SignalHigh", ()=>(0, _signalHighJsDefault.default));
parcelHelpers.export(exports, "SignalHighIcon", ()=>(0, _signalHighJsDefault.default));
parcelHelpers.export(exports, "LucideSignalLow", ()=>(0, _signalLowJsDefault.default));
parcelHelpers.export(exports, "SignalLow", ()=>(0, _signalLowJsDefault.default));
parcelHelpers.export(exports, "SignalLowIcon", ()=>(0, _signalLowJsDefault.default));
parcelHelpers.export(exports, "LucideSignalMedium", ()=>(0, _signalMediumJsDefault.default));
parcelHelpers.export(exports, "SignalMedium", ()=>(0, _signalMediumJsDefault.default));
parcelHelpers.export(exports, "SignalMediumIcon", ()=>(0, _signalMediumJsDefault.default));
parcelHelpers.export(exports, "LucideSignalZero", ()=>(0, _signalZeroJsDefault.default));
parcelHelpers.export(exports, "SignalZero", ()=>(0, _signalZeroJsDefault.default));
parcelHelpers.export(exports, "SignalZeroIcon", ()=>(0, _signalZeroJsDefault.default));
parcelHelpers.export(exports, "LucideSignal", ()=>(0, _signalJsDefault.default));
parcelHelpers.export(exports, "Signal", ()=>(0, _signalJsDefault.default));
parcelHelpers.export(exports, "SignalIcon", ()=>(0, _signalJsDefault.default));
parcelHelpers.export(exports, "LucideSignature", ()=>(0, _signatureJsDefault.default));
parcelHelpers.export(exports, "Signature", ()=>(0, _signatureJsDefault.default));
parcelHelpers.export(exports, "SignatureIcon", ()=>(0, _signatureJsDefault.default));
parcelHelpers.export(exports, "LucideSignpostBig", ()=>(0, _signpostBigJsDefault.default));
parcelHelpers.export(exports, "SignpostBig", ()=>(0, _signpostBigJsDefault.default));
parcelHelpers.export(exports, "SignpostBigIcon", ()=>(0, _signpostBigJsDefault.default));
parcelHelpers.export(exports, "LucideSignpost", ()=>(0, _signpostJsDefault.default));
parcelHelpers.export(exports, "Signpost", ()=>(0, _signpostJsDefault.default));
parcelHelpers.export(exports, "SignpostIcon", ()=>(0, _signpostJsDefault.default));
parcelHelpers.export(exports, "LucideSiren", ()=>(0, _sirenJsDefault.default));
parcelHelpers.export(exports, "Siren", ()=>(0, _sirenJsDefault.default));
parcelHelpers.export(exports, "SirenIcon", ()=>(0, _sirenJsDefault.default));
parcelHelpers.export(exports, "LucideSkipForward", ()=>(0, _skipForwardJsDefault.default));
parcelHelpers.export(exports, "SkipForward", ()=>(0, _skipForwardJsDefault.default));
parcelHelpers.export(exports, "SkipForwardIcon", ()=>(0, _skipForwardJsDefault.default));
parcelHelpers.export(exports, "LucideSkipBack", ()=>(0, _skipBackJsDefault.default));
parcelHelpers.export(exports, "SkipBack", ()=>(0, _skipBackJsDefault.default));
parcelHelpers.export(exports, "SkipBackIcon", ()=>(0, _skipBackJsDefault.default));
parcelHelpers.export(exports, "LucideSlack", ()=>(0, _slackJsDefault.default));
parcelHelpers.export(exports, "Slack", ()=>(0, _slackJsDefault.default));
parcelHelpers.export(exports, "SlackIcon", ()=>(0, _slackJsDefault.default));
parcelHelpers.export(exports, "LucideSkull", ()=>(0, _skullJsDefault.default));
parcelHelpers.export(exports, "Skull", ()=>(0, _skullJsDefault.default));
parcelHelpers.export(exports, "SkullIcon", ()=>(0, _skullJsDefault.default));
parcelHelpers.export(exports, "LucideSlash", ()=>(0, _slashJsDefault.default));
parcelHelpers.export(exports, "Slash", ()=>(0, _slashJsDefault.default));
parcelHelpers.export(exports, "SlashIcon", ()=>(0, _slashJsDefault.default));
parcelHelpers.export(exports, "LucideSlice", ()=>(0, _sliceJsDefault.default));
parcelHelpers.export(exports, "Slice", ()=>(0, _sliceJsDefault.default));
parcelHelpers.export(exports, "SliceIcon", ()=>(0, _sliceJsDefault.default));
parcelHelpers.export(exports, "LucideSlidersHorizontal", ()=>(0, _slidersHorizontalJsDefault.default));
parcelHelpers.export(exports, "SlidersHorizontal", ()=>(0, _slidersHorizontalJsDefault.default));
parcelHelpers.export(exports, "SlidersHorizontalIcon", ()=>(0, _slidersHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSmartphoneCharging", ()=>(0, _smartphoneChargingJsDefault.default));
parcelHelpers.export(exports, "SmartphoneCharging", ()=>(0, _smartphoneChargingJsDefault.default));
parcelHelpers.export(exports, "SmartphoneChargingIcon", ()=>(0, _smartphoneChargingJsDefault.default));
parcelHelpers.export(exports, "LucideSmartphoneNfc", ()=>(0, _smartphoneNfcJsDefault.default));
parcelHelpers.export(exports, "SmartphoneNfc", ()=>(0, _smartphoneNfcJsDefault.default));
parcelHelpers.export(exports, "SmartphoneNfcIcon", ()=>(0, _smartphoneNfcJsDefault.default));
parcelHelpers.export(exports, "LucideSmartphone", ()=>(0, _smartphoneJsDefault.default));
parcelHelpers.export(exports, "Smartphone", ()=>(0, _smartphoneJsDefault.default));
parcelHelpers.export(exports, "SmartphoneIcon", ()=>(0, _smartphoneJsDefault.default));
parcelHelpers.export(exports, "LucideSmilePlus", ()=>(0, _smilePlusJsDefault.default));
parcelHelpers.export(exports, "SmilePlus", ()=>(0, _smilePlusJsDefault.default));
parcelHelpers.export(exports, "SmilePlusIcon", ()=>(0, _smilePlusJsDefault.default));
parcelHelpers.export(exports, "LucideSmile", ()=>(0, _smileJsDefault.default));
parcelHelpers.export(exports, "Smile", ()=>(0, _smileJsDefault.default));
parcelHelpers.export(exports, "SmileIcon", ()=>(0, _smileJsDefault.default));
parcelHelpers.export(exports, "LucideSnail", ()=>(0, _snailJsDefault.default));
parcelHelpers.export(exports, "Snail", ()=>(0, _snailJsDefault.default));
parcelHelpers.export(exports, "SnailIcon", ()=>(0, _snailJsDefault.default));
parcelHelpers.export(exports, "LucideSnowflake", ()=>(0, _snowflakeJsDefault.default));
parcelHelpers.export(exports, "Snowflake", ()=>(0, _snowflakeJsDefault.default));
parcelHelpers.export(exports, "SnowflakeIcon", ()=>(0, _snowflakeJsDefault.default));
parcelHelpers.export(exports, "LucideSoapDispenserDroplet", ()=>(0, _soapDispenserDropletJsDefault.default));
parcelHelpers.export(exports, "SoapDispenserDroplet", ()=>(0, _soapDispenserDropletJsDefault.default));
parcelHelpers.export(exports, "SoapDispenserDropletIcon", ()=>(0, _soapDispenserDropletJsDefault.default));
parcelHelpers.export(exports, "LucideSofa", ()=>(0, _sofaJsDefault.default));
parcelHelpers.export(exports, "Sofa", ()=>(0, _sofaJsDefault.default));
parcelHelpers.export(exports, "SofaIcon", ()=>(0, _sofaJsDefault.default));
parcelHelpers.export(exports, "LucideSoup", ()=>(0, _soupJsDefault.default));
parcelHelpers.export(exports, "Soup", ()=>(0, _soupJsDefault.default));
parcelHelpers.export(exports, "SoupIcon", ()=>(0, _soupJsDefault.default));
parcelHelpers.export(exports, "LucideSpace", ()=>(0, _spaceJsDefault.default));
parcelHelpers.export(exports, "Space", ()=>(0, _spaceJsDefault.default));
parcelHelpers.export(exports, "SpaceIcon", ()=>(0, _spaceJsDefault.default));
parcelHelpers.export(exports, "LucideSpade", ()=>(0, _spadeJsDefault.default));
parcelHelpers.export(exports, "Spade", ()=>(0, _spadeJsDefault.default));
parcelHelpers.export(exports, "SpadeIcon", ()=>(0, _spadeJsDefault.default));
parcelHelpers.export(exports, "LucideSparkle", ()=>(0, _sparkleJsDefault.default));
parcelHelpers.export(exports, "Sparkle", ()=>(0, _sparkleJsDefault.default));
parcelHelpers.export(exports, "SparkleIcon", ()=>(0, _sparkleJsDefault.default));
parcelHelpers.export(exports, "LucideSpeaker", ()=>(0, _speakerJsDefault.default));
parcelHelpers.export(exports, "Speaker", ()=>(0, _speakerJsDefault.default));
parcelHelpers.export(exports, "SpeakerIcon", ()=>(0, _speakerJsDefault.default));
parcelHelpers.export(exports, "LucideSpeech", ()=>(0, _speechJsDefault.default));
parcelHelpers.export(exports, "Speech", ()=>(0, _speechJsDefault.default));
parcelHelpers.export(exports, "SpeechIcon", ()=>(0, _speechJsDefault.default));
parcelHelpers.export(exports, "LucideSpellCheck2", ()=>(0, _spellCheck2JsDefault.default));
parcelHelpers.export(exports, "SpellCheck2", ()=>(0, _spellCheck2JsDefault.default));
parcelHelpers.export(exports, "SpellCheck2Icon", ()=>(0, _spellCheck2JsDefault.default));
parcelHelpers.export(exports, "LucideSpellCheck", ()=>(0, _spellCheckJsDefault.default));
parcelHelpers.export(exports, "SpellCheck", ()=>(0, _spellCheckJsDefault.default));
parcelHelpers.export(exports, "SpellCheckIcon", ()=>(0, _spellCheckJsDefault.default));
parcelHelpers.export(exports, "LucideSplinePointer", ()=>(0, _splinePointerJsDefault.default));
parcelHelpers.export(exports, "SplinePointer", ()=>(0, _splinePointerJsDefault.default));
parcelHelpers.export(exports, "SplinePointerIcon", ()=>(0, _splinePointerJsDefault.default));
parcelHelpers.export(exports, "LucideSpline", ()=>(0, _splineJsDefault.default));
parcelHelpers.export(exports, "Spline", ()=>(0, _splineJsDefault.default));
parcelHelpers.export(exports, "SplineIcon", ()=>(0, _splineJsDefault.default));
parcelHelpers.export(exports, "LucideSplit", ()=>(0, _splitJsDefault.default));
parcelHelpers.export(exports, "Split", ()=>(0, _splitJsDefault.default));
parcelHelpers.export(exports, "SplitIcon", ()=>(0, _splitJsDefault.default));
parcelHelpers.export(exports, "LucideSprayCan", ()=>(0, _sprayCanJsDefault.default));
parcelHelpers.export(exports, "SprayCan", ()=>(0, _sprayCanJsDefault.default));
parcelHelpers.export(exports, "SprayCanIcon", ()=>(0, _sprayCanJsDefault.default));
parcelHelpers.export(exports, "LucideSprout", ()=>(0, _sproutJsDefault.default));
parcelHelpers.export(exports, "Sprout", ()=>(0, _sproutJsDefault.default));
parcelHelpers.export(exports, "SproutIcon", ()=>(0, _sproutJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedBottomCode", ()=>(0, _squareDashedBottomCodeJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottomCode", ()=>(0, _squareDashedBottomCodeJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottomCodeIcon", ()=>(0, _squareDashedBottomCodeJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedBottom", ()=>(0, _squareDashedBottomJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottom", ()=>(0, _squareDashedBottomJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottomIcon", ()=>(0, _squareDashedBottomJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedTopSolid", ()=>(0, _squareDashedTopSolidJsDefault.default));
parcelHelpers.export(exports, "SquareDashedTopSolid", ()=>(0, _squareDashedTopSolidJsDefault.default));
parcelHelpers.export(exports, "SquareDashedTopSolidIcon", ()=>(0, _squareDashedTopSolidJsDefault.default));
parcelHelpers.export(exports, "LucideSquareRadical", ()=>(0, _squareRadicalJsDefault.default));
parcelHelpers.export(exports, "SquareRadical", ()=>(0, _squareRadicalJsDefault.default));
parcelHelpers.export(exports, "SquareRadicalIcon", ()=>(0, _squareRadicalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareRoundCorner", ()=>(0, _squareRoundCornerJsDefault.default));
parcelHelpers.export(exports, "SquareRoundCorner", ()=>(0, _squareRoundCornerJsDefault.default));
parcelHelpers.export(exports, "SquareRoundCornerIcon", ()=>(0, _squareRoundCornerJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSquare", ()=>(0, _squareSquareJsDefault.default));
parcelHelpers.export(exports, "SquareSquare", ()=>(0, _squareSquareJsDefault.default));
parcelHelpers.export(exports, "SquareSquareIcon", ()=>(0, _squareSquareJsDefault.default));
parcelHelpers.export(exports, "LucideSquareStack", ()=>(0, _squareStackJsDefault.default));
parcelHelpers.export(exports, "SquareStack", ()=>(0, _squareStackJsDefault.default));
parcelHelpers.export(exports, "SquareStackIcon", ()=>(0, _squareStackJsDefault.default));
parcelHelpers.export(exports, "LucideSquare", ()=>(0, _squareJsDefault.default));
parcelHelpers.export(exports, "Square", ()=>(0, _squareJsDefault.default));
parcelHelpers.export(exports, "SquareIcon", ()=>(0, _squareJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresExclude", ()=>(0, _squaresExcludeJsDefault.default));
parcelHelpers.export(exports, "SquaresExclude", ()=>(0, _squaresExcludeJsDefault.default));
parcelHelpers.export(exports, "SquaresExcludeIcon", ()=>(0, _squaresExcludeJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresIntersect", ()=>(0, _squaresIntersectJsDefault.default));
parcelHelpers.export(exports, "SquaresIntersect", ()=>(0, _squaresIntersectJsDefault.default));
parcelHelpers.export(exports, "SquaresIntersectIcon", ()=>(0, _squaresIntersectJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresSubtract", ()=>(0, _squaresSubtractJsDefault.default));
parcelHelpers.export(exports, "SquaresSubtract", ()=>(0, _squaresSubtractJsDefault.default));
parcelHelpers.export(exports, "SquaresSubtractIcon", ()=>(0, _squaresSubtractJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresUnite", ()=>(0, _squaresUniteJsDefault.default));
parcelHelpers.export(exports, "SquaresUnite", ()=>(0, _squaresUniteJsDefault.default));
parcelHelpers.export(exports, "SquaresUniteIcon", ()=>(0, _squaresUniteJsDefault.default));
parcelHelpers.export(exports, "LucideSquircle", ()=>(0, _squircleJsDefault.default));
parcelHelpers.export(exports, "Squircle", ()=>(0, _squircleJsDefault.default));
parcelHelpers.export(exports, "SquircleIcon", ()=>(0, _squircleJsDefault.default));
parcelHelpers.export(exports, "LucideSquirrel", ()=>(0, _squirrelJsDefault.default));
parcelHelpers.export(exports, "Squirrel", ()=>(0, _squirrelJsDefault.default));
parcelHelpers.export(exports, "SquirrelIcon", ()=>(0, _squirrelJsDefault.default));
parcelHelpers.export(exports, "LucideStamp", ()=>(0, _stampJsDefault.default));
parcelHelpers.export(exports, "Stamp", ()=>(0, _stampJsDefault.default));
parcelHelpers.export(exports, "StampIcon", ()=>(0, _stampJsDefault.default));
parcelHelpers.export(exports, "LucideStarOff", ()=>(0, _starOffJsDefault.default));
parcelHelpers.export(exports, "StarOff", ()=>(0, _starOffJsDefault.default));
parcelHelpers.export(exports, "StarOffIcon", ()=>(0, _starOffJsDefault.default));
parcelHelpers.export(exports, "LucideStarHalf", ()=>(0, _starHalfJsDefault.default));
parcelHelpers.export(exports, "StarHalf", ()=>(0, _starHalfJsDefault.default));
parcelHelpers.export(exports, "StarHalfIcon", ()=>(0, _starHalfJsDefault.default));
parcelHelpers.export(exports, "LucideStar", ()=>(0, _starJsDefault.default));
parcelHelpers.export(exports, "Star", ()=>(0, _starJsDefault.default));
parcelHelpers.export(exports, "StarIcon", ()=>(0, _starJsDefault.default));
parcelHelpers.export(exports, "LucideStepBack", ()=>(0, _stepBackJsDefault.default));
parcelHelpers.export(exports, "StepBack", ()=>(0, _stepBackJsDefault.default));
parcelHelpers.export(exports, "StepBackIcon", ()=>(0, _stepBackJsDefault.default));
parcelHelpers.export(exports, "LucideStepForward", ()=>(0, _stepForwardJsDefault.default));
parcelHelpers.export(exports, "StepForward", ()=>(0, _stepForwardJsDefault.default));
parcelHelpers.export(exports, "StepForwardIcon", ()=>(0, _stepForwardJsDefault.default));
parcelHelpers.export(exports, "LucideStethoscope", ()=>(0, _stethoscopeJsDefault.default));
parcelHelpers.export(exports, "Stethoscope", ()=>(0, _stethoscopeJsDefault.default));
parcelHelpers.export(exports, "StethoscopeIcon", ()=>(0, _stethoscopeJsDefault.default));
parcelHelpers.export(exports, "LucideSticker", ()=>(0, _stickerJsDefault.default));
parcelHelpers.export(exports, "Sticker", ()=>(0, _stickerJsDefault.default));
parcelHelpers.export(exports, "StickerIcon", ()=>(0, _stickerJsDefault.default));
parcelHelpers.export(exports, "LucideStore", ()=>(0, _storeJsDefault.default));
parcelHelpers.export(exports, "Store", ()=>(0, _storeJsDefault.default));
parcelHelpers.export(exports, "StoreIcon", ()=>(0, _storeJsDefault.default));
parcelHelpers.export(exports, "LucideStickyNote", ()=>(0, _stickyNoteJsDefault.default));
parcelHelpers.export(exports, "StickyNote", ()=>(0, _stickyNoteJsDefault.default));
parcelHelpers.export(exports, "StickyNoteIcon", ()=>(0, _stickyNoteJsDefault.default));
parcelHelpers.export(exports, "LucideStretchHorizontal", ()=>(0, _stretchHorizontalJsDefault.default));
parcelHelpers.export(exports, "StretchHorizontal", ()=>(0, _stretchHorizontalJsDefault.default));
parcelHelpers.export(exports, "StretchHorizontalIcon", ()=>(0, _stretchHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideStretchVertical", ()=>(0, _stretchVerticalJsDefault.default));
parcelHelpers.export(exports, "StretchVertical", ()=>(0, _stretchVerticalJsDefault.default));
parcelHelpers.export(exports, "StretchVerticalIcon", ()=>(0, _stretchVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideStrikethrough", ()=>(0, _strikethroughJsDefault.default));
parcelHelpers.export(exports, "Strikethrough", ()=>(0, _strikethroughJsDefault.default));
parcelHelpers.export(exports, "StrikethroughIcon", ()=>(0, _strikethroughJsDefault.default));
parcelHelpers.export(exports, "LucideSubscript", ()=>(0, _subscriptJsDefault.default));
parcelHelpers.export(exports, "Subscript", ()=>(0, _subscriptJsDefault.default));
parcelHelpers.export(exports, "SubscriptIcon", ()=>(0, _subscriptJsDefault.default));
parcelHelpers.export(exports, "LucideSunDim", ()=>(0, _sunDimJsDefault.default));
parcelHelpers.export(exports, "SunDim", ()=>(0, _sunDimJsDefault.default));
parcelHelpers.export(exports, "SunDimIcon", ()=>(0, _sunDimJsDefault.default));
parcelHelpers.export(exports, "LucideSunMoon", ()=>(0, _sunMoonJsDefault.default));
parcelHelpers.export(exports, "SunMoon", ()=>(0, _sunMoonJsDefault.default));
parcelHelpers.export(exports, "SunMoonIcon", ()=>(0, _sunMoonJsDefault.default));
parcelHelpers.export(exports, "LucideSunSnow", ()=>(0, _sunSnowJsDefault.default));
parcelHelpers.export(exports, "SunSnow", ()=>(0, _sunSnowJsDefault.default));
parcelHelpers.export(exports, "SunSnowIcon", ()=>(0, _sunSnowJsDefault.default));
parcelHelpers.export(exports, "LucideSunMedium", ()=>(0, _sunMediumJsDefault.default));
parcelHelpers.export(exports, "SunMedium", ()=>(0, _sunMediumJsDefault.default));
parcelHelpers.export(exports, "SunMediumIcon", ()=>(0, _sunMediumJsDefault.default));
parcelHelpers.export(exports, "LucideSun", ()=>(0, _sunJsDefault.default));
parcelHelpers.export(exports, "Sun", ()=>(0, _sunJsDefault.default));
parcelHelpers.export(exports, "SunIcon", ()=>(0, _sunJsDefault.default));
parcelHelpers.export(exports, "LucideSunset", ()=>(0, _sunsetJsDefault.default));
parcelHelpers.export(exports, "Sunset", ()=>(0, _sunsetJsDefault.default));
parcelHelpers.export(exports, "SunsetIcon", ()=>(0, _sunsetJsDefault.default));
parcelHelpers.export(exports, "LucideSunrise", ()=>(0, _sunriseJsDefault.default));
parcelHelpers.export(exports, "Sunrise", ()=>(0, _sunriseJsDefault.default));
parcelHelpers.export(exports, "SunriseIcon", ()=>(0, _sunriseJsDefault.default));
parcelHelpers.export(exports, "LucideSuperscript", ()=>(0, _superscriptJsDefault.default));
parcelHelpers.export(exports, "Superscript", ()=>(0, _superscriptJsDefault.default));
parcelHelpers.export(exports, "SuperscriptIcon", ()=>(0, _superscriptJsDefault.default));
parcelHelpers.export(exports, "LucideSwatchBook", ()=>(0, _swatchBookJsDefault.default));
parcelHelpers.export(exports, "SwatchBook", ()=>(0, _swatchBookJsDefault.default));
parcelHelpers.export(exports, "SwatchBookIcon", ()=>(0, _swatchBookJsDefault.default));
parcelHelpers.export(exports, "LucideSwissFranc", ()=>(0, _swissFrancJsDefault.default));
parcelHelpers.export(exports, "SwissFranc", ()=>(0, _swissFrancJsDefault.default));
parcelHelpers.export(exports, "SwissFrancIcon", ()=>(0, _swissFrancJsDefault.default));
parcelHelpers.export(exports, "LucideSwitchCamera", ()=>(0, _switchCameraJsDefault.default));
parcelHelpers.export(exports, "SwitchCamera", ()=>(0, _switchCameraJsDefault.default));
parcelHelpers.export(exports, "SwitchCameraIcon", ()=>(0, _switchCameraJsDefault.default));
parcelHelpers.export(exports, "LucideSword", ()=>(0, _swordJsDefault.default));
parcelHelpers.export(exports, "Sword", ()=>(0, _swordJsDefault.default));
parcelHelpers.export(exports, "SwordIcon", ()=>(0, _swordJsDefault.default));
parcelHelpers.export(exports, "LucideSyringe", ()=>(0, _syringeJsDefault.default));
parcelHelpers.export(exports, "Syringe", ()=>(0, _syringeJsDefault.default));
parcelHelpers.export(exports, "SyringeIcon", ()=>(0, _syringeJsDefault.default));
parcelHelpers.export(exports, "LucideSwords", ()=>(0, _swordsJsDefault.default));
parcelHelpers.export(exports, "Swords", ()=>(0, _swordsJsDefault.default));
parcelHelpers.export(exports, "SwordsIcon", ()=>(0, _swordsJsDefault.default));
parcelHelpers.export(exports, "LucideTable2", ()=>(0, _table2JsDefault.default));
parcelHelpers.export(exports, "Table2", ()=>(0, _table2JsDefault.default));
parcelHelpers.export(exports, "Table2Icon", ()=>(0, _table2JsDefault.default));
parcelHelpers.export(exports, "LucideTableCellsMerge", ()=>(0, _tableCellsMergeJsDefault.default));
parcelHelpers.export(exports, "TableCellsMerge", ()=>(0, _tableCellsMergeJsDefault.default));
parcelHelpers.export(exports, "TableCellsMergeIcon", ()=>(0, _tableCellsMergeJsDefault.default));
parcelHelpers.export(exports, "LucideTableColumnsSplit", ()=>(0, _tableColumnsSplitJsDefault.default));
parcelHelpers.export(exports, "TableColumnsSplit", ()=>(0, _tableColumnsSplitJsDefault.default));
parcelHelpers.export(exports, "TableColumnsSplitIcon", ()=>(0, _tableColumnsSplitJsDefault.default));
parcelHelpers.export(exports, "LucideTableCellsSplit", ()=>(0, _tableCellsSplitJsDefault.default));
parcelHelpers.export(exports, "TableCellsSplit", ()=>(0, _tableCellsSplitJsDefault.default));
parcelHelpers.export(exports, "TableCellsSplitIcon", ()=>(0, _tableCellsSplitJsDefault.default));
parcelHelpers.export(exports, "LucideTableProperties", ()=>(0, _tablePropertiesJsDefault.default));
parcelHelpers.export(exports, "TableProperties", ()=>(0, _tablePropertiesJsDefault.default));
parcelHelpers.export(exports, "TablePropertiesIcon", ()=>(0, _tablePropertiesJsDefault.default));
parcelHelpers.export(exports, "LucideTableRowsSplit", ()=>(0, _tableRowsSplitJsDefault.default));
parcelHelpers.export(exports, "TableRowsSplit", ()=>(0, _tableRowsSplitJsDefault.default));
parcelHelpers.export(exports, "TableRowsSplitIcon", ()=>(0, _tableRowsSplitJsDefault.default));
parcelHelpers.export(exports, "LucideTableOfContents", ()=>(0, _tableOfContentsJsDefault.default));
parcelHelpers.export(exports, "TableOfContents", ()=>(0, _tableOfContentsJsDefault.default));
parcelHelpers.export(exports, "TableOfContentsIcon", ()=>(0, _tableOfContentsJsDefault.default));
parcelHelpers.export(exports, "LucideTable", ()=>(0, _tableJsDefault.default));
parcelHelpers.export(exports, "Table", ()=>(0, _tableJsDefault.default));
parcelHelpers.export(exports, "TableIcon", ()=>(0, _tableJsDefault.default));
parcelHelpers.export(exports, "LucideTablet", ()=>(0, _tabletJsDefault.default));
parcelHelpers.export(exports, "Tablet", ()=>(0, _tabletJsDefault.default));
parcelHelpers.export(exports, "TabletIcon", ()=>(0, _tabletJsDefault.default));
parcelHelpers.export(exports, "LucideTag", ()=>(0, _tagJsDefault.default));
parcelHelpers.export(exports, "Tag", ()=>(0, _tagJsDefault.default));
parcelHelpers.export(exports, "TagIcon", ()=>(0, _tagJsDefault.default));
parcelHelpers.export(exports, "LucideTabletSmartphone", ()=>(0, _tabletSmartphoneJsDefault.default));
parcelHelpers.export(exports, "TabletSmartphone", ()=>(0, _tabletSmartphoneJsDefault.default));
parcelHelpers.export(exports, "TabletSmartphoneIcon", ()=>(0, _tabletSmartphoneJsDefault.default));
parcelHelpers.export(exports, "LucideTablets", ()=>(0, _tabletsJsDefault.default));
parcelHelpers.export(exports, "Tablets", ()=>(0, _tabletsJsDefault.default));
parcelHelpers.export(exports, "TabletsIcon", ()=>(0, _tabletsJsDefault.default));
parcelHelpers.export(exports, "LucideTags", ()=>(0, _tagsJsDefault.default));
parcelHelpers.export(exports, "Tags", ()=>(0, _tagsJsDefault.default));
parcelHelpers.export(exports, "TagsIcon", ()=>(0, _tagsJsDefault.default));
parcelHelpers.export(exports, "LucideTally1", ()=>(0, _tally1JsDefault.default));
parcelHelpers.export(exports, "Tally1", ()=>(0, _tally1JsDefault.default));
parcelHelpers.export(exports, "Tally1Icon", ()=>(0, _tally1JsDefault.default));
parcelHelpers.export(exports, "LucideTally2", ()=>(0, _tally2JsDefault.default));
parcelHelpers.export(exports, "Tally2", ()=>(0, _tally2JsDefault.default));
parcelHelpers.export(exports, "Tally2Icon", ()=>(0, _tally2JsDefault.default));
parcelHelpers.export(exports, "LucideTally3", ()=>(0, _tally3JsDefault.default));
parcelHelpers.export(exports, "Tally3", ()=>(0, _tally3JsDefault.default));
parcelHelpers.export(exports, "Tally3Icon", ()=>(0, _tally3JsDefault.default));
parcelHelpers.export(exports, "LucideTally5", ()=>(0, _tally5JsDefault.default));
parcelHelpers.export(exports, "Tally5", ()=>(0, _tally5JsDefault.default));
parcelHelpers.export(exports, "Tally5Icon", ()=>(0, _tally5JsDefault.default));
parcelHelpers.export(exports, "LucideTally4", ()=>(0, _tally4JsDefault.default));
parcelHelpers.export(exports, "Tally4", ()=>(0, _tally4JsDefault.default));
parcelHelpers.export(exports, "Tally4Icon", ()=>(0, _tally4JsDefault.default));
parcelHelpers.export(exports, "LucideTangent", ()=>(0, _tangentJsDefault.default));
parcelHelpers.export(exports, "Tangent", ()=>(0, _tangentJsDefault.default));
parcelHelpers.export(exports, "TangentIcon", ()=>(0, _tangentJsDefault.default));
parcelHelpers.export(exports, "LucideTarget", ()=>(0, _targetJsDefault.default));
parcelHelpers.export(exports, "Target", ()=>(0, _targetJsDefault.default));
parcelHelpers.export(exports, "TargetIcon", ()=>(0, _targetJsDefault.default));
parcelHelpers.export(exports, "LucideTelescope", ()=>(0, _telescopeJsDefault.default));
parcelHelpers.export(exports, "Telescope", ()=>(0, _telescopeJsDefault.default));
parcelHelpers.export(exports, "TelescopeIcon", ()=>(0, _telescopeJsDefault.default));
parcelHelpers.export(exports, "LucideTentTree", ()=>(0, _tentTreeJsDefault.default));
parcelHelpers.export(exports, "TentTree", ()=>(0, _tentTreeJsDefault.default));
parcelHelpers.export(exports, "TentTreeIcon", ()=>(0, _tentTreeJsDefault.default));
parcelHelpers.export(exports, "LucideTerminal", ()=>(0, _terminalJsDefault.default));
parcelHelpers.export(exports, "Terminal", ()=>(0, _terminalJsDefault.default));
parcelHelpers.export(exports, "TerminalIcon", ()=>(0, _terminalJsDefault.default));
parcelHelpers.export(exports, "LucideTent", ()=>(0, _tentJsDefault.default));
parcelHelpers.export(exports, "Tent", ()=>(0, _tentJsDefault.default));
parcelHelpers.export(exports, "TentIcon", ()=>(0, _tentJsDefault.default));
parcelHelpers.export(exports, "LucideTestTube", ()=>(0, _testTubeJsDefault.default));
parcelHelpers.export(exports, "TestTube", ()=>(0, _testTubeJsDefault.default));
parcelHelpers.export(exports, "TestTubeIcon", ()=>(0, _testTubeJsDefault.default));
parcelHelpers.export(exports, "LucideTestTubes", ()=>(0, _testTubesJsDefault.default));
parcelHelpers.export(exports, "TestTubes", ()=>(0, _testTubesJsDefault.default));
parcelHelpers.export(exports, "TestTubesIcon", ()=>(0, _testTubesJsDefault.default));
parcelHelpers.export(exports, "LucideTextCursorInput", ()=>(0, _textCursorInputJsDefault.default));
parcelHelpers.export(exports, "TextCursorInput", ()=>(0, _textCursorInputJsDefault.default));
parcelHelpers.export(exports, "TextCursorInputIcon", ()=>(0, _textCursorInputJsDefault.default));
parcelHelpers.export(exports, "LucideTextCursor", ()=>(0, _textCursorJsDefault.default));
parcelHelpers.export(exports, "TextCursor", ()=>(0, _textCursorJsDefault.default));
parcelHelpers.export(exports, "TextCursorIcon", ()=>(0, _textCursorJsDefault.default));
parcelHelpers.export(exports, "LucideTextQuote", ()=>(0, _textQuoteJsDefault.default));
parcelHelpers.export(exports, "TextQuote", ()=>(0, _textQuoteJsDefault.default));
parcelHelpers.export(exports, "TextQuoteIcon", ()=>(0, _textQuoteJsDefault.default));
parcelHelpers.export(exports, "LucideTextSearch", ()=>(0, _textSearchJsDefault.default));
parcelHelpers.export(exports, "TextSearch", ()=>(0, _textSearchJsDefault.default));
parcelHelpers.export(exports, "TextSearchIcon", ()=>(0, _textSearchJsDefault.default));
parcelHelpers.export(exports, "LucideText", ()=>(0, _textJsDefault.default));
parcelHelpers.export(exports, "Text", ()=>(0, _textJsDefault.default));
parcelHelpers.export(exports, "TextIcon", ()=>(0, _textJsDefault.default));
parcelHelpers.export(exports, "LucideTheater", ()=>(0, _theaterJsDefault.default));
parcelHelpers.export(exports, "Theater", ()=>(0, _theaterJsDefault.default));
parcelHelpers.export(exports, "TheaterIcon", ()=>(0, _theaterJsDefault.default));
parcelHelpers.export(exports, "LucideThermometerSnowflake", ()=>(0, _thermometerSnowflakeJsDefault.default));
parcelHelpers.export(exports, "ThermometerSnowflake", ()=>(0, _thermometerSnowflakeJsDefault.default));
parcelHelpers.export(exports, "ThermometerSnowflakeIcon", ()=>(0, _thermometerSnowflakeJsDefault.default));
parcelHelpers.export(exports, "LucideThermometerSun", ()=>(0, _thermometerSunJsDefault.default));
parcelHelpers.export(exports, "ThermometerSun", ()=>(0, _thermometerSunJsDefault.default));
parcelHelpers.export(exports, "ThermometerSunIcon", ()=>(0, _thermometerSunJsDefault.default));
parcelHelpers.export(exports, "LucideThermometer", ()=>(0, _thermometerJsDefault.default));
parcelHelpers.export(exports, "Thermometer", ()=>(0, _thermometerJsDefault.default));
parcelHelpers.export(exports, "ThermometerIcon", ()=>(0, _thermometerJsDefault.default));
parcelHelpers.export(exports, "LucideThumbsDown", ()=>(0, _thumbsDownJsDefault.default));
parcelHelpers.export(exports, "ThumbsDown", ()=>(0, _thumbsDownJsDefault.default));
parcelHelpers.export(exports, "ThumbsDownIcon", ()=>(0, _thumbsDownJsDefault.default));
parcelHelpers.export(exports, "LucideThumbsUp", ()=>(0, _thumbsUpJsDefault.default));
parcelHelpers.export(exports, "ThumbsUp", ()=>(0, _thumbsUpJsDefault.default));
parcelHelpers.export(exports, "ThumbsUpIcon", ()=>(0, _thumbsUpJsDefault.default));
parcelHelpers.export(exports, "LucideTicketCheck", ()=>(0, _ticketCheckJsDefault.default));
parcelHelpers.export(exports, "TicketCheck", ()=>(0, _ticketCheckJsDefault.default));
parcelHelpers.export(exports, "TicketCheckIcon", ()=>(0, _ticketCheckJsDefault.default));
parcelHelpers.export(exports, "LucideTicketMinus", ()=>(0, _ticketMinusJsDefault.default));
parcelHelpers.export(exports, "TicketMinus", ()=>(0, _ticketMinusJsDefault.default));
parcelHelpers.export(exports, "TicketMinusIcon", ()=>(0, _ticketMinusJsDefault.default));
parcelHelpers.export(exports, "LucideTicketPercent", ()=>(0, _ticketPercentJsDefault.default));
parcelHelpers.export(exports, "TicketPercent", ()=>(0, _ticketPercentJsDefault.default));
parcelHelpers.export(exports, "TicketPercentIcon", ()=>(0, _ticketPercentJsDefault.default));
parcelHelpers.export(exports, "LucideTicketPlus", ()=>(0, _ticketPlusJsDefault.default));
parcelHelpers.export(exports, "TicketPlus", ()=>(0, _ticketPlusJsDefault.default));
parcelHelpers.export(exports, "TicketPlusIcon", ()=>(0, _ticketPlusJsDefault.default));
parcelHelpers.export(exports, "LucideTicketSlash", ()=>(0, _ticketSlashJsDefault.default));
parcelHelpers.export(exports, "TicketSlash", ()=>(0, _ticketSlashJsDefault.default));
parcelHelpers.export(exports, "TicketSlashIcon", ()=>(0, _ticketSlashJsDefault.default));
parcelHelpers.export(exports, "LucideTicketX", ()=>(0, _ticketXJsDefault.default));
parcelHelpers.export(exports, "TicketX", ()=>(0, _ticketXJsDefault.default));
parcelHelpers.export(exports, "TicketXIcon", ()=>(0, _ticketXJsDefault.default));
parcelHelpers.export(exports, "LucideTicket", ()=>(0, _ticketJsDefault.default));
parcelHelpers.export(exports, "Ticket", ()=>(0, _ticketJsDefault.default));
parcelHelpers.export(exports, "TicketIcon", ()=>(0, _ticketJsDefault.default));
parcelHelpers.export(exports, "LucideTicketsPlane", ()=>(0, _ticketsPlaneJsDefault.default));
parcelHelpers.export(exports, "TicketsPlane", ()=>(0, _ticketsPlaneJsDefault.default));
parcelHelpers.export(exports, "TicketsPlaneIcon", ()=>(0, _ticketsPlaneJsDefault.default));
parcelHelpers.export(exports, "LucideTickets", ()=>(0, _ticketsJsDefault.default));
parcelHelpers.export(exports, "Tickets", ()=>(0, _ticketsJsDefault.default));
parcelHelpers.export(exports, "TicketsIcon", ()=>(0, _ticketsJsDefault.default));
parcelHelpers.export(exports, "LucideTimerOff", ()=>(0, _timerOffJsDefault.default));
parcelHelpers.export(exports, "TimerOff", ()=>(0, _timerOffJsDefault.default));
parcelHelpers.export(exports, "TimerOffIcon", ()=>(0, _timerOffJsDefault.default));
parcelHelpers.export(exports, "LucideTimerReset", ()=>(0, _timerResetJsDefault.default));
parcelHelpers.export(exports, "TimerReset", ()=>(0, _timerResetJsDefault.default));
parcelHelpers.export(exports, "TimerResetIcon", ()=>(0, _timerResetJsDefault.default));
parcelHelpers.export(exports, "LucideTimer", ()=>(0, _timerJsDefault.default));
parcelHelpers.export(exports, "Timer", ()=>(0, _timerJsDefault.default));
parcelHelpers.export(exports, "TimerIcon", ()=>(0, _timerJsDefault.default));
parcelHelpers.export(exports, "LucideToggleLeft", ()=>(0, _toggleLeftJsDefault.default));
parcelHelpers.export(exports, "ToggleLeft", ()=>(0, _toggleLeftJsDefault.default));
parcelHelpers.export(exports, "ToggleLeftIcon", ()=>(0, _toggleLeftJsDefault.default));
parcelHelpers.export(exports, "LucideToggleRight", ()=>(0, _toggleRightJsDefault.default));
parcelHelpers.export(exports, "ToggleRight", ()=>(0, _toggleRightJsDefault.default));
parcelHelpers.export(exports, "ToggleRightIcon", ()=>(0, _toggleRightJsDefault.default));
parcelHelpers.export(exports, "LucideToilet", ()=>(0, _toiletJsDefault.default));
parcelHelpers.export(exports, "Toilet", ()=>(0, _toiletJsDefault.default));
parcelHelpers.export(exports, "ToiletIcon", ()=>(0, _toiletJsDefault.default));
parcelHelpers.export(exports, "LucideTornado", ()=>(0, _tornadoJsDefault.default));
parcelHelpers.export(exports, "Tornado", ()=>(0, _tornadoJsDefault.default));
parcelHelpers.export(exports, "TornadoIcon", ()=>(0, _tornadoJsDefault.default));
parcelHelpers.export(exports, "LucideTorus", ()=>(0, _torusJsDefault.default));
parcelHelpers.export(exports, "Torus", ()=>(0, _torusJsDefault.default));
parcelHelpers.export(exports, "TorusIcon", ()=>(0, _torusJsDefault.default));
parcelHelpers.export(exports, "LucideTouchpadOff", ()=>(0, _touchpadOffJsDefault.default));
parcelHelpers.export(exports, "TouchpadOff", ()=>(0, _touchpadOffJsDefault.default));
parcelHelpers.export(exports, "TouchpadOffIcon", ()=>(0, _touchpadOffJsDefault.default));
parcelHelpers.export(exports, "LucideTouchpad", ()=>(0, _touchpadJsDefault.default));
parcelHelpers.export(exports, "Touchpad", ()=>(0, _touchpadJsDefault.default));
parcelHelpers.export(exports, "TouchpadIcon", ()=>(0, _touchpadJsDefault.default));
parcelHelpers.export(exports, "LucideTowerControl", ()=>(0, _towerControlJsDefault.default));
parcelHelpers.export(exports, "TowerControl", ()=>(0, _towerControlJsDefault.default));
parcelHelpers.export(exports, "TowerControlIcon", ()=>(0, _towerControlJsDefault.default));
parcelHelpers.export(exports, "LucideToyBrick", ()=>(0, _toyBrickJsDefault.default));
parcelHelpers.export(exports, "ToyBrick", ()=>(0, _toyBrickJsDefault.default));
parcelHelpers.export(exports, "ToyBrickIcon", ()=>(0, _toyBrickJsDefault.default));
parcelHelpers.export(exports, "LucideTrafficCone", ()=>(0, _trafficConeJsDefault.default));
parcelHelpers.export(exports, "TrafficCone", ()=>(0, _trafficConeJsDefault.default));
parcelHelpers.export(exports, "TrafficConeIcon", ()=>(0, _trafficConeJsDefault.default));
parcelHelpers.export(exports, "LucideTractor", ()=>(0, _tractorJsDefault.default));
parcelHelpers.export(exports, "Tractor", ()=>(0, _tractorJsDefault.default));
parcelHelpers.export(exports, "TractorIcon", ()=>(0, _tractorJsDefault.default));
parcelHelpers.export(exports, "LucideTrainFrontTunnel", ()=>(0, _trainFrontTunnelJsDefault.default));
parcelHelpers.export(exports, "TrainFrontTunnel", ()=>(0, _trainFrontTunnelJsDefault.default));
parcelHelpers.export(exports, "TrainFrontTunnelIcon", ()=>(0, _trainFrontTunnelJsDefault.default));
parcelHelpers.export(exports, "LucideTrainFront", ()=>(0, _trainFrontJsDefault.default));
parcelHelpers.export(exports, "TrainFront", ()=>(0, _trainFrontJsDefault.default));
parcelHelpers.export(exports, "TrainFrontIcon", ()=>(0, _trainFrontJsDefault.default));
parcelHelpers.export(exports, "LucideTrainTrack", ()=>(0, _trainTrackJsDefault.default));
parcelHelpers.export(exports, "TrainTrack", ()=>(0, _trainTrackJsDefault.default));
parcelHelpers.export(exports, "TrainTrackIcon", ()=>(0, _trainTrackJsDefault.default));
parcelHelpers.export(exports, "LucideTrash2", ()=>(0, _trash2JsDefault.default));
parcelHelpers.export(exports, "Trash2", ()=>(0, _trash2JsDefault.default));
parcelHelpers.export(exports, "Trash2Icon", ()=>(0, _trash2JsDefault.default));
parcelHelpers.export(exports, "LucideTransgender", ()=>(0, _transgenderJsDefault.default));
parcelHelpers.export(exports, "Transgender", ()=>(0, _transgenderJsDefault.default));
parcelHelpers.export(exports, "TransgenderIcon", ()=>(0, _transgenderJsDefault.default));
parcelHelpers.export(exports, "LucideTrash", ()=>(0, _trashJsDefault.default));
parcelHelpers.export(exports, "Trash", ()=>(0, _trashJsDefault.default));
parcelHelpers.export(exports, "TrashIcon", ()=>(0, _trashJsDefault.default));
parcelHelpers.export(exports, "LucideTreeDeciduous", ()=>(0, _treeDeciduousJsDefault.default));
parcelHelpers.export(exports, "TreeDeciduous", ()=>(0, _treeDeciduousJsDefault.default));
parcelHelpers.export(exports, "TreeDeciduousIcon", ()=>(0, _treeDeciduousJsDefault.default));
parcelHelpers.export(exports, "LucideTreePine", ()=>(0, _treePineJsDefault.default));
parcelHelpers.export(exports, "TreePine", ()=>(0, _treePineJsDefault.default));
parcelHelpers.export(exports, "TreePineIcon", ()=>(0, _treePineJsDefault.default));
parcelHelpers.export(exports, "LucideTrees", ()=>(0, _treesJsDefault.default));
parcelHelpers.export(exports, "Trees", ()=>(0, _treesJsDefault.default));
parcelHelpers.export(exports, "TreesIcon", ()=>(0, _treesJsDefault.default));
parcelHelpers.export(exports, "LucideTrello", ()=>(0, _trelloJsDefault.default));
parcelHelpers.export(exports, "Trello", ()=>(0, _trelloJsDefault.default));
parcelHelpers.export(exports, "TrelloIcon", ()=>(0, _trelloJsDefault.default));
parcelHelpers.export(exports, "LucideTrendingDown", ()=>(0, _trendingDownJsDefault.default));
parcelHelpers.export(exports, "TrendingDown", ()=>(0, _trendingDownJsDefault.default));
parcelHelpers.export(exports, "TrendingDownIcon", ()=>(0, _trendingDownJsDefault.default));
parcelHelpers.export(exports, "LucideTrendingUpDown", ()=>(0, _trendingUpDownJsDefault.default));
parcelHelpers.export(exports, "TrendingUpDown", ()=>(0, _trendingUpDownJsDefault.default));
parcelHelpers.export(exports, "TrendingUpDownIcon", ()=>(0, _trendingUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideTrendingUp", ()=>(0, _trendingUpJsDefault.default));
parcelHelpers.export(exports, "TrendingUp", ()=>(0, _trendingUpJsDefault.default));
parcelHelpers.export(exports, "TrendingUpIcon", ()=>(0, _trendingUpJsDefault.default));
parcelHelpers.export(exports, "LucideTriangleDashed", ()=>(0, _triangleDashedJsDefault.default));
parcelHelpers.export(exports, "TriangleDashed", ()=>(0, _triangleDashedJsDefault.default));
parcelHelpers.export(exports, "TriangleDashedIcon", ()=>(0, _triangleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideTriangleRight", ()=>(0, _triangleRightJsDefault.default));
parcelHelpers.export(exports, "TriangleRight", ()=>(0, _triangleRightJsDefault.default));
parcelHelpers.export(exports, "TriangleRightIcon", ()=>(0, _triangleRightJsDefault.default));
parcelHelpers.export(exports, "LucideTriangle", ()=>(0, _triangleJsDefault.default));
parcelHelpers.export(exports, "Triangle", ()=>(0, _triangleJsDefault.default));
parcelHelpers.export(exports, "TriangleIcon", ()=>(0, _triangleJsDefault.default));
parcelHelpers.export(exports, "LucideTrophy", ()=>(0, _trophyJsDefault.default));
parcelHelpers.export(exports, "Trophy", ()=>(0, _trophyJsDefault.default));
parcelHelpers.export(exports, "TrophyIcon", ()=>(0, _trophyJsDefault.default));
parcelHelpers.export(exports, "LucideTruckElectric", ()=>(0, _truckElectricJsDefault.default));
parcelHelpers.export(exports, "TruckElectric", ()=>(0, _truckElectricJsDefault.default));
parcelHelpers.export(exports, "TruckElectricIcon", ()=>(0, _truckElectricJsDefault.default));
parcelHelpers.export(exports, "LucideTruck", ()=>(0, _truckJsDefault.default));
parcelHelpers.export(exports, "Truck", ()=>(0, _truckJsDefault.default));
parcelHelpers.export(exports, "TruckIcon", ()=>(0, _truckJsDefault.default));
parcelHelpers.export(exports, "LucideTurtle", ()=>(0, _turtleJsDefault.default));
parcelHelpers.export(exports, "Turtle", ()=>(0, _turtleJsDefault.default));
parcelHelpers.export(exports, "TurtleIcon", ()=>(0, _turtleJsDefault.default));
parcelHelpers.export(exports, "LucideTvMinimalPlay", ()=>(0, _tvMinimalPlayJsDefault.default));
parcelHelpers.export(exports, "TvMinimalPlay", ()=>(0, _tvMinimalPlayJsDefault.default));
parcelHelpers.export(exports, "TvMinimalPlayIcon", ()=>(0, _tvMinimalPlayJsDefault.default));
parcelHelpers.export(exports, "LucideTv", ()=>(0, _tvJsDefault.default));
parcelHelpers.export(exports, "Tv", ()=>(0, _tvJsDefault.default));
parcelHelpers.export(exports, "TvIcon", ()=>(0, _tvJsDefault.default));
parcelHelpers.export(exports, "LucideTwitch", ()=>(0, _twitchJsDefault.default));
parcelHelpers.export(exports, "Twitch", ()=>(0, _twitchJsDefault.default));
parcelHelpers.export(exports, "TwitchIcon", ()=>(0, _twitchJsDefault.default));
parcelHelpers.export(exports, "LucideTwitter", ()=>(0, _twitterJsDefault.default));
parcelHelpers.export(exports, "Twitter", ()=>(0, _twitterJsDefault.default));
parcelHelpers.export(exports, "TwitterIcon", ()=>(0, _twitterJsDefault.default));
parcelHelpers.export(exports, "LucideTypeOutline", ()=>(0, _typeOutlineJsDefault.default));
parcelHelpers.export(exports, "TypeOutline", ()=>(0, _typeOutlineJsDefault.default));
parcelHelpers.export(exports, "TypeOutlineIcon", ()=>(0, _typeOutlineJsDefault.default));
parcelHelpers.export(exports, "LucideType", ()=>(0, _typeJsDefault.default));
parcelHelpers.export(exports, "Type", ()=>(0, _typeJsDefault.default));
parcelHelpers.export(exports, "TypeIcon", ()=>(0, _typeJsDefault.default));
parcelHelpers.export(exports, "LucideUmbrellaOff", ()=>(0, _umbrellaOffJsDefault.default));
parcelHelpers.export(exports, "UmbrellaOff", ()=>(0, _umbrellaOffJsDefault.default));
parcelHelpers.export(exports, "UmbrellaOffIcon", ()=>(0, _umbrellaOffJsDefault.default));
parcelHelpers.export(exports, "LucideUmbrella", ()=>(0, _umbrellaJsDefault.default));
parcelHelpers.export(exports, "Umbrella", ()=>(0, _umbrellaJsDefault.default));
parcelHelpers.export(exports, "UmbrellaIcon", ()=>(0, _umbrellaJsDefault.default));
parcelHelpers.export(exports, "LucideUnderline", ()=>(0, _underlineJsDefault.default));
parcelHelpers.export(exports, "Underline", ()=>(0, _underlineJsDefault.default));
parcelHelpers.export(exports, "UnderlineIcon", ()=>(0, _underlineJsDefault.default));
parcelHelpers.export(exports, "LucideUndo2", ()=>(0, _undo2JsDefault.default));
parcelHelpers.export(exports, "Undo2", ()=>(0, _undo2JsDefault.default));
parcelHelpers.export(exports, "Undo2Icon", ()=>(0, _undo2JsDefault.default));
parcelHelpers.export(exports, "LucideUndoDot", ()=>(0, _undoDotJsDefault.default));
parcelHelpers.export(exports, "UndoDot", ()=>(0, _undoDotJsDefault.default));
parcelHelpers.export(exports, "UndoDotIcon", ()=>(0, _undoDotJsDefault.default));
parcelHelpers.export(exports, "LucideUndo", ()=>(0, _undoJsDefault.default));
parcelHelpers.export(exports, "Undo", ()=>(0, _undoJsDefault.default));
parcelHelpers.export(exports, "UndoIcon", ()=>(0, _undoJsDefault.default));
parcelHelpers.export(exports, "LucideUnfoldHorizontal", ()=>(0, _unfoldHorizontalJsDefault.default));
parcelHelpers.export(exports, "UnfoldHorizontal", ()=>(0, _unfoldHorizontalJsDefault.default));
parcelHelpers.export(exports, "UnfoldHorizontalIcon", ()=>(0, _unfoldHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideUnfoldVertical", ()=>(0, _unfoldVerticalJsDefault.default));
parcelHelpers.export(exports, "UnfoldVertical", ()=>(0, _unfoldVerticalJsDefault.default));
parcelHelpers.export(exports, "UnfoldVerticalIcon", ()=>(0, _unfoldVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideUngroup", ()=>(0, _ungroupJsDefault.default));
parcelHelpers.export(exports, "Ungroup", ()=>(0, _ungroupJsDefault.default));
parcelHelpers.export(exports, "UngroupIcon", ()=>(0, _ungroupJsDefault.default));
parcelHelpers.export(exports, "LucideUnlink2", ()=>(0, _unlink2JsDefault.default));
parcelHelpers.export(exports, "Unlink2", ()=>(0, _unlink2JsDefault.default));
parcelHelpers.export(exports, "Unlink2Icon", ()=>(0, _unlink2JsDefault.default));
parcelHelpers.export(exports, "LucideUnlink", ()=>(0, _unlinkJsDefault.default));
parcelHelpers.export(exports, "Unlink", ()=>(0, _unlinkJsDefault.default));
parcelHelpers.export(exports, "UnlinkIcon", ()=>(0, _unlinkJsDefault.default));
parcelHelpers.export(exports, "LucideUnplug", ()=>(0, _unplugJsDefault.default));
parcelHelpers.export(exports, "Unplug", ()=>(0, _unplugJsDefault.default));
parcelHelpers.export(exports, "UnplugIcon", ()=>(0, _unplugJsDefault.default));
parcelHelpers.export(exports, "LucideUpload", ()=>(0, _uploadJsDefault.default));
parcelHelpers.export(exports, "Upload", ()=>(0, _uploadJsDefault.default));
parcelHelpers.export(exports, "UploadIcon", ()=>(0, _uploadJsDefault.default));
parcelHelpers.export(exports, "LucideUsb", ()=>(0, _usbJsDefault.default));
parcelHelpers.export(exports, "Usb", ()=>(0, _usbJsDefault.default));
parcelHelpers.export(exports, "UsbIcon", ()=>(0, _usbJsDefault.default));
parcelHelpers.export(exports, "LucideUserCheck", ()=>(0, _userCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheck", ()=>(0, _userCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheckIcon", ()=>(0, _userCheckJsDefault.default));
parcelHelpers.export(exports, "LucideUserCog", ()=>(0, _userCogJsDefault.default));
parcelHelpers.export(exports, "UserCog", ()=>(0, _userCogJsDefault.default));
parcelHelpers.export(exports, "UserCogIcon", ()=>(0, _userCogJsDefault.default));
parcelHelpers.export(exports, "LucideUserLock", ()=>(0, _userLockJsDefault.default));
parcelHelpers.export(exports, "UserLock", ()=>(0, _userLockJsDefault.default));
parcelHelpers.export(exports, "UserLockIcon", ()=>(0, _userLockJsDefault.default));
parcelHelpers.export(exports, "LucideUserMinus", ()=>(0, _userMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinus", ()=>(0, _userMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinusIcon", ()=>(0, _userMinusJsDefault.default));
parcelHelpers.export(exports, "LucideUserPen", ()=>(0, _userPenJsDefault.default));
parcelHelpers.export(exports, "UserPen", ()=>(0, _userPenJsDefault.default));
parcelHelpers.export(exports, "UserPenIcon", ()=>(0, _userPenJsDefault.default));
parcelHelpers.export(exports, "LucideUserPlus", ()=>(0, _userPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlus", ()=>(0, _userPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlusIcon", ()=>(0, _userPlusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundPen", ()=>(0, _userRoundPenJsDefault.default));
parcelHelpers.export(exports, "UserRoundPen", ()=>(0, _userRoundPenJsDefault.default));
parcelHelpers.export(exports, "UserRoundPenIcon", ()=>(0, _userRoundPenJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundSearch", ()=>(0, _userRoundSearchJsDefault.default));
parcelHelpers.export(exports, "UserRoundSearch", ()=>(0, _userRoundSearchJsDefault.default));
parcelHelpers.export(exports, "UserRoundSearchIcon", ()=>(0, _userRoundSearchJsDefault.default));
parcelHelpers.export(exports, "LucideUserSearch", ()=>(0, _userSearchJsDefault.default));
parcelHelpers.export(exports, "UserSearch", ()=>(0, _userSearchJsDefault.default));
parcelHelpers.export(exports, "UserSearchIcon", ()=>(0, _userSearchJsDefault.default));
parcelHelpers.export(exports, "LucideUserX", ()=>(0, _userXJsDefault.default));
parcelHelpers.export(exports, "UserX", ()=>(0, _userXJsDefault.default));
parcelHelpers.export(exports, "UserXIcon", ()=>(0, _userXJsDefault.default));
parcelHelpers.export(exports, "LucideUser", ()=>(0, _userJsDefault.default));
parcelHelpers.export(exports, "User", ()=>(0, _userJsDefault.default));
parcelHelpers.export(exports, "UserIcon", ()=>(0, _userJsDefault.default));
parcelHelpers.export(exports, "LucideUsers", ()=>(0, _usersJsDefault.default));
parcelHelpers.export(exports, "Users", ()=>(0, _usersJsDefault.default));
parcelHelpers.export(exports, "UsersIcon", ()=>(0, _usersJsDefault.default));
parcelHelpers.export(exports, "LucideVariable", ()=>(0, _variableJsDefault.default));
parcelHelpers.export(exports, "Variable", ()=>(0, _variableJsDefault.default));
parcelHelpers.export(exports, "VariableIcon", ()=>(0, _variableJsDefault.default));
parcelHelpers.export(exports, "LucideUtilityPole", ()=>(0, _utilityPoleJsDefault.default));
parcelHelpers.export(exports, "UtilityPole", ()=>(0, _utilityPoleJsDefault.default));
parcelHelpers.export(exports, "UtilityPoleIcon", ()=>(0, _utilityPoleJsDefault.default));
parcelHelpers.export(exports, "LucideVault", ()=>(0, _vaultJsDefault.default));
parcelHelpers.export(exports, "Vault", ()=>(0, _vaultJsDefault.default));
parcelHelpers.export(exports, "VaultIcon", ()=>(0, _vaultJsDefault.default));
parcelHelpers.export(exports, "LucideVegan", ()=>(0, _veganJsDefault.default));
parcelHelpers.export(exports, "Vegan", ()=>(0, _veganJsDefault.default));
parcelHelpers.export(exports, "VeganIcon", ()=>(0, _veganJsDefault.default));
parcelHelpers.export(exports, "LucideVenetianMask", ()=>(0, _venetianMaskJsDefault.default));
parcelHelpers.export(exports, "VenetianMask", ()=>(0, _venetianMaskJsDefault.default));
parcelHelpers.export(exports, "VenetianMaskIcon", ()=>(0, _venetianMaskJsDefault.default));
parcelHelpers.export(exports, "LucideVenusAndMars", ()=>(0, _venusAndMarsJsDefault.default));
parcelHelpers.export(exports, "VenusAndMars", ()=>(0, _venusAndMarsJsDefault.default));
parcelHelpers.export(exports, "VenusAndMarsIcon", ()=>(0, _venusAndMarsJsDefault.default));
parcelHelpers.export(exports, "LucideVenus", ()=>(0, _venusJsDefault.default));
parcelHelpers.export(exports, "Venus", ()=>(0, _venusJsDefault.default));
parcelHelpers.export(exports, "VenusIcon", ()=>(0, _venusJsDefault.default));
parcelHelpers.export(exports, "LucideVibrateOff", ()=>(0, _vibrateOffJsDefault.default));
parcelHelpers.export(exports, "VibrateOff", ()=>(0, _vibrateOffJsDefault.default));
parcelHelpers.export(exports, "VibrateOffIcon", ()=>(0, _vibrateOffJsDefault.default));
parcelHelpers.export(exports, "LucideVibrate", ()=>(0, _vibrateJsDefault.default));
parcelHelpers.export(exports, "Vibrate", ()=>(0, _vibrateJsDefault.default));
parcelHelpers.export(exports, "VibrateIcon", ()=>(0, _vibrateJsDefault.default));
parcelHelpers.export(exports, "LucideVideoOff", ()=>(0, _videoOffJsDefault.default));
parcelHelpers.export(exports, "VideoOff", ()=>(0, _videoOffJsDefault.default));
parcelHelpers.export(exports, "VideoOffIcon", ()=>(0, _videoOffJsDefault.default));
parcelHelpers.export(exports, "LucideVideotape", ()=>(0, _videotapeJsDefault.default));
parcelHelpers.export(exports, "Videotape", ()=>(0, _videotapeJsDefault.default));
parcelHelpers.export(exports, "VideotapeIcon", ()=>(0, _videotapeJsDefault.default));
parcelHelpers.export(exports, "LucideVideo", ()=>(0, _videoJsDefault.default));
parcelHelpers.export(exports, "Video", ()=>(0, _videoJsDefault.default));
parcelHelpers.export(exports, "VideoIcon", ()=>(0, _videoJsDefault.default));
parcelHelpers.export(exports, "LucideVoicemail", ()=>(0, _voicemailJsDefault.default));
parcelHelpers.export(exports, "Voicemail", ()=>(0, _voicemailJsDefault.default));
parcelHelpers.export(exports, "VoicemailIcon", ()=>(0, _voicemailJsDefault.default));
parcelHelpers.export(exports, "LucideView", ()=>(0, _viewJsDefault.default));
parcelHelpers.export(exports, "View", ()=>(0, _viewJsDefault.default));
parcelHelpers.export(exports, "ViewIcon", ()=>(0, _viewJsDefault.default));
parcelHelpers.export(exports, "LucideVolleyball", ()=>(0, _volleyballJsDefault.default));
parcelHelpers.export(exports, "Volleyball", ()=>(0, _volleyballJsDefault.default));
parcelHelpers.export(exports, "VolleyballIcon", ()=>(0, _volleyballJsDefault.default));
parcelHelpers.export(exports, "LucideVolume1", ()=>(0, _volume1JsDefault.default));
parcelHelpers.export(exports, "Volume1", ()=>(0, _volume1JsDefault.default));
parcelHelpers.export(exports, "Volume1Icon", ()=>(0, _volume1JsDefault.default));
parcelHelpers.export(exports, "LucideVolume2", ()=>(0, _volume2JsDefault.default));
parcelHelpers.export(exports, "Volume2", ()=>(0, _volume2JsDefault.default));
parcelHelpers.export(exports, "Volume2Icon", ()=>(0, _volume2JsDefault.default));
parcelHelpers.export(exports, "LucideVolumeOff", ()=>(0, _volumeOffJsDefault.default));
parcelHelpers.export(exports, "VolumeOff", ()=>(0, _volumeOffJsDefault.default));
parcelHelpers.export(exports, "VolumeOffIcon", ()=>(0, _volumeOffJsDefault.default));
parcelHelpers.export(exports, "LucideVolume", ()=>(0, _volumeJsDefault.default));
parcelHelpers.export(exports, "Volume", ()=>(0, _volumeJsDefault.default));
parcelHelpers.export(exports, "VolumeIcon", ()=>(0, _volumeJsDefault.default));
parcelHelpers.export(exports, "LucideVolumeX", ()=>(0, _volumeXJsDefault.default));
parcelHelpers.export(exports, "VolumeX", ()=>(0, _volumeXJsDefault.default));
parcelHelpers.export(exports, "VolumeXIcon", ()=>(0, _volumeXJsDefault.default));
parcelHelpers.export(exports, "LucideVote", ()=>(0, _voteJsDefault.default));
parcelHelpers.export(exports, "Vote", ()=>(0, _voteJsDefault.default));
parcelHelpers.export(exports, "VoteIcon", ()=>(0, _voteJsDefault.default));
parcelHelpers.export(exports, "LucideWalletCards", ()=>(0, _walletCardsJsDefault.default));
parcelHelpers.export(exports, "WalletCards", ()=>(0, _walletCardsJsDefault.default));
parcelHelpers.export(exports, "WalletCardsIcon", ()=>(0, _walletCardsJsDefault.default));
parcelHelpers.export(exports, "LucideWallet", ()=>(0, _walletJsDefault.default));
parcelHelpers.export(exports, "Wallet", ()=>(0, _walletJsDefault.default));
parcelHelpers.export(exports, "WalletIcon", ()=>(0, _walletJsDefault.default));
parcelHelpers.export(exports, "LucideWallpaper", ()=>(0, _wallpaperJsDefault.default));
parcelHelpers.export(exports, "Wallpaper", ()=>(0, _wallpaperJsDefault.default));
parcelHelpers.export(exports, "WallpaperIcon", ()=>(0, _wallpaperJsDefault.default));
parcelHelpers.export(exports, "LucideWand", ()=>(0, _wandJsDefault.default));
parcelHelpers.export(exports, "Wand", ()=>(0, _wandJsDefault.default));
parcelHelpers.export(exports, "WandIcon", ()=>(0, _wandJsDefault.default));
parcelHelpers.export(exports, "LucideWarehouse", ()=>(0, _warehouseJsDefault.default));
parcelHelpers.export(exports, "Warehouse", ()=>(0, _warehouseJsDefault.default));
parcelHelpers.export(exports, "WarehouseIcon", ()=>(0, _warehouseJsDefault.default));
parcelHelpers.export(exports, "LucideWashingMachine", ()=>(0, _washingMachineJsDefault.default));
parcelHelpers.export(exports, "WashingMachine", ()=>(0, _washingMachineJsDefault.default));
parcelHelpers.export(exports, "WashingMachineIcon", ()=>(0, _washingMachineJsDefault.default));
parcelHelpers.export(exports, "LucideWatch", ()=>(0, _watchJsDefault.default));
parcelHelpers.export(exports, "Watch", ()=>(0, _watchJsDefault.default));
parcelHelpers.export(exports, "WatchIcon", ()=>(0, _watchJsDefault.default));
parcelHelpers.export(exports, "LucideWavesLadder", ()=>(0, _wavesLadderJsDefault.default));
parcelHelpers.export(exports, "WavesLadder", ()=>(0, _wavesLadderJsDefault.default));
parcelHelpers.export(exports, "WavesLadderIcon", ()=>(0, _wavesLadderJsDefault.default));
parcelHelpers.export(exports, "LucideWaves", ()=>(0, _wavesJsDefault.default));
parcelHelpers.export(exports, "Waves", ()=>(0, _wavesJsDefault.default));
parcelHelpers.export(exports, "WavesIcon", ()=>(0, _wavesJsDefault.default));
parcelHelpers.export(exports, "LucideWaypoints", ()=>(0, _waypointsJsDefault.default));
parcelHelpers.export(exports, "Waypoints", ()=>(0, _waypointsJsDefault.default));
parcelHelpers.export(exports, "WaypointsIcon", ()=>(0, _waypointsJsDefault.default));
parcelHelpers.export(exports, "LucideWebcam", ()=>(0, _webcamJsDefault.default));
parcelHelpers.export(exports, "Webcam", ()=>(0, _webcamJsDefault.default));
parcelHelpers.export(exports, "WebcamIcon", ()=>(0, _webcamJsDefault.default));
parcelHelpers.export(exports, "LucideWebhookOff", ()=>(0, _webhookOffJsDefault.default));
parcelHelpers.export(exports, "WebhookOff", ()=>(0, _webhookOffJsDefault.default));
parcelHelpers.export(exports, "WebhookOffIcon", ()=>(0, _webhookOffJsDefault.default));
parcelHelpers.export(exports, "LucideWebhook", ()=>(0, _webhookJsDefault.default));
parcelHelpers.export(exports, "Webhook", ()=>(0, _webhookJsDefault.default));
parcelHelpers.export(exports, "WebhookIcon", ()=>(0, _webhookJsDefault.default));
parcelHelpers.export(exports, "LucideWeight", ()=>(0, _weightJsDefault.default));
parcelHelpers.export(exports, "Weight", ()=>(0, _weightJsDefault.default));
parcelHelpers.export(exports, "WeightIcon", ()=>(0, _weightJsDefault.default));
parcelHelpers.export(exports, "LucideWheatOff", ()=>(0, _wheatOffJsDefault.default));
parcelHelpers.export(exports, "WheatOff", ()=>(0, _wheatOffJsDefault.default));
parcelHelpers.export(exports, "WheatOffIcon", ()=>(0, _wheatOffJsDefault.default));
parcelHelpers.export(exports, "LucideWheat", ()=>(0, _wheatJsDefault.default));
parcelHelpers.export(exports, "Wheat", ()=>(0, _wheatJsDefault.default));
parcelHelpers.export(exports, "WheatIcon", ()=>(0, _wheatJsDefault.default));
parcelHelpers.export(exports, "LucideWholeWord", ()=>(0, _wholeWordJsDefault.default));
parcelHelpers.export(exports, "WholeWord", ()=>(0, _wholeWordJsDefault.default));
parcelHelpers.export(exports, "WholeWordIcon", ()=>(0, _wholeWordJsDefault.default));
parcelHelpers.export(exports, "LucideWifiHigh", ()=>(0, _wifiHighJsDefault.default));
parcelHelpers.export(exports, "WifiHigh", ()=>(0, _wifiHighJsDefault.default));
parcelHelpers.export(exports, "WifiHighIcon", ()=>(0, _wifiHighJsDefault.default));
parcelHelpers.export(exports, "LucideWifiLow", ()=>(0, _wifiLowJsDefault.default));
parcelHelpers.export(exports, "WifiLow", ()=>(0, _wifiLowJsDefault.default));
parcelHelpers.export(exports, "WifiLowIcon", ()=>(0, _wifiLowJsDefault.default));
parcelHelpers.export(exports, "LucideWifiOff", ()=>(0, _wifiOffJsDefault.default));
parcelHelpers.export(exports, "WifiOff", ()=>(0, _wifiOffJsDefault.default));
parcelHelpers.export(exports, "WifiOffIcon", ()=>(0, _wifiOffJsDefault.default));
parcelHelpers.export(exports, "LucideWifiPen", ()=>(0, _wifiPenJsDefault.default));
parcelHelpers.export(exports, "WifiPen", ()=>(0, _wifiPenJsDefault.default));
parcelHelpers.export(exports, "WifiPenIcon", ()=>(0, _wifiPenJsDefault.default));
parcelHelpers.export(exports, "LucideWifiZero", ()=>(0, _wifiZeroJsDefault.default));
parcelHelpers.export(exports, "WifiZero", ()=>(0, _wifiZeroJsDefault.default));
parcelHelpers.export(exports, "WifiZeroIcon", ()=>(0, _wifiZeroJsDefault.default));
parcelHelpers.export(exports, "LucideWifi", ()=>(0, _wifiJsDefault.default));
parcelHelpers.export(exports, "Wifi", ()=>(0, _wifiJsDefault.default));
parcelHelpers.export(exports, "WifiIcon", ()=>(0, _wifiJsDefault.default));
parcelHelpers.export(exports, "LucideWindArrowDown", ()=>(0, _windArrowDownJsDefault.default));
parcelHelpers.export(exports, "WindArrowDown", ()=>(0, _windArrowDownJsDefault.default));
parcelHelpers.export(exports, "WindArrowDownIcon", ()=>(0, _windArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideWind", ()=>(0, _windJsDefault.default));
parcelHelpers.export(exports, "Wind", ()=>(0, _windJsDefault.default));
parcelHelpers.export(exports, "WindIcon", ()=>(0, _windJsDefault.default));
parcelHelpers.export(exports, "LucideWine", ()=>(0, _wineJsDefault.default));
parcelHelpers.export(exports, "Wine", ()=>(0, _wineJsDefault.default));
parcelHelpers.export(exports, "WineIcon", ()=>(0, _wineJsDefault.default));
parcelHelpers.export(exports, "LucideWineOff", ()=>(0, _wineOffJsDefault.default));
parcelHelpers.export(exports, "WineOff", ()=>(0, _wineOffJsDefault.default));
parcelHelpers.export(exports, "WineOffIcon", ()=>(0, _wineOffJsDefault.default));
parcelHelpers.export(exports, "LucideWorkflow", ()=>(0, _workflowJsDefault.default));
parcelHelpers.export(exports, "Workflow", ()=>(0, _workflowJsDefault.default));
parcelHelpers.export(exports, "WorkflowIcon", ()=>(0, _workflowJsDefault.default));
parcelHelpers.export(exports, "LucideWorm", ()=>(0, _wormJsDefault.default));
parcelHelpers.export(exports, "Worm", ()=>(0, _wormJsDefault.default));
parcelHelpers.export(exports, "WormIcon", ()=>(0, _wormJsDefault.default));
parcelHelpers.export(exports, "LucideWrench", ()=>(0, _wrenchJsDefault.default));
parcelHelpers.export(exports, "Wrench", ()=>(0, _wrenchJsDefault.default));
parcelHelpers.export(exports, "WrenchIcon", ()=>(0, _wrenchJsDefault.default));
parcelHelpers.export(exports, "LucideWrapText", ()=>(0, _wrapTextJsDefault.default));
parcelHelpers.export(exports, "WrapText", ()=>(0, _wrapTextJsDefault.default));
parcelHelpers.export(exports, "WrapTextIcon", ()=>(0, _wrapTextJsDefault.default));
parcelHelpers.export(exports, "LucideX", ()=>(0, _xJsDefault.default));
parcelHelpers.export(exports, "X", ()=>(0, _xJsDefault.default));
parcelHelpers.export(exports, "XIcon", ()=>(0, _xJsDefault.default));
parcelHelpers.export(exports, "LucideYoutube", ()=>(0, _youtubeJsDefault.default));
parcelHelpers.export(exports, "Youtube", ()=>(0, _youtubeJsDefault.default));
parcelHelpers.export(exports, "YoutubeIcon", ()=>(0, _youtubeJsDefault.default));
parcelHelpers.export(exports, "LucideZapOff", ()=>(0, _zapOffJsDefault.default));
parcelHelpers.export(exports, "ZapOff", ()=>(0, _zapOffJsDefault.default));
parcelHelpers.export(exports, "ZapOffIcon", ()=>(0, _zapOffJsDefault.default));
parcelHelpers.export(exports, "LucideZap", ()=>(0, _zapJsDefault.default));
parcelHelpers.export(exports, "Zap", ()=>(0, _zapJsDefault.default));
parcelHelpers.export(exports, "ZapIcon", ()=>(0, _zapJsDefault.default));
parcelHelpers.export(exports, "LucideZoomIn", ()=>(0, _zoomInJsDefault.default));
parcelHelpers.export(exports, "ZoomIn", ()=>(0, _zoomInJsDefault.default));
parcelHelpers.export(exports, "ZoomInIcon", ()=>(0, _zoomInJsDefault.default));
parcelHelpers.export(exports, "LucideZoomOut", ()=>(0, _zoomOutJsDefault.default));
parcelHelpers.export(exports, "ZoomOut", ()=>(0, _zoomOutJsDefault.default));
parcelHelpers.export(exports, "ZoomOutIcon", ()=>(0, _zoomOutJsDefault.default));
parcelHelpers.export(exports, "ArrowDown01", ()=>(0, _arrowDown01JsDefault.default));
parcelHelpers.export(exports, "ArrowDown01Icon", ()=>(0, _arrowDown01JsDefault.default));
parcelHelpers.export(exports, "LucideArrowDown01", ()=>(0, _arrowDown01JsDefault.default));
parcelHelpers.export(exports, "ArrowDown10", ()=>(0, _arrowDown10JsDefault.default));
parcelHelpers.export(exports, "ArrowDown10Icon", ()=>(0, _arrowDown10JsDefault.default));
parcelHelpers.export(exports, "LucideArrowDown10", ()=>(0, _arrowDown10JsDefault.default));
parcelHelpers.export(exports, "ArrowUp01", ()=>(0, _arrowUp01JsDefault.default));
parcelHelpers.export(exports, "ArrowUp01Icon", ()=>(0, _arrowUp01JsDefault.default));
parcelHelpers.export(exports, "LucideArrowUp01", ()=>(0, _arrowUp01JsDefault.default));
parcelHelpers.export(exports, "ArrowUp10", ()=>(0, _arrowUp10JsDefault.default));
parcelHelpers.export(exports, "ArrowUp10Icon", ()=>(0, _arrowUp10JsDefault.default));
parcelHelpers.export(exports, "LucideArrowUp10", ()=>(0, _arrowUp10JsDefault.default));
parcelHelpers.export(exports, "createLucideIcon", ()=>(0, _createLucideIconJsDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconJsDefault.default));
parcelHelpers.export(exports, "icons", ()=>_indexJs);
var _indexJs = require("./icons/index.js");
var _alarmClockCheckJs = require("./icons/alarm-clock-check.js");
var _alarmClockCheckJsDefault = parcelHelpers.interopDefault(_alarmClockCheckJs);
var _alarmClockMinusJs = require("./icons/alarm-clock-minus.js");
var _alarmClockMinusJsDefault = parcelHelpers.interopDefault(_alarmClockMinusJs);
var _alarmClockPlusJs = require("./icons/alarm-clock-plus.js");
var _alarmClockPlusJsDefault = parcelHelpers.interopDefault(_alarmClockPlusJs);
var _arrowDownAZJs = require("./icons/arrow-down-a-z.js");
var _arrowDownAZJsDefault = parcelHelpers.interopDefault(_arrowDownAZJs);
var _arrowDownWideNarrowJs = require("./icons/arrow-down-wide-narrow.js");
var _arrowDownWideNarrowJsDefault = parcelHelpers.interopDefault(_arrowDownWideNarrowJs);
var _arrowDownZAJs = require("./icons/arrow-down-z-a.js");
var _arrowDownZAJsDefault = parcelHelpers.interopDefault(_arrowDownZAJs);
var _arrowUpAZJs = require("./icons/arrow-up-a-z.js");
var _arrowUpAZJsDefault = parcelHelpers.interopDefault(_arrowUpAZJs);
var _arrowUpNarrowWideJs = require("./icons/arrow-up-narrow-wide.js");
var _arrowUpNarrowWideJsDefault = parcelHelpers.interopDefault(_arrowUpNarrowWideJs);
var _arrowUpZAJs = require("./icons/arrow-up-z-a.js");
var _arrowUpZAJsDefault = parcelHelpers.interopDefault(_arrowUpZAJs);
var _axis3DJs = require("./icons/axis-3d.js");
var _axis3DJsDefault = parcelHelpers.interopDefault(_axis3DJs);
var _badgeCheckJs = require("./icons/badge-check.js");
var _badgeCheckJsDefault = parcelHelpers.interopDefault(_badgeCheckJs);
var _betweenHorizontalEndJs = require("./icons/between-horizontal-end.js");
var _betweenHorizontalEndJsDefault = parcelHelpers.interopDefault(_betweenHorizontalEndJs);
var _betweenHorizontalStartJs = require("./icons/between-horizontal-start.js");
var _betweenHorizontalStartJsDefault = parcelHelpers.interopDefault(_betweenHorizontalStartJs);
var _bookDashedJs = require("./icons/book-dashed.js");
var _bookDashedJsDefault = parcelHelpers.interopDefault(_bookDashedJs);
var _bracesJs = require("./icons/braces.js");
var _bracesJsDefault = parcelHelpers.interopDefault(_bracesJs);
var _captionsJs = require("./icons/captions.js");
var _captionsJsDefault = parcelHelpers.interopDefault(_captionsJs);
var _chartAreaJs = require("./icons/chart-area.js");
var _chartAreaJsDefault = parcelHelpers.interopDefault(_chartAreaJs);
var _chartBarBigJs = require("./icons/chart-bar-big.js");
var _chartBarBigJsDefault = parcelHelpers.interopDefault(_chartBarBigJs);
var _chartBarJs = require("./icons/chart-bar.js");
var _chartBarJsDefault = parcelHelpers.interopDefault(_chartBarJs);
var _chartCandlestickJs = require("./icons/chart-candlestick.js");
var _chartCandlestickJsDefault = parcelHelpers.interopDefault(_chartCandlestickJs);
var _chartColumnBigJs = require("./icons/chart-column-big.js");
var _chartColumnBigJsDefault = parcelHelpers.interopDefault(_chartColumnBigJs);
var _chartColumnIncreasingJs = require("./icons/chart-column-increasing.js");
var _chartColumnIncreasingJsDefault = parcelHelpers.interopDefault(_chartColumnIncreasingJs);
var _chartColumnJs = require("./icons/chart-column.js");
var _chartColumnJsDefault = parcelHelpers.interopDefault(_chartColumnJs);
var _chartLineJs = require("./icons/chart-line.js");
var _chartLineJsDefault = parcelHelpers.interopDefault(_chartLineJs);
var _chartNoAxesColumnIncreasingJs = require("./icons/chart-no-axes-column-increasing.js");
var _chartNoAxesColumnIncreasingJsDefault = parcelHelpers.interopDefault(_chartNoAxesColumnIncreasingJs);
var _chartNoAxesColumnJs = require("./icons/chart-no-axes-column.js");
var _chartNoAxesColumnJsDefault = parcelHelpers.interopDefault(_chartNoAxesColumnJs);
var _chartNoAxesGanttJs = require("./icons/chart-no-axes-gantt.js");
var _chartNoAxesGanttJsDefault = parcelHelpers.interopDefault(_chartNoAxesGanttJs);
var _chartScatterJs = require("./icons/chart-scatter.js");
var _chartScatterJsDefault = parcelHelpers.interopDefault(_chartScatterJs);
var _chartPieJs = require("./icons/chart-pie.js");
var _chartPieJsDefault = parcelHelpers.interopDefault(_chartPieJs);
var _circleAlertJs = require("./icons/circle-alert.js");
var _circleAlertJsDefault = parcelHelpers.interopDefault(_circleAlertJs);
var _circleArrowDownJs = require("./icons/circle-arrow-down.js");
var _circleArrowDownJsDefault = parcelHelpers.interopDefault(_circleArrowDownJs);
var _circleArrowLeftJs = require("./icons/circle-arrow-left.js");
var _circleArrowLeftJsDefault = parcelHelpers.interopDefault(_circleArrowLeftJs);
var _circleArrowOutDownLeftJs = require("./icons/circle-arrow-out-down-left.js");
var _circleArrowOutDownLeftJsDefault = parcelHelpers.interopDefault(_circleArrowOutDownLeftJs);
var _circleArrowOutDownRightJs = require("./icons/circle-arrow-out-down-right.js");
var _circleArrowOutDownRightJsDefault = parcelHelpers.interopDefault(_circleArrowOutDownRightJs);
var _circleArrowOutUpRightJs = require("./icons/circle-arrow-out-up-right.js");
var _circleArrowOutUpRightJsDefault = parcelHelpers.interopDefault(_circleArrowOutUpRightJs);
var _circleArrowOutUpLeftJs = require("./icons/circle-arrow-out-up-left.js");
var _circleArrowOutUpLeftJsDefault = parcelHelpers.interopDefault(_circleArrowOutUpLeftJs);
var _circleArrowRightJs = require("./icons/circle-arrow-right.js");
var _circleArrowRightJsDefault = parcelHelpers.interopDefault(_circleArrowRightJs);
var _circleArrowUpJs = require("./icons/circle-arrow-up.js");
var _circleArrowUpJsDefault = parcelHelpers.interopDefault(_circleArrowUpJs);
var _circleCheckBigJs = require("./icons/circle-check-big.js");
var _circleCheckBigJsDefault = parcelHelpers.interopDefault(_circleCheckBigJs);
var _circleCheckJs = require("./icons/circle-check.js");
var _circleCheckJsDefault = parcelHelpers.interopDefault(_circleCheckJs);
var _circleChevronDownJs = require("./icons/circle-chevron-down.js");
var _circleChevronDownJsDefault = parcelHelpers.interopDefault(_circleChevronDownJs);
var _circleChevronLeftJs = require("./icons/circle-chevron-left.js");
var _circleChevronLeftJsDefault = parcelHelpers.interopDefault(_circleChevronLeftJs);
var _circleChevronRightJs = require("./icons/circle-chevron-right.js");
var _circleChevronRightJsDefault = parcelHelpers.interopDefault(_circleChevronRightJs);
var _circleChevronUpJs = require("./icons/circle-chevron-up.js");
var _circleChevronUpJsDefault = parcelHelpers.interopDefault(_circleChevronUpJs);
var _circleDivideJs = require("./icons/circle-divide.js");
var _circleDivideJsDefault = parcelHelpers.interopDefault(_circleDivideJs);
var _circleGaugeJs = require("./icons/circle-gauge.js");
var _circleGaugeJsDefault = parcelHelpers.interopDefault(_circleGaugeJs);
var _circleHelpJs = require("./icons/circle-help.js");
var _circleHelpJsDefault = parcelHelpers.interopDefault(_circleHelpJs);
var _circleMinusJs = require("./icons/circle-minus.js");
var _circleMinusJsDefault = parcelHelpers.interopDefault(_circleMinusJs);
var _circleParkingOffJs = require("./icons/circle-parking-off.js");
var _circleParkingOffJsDefault = parcelHelpers.interopDefault(_circleParkingOffJs);
var _circleParkingJs = require("./icons/circle-parking.js");
var _circleParkingJsDefault = parcelHelpers.interopDefault(_circleParkingJs);
var _circlePauseJs = require("./icons/circle-pause.js");
var _circlePauseJsDefault = parcelHelpers.interopDefault(_circlePauseJs);
var _circlePercentJs = require("./icons/circle-percent.js");
var _circlePercentJsDefault = parcelHelpers.interopDefault(_circlePercentJs);
var _circlePlayJs = require("./icons/circle-play.js");
var _circlePlayJsDefault = parcelHelpers.interopDefault(_circlePlayJs);
var _circlePlusJs = require("./icons/circle-plus.js");
var _circlePlusJsDefault = parcelHelpers.interopDefault(_circlePlusJs);
var _circlePowerJs = require("./icons/circle-power.js");
var _circlePowerJsDefault = parcelHelpers.interopDefault(_circlePowerJs);
var _circleSlash2Js = require("./icons/circle-slash-2.js");
var _circleSlash2JsDefault = parcelHelpers.interopDefault(_circleSlash2Js);
var _circleStopJs = require("./icons/circle-stop.js");
var _circleStopJsDefault = parcelHelpers.interopDefault(_circleStopJs);
var _circleUserRoundJs = require("./icons/circle-user-round.js");
var _circleUserRoundJsDefault = parcelHelpers.interopDefault(_circleUserRoundJs);
var _circleUserJs = require("./icons/circle-user.js");
var _circleUserJsDefault = parcelHelpers.interopDefault(_circleUserJs);
var _circleXJs = require("./icons/circle-x.js");
var _circleXJsDefault = parcelHelpers.interopDefault(_circleXJs);
var _clipboardPenLineJs = require("./icons/clipboard-pen-line.js");
var _clipboardPenLineJsDefault = parcelHelpers.interopDefault(_clipboardPenLineJs);
var _clipboardPenJs = require("./icons/clipboard-pen.js");
var _clipboardPenJsDefault = parcelHelpers.interopDefault(_clipboardPenJs);
var _cloudDownloadJs = require("./icons/cloud-download.js");
var _cloudDownloadJsDefault = parcelHelpers.interopDefault(_cloudDownloadJs);
var _cloudUploadJs = require("./icons/cloud-upload.js");
var _cloudUploadJsDefault = parcelHelpers.interopDefault(_cloudUploadJs);
var _codeXmlJs = require("./icons/code-xml.js");
var _codeXmlJsDefault = parcelHelpers.interopDefault(_codeXmlJs);
var _columns2Js = require("./icons/columns-2.js");
var _columns2JsDefault = parcelHelpers.interopDefault(_columns2Js);
var _columns3CogJs = require("./icons/columns-3-cog.js");
var _columns3CogJsDefault = parcelHelpers.interopDefault(_columns3CogJs);
var _columns3Js = require("./icons/columns-3.js");
var _columns3JsDefault = parcelHelpers.interopDefault(_columns3Js);
var _contactRoundJs = require("./icons/contact-round.js");
var _contactRoundJsDefault = parcelHelpers.interopDefault(_contactRoundJs);
var _diamondPercentJs = require("./icons/diamond-percent.js");
var _diamondPercentJsDefault = parcelHelpers.interopDefault(_diamondPercentJs);
var _earthJs = require("./icons/earth.js");
var _earthJsDefault = parcelHelpers.interopDefault(_earthJs);
var _ellipsisVerticalJs = require("./icons/ellipsis-vertical.js");
var _ellipsisVerticalJsDefault = parcelHelpers.interopDefault(_ellipsisVerticalJs);
var _ellipsisJs = require("./icons/ellipsis.js");
var _ellipsisJsDefault = parcelHelpers.interopDefault(_ellipsisJs);
var _fileAxis3DJs = require("./icons/file-axis-3d.js");
var _fileAxis3DJsDefault = parcelHelpers.interopDefault(_fileAxis3DJs);
var _fileChartColumnIncreasingJs = require("./icons/file-chart-column-increasing.js");
var _fileChartColumnIncreasingJsDefault = parcelHelpers.interopDefault(_fileChartColumnIncreasingJs);
var _fileChartColumnJs = require("./icons/file-chart-column.js");
var _fileChartColumnJsDefault = parcelHelpers.interopDefault(_fileChartColumnJs);
var _fileChartLineJs = require("./icons/file-chart-line.js");
var _fileChartLineJsDefault = parcelHelpers.interopDefault(_fileChartLineJs);
var _fileChartPieJs = require("./icons/file-chart-pie.js");
var _fileChartPieJsDefault = parcelHelpers.interopDefault(_fileChartPieJs);
var _fileCogJs = require("./icons/file-cog.js");
var _fileCogJsDefault = parcelHelpers.interopDefault(_fileCogJs);
var _filePenLineJs = require("./icons/file-pen-line.js");
var _filePenLineJsDefault = parcelHelpers.interopDefault(_filePenLineJs);
var _filePenJs = require("./icons/file-pen.js");
var _filePenJsDefault = parcelHelpers.interopDefault(_filePenJs);
var _folderCogJs = require("./icons/folder-cog.js");
var _folderCogJsDefault = parcelHelpers.interopDefault(_folderCogJs);
var _folderPenJs = require("./icons/folder-pen.js");
var _folderPenJsDefault = parcelHelpers.interopDefault(_folderPenJs);
var _funnelXJs = require("./icons/funnel-x.js");
var _funnelXJsDefault = parcelHelpers.interopDefault(_funnelXJs);
var _funnelJs = require("./icons/funnel.js");
var _funnelJsDefault = parcelHelpers.interopDefault(_funnelJs);
var _gitCommitHorizontalJs = require("./icons/git-commit-horizontal.js");
var _gitCommitHorizontalJsDefault = parcelHelpers.interopDefault(_gitCommitHorizontalJs);
var _grid2X2CheckJs = require("./icons/grid-2x2-check.js");
var _grid2X2CheckJsDefault = parcelHelpers.interopDefault(_grid2X2CheckJs);
var _grid2X2PlusJs = require("./icons/grid-2x2-plus.js");
var _grid2X2PlusJsDefault = parcelHelpers.interopDefault(_grid2X2PlusJs);
var _grid2X2XJs = require("./icons/grid-2x2-x.js");
var _grid2X2XJsDefault = parcelHelpers.interopDefault(_grid2X2XJs);
var _grid2X2Js = require("./icons/grid-2x2.js");
var _grid2X2JsDefault = parcelHelpers.interopDefault(_grid2X2Js);
var _grid3X3Js = require("./icons/grid-3x3.js");
var _grid3X3JsDefault = parcelHelpers.interopDefault(_grid3X3Js);
var _handHelpingJs = require("./icons/hand-helping.js");
var _handHelpingJsDefault = parcelHelpers.interopDefault(_handHelpingJs);
var _houseJs = require("./icons/house.js");
var _houseJsDefault = parcelHelpers.interopDefault(_houseJs);
var _iceCreamBowlJs = require("./icons/ice-cream-bowl.js");
var _iceCreamBowlJsDefault = parcelHelpers.interopDefault(_iceCreamBowlJs);
var _iceCreamConeJs = require("./icons/ice-cream-cone.js");
var _iceCreamConeJsDefault = parcelHelpers.interopDefault(_iceCreamConeJs);
var _indentDecreaseJs = require("./icons/indent-decrease.js");
var _indentDecreaseJsDefault = parcelHelpers.interopDefault(_indentDecreaseJs);
var _indentIncreaseJs = require("./icons/indent-increase.js");
var _indentIncreaseJsDefault = parcelHelpers.interopDefault(_indentIncreaseJs);
var _laptopMinimalJs = require("./icons/laptop-minimal.js");
var _laptopMinimalJsDefault = parcelHelpers.interopDefault(_laptopMinimalJs);
var _layersJs = require("./icons/layers.js");
var _layersJsDefault = parcelHelpers.interopDefault(_layersJs);
var _loaderCircleJs = require("./icons/loader-circle.js");
var _loaderCircleJsDefault = parcelHelpers.interopDefault(_loaderCircleJs);
var _lockKeyholeOpenJs = require("./icons/lock-keyhole-open.js");
var _lockKeyholeOpenJsDefault = parcelHelpers.interopDefault(_lockKeyholeOpenJs);
var _lockOpenJs = require("./icons/lock-open.js");
var _lockOpenJsDefault = parcelHelpers.interopDefault(_lockOpenJs);
var _micVocalJs = require("./icons/mic-vocal.js");
var _micVocalJsDefault = parcelHelpers.interopDefault(_micVocalJs);
var _move3DJs = require("./icons/move-3d.js");
var _move3DJsDefault = parcelHelpers.interopDefault(_move3DJs);
var _octagonAlertJs = require("./icons/octagon-alert.js");
var _octagonAlertJsDefault = parcelHelpers.interopDefault(_octagonAlertJs);
var _octagonPauseJs = require("./icons/octagon-pause.js");
var _octagonPauseJsDefault = parcelHelpers.interopDefault(_octagonPauseJs);
var _octagonXJs = require("./icons/octagon-x.js");
var _octagonXJsDefault = parcelHelpers.interopDefault(_octagonXJs);
var _paintbrushVerticalJs = require("./icons/paintbrush-vertical.js");
var _paintbrushVerticalJsDefault = parcelHelpers.interopDefault(_paintbrushVerticalJs);
var _panelBottomDashedJs = require("./icons/panel-bottom-dashed.js");
var _panelBottomDashedJsDefault = parcelHelpers.interopDefault(_panelBottomDashedJs);
var _panelLeftCloseJs = require("./icons/panel-left-close.js");
var _panelLeftCloseJsDefault = parcelHelpers.interopDefault(_panelLeftCloseJs);
var _panelLeftDashedJs = require("./icons/panel-left-dashed.js");
var _panelLeftDashedJsDefault = parcelHelpers.interopDefault(_panelLeftDashedJs);
var _panelLeftOpenJs = require("./icons/panel-left-open.js");
var _panelLeftOpenJsDefault = parcelHelpers.interopDefault(_panelLeftOpenJs);
var _panelLeftJs = require("./icons/panel-left.js");
var _panelLeftJsDefault = parcelHelpers.interopDefault(_panelLeftJs);
var _panelRightDashedJs = require("./icons/panel-right-dashed.js");
var _panelRightDashedJsDefault = parcelHelpers.interopDefault(_panelRightDashedJs);
var _panelTopDashedJs = require("./icons/panel-top-dashed.js");
var _panelTopDashedJsDefault = parcelHelpers.interopDefault(_panelTopDashedJs);
var _panelsTopLeftJs = require("./icons/panels-top-left.js");
var _panelsTopLeftJsDefault = parcelHelpers.interopDefault(_panelsTopLeftJs);
var _penLineJs = require("./icons/pen-line.js");
var _penLineJsDefault = parcelHelpers.interopDefault(_penLineJs);
var _penJs = require("./icons/pen.js");
var _penJsDefault = parcelHelpers.interopDefault(_penJs);
var _plugZapJs = require("./icons/plug-zap.js");
var _plugZapJsDefault = parcelHelpers.interopDefault(_plugZapJs);
var _rectangleEllipsisJs = require("./icons/rectangle-ellipsis.js");
var _rectangleEllipsisJsDefault = parcelHelpers.interopDefault(_rectangleEllipsisJs);
var _rotate3DJs = require("./icons/rotate-3d.js");
var _rotate3DJsDefault = parcelHelpers.interopDefault(_rotate3DJs);
var _rows2Js = require("./icons/rows-2.js");
var _rows2JsDefault = parcelHelpers.interopDefault(_rows2Js);
var _rows3Js = require("./icons/rows-3.js");
var _rows3JsDefault = parcelHelpers.interopDefault(_rows3Js);
var _scale3DJs = require("./icons/scale-3d.js");
var _scale3DJsDefault = parcelHelpers.interopDefault(_scale3DJs);
var _sendHorizontalJs = require("./icons/send-horizontal.js");
var _sendHorizontalJsDefault = parcelHelpers.interopDefault(_sendHorizontalJs);
var _shieldXJs = require("./icons/shield-x.js");
var _shieldXJsDefault = parcelHelpers.interopDefault(_shieldXJs);
var _slidersVerticalJs = require("./icons/sliders-vertical.js");
var _slidersVerticalJsDefault = parcelHelpers.interopDefault(_slidersVerticalJs);
var _sparklesJs = require("./icons/sparkles.js");
var _sparklesJsDefault = parcelHelpers.interopDefault(_sparklesJs);
var _squareActivityJs = require("./icons/square-activity.js");
var _squareActivityJsDefault = parcelHelpers.interopDefault(_squareActivityJs);
var _squareArrowDownLeftJs = require("./icons/square-arrow-down-left.js");
var _squareArrowDownLeftJsDefault = parcelHelpers.interopDefault(_squareArrowDownLeftJs);
var _squareArrowDownRightJs = require("./icons/square-arrow-down-right.js");
var _squareArrowDownRightJsDefault = parcelHelpers.interopDefault(_squareArrowDownRightJs);
var _squareArrowDownJs = require("./icons/square-arrow-down.js");
var _squareArrowDownJsDefault = parcelHelpers.interopDefault(_squareArrowDownJs);
var _squareArrowLeftJs = require("./icons/square-arrow-left.js");
var _squareArrowLeftJsDefault = parcelHelpers.interopDefault(_squareArrowLeftJs);
var _squareArrowOutDownLeftJs = require("./icons/square-arrow-out-down-left.js");
var _squareArrowOutDownLeftJsDefault = parcelHelpers.interopDefault(_squareArrowOutDownLeftJs);
var _squareArrowOutDownRightJs = require("./icons/square-arrow-out-down-right.js");
var _squareArrowOutDownRightJsDefault = parcelHelpers.interopDefault(_squareArrowOutDownRightJs);
var _squareArrowOutUpLeftJs = require("./icons/square-arrow-out-up-left.js");
var _squareArrowOutUpLeftJsDefault = parcelHelpers.interopDefault(_squareArrowOutUpLeftJs);
var _squareArrowOutUpRightJs = require("./icons/square-arrow-out-up-right.js");
var _squareArrowOutUpRightJsDefault = parcelHelpers.interopDefault(_squareArrowOutUpRightJs);
var _squareArrowRightJs = require("./icons/square-arrow-right.js");
var _squareArrowRightJsDefault = parcelHelpers.interopDefault(_squareArrowRightJs);
var _squareArrowUpLeftJs = require("./icons/square-arrow-up-left.js");
var _squareArrowUpLeftJsDefault = parcelHelpers.interopDefault(_squareArrowUpLeftJs);
var _squareArrowUpRightJs = require("./icons/square-arrow-up-right.js");
var _squareArrowUpRightJsDefault = parcelHelpers.interopDefault(_squareArrowUpRightJs);
var _squareArrowUpJs = require("./icons/square-arrow-up.js");
var _squareArrowUpJsDefault = parcelHelpers.interopDefault(_squareArrowUpJs);
var _squareAsteriskJs = require("./icons/square-asterisk.js");
var _squareAsteriskJsDefault = parcelHelpers.interopDefault(_squareAsteriskJs);
var _squareBottomDashedScissorsJs = require("./icons/square-bottom-dashed-scissors.js");
var _squareBottomDashedScissorsJsDefault = parcelHelpers.interopDefault(_squareBottomDashedScissorsJs);
var _squareChartGanttJs = require("./icons/square-chart-gantt.js");
var _squareChartGanttJsDefault = parcelHelpers.interopDefault(_squareChartGanttJs);
var _squareCheckBigJs = require("./icons/square-check-big.js");
var _squareCheckBigJsDefault = parcelHelpers.interopDefault(_squareCheckBigJs);
var _squareChevronDownJs = require("./icons/square-chevron-down.js");
var _squareChevronDownJsDefault = parcelHelpers.interopDefault(_squareChevronDownJs);
var _squareChevronLeftJs = require("./icons/square-chevron-left.js");
var _squareChevronLeftJsDefault = parcelHelpers.interopDefault(_squareChevronLeftJs);
var _squareCheckJs = require("./icons/square-check.js");
var _squareCheckJsDefault = parcelHelpers.interopDefault(_squareCheckJs);
var _squareChevronRightJs = require("./icons/square-chevron-right.js");
var _squareChevronRightJsDefault = parcelHelpers.interopDefault(_squareChevronRightJs);
var _squareCodeJs = require("./icons/square-code.js");
var _squareCodeJsDefault = parcelHelpers.interopDefault(_squareCodeJs);
var _squareChevronUpJs = require("./icons/square-chevron-up.js");
var _squareChevronUpJsDefault = parcelHelpers.interopDefault(_squareChevronUpJs);
var _squareDashedMousePointerJs = require("./icons/square-dashed-mouse-pointer.js");
var _squareDashedMousePointerJsDefault = parcelHelpers.interopDefault(_squareDashedMousePointerJs);
var _squareDashedKanbanJs = require("./icons/square-dashed-kanban.js");
var _squareDashedKanbanJsDefault = parcelHelpers.interopDefault(_squareDashedKanbanJs);
var _squareDashedJs = require("./icons/square-dashed.js");
var _squareDashedJsDefault = parcelHelpers.interopDefault(_squareDashedJs);
var _squareDivideJs = require("./icons/square-divide.js");
var _squareDivideJsDefault = parcelHelpers.interopDefault(_squareDivideJs);
var _squareDotJs = require("./icons/square-dot.js");
var _squareDotJsDefault = parcelHelpers.interopDefault(_squareDotJs);
var _squareEqualJs = require("./icons/square-equal.js");
var _squareEqualJsDefault = parcelHelpers.interopDefault(_squareEqualJs);
var _squareFunctionJs = require("./icons/square-function.js");
var _squareFunctionJsDefault = parcelHelpers.interopDefault(_squareFunctionJs);
var _squareKanbanJs = require("./icons/square-kanban.js");
var _squareKanbanJsDefault = parcelHelpers.interopDefault(_squareKanbanJs);
var _squareLibraryJs = require("./icons/square-library.js");
var _squareLibraryJsDefault = parcelHelpers.interopDefault(_squareLibraryJs);
var _squareMJs = require("./icons/square-m.js");
var _squareMJsDefault = parcelHelpers.interopDefault(_squareMJs);
var _squareMenuJs = require("./icons/square-menu.js");
var _squareMenuJsDefault = parcelHelpers.interopDefault(_squareMenuJs);
var _squareMinusJs = require("./icons/square-minus.js");
var _squareMinusJsDefault = parcelHelpers.interopDefault(_squareMinusJs);
var _squareMousePointerJs = require("./icons/square-mouse-pointer.js");
var _squareMousePointerJsDefault = parcelHelpers.interopDefault(_squareMousePointerJs);
var _squareParkingOffJs = require("./icons/square-parking-off.js");
var _squareParkingOffJsDefault = parcelHelpers.interopDefault(_squareParkingOffJs);
var _squareParkingJs = require("./icons/square-parking.js");
var _squareParkingJsDefault = parcelHelpers.interopDefault(_squareParkingJs);
var _squarePenJs = require("./icons/square-pen.js");
var _squarePenJsDefault = parcelHelpers.interopDefault(_squarePenJs);
var _squarePercentJs = require("./icons/square-percent.js");
var _squarePercentJsDefault = parcelHelpers.interopDefault(_squarePercentJs);
var _squarePiJs = require("./icons/square-pi.js");
var _squarePiJsDefault = parcelHelpers.interopDefault(_squarePiJs);
var _squarePilcrowJs = require("./icons/square-pilcrow.js");
var _squarePilcrowJsDefault = parcelHelpers.interopDefault(_squarePilcrowJs);
var _squarePlayJs = require("./icons/square-play.js");
var _squarePlayJsDefault = parcelHelpers.interopDefault(_squarePlayJs);
var _squarePlusJs = require("./icons/square-plus.js");
var _squarePlusJsDefault = parcelHelpers.interopDefault(_squarePlusJs);
var _squarePowerJs = require("./icons/square-power.js");
var _squarePowerJsDefault = parcelHelpers.interopDefault(_squarePowerJs);
var _squareScissorsJs = require("./icons/square-scissors.js");
var _squareScissorsJsDefault = parcelHelpers.interopDefault(_squareScissorsJs);
var _squareSigmaJs = require("./icons/square-sigma.js");
var _squareSigmaJsDefault = parcelHelpers.interopDefault(_squareSigmaJs);
var _squareSlashJs = require("./icons/square-slash.js");
var _squareSlashJsDefault = parcelHelpers.interopDefault(_squareSlashJs);
var _squareSplitHorizontalJs = require("./icons/square-split-horizontal.js");
var _squareSplitHorizontalJsDefault = parcelHelpers.interopDefault(_squareSplitHorizontalJs);
var _squareSplitVerticalJs = require("./icons/square-split-vertical.js");
var _squareSplitVerticalJsDefault = parcelHelpers.interopDefault(_squareSplitVerticalJs);
var _squareTerminalJs = require("./icons/square-terminal.js");
var _squareTerminalJsDefault = parcelHelpers.interopDefault(_squareTerminalJs);
var _squareUserRoundJs = require("./icons/square-user-round.js");
var _squareUserRoundJsDefault = parcelHelpers.interopDefault(_squareUserRoundJs);
var _squareUserJs = require("./icons/square-user.js");
var _squareUserJsDefault = parcelHelpers.interopDefault(_squareUserJs);
var _squareXJs = require("./icons/square-x.js");
var _squareXJsDefault = parcelHelpers.interopDefault(_squareXJs);
var _testTubeDiagonalJs = require("./icons/test-tube-diagonal.js");
var _testTubeDiagonalJsDefault = parcelHelpers.interopDefault(_testTubeDiagonalJs);
var _textSelectJs = require("./icons/text-select.js");
var _textSelectJsDefault = parcelHelpers.interopDefault(_textSelectJs);
var _tramFrontJs = require("./icons/tram-front.js");
var _tramFrontJsDefault = parcelHelpers.interopDefault(_tramFrontJs);
var _treePalmJs = require("./icons/tree-palm.js");
var _treePalmJsDefault = parcelHelpers.interopDefault(_treePalmJs);
var _triangleAlertJs = require("./icons/triangle-alert.js");
var _triangleAlertJsDefault = parcelHelpers.interopDefault(_triangleAlertJs);
var _tvMinimalJs = require("./icons/tv-minimal.js");
var _tvMinimalJsDefault = parcelHelpers.interopDefault(_tvMinimalJs);
var _universityJs = require("./icons/university.js");
var _universityJsDefault = parcelHelpers.interopDefault(_universityJs);
var _userRoundCheckJs = require("./icons/user-round-check.js");
var _userRoundCheckJsDefault = parcelHelpers.interopDefault(_userRoundCheckJs);
var _userRoundCogJs = require("./icons/user-round-cog.js");
var _userRoundCogJsDefault = parcelHelpers.interopDefault(_userRoundCogJs);
var _userRoundMinusJs = require("./icons/user-round-minus.js");
var _userRoundMinusJsDefault = parcelHelpers.interopDefault(_userRoundMinusJs);
var _userRoundPlusJs = require("./icons/user-round-plus.js");
var _userRoundPlusJsDefault = parcelHelpers.interopDefault(_userRoundPlusJs);
var _userRoundXJs = require("./icons/user-round-x.js");
var _userRoundXJsDefault = parcelHelpers.interopDefault(_userRoundXJs);
var _userRoundJs = require("./icons/user-round.js");
var _userRoundJsDefault = parcelHelpers.interopDefault(_userRoundJs);
var _usersRoundJs = require("./icons/users-round.js");
var _usersRoundJsDefault = parcelHelpers.interopDefault(_usersRoundJs);
var _utensilsCrossedJs = require("./icons/utensils-crossed.js");
var _utensilsCrossedJsDefault = parcelHelpers.interopDefault(_utensilsCrossedJs);
var _utensilsJs = require("./icons/utensils.js");
var _utensilsJsDefault = parcelHelpers.interopDefault(_utensilsJs);
var _walletMinimalJs = require("./icons/wallet-minimal.js");
var _walletMinimalJsDefault = parcelHelpers.interopDefault(_walletMinimalJs);
var _wandSparklesJs = require("./icons/wand-sparkles.js");
var _wandSparklesJsDefault = parcelHelpers.interopDefault(_wandSparklesJs);
var _aArrowDownJs = require("./icons/a-arrow-down.js");
var _aArrowDownJsDefault = parcelHelpers.interopDefault(_aArrowDownJs);
var _aArrowUpJs = require("./icons/a-arrow-up.js");
var _aArrowUpJsDefault = parcelHelpers.interopDefault(_aArrowUpJs);
var _aLargeSmallJs = require("./icons/a-large-small.js");
var _aLargeSmallJsDefault = parcelHelpers.interopDefault(_aLargeSmallJs);
var _accessibilityJs = require("./icons/accessibility.js");
var _accessibilityJsDefault = parcelHelpers.interopDefault(_accessibilityJs);
var _activityJs = require("./icons/activity.js");
var _activityJsDefault = parcelHelpers.interopDefault(_activityJs);
var _airVentJs = require("./icons/air-vent.js");
var _airVentJsDefault = parcelHelpers.interopDefault(_airVentJs);
var _airplayJs = require("./icons/airplay.js");
var _airplayJsDefault = parcelHelpers.interopDefault(_airplayJs);
var _alarmClockOffJs = require("./icons/alarm-clock-off.js");
var _alarmClockOffJsDefault = parcelHelpers.interopDefault(_alarmClockOffJs);
var _alarmClockJs = require("./icons/alarm-clock.js");
var _alarmClockJsDefault = parcelHelpers.interopDefault(_alarmClockJs);
var _alarmSmokeJs = require("./icons/alarm-smoke.js");
var _alarmSmokeJsDefault = parcelHelpers.interopDefault(_alarmSmokeJs);
var _albumJs = require("./icons/album.js");
var _albumJsDefault = parcelHelpers.interopDefault(_albumJs);
var _alignCenterHorizontalJs = require("./icons/align-center-horizontal.js");
var _alignCenterHorizontalJsDefault = parcelHelpers.interopDefault(_alignCenterHorizontalJs);
var _alignCenterVerticalJs = require("./icons/align-center-vertical.js");
var _alignCenterVerticalJsDefault = parcelHelpers.interopDefault(_alignCenterVerticalJs);
var _alignCenterJs = require("./icons/align-center.js");
var _alignCenterJsDefault = parcelHelpers.interopDefault(_alignCenterJs);
var _alignEndHorizontalJs = require("./icons/align-end-horizontal.js");
var _alignEndHorizontalJsDefault = parcelHelpers.interopDefault(_alignEndHorizontalJs);
var _alignEndVerticalJs = require("./icons/align-end-vertical.js");
var _alignEndVerticalJsDefault = parcelHelpers.interopDefault(_alignEndVerticalJs);
var _alignHorizontalDistributeCenterJs = require("./icons/align-horizontal-distribute-center.js");
var _alignHorizontalDistributeCenterJsDefault = parcelHelpers.interopDefault(_alignHorizontalDistributeCenterJs);
var _alignHorizontalDistributeEndJs = require("./icons/align-horizontal-distribute-end.js");
var _alignHorizontalDistributeEndJsDefault = parcelHelpers.interopDefault(_alignHorizontalDistributeEndJs);
var _alignHorizontalJustifyCenterJs = require("./icons/align-horizontal-justify-center.js");
var _alignHorizontalJustifyCenterJsDefault = parcelHelpers.interopDefault(_alignHorizontalJustifyCenterJs);
var _alignHorizontalJustifyEndJs = require("./icons/align-horizontal-justify-end.js");
var _alignHorizontalJustifyEndJsDefault = parcelHelpers.interopDefault(_alignHorizontalJustifyEndJs);
var _alignHorizontalDistributeStartJs = require("./icons/align-horizontal-distribute-start.js");
var _alignHorizontalDistributeStartJsDefault = parcelHelpers.interopDefault(_alignHorizontalDistributeStartJs);
var _alignHorizontalJustifyStartJs = require("./icons/align-horizontal-justify-start.js");
var _alignHorizontalJustifyStartJsDefault = parcelHelpers.interopDefault(_alignHorizontalJustifyStartJs);
var _alignHorizontalSpaceAroundJs = require("./icons/align-horizontal-space-around.js");
var _alignHorizontalSpaceAroundJsDefault = parcelHelpers.interopDefault(_alignHorizontalSpaceAroundJs);
var _alignHorizontalSpaceBetweenJs = require("./icons/align-horizontal-space-between.js");
var _alignHorizontalSpaceBetweenJsDefault = parcelHelpers.interopDefault(_alignHorizontalSpaceBetweenJs);
var _alignJustifyJs = require("./icons/align-justify.js");
var _alignJustifyJsDefault = parcelHelpers.interopDefault(_alignJustifyJs);
var _alignLeftJs = require("./icons/align-left.js");
var _alignLeftJsDefault = parcelHelpers.interopDefault(_alignLeftJs);
var _alignRightJs = require("./icons/align-right.js");
var _alignRightJsDefault = parcelHelpers.interopDefault(_alignRightJs);
var _alignStartHorizontalJs = require("./icons/align-start-horizontal.js");
var _alignStartHorizontalJsDefault = parcelHelpers.interopDefault(_alignStartHorizontalJs);
var _alignStartVerticalJs = require("./icons/align-start-vertical.js");
var _alignStartVerticalJsDefault = parcelHelpers.interopDefault(_alignStartVerticalJs);
var _alignVerticalDistributeCenterJs = require("./icons/align-vertical-distribute-center.js");
var _alignVerticalDistributeCenterJsDefault = parcelHelpers.interopDefault(_alignVerticalDistributeCenterJs);
var _alignVerticalDistributeEndJs = require("./icons/align-vertical-distribute-end.js");
var _alignVerticalDistributeEndJsDefault = parcelHelpers.interopDefault(_alignVerticalDistributeEndJs);
var _alignVerticalDistributeStartJs = require("./icons/align-vertical-distribute-start.js");
var _alignVerticalDistributeStartJsDefault = parcelHelpers.interopDefault(_alignVerticalDistributeStartJs);
var _alignVerticalJustifyCenterJs = require("./icons/align-vertical-justify-center.js");
var _alignVerticalJustifyCenterJsDefault = parcelHelpers.interopDefault(_alignVerticalJustifyCenterJs);
var _alignVerticalJustifyEndJs = require("./icons/align-vertical-justify-end.js");
var _alignVerticalJustifyEndJsDefault = parcelHelpers.interopDefault(_alignVerticalJustifyEndJs);
var _alignVerticalJustifyStartJs = require("./icons/align-vertical-justify-start.js");
var _alignVerticalJustifyStartJsDefault = parcelHelpers.interopDefault(_alignVerticalJustifyStartJs);
var _alignVerticalSpaceAroundJs = require("./icons/align-vertical-space-around.js");
var _alignVerticalSpaceAroundJsDefault = parcelHelpers.interopDefault(_alignVerticalSpaceAroundJs);
var _alignVerticalSpaceBetweenJs = require("./icons/align-vertical-space-between.js");
var _alignVerticalSpaceBetweenJsDefault = parcelHelpers.interopDefault(_alignVerticalSpaceBetweenJs);
var _ambulanceJs = require("./icons/ambulance.js");
var _ambulanceJsDefault = parcelHelpers.interopDefault(_ambulanceJs);
var _ampersandJs = require("./icons/ampersand.js");
var _ampersandJsDefault = parcelHelpers.interopDefault(_ampersandJs);
var _ampersandsJs = require("./icons/ampersands.js");
var _ampersandsJsDefault = parcelHelpers.interopDefault(_ampersandsJs);
var _amphoraJs = require("./icons/amphora.js");
var _amphoraJsDefault = parcelHelpers.interopDefault(_amphoraJs);
var _anchorJs = require("./icons/anchor.js");
var _anchorJsDefault = parcelHelpers.interopDefault(_anchorJs);
var _angryJs = require("./icons/angry.js");
var _angryJsDefault = parcelHelpers.interopDefault(_angryJs);
var _annoyedJs = require("./icons/annoyed.js");
var _annoyedJsDefault = parcelHelpers.interopDefault(_annoyedJs);
var _antennaJs = require("./icons/antenna.js");
var _antennaJsDefault = parcelHelpers.interopDefault(_antennaJs);
var _anvilJs = require("./icons/anvil.js");
var _anvilJsDefault = parcelHelpers.interopDefault(_anvilJs);
var _apertureJs = require("./icons/aperture.js");
var _apertureJsDefault = parcelHelpers.interopDefault(_apertureJs);
var _appWindowMacJs = require("./icons/app-window-mac.js");
var _appWindowMacJsDefault = parcelHelpers.interopDefault(_appWindowMacJs);
var _appWindowJs = require("./icons/app-window.js");
var _appWindowJsDefault = parcelHelpers.interopDefault(_appWindowJs);
var _appleJs = require("./icons/apple.js");
var _appleJsDefault = parcelHelpers.interopDefault(_appleJs);
var _archiveRestoreJs = require("./icons/archive-restore.js");
var _archiveRestoreJsDefault = parcelHelpers.interopDefault(_archiveRestoreJs);
var _archiveXJs = require("./icons/archive-x.js");
var _archiveXJsDefault = parcelHelpers.interopDefault(_archiveXJs);
var _archiveJs = require("./icons/archive.js");
var _archiveJsDefault = parcelHelpers.interopDefault(_archiveJs);
var _armchairJs = require("./icons/armchair.js");
var _armchairJsDefault = parcelHelpers.interopDefault(_armchairJs);
var _arrowBigDownDashJs = require("./icons/arrow-big-down-dash.js");
var _arrowBigDownDashJsDefault = parcelHelpers.interopDefault(_arrowBigDownDashJs);
var _arrowBigDownJs = require("./icons/arrow-big-down.js");
var _arrowBigDownJsDefault = parcelHelpers.interopDefault(_arrowBigDownJs);
var _arrowBigLeftDashJs = require("./icons/arrow-big-left-dash.js");
var _arrowBigLeftDashJsDefault = parcelHelpers.interopDefault(_arrowBigLeftDashJs);
var _arrowBigLeftJs = require("./icons/arrow-big-left.js");
var _arrowBigLeftJsDefault = parcelHelpers.interopDefault(_arrowBigLeftJs);
var _arrowBigRightDashJs = require("./icons/arrow-big-right-dash.js");
var _arrowBigRightDashJsDefault = parcelHelpers.interopDefault(_arrowBigRightDashJs);
var _arrowBigRightJs = require("./icons/arrow-big-right.js");
var _arrowBigRightJsDefault = parcelHelpers.interopDefault(_arrowBigRightJs);
var _arrowBigUpDashJs = require("./icons/arrow-big-up-dash.js");
var _arrowBigUpDashJsDefault = parcelHelpers.interopDefault(_arrowBigUpDashJs);
var _arrowBigUpJs = require("./icons/arrow-big-up.js");
var _arrowBigUpJsDefault = parcelHelpers.interopDefault(_arrowBigUpJs);
var _arrowDownFromLineJs = require("./icons/arrow-down-from-line.js");
var _arrowDownFromLineJsDefault = parcelHelpers.interopDefault(_arrowDownFromLineJs);
var _arrowDownLeftJs = require("./icons/arrow-down-left.js");
var _arrowDownLeftJsDefault = parcelHelpers.interopDefault(_arrowDownLeftJs);
var _arrowDownNarrowWideJs = require("./icons/arrow-down-narrow-wide.js");
var _arrowDownNarrowWideJsDefault = parcelHelpers.interopDefault(_arrowDownNarrowWideJs);
var _arrowDownRightJs = require("./icons/arrow-down-right.js");
var _arrowDownRightJsDefault = parcelHelpers.interopDefault(_arrowDownRightJs);
var _arrowDownToDotJs = require("./icons/arrow-down-to-dot.js");
var _arrowDownToDotJsDefault = parcelHelpers.interopDefault(_arrowDownToDotJs);
var _arrowDownUpJs = require("./icons/arrow-down-up.js");
var _arrowDownUpJsDefault = parcelHelpers.interopDefault(_arrowDownUpJs);
var _arrowDownToLineJs = require("./icons/arrow-down-to-line.js");
var _arrowDownToLineJsDefault = parcelHelpers.interopDefault(_arrowDownToLineJs);
var _arrowDownJs = require("./icons/arrow-down.js");
var _arrowDownJsDefault = parcelHelpers.interopDefault(_arrowDownJs);
var _arrowLeftFromLineJs = require("./icons/arrow-left-from-line.js");
var _arrowLeftFromLineJsDefault = parcelHelpers.interopDefault(_arrowLeftFromLineJs);
var _arrowLeftToLineJs = require("./icons/arrow-left-to-line.js");
var _arrowLeftToLineJsDefault = parcelHelpers.interopDefault(_arrowLeftToLineJs);
var _arrowLeftJs = require("./icons/arrow-left.js");
var _arrowLeftJsDefault = parcelHelpers.interopDefault(_arrowLeftJs);
var _arrowLeftRightJs = require("./icons/arrow-left-right.js");
var _arrowLeftRightJsDefault = parcelHelpers.interopDefault(_arrowLeftRightJs);
var _arrowRightFromLineJs = require("./icons/arrow-right-from-line.js");
var _arrowRightFromLineJsDefault = parcelHelpers.interopDefault(_arrowRightFromLineJs);
var _arrowRightLeftJs = require("./icons/arrow-right-left.js");
var _arrowRightLeftJsDefault = parcelHelpers.interopDefault(_arrowRightLeftJs);
var _arrowRightToLineJs = require("./icons/arrow-right-to-line.js");
var _arrowRightToLineJsDefault = parcelHelpers.interopDefault(_arrowRightToLineJs);
var _arrowRightJs = require("./icons/arrow-right.js");
var _arrowRightJsDefault = parcelHelpers.interopDefault(_arrowRightJs);
var _arrowUpDownJs = require("./icons/arrow-up-down.js");
var _arrowUpDownJsDefault = parcelHelpers.interopDefault(_arrowUpDownJs);
var _arrowUpFromDotJs = require("./icons/arrow-up-from-dot.js");
var _arrowUpFromDotJsDefault = parcelHelpers.interopDefault(_arrowUpFromDotJs);
var _arrowUpFromLineJs = require("./icons/arrow-up-from-line.js");
var _arrowUpFromLineJsDefault = parcelHelpers.interopDefault(_arrowUpFromLineJs);
var _arrowUpLeftJs = require("./icons/arrow-up-left.js");
var _arrowUpLeftJsDefault = parcelHelpers.interopDefault(_arrowUpLeftJs);
var _arrowUpRightJs = require("./icons/arrow-up-right.js");
var _arrowUpRightJsDefault = parcelHelpers.interopDefault(_arrowUpRightJs);
var _arrowUpToLineJs = require("./icons/arrow-up-to-line.js");
var _arrowUpToLineJsDefault = parcelHelpers.interopDefault(_arrowUpToLineJs);
var _arrowUpWideNarrowJs = require("./icons/arrow-up-wide-narrow.js");
var _arrowUpWideNarrowJsDefault = parcelHelpers.interopDefault(_arrowUpWideNarrowJs);
var _arrowsUpFromLineJs = require("./icons/arrows-up-from-line.js");
var _arrowsUpFromLineJsDefault = parcelHelpers.interopDefault(_arrowsUpFromLineJs);
var _arrowUpJs = require("./icons/arrow-up.js");
var _arrowUpJsDefault = parcelHelpers.interopDefault(_arrowUpJs);
var _asteriskJs = require("./icons/asterisk.js");
var _asteriskJsDefault = parcelHelpers.interopDefault(_asteriskJs);
var _atSignJs = require("./icons/at-sign.js");
var _atSignJsDefault = parcelHelpers.interopDefault(_atSignJs);
var _atomJs = require("./icons/atom.js");
var _atomJsDefault = parcelHelpers.interopDefault(_atomJs);
var _audioLinesJs = require("./icons/audio-lines.js");
var _audioLinesJsDefault = parcelHelpers.interopDefault(_audioLinesJs);
var _audioWaveformJs = require("./icons/audio-waveform.js");
var _audioWaveformJsDefault = parcelHelpers.interopDefault(_audioWaveformJs);
var _awardJs = require("./icons/award.js");
var _awardJsDefault = parcelHelpers.interopDefault(_awardJs);
var _axeJs = require("./icons/axe.js");
var _axeJsDefault = parcelHelpers.interopDefault(_axeJs);
var _babyJs = require("./icons/baby.js");
var _babyJsDefault = parcelHelpers.interopDefault(_babyJs);
var _backpackJs = require("./icons/backpack.js");
var _backpackJsDefault = parcelHelpers.interopDefault(_backpackJs);
var _badgeAlertJs = require("./icons/badge-alert.js");
var _badgeAlertJsDefault = parcelHelpers.interopDefault(_badgeAlertJs);
var _badgeCentJs = require("./icons/badge-cent.js");
var _badgeCentJsDefault = parcelHelpers.interopDefault(_badgeCentJs);
var _badgeDollarSignJs = require("./icons/badge-dollar-sign.js");
var _badgeDollarSignJsDefault = parcelHelpers.interopDefault(_badgeDollarSignJs);
var _badgeEuroJs = require("./icons/badge-euro.js");
var _badgeEuroJsDefault = parcelHelpers.interopDefault(_badgeEuroJs);
var _badgeHelpJs = require("./icons/badge-help.js");
var _badgeHelpJsDefault = parcelHelpers.interopDefault(_badgeHelpJs);
var _badgeIndianRupeeJs = require("./icons/badge-indian-rupee.js");
var _badgeIndianRupeeJsDefault = parcelHelpers.interopDefault(_badgeIndianRupeeJs);
var _badgeInfoJs = require("./icons/badge-info.js");
var _badgeInfoJsDefault = parcelHelpers.interopDefault(_badgeInfoJs);
var _badgeJapaneseYenJs = require("./icons/badge-japanese-yen.js");
var _badgeJapaneseYenJsDefault = parcelHelpers.interopDefault(_badgeJapaneseYenJs);
var _badgeMinusJs = require("./icons/badge-minus.js");
var _badgeMinusJsDefault = parcelHelpers.interopDefault(_badgeMinusJs);
var _badgePercentJs = require("./icons/badge-percent.js");
var _badgePercentJsDefault = parcelHelpers.interopDefault(_badgePercentJs);
var _badgePlusJs = require("./icons/badge-plus.js");
var _badgePlusJsDefault = parcelHelpers.interopDefault(_badgePlusJs);
var _badgeRussianRubleJs = require("./icons/badge-russian-ruble.js");
var _badgeRussianRubleJsDefault = parcelHelpers.interopDefault(_badgeRussianRubleJs);
var _badgePoundSterlingJs = require("./icons/badge-pound-sterling.js");
var _badgePoundSterlingJsDefault = parcelHelpers.interopDefault(_badgePoundSterlingJs);
var _badgeSwissFrancJs = require("./icons/badge-swiss-franc.js");
var _badgeSwissFrancJsDefault = parcelHelpers.interopDefault(_badgeSwissFrancJs);
var _badgeJs = require("./icons/badge.js");
var _badgeJsDefault = parcelHelpers.interopDefault(_badgeJs);
var _badgeXJs = require("./icons/badge-x.js");
var _badgeXJsDefault = parcelHelpers.interopDefault(_badgeXJs);
var _baggageClaimJs = require("./icons/baggage-claim.js");
var _baggageClaimJsDefault = parcelHelpers.interopDefault(_baggageClaimJs);
var _banJs = require("./icons/ban.js");
var _banJsDefault = parcelHelpers.interopDefault(_banJs);
var _bananaJs = require("./icons/banana.js");
var _bananaJsDefault = parcelHelpers.interopDefault(_bananaJs);
var _bandageJs = require("./icons/bandage.js");
var _bandageJsDefault = parcelHelpers.interopDefault(_bandageJs);
var _banknoteArrowDownJs = require("./icons/banknote-arrow-down.js");
var _banknoteArrowDownJsDefault = parcelHelpers.interopDefault(_banknoteArrowDownJs);
var _banknoteArrowUpJs = require("./icons/banknote-arrow-up.js");
var _banknoteArrowUpJsDefault = parcelHelpers.interopDefault(_banknoteArrowUpJs);
var _banknoteXJs = require("./icons/banknote-x.js");
var _banknoteXJsDefault = parcelHelpers.interopDefault(_banknoteXJs);
var _banknoteJs = require("./icons/banknote.js");
var _banknoteJsDefault = parcelHelpers.interopDefault(_banknoteJs);
var _barcodeJs = require("./icons/barcode.js");
var _barcodeJsDefault = parcelHelpers.interopDefault(_barcodeJs);
var _baselineJs = require("./icons/baseline.js");
var _baselineJsDefault = parcelHelpers.interopDefault(_baselineJs);
var _bathJs = require("./icons/bath.js");
var _bathJsDefault = parcelHelpers.interopDefault(_bathJs);
var _batteryChargingJs = require("./icons/battery-charging.js");
var _batteryChargingJsDefault = parcelHelpers.interopDefault(_batteryChargingJs);
var _batteryFullJs = require("./icons/battery-full.js");
var _batteryFullJsDefault = parcelHelpers.interopDefault(_batteryFullJs);
var _batteryLowJs = require("./icons/battery-low.js");
var _batteryLowJsDefault = parcelHelpers.interopDefault(_batteryLowJs);
var _batteryPlusJs = require("./icons/battery-plus.js");
var _batteryPlusJsDefault = parcelHelpers.interopDefault(_batteryPlusJs);
var _batteryMediumJs = require("./icons/battery-medium.js");
var _batteryMediumJsDefault = parcelHelpers.interopDefault(_batteryMediumJs);
var _batteryJs = require("./icons/battery.js");
var _batteryJsDefault = parcelHelpers.interopDefault(_batteryJs);
var _batteryWarningJs = require("./icons/battery-warning.js");
var _batteryWarningJsDefault = parcelHelpers.interopDefault(_batteryWarningJs);
var _beakerJs = require("./icons/beaker.js");
var _beakerJsDefault = parcelHelpers.interopDefault(_beakerJs);
var _beanJs = require("./icons/bean.js");
var _beanJsDefault = parcelHelpers.interopDefault(_beanJs);
var _bedDoubleJs = require("./icons/bed-double.js");
var _bedDoubleJsDefault = parcelHelpers.interopDefault(_bedDoubleJs);
var _beanOffJs = require("./icons/bean-off.js");
var _beanOffJsDefault = parcelHelpers.interopDefault(_beanOffJs);
var _bedSingleJs = require("./icons/bed-single.js");
var _bedSingleJsDefault = parcelHelpers.interopDefault(_bedSingleJs);
var _bedJs = require("./icons/bed.js");
var _bedJsDefault = parcelHelpers.interopDefault(_bedJs);
var _beefJs = require("./icons/beef.js");
var _beefJsDefault = parcelHelpers.interopDefault(_beefJs);
var _beerOffJs = require("./icons/beer-off.js");
var _beerOffJsDefault = parcelHelpers.interopDefault(_beerOffJs);
var _beerJs = require("./icons/beer.js");
var _beerJsDefault = parcelHelpers.interopDefault(_beerJs);
var _bellDotJs = require("./icons/bell-dot.js");
var _bellDotJsDefault = parcelHelpers.interopDefault(_bellDotJs);
var _bellElectricJs = require("./icons/bell-electric.js");
var _bellElectricJsDefault = parcelHelpers.interopDefault(_bellElectricJs);
var _bellMinusJs = require("./icons/bell-minus.js");
var _bellMinusJsDefault = parcelHelpers.interopDefault(_bellMinusJs);
var _bellOffJs = require("./icons/bell-off.js");
var _bellOffJsDefault = parcelHelpers.interopDefault(_bellOffJs);
var _bellPlusJs = require("./icons/bell-plus.js");
var _bellPlusJsDefault = parcelHelpers.interopDefault(_bellPlusJs);
var _bellRingJs = require("./icons/bell-ring.js");
var _bellRingJsDefault = parcelHelpers.interopDefault(_bellRingJs);
var _bellJs = require("./icons/bell.js");
var _bellJsDefault = parcelHelpers.interopDefault(_bellJs);
var _betweenVerticalEndJs = require("./icons/between-vertical-end.js");
var _betweenVerticalEndJsDefault = parcelHelpers.interopDefault(_betweenVerticalEndJs);
var _betweenVerticalStartJs = require("./icons/between-vertical-start.js");
var _betweenVerticalStartJsDefault = parcelHelpers.interopDefault(_betweenVerticalStartJs);
var _bicepsFlexedJs = require("./icons/biceps-flexed.js");
var _bicepsFlexedJsDefault = parcelHelpers.interopDefault(_bicepsFlexedJs);
var _bikeJs = require("./icons/bike.js");
var _bikeJsDefault = parcelHelpers.interopDefault(_bikeJs);
var _binaryJs = require("./icons/binary.js");
var _binaryJsDefault = parcelHelpers.interopDefault(_binaryJs);
var _binocularsJs = require("./icons/binoculars.js");
var _binocularsJsDefault = parcelHelpers.interopDefault(_binocularsJs);
var _biohazardJs = require("./icons/biohazard.js");
var _biohazardJsDefault = parcelHelpers.interopDefault(_biohazardJs);
var _birdJs = require("./icons/bird.js");
var _birdJsDefault = parcelHelpers.interopDefault(_birdJs);
var _bitcoinJs = require("./icons/bitcoin.js");
var _bitcoinJsDefault = parcelHelpers.interopDefault(_bitcoinJs);
var _blendJs = require("./icons/blend.js");
var _blendJsDefault = parcelHelpers.interopDefault(_blendJs);
var _blindsJs = require("./icons/blinds.js");
var _blindsJsDefault = parcelHelpers.interopDefault(_blindsJs);
var _blocksJs = require("./icons/blocks.js");
var _blocksJsDefault = parcelHelpers.interopDefault(_blocksJs);
var _bluetoothConnectedJs = require("./icons/bluetooth-connected.js");
var _bluetoothConnectedJsDefault = parcelHelpers.interopDefault(_bluetoothConnectedJs);
var _bluetoothOffJs = require("./icons/bluetooth-off.js");
var _bluetoothOffJsDefault = parcelHelpers.interopDefault(_bluetoothOffJs);
var _bluetoothSearchingJs = require("./icons/bluetooth-searching.js");
var _bluetoothSearchingJsDefault = parcelHelpers.interopDefault(_bluetoothSearchingJs);
var _bluetoothJs = require("./icons/bluetooth.js");
var _bluetoothJsDefault = parcelHelpers.interopDefault(_bluetoothJs);
var _boldJs = require("./icons/bold.js");
var _boldJsDefault = parcelHelpers.interopDefault(_boldJs);
var _boltJs = require("./icons/bolt.js");
var _boltJsDefault = parcelHelpers.interopDefault(_boltJs);
var _bombJs = require("./icons/bomb.js");
var _bombJsDefault = parcelHelpers.interopDefault(_bombJs);
var _boneJs = require("./icons/bone.js");
var _boneJsDefault = parcelHelpers.interopDefault(_boneJs);
var _bookAJs = require("./icons/book-a.js");
var _bookAJsDefault = parcelHelpers.interopDefault(_bookAJs);
var _bookAudioJs = require("./icons/book-audio.js");
var _bookAudioJsDefault = parcelHelpers.interopDefault(_bookAudioJs);
var _bookCopyJs = require("./icons/book-copy.js");
var _bookCopyJsDefault = parcelHelpers.interopDefault(_bookCopyJs);
var _bookCheckJs = require("./icons/book-check.js");
var _bookCheckJsDefault = parcelHelpers.interopDefault(_bookCheckJs);
var _bookDownJs = require("./icons/book-down.js");
var _bookDownJsDefault = parcelHelpers.interopDefault(_bookDownJs);
var _bookHeadphonesJs = require("./icons/book-headphones.js");
var _bookHeadphonesJsDefault = parcelHelpers.interopDefault(_bookHeadphonesJs);
var _bookHeartJs = require("./icons/book-heart.js");
var _bookHeartJsDefault = parcelHelpers.interopDefault(_bookHeartJs);
var _bookImageJs = require("./icons/book-image.js");
var _bookImageJsDefault = parcelHelpers.interopDefault(_bookImageJs);
var _bookKeyJs = require("./icons/book-key.js");
var _bookKeyJsDefault = parcelHelpers.interopDefault(_bookKeyJs);
var _bookLockJs = require("./icons/book-lock.js");
var _bookLockJsDefault = parcelHelpers.interopDefault(_bookLockJs);
var _bookMarkedJs = require("./icons/book-marked.js");
var _bookMarkedJsDefault = parcelHelpers.interopDefault(_bookMarkedJs);
var _bookMinusJs = require("./icons/book-minus.js");
var _bookMinusJsDefault = parcelHelpers.interopDefault(_bookMinusJs);
var _bookOpenCheckJs = require("./icons/book-open-check.js");
var _bookOpenCheckJsDefault = parcelHelpers.interopDefault(_bookOpenCheckJs);
var _bookOpenJs = require("./icons/book-open.js");
var _bookOpenJsDefault = parcelHelpers.interopDefault(_bookOpenJs);
var _bookOpenTextJs = require("./icons/book-open-text.js");
var _bookOpenTextJsDefault = parcelHelpers.interopDefault(_bookOpenTextJs);
var _bookPlusJs = require("./icons/book-plus.js");
var _bookPlusJsDefault = parcelHelpers.interopDefault(_bookPlusJs);
var _bookTextJs = require("./icons/book-text.js");
var _bookTextJsDefault = parcelHelpers.interopDefault(_bookTextJs);
var _bookTypeJs = require("./icons/book-type.js");
var _bookTypeJsDefault = parcelHelpers.interopDefault(_bookTypeJs);
var _bookUp2Js = require("./icons/book-up-2.js");
var _bookUp2JsDefault = parcelHelpers.interopDefault(_bookUp2Js);
var _bookUpJs = require("./icons/book-up.js");
var _bookUpJsDefault = parcelHelpers.interopDefault(_bookUpJs);
var _bookUserJs = require("./icons/book-user.js");
var _bookUserJsDefault = parcelHelpers.interopDefault(_bookUserJs);
var _bookXJs = require("./icons/book-x.js");
var _bookXJsDefault = parcelHelpers.interopDefault(_bookXJs);
var _bookJs = require("./icons/book.js");
var _bookJsDefault = parcelHelpers.interopDefault(_bookJs);
var _bookmarkCheckJs = require("./icons/bookmark-check.js");
var _bookmarkCheckJsDefault = parcelHelpers.interopDefault(_bookmarkCheckJs);
var _bookmarkMinusJs = require("./icons/bookmark-minus.js");
var _bookmarkMinusJsDefault = parcelHelpers.interopDefault(_bookmarkMinusJs);
var _bookmarkPlusJs = require("./icons/bookmark-plus.js");
var _bookmarkPlusJsDefault = parcelHelpers.interopDefault(_bookmarkPlusJs);
var _bookmarkXJs = require("./icons/bookmark-x.js");
var _bookmarkXJsDefault = parcelHelpers.interopDefault(_bookmarkXJs);
var _bookmarkJs = require("./icons/bookmark.js");
var _bookmarkJsDefault = parcelHelpers.interopDefault(_bookmarkJs);
var _boomBoxJs = require("./icons/boom-box.js");
var _boomBoxJsDefault = parcelHelpers.interopDefault(_boomBoxJs);
var _botMessageSquareJs = require("./icons/bot-message-square.js");
var _botMessageSquareJsDefault = parcelHelpers.interopDefault(_botMessageSquareJs);
var _botOffJs = require("./icons/bot-off.js");
var _botOffJsDefault = parcelHelpers.interopDefault(_botOffJs);
var _botJs = require("./icons/bot.js");
var _botJsDefault = parcelHelpers.interopDefault(_botJs);
var _bowArrowJs = require("./icons/bow-arrow.js");
var _bowArrowJsDefault = parcelHelpers.interopDefault(_bowArrowJs);
var _boxJs = require("./icons/box.js");
var _boxJsDefault = parcelHelpers.interopDefault(_boxJs);
var _boxesJs = require("./icons/boxes.js");
var _boxesJsDefault = parcelHelpers.interopDefault(_boxesJs);
var _bracketsJs = require("./icons/brackets.js");
var _bracketsJsDefault = parcelHelpers.interopDefault(_bracketsJs);
var _brainCircuitJs = require("./icons/brain-circuit.js");
var _brainCircuitJsDefault = parcelHelpers.interopDefault(_brainCircuitJs);
var _brainCogJs = require("./icons/brain-cog.js");
var _brainCogJsDefault = parcelHelpers.interopDefault(_brainCogJs);
var _brainJs = require("./icons/brain.js");
var _brainJsDefault = parcelHelpers.interopDefault(_brainJs);
var _brickWallFireJs = require("./icons/brick-wall-fire.js");
var _brickWallFireJsDefault = parcelHelpers.interopDefault(_brickWallFireJs);
var _brickWallJs = require("./icons/brick-wall.js");
var _brickWallJsDefault = parcelHelpers.interopDefault(_brickWallJs);
var _briefcaseBusinessJs = require("./icons/briefcase-business.js");
var _briefcaseBusinessJsDefault = parcelHelpers.interopDefault(_briefcaseBusinessJs);
var _briefcaseConveyorBeltJs = require("./icons/briefcase-conveyor-belt.js");
var _briefcaseConveyorBeltJsDefault = parcelHelpers.interopDefault(_briefcaseConveyorBeltJs);
var _briefcaseMedicalJs = require("./icons/briefcase-medical.js");
var _briefcaseMedicalJsDefault = parcelHelpers.interopDefault(_briefcaseMedicalJs);
var _briefcaseJs = require("./icons/briefcase.js");
var _briefcaseJsDefault = parcelHelpers.interopDefault(_briefcaseJs);
var _bringToFrontJs = require("./icons/bring-to-front.js");
var _bringToFrontJsDefault = parcelHelpers.interopDefault(_bringToFrontJs);
var _brushCleaningJs = require("./icons/brush-cleaning.js");
var _brushCleaningJsDefault = parcelHelpers.interopDefault(_brushCleaningJs);
var _brushJs = require("./icons/brush.js");
var _brushJsDefault = parcelHelpers.interopDefault(_brushJs);
var _bubblesJs = require("./icons/bubbles.js");
var _bubblesJsDefault = parcelHelpers.interopDefault(_bubblesJs);
var _bugOffJs = require("./icons/bug-off.js");
var _bugOffJsDefault = parcelHelpers.interopDefault(_bugOffJs);
var _bugPlayJs = require("./icons/bug-play.js");
var _bugPlayJsDefault = parcelHelpers.interopDefault(_bugPlayJs);
var _bugJs = require("./icons/bug.js");
var _bugJsDefault = parcelHelpers.interopDefault(_bugJs);
var _building2Js = require("./icons/building-2.js");
var _building2JsDefault = parcelHelpers.interopDefault(_building2Js);
var _buildingJs = require("./icons/building.js");
var _buildingJsDefault = parcelHelpers.interopDefault(_buildingJs);
var _busJs = require("./icons/bus.js");
var _busJsDefault = parcelHelpers.interopDefault(_busJs);
var _busFrontJs = require("./icons/bus-front.js");
var _busFrontJsDefault = parcelHelpers.interopDefault(_busFrontJs);
var _cableCarJs = require("./icons/cable-car.js");
var _cableCarJsDefault = parcelHelpers.interopDefault(_cableCarJs);
var _cableJs = require("./icons/cable.js");
var _cableJsDefault = parcelHelpers.interopDefault(_cableJs);
var _cakeSliceJs = require("./icons/cake-slice.js");
var _cakeSliceJsDefault = parcelHelpers.interopDefault(_cakeSliceJs);
var _cakeJs = require("./icons/cake.js");
var _cakeJsDefault = parcelHelpers.interopDefault(_cakeJs);
var _calculatorJs = require("./icons/calculator.js");
var _calculatorJsDefault = parcelHelpers.interopDefault(_calculatorJs);
var _calendar1Js = require("./icons/calendar-1.js");
var _calendar1JsDefault = parcelHelpers.interopDefault(_calendar1Js);
var _calendarArrowUpJs = require("./icons/calendar-arrow-up.js");
var _calendarArrowUpJsDefault = parcelHelpers.interopDefault(_calendarArrowUpJs);
var _calendarArrowDownJs = require("./icons/calendar-arrow-down.js");
var _calendarArrowDownJsDefault = parcelHelpers.interopDefault(_calendarArrowDownJs);
var _calendarCheck2Js = require("./icons/calendar-check-2.js");
var _calendarCheck2JsDefault = parcelHelpers.interopDefault(_calendarCheck2Js);
var _calendarCheckJs = require("./icons/calendar-check.js");
var _calendarCheckJsDefault = parcelHelpers.interopDefault(_calendarCheckJs);
var _calendarClockJs = require("./icons/calendar-clock.js");
var _calendarClockJsDefault = parcelHelpers.interopDefault(_calendarClockJs);
var _calendarCogJs = require("./icons/calendar-cog.js");
var _calendarCogJsDefault = parcelHelpers.interopDefault(_calendarCogJs);
var _calendarDaysJs = require("./icons/calendar-days.js");
var _calendarDaysJsDefault = parcelHelpers.interopDefault(_calendarDaysJs);
var _calendarFoldJs = require("./icons/calendar-fold.js");
var _calendarFoldJsDefault = parcelHelpers.interopDefault(_calendarFoldJs);
var _calendarHeartJs = require("./icons/calendar-heart.js");
var _calendarHeartJsDefault = parcelHelpers.interopDefault(_calendarHeartJs);
var _calendarMinus2Js = require("./icons/calendar-minus-2.js");
var _calendarMinus2JsDefault = parcelHelpers.interopDefault(_calendarMinus2Js);
var _calendarMinusJs = require("./icons/calendar-minus.js");
var _calendarMinusJsDefault = parcelHelpers.interopDefault(_calendarMinusJs);
var _calendarOffJs = require("./icons/calendar-off.js");
var _calendarOffJsDefault = parcelHelpers.interopDefault(_calendarOffJs);
var _calendarPlus2Js = require("./icons/calendar-plus-2.js");
var _calendarPlus2JsDefault = parcelHelpers.interopDefault(_calendarPlus2Js);
var _calendarPlusJs = require("./icons/calendar-plus.js");
var _calendarPlusJsDefault = parcelHelpers.interopDefault(_calendarPlusJs);
var _calendarRangeJs = require("./icons/calendar-range.js");
var _calendarRangeJsDefault = parcelHelpers.interopDefault(_calendarRangeJs);
var _calendarSearchJs = require("./icons/calendar-search.js");
var _calendarSearchJsDefault = parcelHelpers.interopDefault(_calendarSearchJs);
var _calendarX2Js = require("./icons/calendar-x-2.js");
var _calendarX2JsDefault = parcelHelpers.interopDefault(_calendarX2Js);
var _calendarSyncJs = require("./icons/calendar-sync.js");
var _calendarSyncJsDefault = parcelHelpers.interopDefault(_calendarSyncJs);
var _calendarXJs = require("./icons/calendar-x.js");
var _calendarXJsDefault = parcelHelpers.interopDefault(_calendarXJs);
var _calendarJs = require("./icons/calendar.js");
var _calendarJsDefault = parcelHelpers.interopDefault(_calendarJs);
var _cameraOffJs = require("./icons/camera-off.js");
var _cameraOffJsDefault = parcelHelpers.interopDefault(_cameraOffJs);
var _cameraJs = require("./icons/camera.js");
var _cameraJsDefault = parcelHelpers.interopDefault(_cameraJs);
var _candyCaneJs = require("./icons/candy-cane.js");
var _candyCaneJsDefault = parcelHelpers.interopDefault(_candyCaneJs);
var _candyOffJs = require("./icons/candy-off.js");
var _candyOffJsDefault = parcelHelpers.interopDefault(_candyOffJs);
var _candyJs = require("./icons/candy.js");
var _candyJsDefault = parcelHelpers.interopDefault(_candyJs);
var _cannabisJs = require("./icons/cannabis.js");
var _cannabisJsDefault = parcelHelpers.interopDefault(_cannabisJs);
var _captionsOffJs = require("./icons/captions-off.js");
var _captionsOffJsDefault = parcelHelpers.interopDefault(_captionsOffJs);
var _carFrontJs = require("./icons/car-front.js");
var _carFrontJsDefault = parcelHelpers.interopDefault(_carFrontJs);
var _carTaxiFrontJs = require("./icons/car-taxi-front.js");
var _carTaxiFrontJsDefault = parcelHelpers.interopDefault(_carTaxiFrontJs);
var _carJs = require("./icons/car.js");
var _carJsDefault = parcelHelpers.interopDefault(_carJs);
var _caravanJs = require("./icons/caravan.js");
var _caravanJsDefault = parcelHelpers.interopDefault(_caravanJs);
var _cardSimJs = require("./icons/card-sim.js");
var _cardSimJsDefault = parcelHelpers.interopDefault(_cardSimJs);
var _carrotJs = require("./icons/carrot.js");
var _carrotJsDefault = parcelHelpers.interopDefault(_carrotJs);
var _caseLowerJs = require("./icons/case-lower.js");
var _caseLowerJsDefault = parcelHelpers.interopDefault(_caseLowerJs);
var _caseSensitiveJs = require("./icons/case-sensitive.js");
var _caseSensitiveJsDefault = parcelHelpers.interopDefault(_caseSensitiveJs);
var _caseUpperJs = require("./icons/case-upper.js");
var _caseUpperJsDefault = parcelHelpers.interopDefault(_caseUpperJs);
var _cassetteTapeJs = require("./icons/cassette-tape.js");
var _cassetteTapeJsDefault = parcelHelpers.interopDefault(_cassetteTapeJs);
var _castJs = require("./icons/cast.js");
var _castJsDefault = parcelHelpers.interopDefault(_castJs);
var _castleJs = require("./icons/castle.js");
var _castleJsDefault = parcelHelpers.interopDefault(_castleJs);
var _catJs = require("./icons/cat.js");
var _catJsDefault = parcelHelpers.interopDefault(_catJs);
var _cctvJs = require("./icons/cctv.js");
var _cctvJsDefault = parcelHelpers.interopDefault(_cctvJs);
var _chartBarDecreasingJs = require("./icons/chart-bar-decreasing.js");
var _chartBarDecreasingJsDefault = parcelHelpers.interopDefault(_chartBarDecreasingJs);
var _chartBarIncreasingJs = require("./icons/chart-bar-increasing.js");
var _chartBarIncreasingJsDefault = parcelHelpers.interopDefault(_chartBarIncreasingJs);
var _chartBarStackedJs = require("./icons/chart-bar-stacked.js");
var _chartBarStackedJsDefault = parcelHelpers.interopDefault(_chartBarStackedJs);
var _chartColumnDecreasingJs = require("./icons/chart-column-decreasing.js");
var _chartColumnDecreasingJsDefault = parcelHelpers.interopDefault(_chartColumnDecreasingJs);
var _chartColumnStackedJs = require("./icons/chart-column-stacked.js");
var _chartColumnStackedJsDefault = parcelHelpers.interopDefault(_chartColumnStackedJs);
var _chartGanttJs = require("./icons/chart-gantt.js");
var _chartGanttJsDefault = parcelHelpers.interopDefault(_chartGanttJs);
var _chartNetworkJs = require("./icons/chart-network.js");
var _chartNetworkJsDefault = parcelHelpers.interopDefault(_chartNetworkJs);
var _chartNoAxesColumnDecreasingJs = require("./icons/chart-no-axes-column-decreasing.js");
var _chartNoAxesColumnDecreasingJsDefault = parcelHelpers.interopDefault(_chartNoAxesColumnDecreasingJs);
var _chartNoAxesCombinedJs = require("./icons/chart-no-axes-combined.js");
var _chartNoAxesCombinedJsDefault = parcelHelpers.interopDefault(_chartNoAxesCombinedJs);
var _chartSplineJs = require("./icons/chart-spline.js");
var _chartSplineJsDefault = parcelHelpers.interopDefault(_chartSplineJs);
var _checkCheckJs = require("./icons/check-check.js");
var _checkCheckJsDefault = parcelHelpers.interopDefault(_checkCheckJs);
var _checkJs = require("./icons/check.js");
var _checkJsDefault = parcelHelpers.interopDefault(_checkJs);
var _checkLineJs = require("./icons/check-line.js");
var _checkLineJsDefault = parcelHelpers.interopDefault(_checkLineJs);
var _chefHatJs = require("./icons/chef-hat.js");
var _chefHatJsDefault = parcelHelpers.interopDefault(_chefHatJs);
var _cherryJs = require("./icons/cherry.js");
var _cherryJsDefault = parcelHelpers.interopDefault(_cherryJs);
var _chevronDownJs = require("./icons/chevron-down.js");
var _chevronDownJsDefault = parcelHelpers.interopDefault(_chevronDownJs);
var _chevronFirstJs = require("./icons/chevron-first.js");
var _chevronFirstJsDefault = parcelHelpers.interopDefault(_chevronFirstJs);
var _chevronLastJs = require("./icons/chevron-last.js");
var _chevronLastJsDefault = parcelHelpers.interopDefault(_chevronLastJs);
var _chevronLeftJs = require("./icons/chevron-left.js");
var _chevronLeftJsDefault = parcelHelpers.interopDefault(_chevronLeftJs);
var _chevronRightJs = require("./icons/chevron-right.js");
var _chevronRightJsDefault = parcelHelpers.interopDefault(_chevronRightJs);
var _chevronUpJs = require("./icons/chevron-up.js");
var _chevronUpJsDefault = parcelHelpers.interopDefault(_chevronUpJs);
var _chevronsDownUpJs = require("./icons/chevrons-down-up.js");
var _chevronsDownUpJsDefault = parcelHelpers.interopDefault(_chevronsDownUpJs);
var _chevronsDownJs = require("./icons/chevrons-down.js");
var _chevronsDownJsDefault = parcelHelpers.interopDefault(_chevronsDownJs);
var _chevronsLeftRightEllipsisJs = require("./icons/chevrons-left-right-ellipsis.js");
var _chevronsLeftRightEllipsisJsDefault = parcelHelpers.interopDefault(_chevronsLeftRightEllipsisJs);
var _chevronsLeftRightJs = require("./icons/chevrons-left-right.js");
var _chevronsLeftRightJsDefault = parcelHelpers.interopDefault(_chevronsLeftRightJs);
var _chevronsLeftJs = require("./icons/chevrons-left.js");
var _chevronsLeftJsDefault = parcelHelpers.interopDefault(_chevronsLeftJs);
var _chevronsRightLeftJs = require("./icons/chevrons-right-left.js");
var _chevronsRightLeftJsDefault = parcelHelpers.interopDefault(_chevronsRightLeftJs);
var _chevronsRightJs = require("./icons/chevrons-right.js");
var _chevronsRightJsDefault = parcelHelpers.interopDefault(_chevronsRightJs);
var _chevronsUpDownJs = require("./icons/chevrons-up-down.js");
var _chevronsUpDownJsDefault = parcelHelpers.interopDefault(_chevronsUpDownJs);
var _chevronsUpJs = require("./icons/chevrons-up.js");
var _chevronsUpJsDefault = parcelHelpers.interopDefault(_chevronsUpJs);
var _chromeJs = require("./icons/chrome.js");
var _chromeJsDefault = parcelHelpers.interopDefault(_chromeJs);
var _churchJs = require("./icons/church.js");
var _churchJsDefault = parcelHelpers.interopDefault(_churchJs);
var _cigaretteOffJs = require("./icons/cigarette-off.js");
var _cigaretteOffJsDefault = parcelHelpers.interopDefault(_cigaretteOffJs);
var _cigaretteJs = require("./icons/cigarette.js");
var _cigaretteJsDefault = parcelHelpers.interopDefault(_cigaretteJs);
var _circleDashedJs = require("./icons/circle-dashed.js");
var _circleDashedJsDefault = parcelHelpers.interopDefault(_circleDashedJs);
var _circleDollarSignJs = require("./icons/circle-dollar-sign.js");
var _circleDollarSignJsDefault = parcelHelpers.interopDefault(_circleDollarSignJs);
var _circleDotDashedJs = require("./icons/circle-dot-dashed.js");
var _circleDotDashedJsDefault = parcelHelpers.interopDefault(_circleDotDashedJs);
var _circleDotJs = require("./icons/circle-dot.js");
var _circleDotJsDefault = parcelHelpers.interopDefault(_circleDotJs);
var _circleEllipsisJs = require("./icons/circle-ellipsis.js");
var _circleEllipsisJsDefault = parcelHelpers.interopDefault(_circleEllipsisJs);
var _circleEqualJs = require("./icons/circle-equal.js");
var _circleEqualJsDefault = parcelHelpers.interopDefault(_circleEqualJs);
var _circleFadingPlusJs = require("./icons/circle-fading-plus.js");
var _circleFadingPlusJsDefault = parcelHelpers.interopDefault(_circleFadingPlusJs);
var _circleFadingArrowUpJs = require("./icons/circle-fading-arrow-up.js");
var _circleFadingArrowUpJsDefault = parcelHelpers.interopDefault(_circleFadingArrowUpJs);
var _circleOffJs = require("./icons/circle-off.js");
var _circleOffJsDefault = parcelHelpers.interopDefault(_circleOffJs);
var _circlePoundSterlingJs = require("./icons/circle-pound-sterling.js");
var _circlePoundSterlingJsDefault = parcelHelpers.interopDefault(_circlePoundSterlingJs);
var _circleSlashJs = require("./icons/circle-slash.js");
var _circleSlashJsDefault = parcelHelpers.interopDefault(_circleSlashJs);
var _circleSmallJs = require("./icons/circle-small.js");
var _circleSmallJsDefault = parcelHelpers.interopDefault(_circleSmallJs);
var _circleJs = require("./icons/circle.js");
var _circleJsDefault = parcelHelpers.interopDefault(_circleJs);
var _circuitBoardJs = require("./icons/circuit-board.js");
var _circuitBoardJsDefault = parcelHelpers.interopDefault(_circuitBoardJs);
var _citrusJs = require("./icons/citrus.js");
var _citrusJsDefault = parcelHelpers.interopDefault(_citrusJs);
var _clapperboardJs = require("./icons/clapperboard.js");
var _clapperboardJsDefault = parcelHelpers.interopDefault(_clapperboardJs);
var _clipboardCheckJs = require("./icons/clipboard-check.js");
var _clipboardCheckJsDefault = parcelHelpers.interopDefault(_clipboardCheckJs);
var _clipboardCopyJs = require("./icons/clipboard-copy.js");
var _clipboardCopyJsDefault = parcelHelpers.interopDefault(_clipboardCopyJs);
var _clipboardListJs = require("./icons/clipboard-list.js");
var _clipboardListJsDefault = parcelHelpers.interopDefault(_clipboardListJs);
var _clipboardMinusJs = require("./icons/clipboard-minus.js");
var _clipboardMinusJsDefault = parcelHelpers.interopDefault(_clipboardMinusJs);
var _clipboardPasteJs = require("./icons/clipboard-paste.js");
var _clipboardPasteJsDefault = parcelHelpers.interopDefault(_clipboardPasteJs);
var _clipboardPlusJs = require("./icons/clipboard-plus.js");
var _clipboardPlusJsDefault = parcelHelpers.interopDefault(_clipboardPlusJs);
var _clipboardTypeJs = require("./icons/clipboard-type.js");
var _clipboardTypeJsDefault = parcelHelpers.interopDefault(_clipboardTypeJs);
var _clipboardXJs = require("./icons/clipboard-x.js");
var _clipboardXJsDefault = parcelHelpers.interopDefault(_clipboardXJs);
var _clipboardJs = require("./icons/clipboard.js");
var _clipboardJsDefault = parcelHelpers.interopDefault(_clipboardJs);
var _clock1Js = require("./icons/clock-1.js");
var _clock1JsDefault = parcelHelpers.interopDefault(_clock1Js);
var _clock10Js = require("./icons/clock-10.js");
var _clock10JsDefault = parcelHelpers.interopDefault(_clock10Js);
var _clock11Js = require("./icons/clock-11.js");
var _clock11JsDefault = parcelHelpers.interopDefault(_clock11Js);
var _clock12Js = require("./icons/clock-12.js");
var _clock12JsDefault = parcelHelpers.interopDefault(_clock12Js);
var _clock2Js = require("./icons/clock-2.js");
var _clock2JsDefault = parcelHelpers.interopDefault(_clock2Js);
var _clock4Js = require("./icons/clock-4.js");
var _clock4JsDefault = parcelHelpers.interopDefault(_clock4Js);
var _clock5Js = require("./icons/clock-5.js");
var _clock5JsDefault = parcelHelpers.interopDefault(_clock5Js);
var _clock3Js = require("./icons/clock-3.js");
var _clock3JsDefault = parcelHelpers.interopDefault(_clock3Js);
var _clock6Js = require("./icons/clock-6.js");
var _clock6JsDefault = parcelHelpers.interopDefault(_clock6Js);
var _clock7Js = require("./icons/clock-7.js");
var _clock7JsDefault = parcelHelpers.interopDefault(_clock7Js);
var _clock8Js = require("./icons/clock-8.js");
var _clock8JsDefault = parcelHelpers.interopDefault(_clock8Js);
var _clock9Js = require("./icons/clock-9.js");
var _clock9JsDefault = parcelHelpers.interopDefault(_clock9Js);
var _clockAlertJs = require("./icons/clock-alert.js");
var _clockAlertJsDefault = parcelHelpers.interopDefault(_clockAlertJs);
var _clockArrowDownJs = require("./icons/clock-arrow-down.js");
var _clockArrowDownJsDefault = parcelHelpers.interopDefault(_clockArrowDownJs);
var _clockArrowUpJs = require("./icons/clock-arrow-up.js");
var _clockArrowUpJsDefault = parcelHelpers.interopDefault(_clockArrowUpJs);
var _clockFadingJs = require("./icons/clock-fading.js");
var _clockFadingJsDefault = parcelHelpers.interopDefault(_clockFadingJs);
var _clockPlusJs = require("./icons/clock-plus.js");
var _clockPlusJsDefault = parcelHelpers.interopDefault(_clockPlusJs);
var _clockJs = require("./icons/clock.js");
var _clockJsDefault = parcelHelpers.interopDefault(_clockJs);
var _cloudCheckJs = require("./icons/cloud-check.js");
var _cloudCheckJsDefault = parcelHelpers.interopDefault(_cloudCheckJs);
var _cloudAlertJs = require("./icons/cloud-alert.js");
var _cloudAlertJsDefault = parcelHelpers.interopDefault(_cloudAlertJs);
var _cloudCogJs = require("./icons/cloud-cog.js");
var _cloudCogJsDefault = parcelHelpers.interopDefault(_cloudCogJs);
var _cloudDrizzleJs = require("./icons/cloud-drizzle.js");
var _cloudDrizzleJsDefault = parcelHelpers.interopDefault(_cloudDrizzleJs);
var _cloudFogJs = require("./icons/cloud-fog.js");
var _cloudFogJsDefault = parcelHelpers.interopDefault(_cloudFogJs);
var _cloudHailJs = require("./icons/cloud-hail.js");
var _cloudHailJsDefault = parcelHelpers.interopDefault(_cloudHailJs);
var _cloudLightningJs = require("./icons/cloud-lightning.js");
var _cloudLightningJsDefault = parcelHelpers.interopDefault(_cloudLightningJs);
var _cloudMoonRainJs = require("./icons/cloud-moon-rain.js");
var _cloudMoonRainJsDefault = parcelHelpers.interopDefault(_cloudMoonRainJs);
var _cloudOffJs = require("./icons/cloud-off.js");
var _cloudOffJsDefault = parcelHelpers.interopDefault(_cloudOffJs);
var _cloudMoonJs = require("./icons/cloud-moon.js");
var _cloudMoonJsDefault = parcelHelpers.interopDefault(_cloudMoonJs);
var _cloudRainWindJs = require("./icons/cloud-rain-wind.js");
var _cloudRainWindJsDefault = parcelHelpers.interopDefault(_cloudRainWindJs);
var _cloudRainJs = require("./icons/cloud-rain.js");
var _cloudRainJsDefault = parcelHelpers.interopDefault(_cloudRainJs);
var _cloudSnowJs = require("./icons/cloud-snow.js");
var _cloudSnowJsDefault = parcelHelpers.interopDefault(_cloudSnowJs);
var _cloudSunRainJs = require("./icons/cloud-sun-rain.js");
var _cloudSunRainJsDefault = parcelHelpers.interopDefault(_cloudSunRainJs);
var _cloudSunJs = require("./icons/cloud-sun.js");
var _cloudSunJsDefault = parcelHelpers.interopDefault(_cloudSunJs);
var _cloudJs = require("./icons/cloud.js");
var _cloudJsDefault = parcelHelpers.interopDefault(_cloudJs);
var _cloudyJs = require("./icons/cloudy.js");
var _cloudyJsDefault = parcelHelpers.interopDefault(_cloudyJs);
var _clubJs = require("./icons/club.js");
var _clubJsDefault = parcelHelpers.interopDefault(_clubJs);
var _cloverJs = require("./icons/clover.js");
var _cloverJsDefault = parcelHelpers.interopDefault(_cloverJs);
var _codeJs = require("./icons/code.js");
var _codeJsDefault = parcelHelpers.interopDefault(_codeJs);
var _codepenJs = require("./icons/codepen.js");
var _codepenJsDefault = parcelHelpers.interopDefault(_codepenJs);
var _coffeeJs = require("./icons/coffee.js");
var _coffeeJsDefault = parcelHelpers.interopDefault(_coffeeJs);
var _codesandboxJs = require("./icons/codesandbox.js");
var _codesandboxJsDefault = parcelHelpers.interopDefault(_codesandboxJs);
var _cogJs = require("./icons/cog.js");
var _cogJsDefault = parcelHelpers.interopDefault(_cogJs);
var _coinsJs = require("./icons/coins.js");
var _coinsJsDefault = parcelHelpers.interopDefault(_coinsJs);
var _columns4Js = require("./icons/columns-4.js");
var _columns4JsDefault = parcelHelpers.interopDefault(_columns4Js);
var _combineJs = require("./icons/combine.js");
var _combineJsDefault = parcelHelpers.interopDefault(_combineJs);
var _commandJs = require("./icons/command.js");
var _commandJsDefault = parcelHelpers.interopDefault(_commandJs);
var _compassJs = require("./icons/compass.js");
var _compassJsDefault = parcelHelpers.interopDefault(_compassJs);
var _componentJs = require("./icons/component.js");
var _componentJsDefault = parcelHelpers.interopDefault(_componentJs);
var _computerJs = require("./icons/computer.js");
var _computerJsDefault = parcelHelpers.interopDefault(_computerJs);
var _conciergeBellJs = require("./icons/concierge-bell.js");
var _conciergeBellJsDefault = parcelHelpers.interopDefault(_conciergeBellJs);
var _constructionJs = require("./icons/construction.js");
var _constructionJsDefault = parcelHelpers.interopDefault(_constructionJs);
var _coneJs = require("./icons/cone.js");
var _coneJsDefault = parcelHelpers.interopDefault(_coneJs);
var _containerJs = require("./icons/container.js");
var _containerJsDefault = parcelHelpers.interopDefault(_containerJs);
var _contrastJs = require("./icons/contrast.js");
var _contrastJsDefault = parcelHelpers.interopDefault(_contrastJs);
var _contactJs = require("./icons/contact.js");
var _contactJsDefault = parcelHelpers.interopDefault(_contactJs);
var _cookieJs = require("./icons/cookie.js");
var _cookieJsDefault = parcelHelpers.interopDefault(_cookieJs);
var _cookingPotJs = require("./icons/cooking-pot.js");
var _cookingPotJsDefault = parcelHelpers.interopDefault(_cookingPotJs);
var _copyCheckJs = require("./icons/copy-check.js");
var _copyCheckJsDefault = parcelHelpers.interopDefault(_copyCheckJs);
var _copyMinusJs = require("./icons/copy-minus.js");
var _copyMinusJsDefault = parcelHelpers.interopDefault(_copyMinusJs);
var _copyPlusJs = require("./icons/copy-plus.js");
var _copyPlusJsDefault = parcelHelpers.interopDefault(_copyPlusJs);
var _copySlashJs = require("./icons/copy-slash.js");
var _copySlashJsDefault = parcelHelpers.interopDefault(_copySlashJs);
var _copyXJs = require("./icons/copy-x.js");
var _copyXJsDefault = parcelHelpers.interopDefault(_copyXJs);
var _copyJs = require("./icons/copy.js");
var _copyJsDefault = parcelHelpers.interopDefault(_copyJs);
var _copyleftJs = require("./icons/copyleft.js");
var _copyleftJsDefault = parcelHelpers.interopDefault(_copyleftJs);
var _copyrightJs = require("./icons/copyright.js");
var _copyrightJsDefault = parcelHelpers.interopDefault(_copyrightJs);
var _cornerDownLeftJs = require("./icons/corner-down-left.js");
var _cornerDownLeftJsDefault = parcelHelpers.interopDefault(_cornerDownLeftJs);
var _cornerDownRightJs = require("./icons/corner-down-right.js");
var _cornerDownRightJsDefault = parcelHelpers.interopDefault(_cornerDownRightJs);
var _cornerLeftDownJs = require("./icons/corner-left-down.js");
var _cornerLeftDownJsDefault = parcelHelpers.interopDefault(_cornerLeftDownJs);
var _cornerLeftUpJs = require("./icons/corner-left-up.js");
var _cornerLeftUpJsDefault = parcelHelpers.interopDefault(_cornerLeftUpJs);
var _cornerRightDownJs = require("./icons/corner-right-down.js");
var _cornerRightDownJsDefault = parcelHelpers.interopDefault(_cornerRightDownJs);
var _cornerRightUpJs = require("./icons/corner-right-up.js");
var _cornerRightUpJsDefault = parcelHelpers.interopDefault(_cornerRightUpJs);
var _cornerUpLeftJs = require("./icons/corner-up-left.js");
var _cornerUpLeftJsDefault = parcelHelpers.interopDefault(_cornerUpLeftJs);
var _cornerUpRightJs = require("./icons/corner-up-right.js");
var _cornerUpRightJsDefault = parcelHelpers.interopDefault(_cornerUpRightJs);
var _cpuJs = require("./icons/cpu.js");
var _cpuJsDefault = parcelHelpers.interopDefault(_cpuJs);
var _creditCardJs = require("./icons/credit-card.js");
var _creditCardJsDefault = parcelHelpers.interopDefault(_creditCardJs);
var _croissantJs = require("./icons/croissant.js");
var _croissantJsDefault = parcelHelpers.interopDefault(_croissantJs);
var _creativeCommonsJs = require("./icons/creative-commons.js");
var _creativeCommonsJsDefault = parcelHelpers.interopDefault(_creativeCommonsJs);
var _cropJs = require("./icons/crop.js");
var _cropJsDefault = parcelHelpers.interopDefault(_cropJs);
var _crossJs = require("./icons/cross.js");
var _crossJsDefault = parcelHelpers.interopDefault(_crossJs);
var _crosshairJs = require("./icons/crosshair.js");
var _crosshairJsDefault = parcelHelpers.interopDefault(_crosshairJs);
var _crownJs = require("./icons/crown.js");
var _crownJsDefault = parcelHelpers.interopDefault(_crownJs);
var _cupSodaJs = require("./icons/cup-soda.js");
var _cupSodaJsDefault = parcelHelpers.interopDefault(_cupSodaJs);
var _cuboidJs = require("./icons/cuboid.js");
var _cuboidJsDefault = parcelHelpers.interopDefault(_cuboidJs);
var _currencyJs = require("./icons/currency.js");
var _currencyJsDefault = parcelHelpers.interopDefault(_currencyJs);
var _cylinderJs = require("./icons/cylinder.js");
var _cylinderJsDefault = parcelHelpers.interopDefault(_cylinderJs);
var _damJs = require("./icons/dam.js");
var _damJsDefault = parcelHelpers.interopDefault(_damJs);
var _databaseBackupJs = require("./icons/database-backup.js");
var _databaseBackupJsDefault = parcelHelpers.interopDefault(_databaseBackupJs);
var _databaseJs = require("./icons/database.js");
var _databaseJsDefault = parcelHelpers.interopDefault(_databaseJs);
var _databaseZapJs = require("./icons/database-zap.js");
var _databaseZapJsDefault = parcelHelpers.interopDefault(_databaseZapJs);
var _decimalsArrowRightJs = require("./icons/decimals-arrow-right.js");
var _decimalsArrowRightJsDefault = parcelHelpers.interopDefault(_decimalsArrowRightJs);
var _decimalsArrowLeftJs = require("./icons/decimals-arrow-left.js");
var _decimalsArrowLeftJsDefault = parcelHelpers.interopDefault(_decimalsArrowLeftJs);
var _deleteJs = require("./icons/delete.js");
var _deleteJsDefault = parcelHelpers.interopDefault(_deleteJs);
var _dessertJs = require("./icons/dessert.js");
var _dessertJsDefault = parcelHelpers.interopDefault(_dessertJs);
var _diameterJs = require("./icons/diameter.js");
var _diameterJsDefault = parcelHelpers.interopDefault(_diameterJs);
var _diamondMinusJs = require("./icons/diamond-minus.js");
var _diamondMinusJsDefault = parcelHelpers.interopDefault(_diamondMinusJs);
var _diamondPlusJs = require("./icons/diamond-plus.js");
var _diamondPlusJsDefault = parcelHelpers.interopDefault(_diamondPlusJs);
var _diamondJs = require("./icons/diamond.js");
var _diamondJsDefault = parcelHelpers.interopDefault(_diamondJs);
var _dice1Js = require("./icons/dice-1.js");
var _dice1JsDefault = parcelHelpers.interopDefault(_dice1Js);
var _dice3Js = require("./icons/dice-3.js");
var _dice3JsDefault = parcelHelpers.interopDefault(_dice3Js);
var _dice4Js = require("./icons/dice-4.js");
var _dice4JsDefault = parcelHelpers.interopDefault(_dice4Js);
var _dice2Js = require("./icons/dice-2.js");
var _dice2JsDefault = parcelHelpers.interopDefault(_dice2Js);
var _dice5Js = require("./icons/dice-5.js");
var _dice5JsDefault = parcelHelpers.interopDefault(_dice5Js);
var _dice6Js = require("./icons/dice-6.js");
var _dice6JsDefault = parcelHelpers.interopDefault(_dice6Js);
var _dicesJs = require("./icons/dices.js");
var _dicesJsDefault = parcelHelpers.interopDefault(_dicesJs);
var _disc2Js = require("./icons/disc-2.js");
var _disc2JsDefault = parcelHelpers.interopDefault(_disc2Js);
var _diffJs = require("./icons/diff.js");
var _diffJsDefault = parcelHelpers.interopDefault(_diffJs);
var _disc3Js = require("./icons/disc-3.js");
var _disc3JsDefault = parcelHelpers.interopDefault(_disc3Js);
var _discAlbumJs = require("./icons/disc-album.js");
var _discAlbumJsDefault = parcelHelpers.interopDefault(_discAlbumJs);
var _discJs = require("./icons/disc.js");
var _discJsDefault = parcelHelpers.interopDefault(_discJs);
var _divideJs = require("./icons/divide.js");
var _divideJsDefault = parcelHelpers.interopDefault(_divideJs);
var _dnaOffJs = require("./icons/dna-off.js");
var _dnaOffJsDefault = parcelHelpers.interopDefault(_dnaOffJs);
var _dnaJs = require("./icons/dna.js");
var _dnaJsDefault = parcelHelpers.interopDefault(_dnaJs);
var _dockJs = require("./icons/dock.js");
var _dockJsDefault = parcelHelpers.interopDefault(_dockJs);
var _dogJs = require("./icons/dog.js");
var _dogJsDefault = parcelHelpers.interopDefault(_dogJs);
var _dollarSignJs = require("./icons/dollar-sign.js");
var _dollarSignJsDefault = parcelHelpers.interopDefault(_dollarSignJs);
var _donutJs = require("./icons/donut.js");
var _donutJsDefault = parcelHelpers.interopDefault(_donutJs);
var _doorClosedLockedJs = require("./icons/door-closed-locked.js");
var _doorClosedLockedJsDefault = parcelHelpers.interopDefault(_doorClosedLockedJs);
var _doorClosedJs = require("./icons/door-closed.js");
var _doorClosedJsDefault = parcelHelpers.interopDefault(_doorClosedJs);
var _doorOpenJs = require("./icons/door-open.js");
var _doorOpenJsDefault = parcelHelpers.interopDefault(_doorOpenJs);
var _dotJs = require("./icons/dot.js");
var _dotJsDefault = parcelHelpers.interopDefault(_dotJs);
var _downloadJs = require("./icons/download.js");
var _downloadJsDefault = parcelHelpers.interopDefault(_downloadJs);
var _draftingCompassJs = require("./icons/drafting-compass.js");
var _draftingCompassJsDefault = parcelHelpers.interopDefault(_draftingCompassJs);
var _dramaJs = require("./icons/drama.js");
var _dramaJsDefault = parcelHelpers.interopDefault(_dramaJs);
var _dribbbleJs = require("./icons/dribbble.js");
var _dribbbleJsDefault = parcelHelpers.interopDefault(_dribbbleJs);
var _drillJs = require("./icons/drill.js");
var _drillJsDefault = parcelHelpers.interopDefault(_drillJs);
var _dropletOffJs = require("./icons/droplet-off.js");
var _dropletOffJsDefault = parcelHelpers.interopDefault(_dropletOffJs);
var _dropletJs = require("./icons/droplet.js");
var _dropletJsDefault = parcelHelpers.interopDefault(_dropletJs);
var _dropletsJs = require("./icons/droplets.js");
var _dropletsJsDefault = parcelHelpers.interopDefault(_dropletsJs);
var _drumJs = require("./icons/drum.js");
var _drumJsDefault = parcelHelpers.interopDefault(_drumJs);
var _drumstickJs = require("./icons/drumstick.js");
var _drumstickJsDefault = parcelHelpers.interopDefault(_drumstickJs);
var _dumbbellJs = require("./icons/dumbbell.js");
var _dumbbellJsDefault = parcelHelpers.interopDefault(_dumbbellJs);
var _earOffJs = require("./icons/ear-off.js");
var _earOffJsDefault = parcelHelpers.interopDefault(_earOffJs);
var _earJs = require("./icons/ear.js");
var _earJsDefault = parcelHelpers.interopDefault(_earJs);
var _earthLockJs = require("./icons/earth-lock.js");
var _earthLockJsDefault = parcelHelpers.interopDefault(_earthLockJs);
var _eclipseJs = require("./icons/eclipse.js");
var _eclipseJsDefault = parcelHelpers.interopDefault(_eclipseJs);
var _eggFriedJs = require("./icons/egg-fried.js");
var _eggFriedJsDefault = parcelHelpers.interopDefault(_eggFriedJs);
var _eggOffJs = require("./icons/egg-off.js");
var _eggOffJsDefault = parcelHelpers.interopDefault(_eggOffJs);
var _eggJs = require("./icons/egg.js");
var _eggJsDefault = parcelHelpers.interopDefault(_eggJs);
var _equalApproximatelyJs = require("./icons/equal-approximately.js");
var _equalApproximatelyJsDefault = parcelHelpers.interopDefault(_equalApproximatelyJs);
var _equalNotJs = require("./icons/equal-not.js");
var _equalNotJsDefault = parcelHelpers.interopDefault(_equalNotJs);
var _equalJs = require("./icons/equal.js");
var _equalJsDefault = parcelHelpers.interopDefault(_equalJs);
var _eraserJs = require("./icons/eraser.js");
var _eraserJsDefault = parcelHelpers.interopDefault(_eraserJs);
var _ethernetPortJs = require("./icons/ethernet-port.js");
var _ethernetPortJsDefault = parcelHelpers.interopDefault(_ethernetPortJs);
var _euroJs = require("./icons/euro.js");
var _euroJsDefault = parcelHelpers.interopDefault(_euroJs);
var _expandJs = require("./icons/expand.js");
var _expandJsDefault = parcelHelpers.interopDefault(_expandJs);
var _externalLinkJs = require("./icons/external-link.js");
var _externalLinkJsDefault = parcelHelpers.interopDefault(_externalLinkJs);
var _eyeClosedJs = require("./icons/eye-closed.js");
var _eyeClosedJsDefault = parcelHelpers.interopDefault(_eyeClosedJs);
var _eyeOffJs = require("./icons/eye-off.js");
var _eyeOffJsDefault = parcelHelpers.interopDefault(_eyeOffJs);
var _eyeJs = require("./icons/eye.js");
var _eyeJsDefault = parcelHelpers.interopDefault(_eyeJs);
var _facebookJs = require("./icons/facebook.js");
var _facebookJsDefault = parcelHelpers.interopDefault(_facebookJs);
var _factoryJs = require("./icons/factory.js");
var _factoryJsDefault = parcelHelpers.interopDefault(_factoryJs);
var _fanJs = require("./icons/fan.js");
var _fanJsDefault = parcelHelpers.interopDefault(_fanJs);
var _fastForwardJs = require("./icons/fast-forward.js");
var _fastForwardJsDefault = parcelHelpers.interopDefault(_fastForwardJs);
var _featherJs = require("./icons/feather.js");
var _featherJsDefault = parcelHelpers.interopDefault(_featherJs);
var _fenceJs = require("./icons/fence.js");
var _fenceJsDefault = parcelHelpers.interopDefault(_fenceJs);
var _ferrisWheelJs = require("./icons/ferris-wheel.js");
var _ferrisWheelJsDefault = parcelHelpers.interopDefault(_ferrisWheelJs);
var _figmaJs = require("./icons/figma.js");
var _figmaJsDefault = parcelHelpers.interopDefault(_figmaJs);
var _fileArchiveJs = require("./icons/file-archive.js");
var _fileArchiveJsDefault = parcelHelpers.interopDefault(_fileArchiveJs);
var _fileAudio2Js = require("./icons/file-audio-2.js");
var _fileAudio2JsDefault = parcelHelpers.interopDefault(_fileAudio2Js);
var _fileAudioJs = require("./icons/file-audio.js");
var _fileAudioJsDefault = parcelHelpers.interopDefault(_fileAudioJs);
var _fileBadge2Js = require("./icons/file-badge-2.js");
var _fileBadge2JsDefault = parcelHelpers.interopDefault(_fileBadge2Js);
var _fileBoxJs = require("./icons/file-box.js");
var _fileBoxJsDefault = parcelHelpers.interopDefault(_fileBoxJs);
var _fileBadgeJs = require("./icons/file-badge.js");
var _fileBadgeJsDefault = parcelHelpers.interopDefault(_fileBadgeJs);
var _fileCheck2Js = require("./icons/file-check-2.js");
var _fileCheck2JsDefault = parcelHelpers.interopDefault(_fileCheck2Js);
var _fileCheckJs = require("./icons/file-check.js");
var _fileCheckJsDefault = parcelHelpers.interopDefault(_fileCheckJs);
var _fileClockJs = require("./icons/file-clock.js");
var _fileClockJsDefault = parcelHelpers.interopDefault(_fileClockJs);
var _fileCode2Js = require("./icons/file-code-2.js");
var _fileCode2JsDefault = parcelHelpers.interopDefault(_fileCode2Js);
var _fileCodeJs = require("./icons/file-code.js");
var _fileCodeJsDefault = parcelHelpers.interopDefault(_fileCodeJs);
var _fileDiffJs = require("./icons/file-diff.js");
var _fileDiffJsDefault = parcelHelpers.interopDefault(_fileDiffJs);
var _fileDigitJs = require("./icons/file-digit.js");
var _fileDigitJsDefault = parcelHelpers.interopDefault(_fileDigitJs);
var _fileDownJs = require("./icons/file-down.js");
var _fileDownJsDefault = parcelHelpers.interopDefault(_fileDownJs);
var _fileHeartJs = require("./icons/file-heart.js");
var _fileHeartJsDefault = parcelHelpers.interopDefault(_fileHeartJs);
var _fileImageJs = require("./icons/file-image.js");
var _fileImageJsDefault = parcelHelpers.interopDefault(_fileImageJs);
var _fileInputJs = require("./icons/file-input.js");
var _fileInputJsDefault = parcelHelpers.interopDefault(_fileInputJs);
var _fileJson2Js = require("./icons/file-json-2.js");
var _fileJson2JsDefault = parcelHelpers.interopDefault(_fileJson2Js);
var _fileJsonJs = require("./icons/file-json.js");
var _fileJsonJsDefault = parcelHelpers.interopDefault(_fileJsonJs);
var _fileKey2Js = require("./icons/file-key-2.js");
var _fileKey2JsDefault = parcelHelpers.interopDefault(_fileKey2Js);
var _fileLock2Js = require("./icons/file-lock-2.js");
var _fileLock2JsDefault = parcelHelpers.interopDefault(_fileLock2Js);
var _fileKeyJs = require("./icons/file-key.js");
var _fileKeyJsDefault = parcelHelpers.interopDefault(_fileKeyJs);
var _fileLockJs = require("./icons/file-lock.js");
var _fileLockJsDefault = parcelHelpers.interopDefault(_fileLockJs);
var _fileMinus2Js = require("./icons/file-minus-2.js");
var _fileMinus2JsDefault = parcelHelpers.interopDefault(_fileMinus2Js);
var _fileMinusJs = require("./icons/file-minus.js");
var _fileMinusJsDefault = parcelHelpers.interopDefault(_fileMinusJs);
var _fileMusicJs = require("./icons/file-music.js");
var _fileMusicJsDefault = parcelHelpers.interopDefault(_fileMusicJs);
var _fileOutputJs = require("./icons/file-output.js");
var _fileOutputJsDefault = parcelHelpers.interopDefault(_fileOutputJs);
var _filePlus2Js = require("./icons/file-plus-2.js");
var _filePlus2JsDefault = parcelHelpers.interopDefault(_filePlus2Js);
var _filePlusJs = require("./icons/file-plus.js");
var _filePlusJsDefault = parcelHelpers.interopDefault(_filePlusJs);
var _fileQuestionJs = require("./icons/file-question.js");
var _fileQuestionJsDefault = parcelHelpers.interopDefault(_fileQuestionJs);
var _fileScanJs = require("./icons/file-scan.js");
var _fileScanJsDefault = parcelHelpers.interopDefault(_fileScanJs);
var _fileSearch2Js = require("./icons/file-search-2.js");
var _fileSearch2JsDefault = parcelHelpers.interopDefault(_fileSearch2Js);
var _fileSearchJs = require("./icons/file-search.js");
var _fileSearchJsDefault = parcelHelpers.interopDefault(_fileSearchJs);
var _fileSlidersJs = require("./icons/file-sliders.js");
var _fileSlidersJsDefault = parcelHelpers.interopDefault(_fileSlidersJs);
var _fileSpreadsheetJs = require("./icons/file-spreadsheet.js");
var _fileSpreadsheetJsDefault = parcelHelpers.interopDefault(_fileSpreadsheetJs);
var _fileStackJs = require("./icons/file-stack.js");
var _fileStackJsDefault = parcelHelpers.interopDefault(_fileStackJs);
var _fileTerminalJs = require("./icons/file-terminal.js");
var _fileTerminalJsDefault = parcelHelpers.interopDefault(_fileTerminalJs);
var _fileSymlinkJs = require("./icons/file-symlink.js");
var _fileSymlinkJsDefault = parcelHelpers.interopDefault(_fileSymlinkJs);
var _fileType2Js = require("./icons/file-type-2.js");
var _fileType2JsDefault = parcelHelpers.interopDefault(_fileType2Js);
var _fileTextJs = require("./icons/file-text.js");
var _fileTextJsDefault = parcelHelpers.interopDefault(_fileTextJs);
var _fileTypeJs = require("./icons/file-type.js");
var _fileTypeJsDefault = parcelHelpers.interopDefault(_fileTypeJs);
var _fileUpJs = require("./icons/file-up.js");
var _fileUpJsDefault = parcelHelpers.interopDefault(_fileUpJs);
var _fileUserJs = require("./icons/file-user.js");
var _fileUserJsDefault = parcelHelpers.interopDefault(_fileUserJs);
var _fileVideo2Js = require("./icons/file-video-2.js");
var _fileVideo2JsDefault = parcelHelpers.interopDefault(_fileVideo2Js);
var _fileVideoJs = require("./icons/file-video.js");
var _fileVideoJsDefault = parcelHelpers.interopDefault(_fileVideoJs);
var _fileVolume2Js = require("./icons/file-volume-2.js");
var _fileVolume2JsDefault = parcelHelpers.interopDefault(_fileVolume2Js);
var _fileVolumeJs = require("./icons/file-volume.js");
var _fileVolumeJsDefault = parcelHelpers.interopDefault(_fileVolumeJs);
var _fileWarningJs = require("./icons/file-warning.js");
var _fileWarningJsDefault = parcelHelpers.interopDefault(_fileWarningJs);
var _fileX2Js = require("./icons/file-x-2.js");
var _fileX2JsDefault = parcelHelpers.interopDefault(_fileX2Js);
var _fileXJs = require("./icons/file-x.js");
var _fileXJsDefault = parcelHelpers.interopDefault(_fileXJs);
var _fileJs = require("./icons/file.js");
var _fileJsDefault = parcelHelpers.interopDefault(_fileJs);
var _filesJs = require("./icons/files.js");
var _filesJsDefault = parcelHelpers.interopDefault(_filesJs);
var _filmJs = require("./icons/film.js");
var _filmJsDefault = parcelHelpers.interopDefault(_filmJs);
var _fingerprintJs = require("./icons/fingerprint.js");
var _fingerprintJsDefault = parcelHelpers.interopDefault(_fingerprintJs);
var _fireExtinguisherJs = require("./icons/fire-extinguisher.js");
var _fireExtinguisherJsDefault = parcelHelpers.interopDefault(_fireExtinguisherJs);
var _fishOffJs = require("./icons/fish-off.js");
var _fishOffJsDefault = parcelHelpers.interopDefault(_fishOffJs);
var _fishJs = require("./icons/fish.js");
var _fishJsDefault = parcelHelpers.interopDefault(_fishJs);
var _fishSymbolJs = require("./icons/fish-symbol.js");
var _fishSymbolJsDefault = parcelHelpers.interopDefault(_fishSymbolJs);
var _flagOffJs = require("./icons/flag-off.js");
var _flagOffJsDefault = parcelHelpers.interopDefault(_flagOffJs);
var _flagTriangleLeftJs = require("./icons/flag-triangle-left.js");
var _flagTriangleLeftJsDefault = parcelHelpers.interopDefault(_flagTriangleLeftJs);
var _flagTriangleRightJs = require("./icons/flag-triangle-right.js");
var _flagTriangleRightJsDefault = parcelHelpers.interopDefault(_flagTriangleRightJs);
var _flameKindlingJs = require("./icons/flame-kindling.js");
var _flameKindlingJsDefault = parcelHelpers.interopDefault(_flameKindlingJs);
var _flagJs = require("./icons/flag.js");
var _flagJsDefault = parcelHelpers.interopDefault(_flagJs);
var _flameJs = require("./icons/flame.js");
var _flameJsDefault = parcelHelpers.interopDefault(_flameJs);
var _flashlightOffJs = require("./icons/flashlight-off.js");
var _flashlightOffJsDefault = parcelHelpers.interopDefault(_flashlightOffJs);
var _flashlightJs = require("./icons/flashlight.js");
var _flashlightJsDefault = parcelHelpers.interopDefault(_flashlightJs);
var _flaskConicalOffJs = require("./icons/flask-conical-off.js");
var _flaskConicalOffJsDefault = parcelHelpers.interopDefault(_flaskConicalOffJs);
var _flaskConicalJs = require("./icons/flask-conical.js");
var _flaskConicalJsDefault = parcelHelpers.interopDefault(_flaskConicalJs);
var _flaskRoundJs = require("./icons/flask-round.js");
var _flaskRoundJsDefault = parcelHelpers.interopDefault(_flaskRoundJs);
var _flipHorizontalJs = require("./icons/flip-horizontal.js");
var _flipHorizontalJsDefault = parcelHelpers.interopDefault(_flipHorizontalJs);
var _flipHorizontal2Js = require("./icons/flip-horizontal-2.js");
var _flipHorizontal2JsDefault = parcelHelpers.interopDefault(_flipHorizontal2Js);
var _flipVertical2Js = require("./icons/flip-vertical-2.js");
var _flipVertical2JsDefault = parcelHelpers.interopDefault(_flipVertical2Js);
var _flipVerticalJs = require("./icons/flip-vertical.js");
var _flipVerticalJsDefault = parcelHelpers.interopDefault(_flipVerticalJs);
var _flower2Js = require("./icons/flower-2.js");
var _flower2JsDefault = parcelHelpers.interopDefault(_flower2Js);
var _flowerJs = require("./icons/flower.js");
var _flowerJsDefault = parcelHelpers.interopDefault(_flowerJs);
var _focusJs = require("./icons/focus.js");
var _focusJsDefault = parcelHelpers.interopDefault(_focusJs);
var _foldHorizontalJs = require("./icons/fold-horizontal.js");
var _foldHorizontalJsDefault = parcelHelpers.interopDefault(_foldHorizontalJs);
var _folderArchiveJs = require("./icons/folder-archive.js");
var _folderArchiveJsDefault = parcelHelpers.interopDefault(_folderArchiveJs);
var _foldVerticalJs = require("./icons/fold-vertical.js");
var _foldVerticalJsDefault = parcelHelpers.interopDefault(_foldVerticalJs);
var _folderCheckJs = require("./icons/folder-check.js");
var _folderCheckJsDefault = parcelHelpers.interopDefault(_folderCheckJs);
var _folderClockJs = require("./icons/folder-clock.js");
var _folderClockJsDefault = parcelHelpers.interopDefault(_folderClockJs);
var _folderClosedJs = require("./icons/folder-closed.js");
var _folderClosedJsDefault = parcelHelpers.interopDefault(_folderClosedJs);
var _folderCodeJs = require("./icons/folder-code.js");
var _folderCodeJsDefault = parcelHelpers.interopDefault(_folderCodeJs);
var _folderDownJs = require("./icons/folder-down.js");
var _folderDownJsDefault = parcelHelpers.interopDefault(_folderDownJs);
var _folderDotJs = require("./icons/folder-dot.js");
var _folderDotJsDefault = parcelHelpers.interopDefault(_folderDotJs);
var _folderGit2Js = require("./icons/folder-git-2.js");
var _folderGit2JsDefault = parcelHelpers.interopDefault(_folderGit2Js);
var _folderGitJs = require("./icons/folder-git.js");
var _folderGitJsDefault = parcelHelpers.interopDefault(_folderGitJs);
var _folderHeartJs = require("./icons/folder-heart.js");
var _folderHeartJsDefault = parcelHelpers.interopDefault(_folderHeartJs);
var _folderKanbanJs = require("./icons/folder-kanban.js");
var _folderKanbanJsDefault = parcelHelpers.interopDefault(_folderKanbanJs);
var _folderInputJs = require("./icons/folder-input.js");
var _folderInputJsDefault = parcelHelpers.interopDefault(_folderInputJs);
var _folderKeyJs = require("./icons/folder-key.js");
var _folderKeyJsDefault = parcelHelpers.interopDefault(_folderKeyJs);
var _folderLockJs = require("./icons/folder-lock.js");
var _folderLockJsDefault = parcelHelpers.interopDefault(_folderLockJs);
var _folderMinusJs = require("./icons/folder-minus.js");
var _folderMinusJsDefault = parcelHelpers.interopDefault(_folderMinusJs);
var _folderOpenDotJs = require("./icons/folder-open-dot.js");
var _folderOpenDotJsDefault = parcelHelpers.interopDefault(_folderOpenDotJs);
var _folderOpenJs = require("./icons/folder-open.js");
var _folderOpenJsDefault = parcelHelpers.interopDefault(_folderOpenJs);
var _folderOutputJs = require("./icons/folder-output.js");
var _folderOutputJsDefault = parcelHelpers.interopDefault(_folderOutputJs);
var _folderPlusJs = require("./icons/folder-plus.js");
var _folderPlusJsDefault = parcelHelpers.interopDefault(_folderPlusJs);
var _folderRootJs = require("./icons/folder-root.js");
var _folderRootJsDefault = parcelHelpers.interopDefault(_folderRootJs);
var _folderSearch2Js = require("./icons/folder-search-2.js");
var _folderSearch2JsDefault = parcelHelpers.interopDefault(_folderSearch2Js);
var _folderSearchJs = require("./icons/folder-search.js");
var _folderSearchJsDefault = parcelHelpers.interopDefault(_folderSearchJs);
var _folderSymlinkJs = require("./icons/folder-symlink.js");
var _folderSymlinkJsDefault = parcelHelpers.interopDefault(_folderSymlinkJs);
var _folderSyncJs = require("./icons/folder-sync.js");
var _folderSyncJsDefault = parcelHelpers.interopDefault(_folderSyncJs);
var _folderTreeJs = require("./icons/folder-tree.js");
var _folderTreeJsDefault = parcelHelpers.interopDefault(_folderTreeJs);
var _folderUpJs = require("./icons/folder-up.js");
var _folderUpJsDefault = parcelHelpers.interopDefault(_folderUpJs);
var _folderXJs = require("./icons/folder-x.js");
var _folderXJsDefault = parcelHelpers.interopDefault(_folderXJs);
var _folderJs = require("./icons/folder.js");
var _folderJsDefault = parcelHelpers.interopDefault(_folderJs);
var _foldersJs = require("./icons/folders.js");
var _foldersJsDefault = parcelHelpers.interopDefault(_foldersJs);
var _forkliftJs = require("./icons/forklift.js");
var _forkliftJsDefault = parcelHelpers.interopDefault(_forkliftJs);
var _footprintsJs = require("./icons/footprints.js");
var _footprintsJsDefault = parcelHelpers.interopDefault(_footprintsJs);
var _forwardJs = require("./icons/forward.js");
var _forwardJsDefault = parcelHelpers.interopDefault(_forwardJs);
var _frameJs = require("./icons/frame.js");
var _frameJsDefault = parcelHelpers.interopDefault(_frameJs);
var _framerJs = require("./icons/framer.js");
var _framerJsDefault = parcelHelpers.interopDefault(_framerJs);
var _frownJs = require("./icons/frown.js");
var _frownJsDefault = parcelHelpers.interopDefault(_frownJs);
var _fuelJs = require("./icons/fuel.js");
var _fuelJsDefault = parcelHelpers.interopDefault(_fuelJs);
var _fullscreenJs = require("./icons/fullscreen.js");
var _fullscreenJsDefault = parcelHelpers.interopDefault(_fullscreenJs);
var _funnelPlusJs = require("./icons/funnel-plus.js");
var _funnelPlusJsDefault = parcelHelpers.interopDefault(_funnelPlusJs);
var _galleryHorizontalEndJs = require("./icons/gallery-horizontal-end.js");
var _galleryHorizontalEndJsDefault = parcelHelpers.interopDefault(_galleryHorizontalEndJs);
var _galleryHorizontalJs = require("./icons/gallery-horizontal.js");
var _galleryHorizontalJsDefault = parcelHelpers.interopDefault(_galleryHorizontalJs);
var _galleryThumbnailsJs = require("./icons/gallery-thumbnails.js");
var _galleryThumbnailsJsDefault = parcelHelpers.interopDefault(_galleryThumbnailsJs);
var _galleryVerticalEndJs = require("./icons/gallery-vertical-end.js");
var _galleryVerticalEndJsDefault = parcelHelpers.interopDefault(_galleryVerticalEndJs);
var _galleryVerticalJs = require("./icons/gallery-vertical.js");
var _galleryVerticalJsDefault = parcelHelpers.interopDefault(_galleryVerticalJs);
var _gamepad2Js = require("./icons/gamepad-2.js");
var _gamepad2JsDefault = parcelHelpers.interopDefault(_gamepad2Js);
var _gamepadJs = require("./icons/gamepad.js");
var _gamepadJsDefault = parcelHelpers.interopDefault(_gamepadJs);
var _gaugeJs = require("./icons/gauge.js");
var _gaugeJsDefault = parcelHelpers.interopDefault(_gaugeJs);
var _gavelJs = require("./icons/gavel.js");
var _gavelJsDefault = parcelHelpers.interopDefault(_gavelJs);
var _gemJs = require("./icons/gem.js");
var _gemJsDefault = parcelHelpers.interopDefault(_gemJs);
var _ghostJs = require("./icons/ghost.js");
var _ghostJsDefault = parcelHelpers.interopDefault(_ghostJs);
var _giftJs = require("./icons/gift.js");
var _giftJsDefault = parcelHelpers.interopDefault(_giftJs);
var _gitBranchPlusJs = require("./icons/git-branch-plus.js");
var _gitBranchPlusJsDefault = parcelHelpers.interopDefault(_gitBranchPlusJs);
var _gitBranchJs = require("./icons/git-branch.js");
var _gitBranchJsDefault = parcelHelpers.interopDefault(_gitBranchJs);
var _gitCommitVerticalJs = require("./icons/git-commit-vertical.js");
var _gitCommitVerticalJsDefault = parcelHelpers.interopDefault(_gitCommitVerticalJs);
var _gitCompareArrowsJs = require("./icons/git-compare-arrows.js");
var _gitCompareArrowsJsDefault = parcelHelpers.interopDefault(_gitCompareArrowsJs);
var _gitCompareJs = require("./icons/git-compare.js");
var _gitCompareJsDefault = parcelHelpers.interopDefault(_gitCompareJs);
var _gitForkJs = require("./icons/git-fork.js");
var _gitForkJsDefault = parcelHelpers.interopDefault(_gitForkJs);
var _gitGraphJs = require("./icons/git-graph.js");
var _gitGraphJsDefault = parcelHelpers.interopDefault(_gitGraphJs);
var _gitMergeJs = require("./icons/git-merge.js");
var _gitMergeJsDefault = parcelHelpers.interopDefault(_gitMergeJs);
var _gitPullRequestArrowJs = require("./icons/git-pull-request-arrow.js");
var _gitPullRequestArrowJsDefault = parcelHelpers.interopDefault(_gitPullRequestArrowJs);
var _gitPullRequestClosedJs = require("./icons/git-pull-request-closed.js");
var _gitPullRequestClosedJsDefault = parcelHelpers.interopDefault(_gitPullRequestClosedJs);
var _gitPullRequestCreateArrowJs = require("./icons/git-pull-request-create-arrow.js");
var _gitPullRequestCreateArrowJsDefault = parcelHelpers.interopDefault(_gitPullRequestCreateArrowJs);
var _gitPullRequestCreateJs = require("./icons/git-pull-request-create.js");
var _gitPullRequestCreateJsDefault = parcelHelpers.interopDefault(_gitPullRequestCreateJs);
var _gitPullRequestDraftJs = require("./icons/git-pull-request-draft.js");
var _gitPullRequestDraftJsDefault = parcelHelpers.interopDefault(_gitPullRequestDraftJs);
var _githubJs = require("./icons/github.js");
var _githubJsDefault = parcelHelpers.interopDefault(_githubJs);
var _gitPullRequestJs = require("./icons/git-pull-request.js");
var _gitPullRequestJsDefault = parcelHelpers.interopDefault(_gitPullRequestJs);
var _gitlabJs = require("./icons/gitlab.js");
var _gitlabJsDefault = parcelHelpers.interopDefault(_gitlabJs);
var _glassWaterJs = require("./icons/glass-water.js");
var _glassWaterJsDefault = parcelHelpers.interopDefault(_glassWaterJs);
var _glassesJs = require("./icons/glasses.js");
var _glassesJsDefault = parcelHelpers.interopDefault(_glassesJs);
var _globeLockJs = require("./icons/globe-lock.js");
var _globeLockJsDefault = parcelHelpers.interopDefault(_globeLockJs);
var _globeJs = require("./icons/globe.js");
var _globeJsDefault = parcelHelpers.interopDefault(_globeJs);
var _goalJs = require("./icons/goal.js");
var _goalJsDefault = parcelHelpers.interopDefault(_goalJs);
var _gpuJs = require("./icons/gpu.js");
var _gpuJsDefault = parcelHelpers.interopDefault(_gpuJs);
var _grabJs = require("./icons/grab.js");
var _grabJsDefault = parcelHelpers.interopDefault(_grabJs);
var _graduationCapJs = require("./icons/graduation-cap.js");
var _graduationCapJsDefault = parcelHelpers.interopDefault(_graduationCapJs);
var _grapeJs = require("./icons/grape.js");
var _grapeJsDefault = parcelHelpers.interopDefault(_grapeJs);
var _grid3X2Js = require("./icons/grid-3x2.js");
var _grid3X2JsDefault = parcelHelpers.interopDefault(_grid3X2Js);
var _gripHorizontalJs = require("./icons/grip-horizontal.js");
var _gripHorizontalJsDefault = parcelHelpers.interopDefault(_gripHorizontalJs);
var _gripVerticalJs = require("./icons/grip-vertical.js");
var _gripVerticalJsDefault = parcelHelpers.interopDefault(_gripVerticalJs);
var _gripJs = require("./icons/grip.js");
var _gripJsDefault = parcelHelpers.interopDefault(_gripJs);
var _groupJs = require("./icons/group.js");
var _groupJsDefault = parcelHelpers.interopDefault(_groupJs);
var _guitarJs = require("./icons/guitar.js");
var _guitarJsDefault = parcelHelpers.interopDefault(_guitarJs);
var _hamJs = require("./icons/ham.js");
var _hamJsDefault = parcelHelpers.interopDefault(_hamJs);
var _hammerJs = require("./icons/hammer.js");
var _hammerJsDefault = parcelHelpers.interopDefault(_hammerJs);
var _hamburgerJs = require("./icons/hamburger.js");
var _hamburgerJsDefault = parcelHelpers.interopDefault(_hamburgerJs);
var _handCoinsJs = require("./icons/hand-coins.js");
var _handCoinsJsDefault = parcelHelpers.interopDefault(_handCoinsJs);
var _handHeartJs = require("./icons/hand-heart.js");
var _handHeartJsDefault = parcelHelpers.interopDefault(_handHeartJs);
var _handMetalJs = require("./icons/hand-metal.js");
var _handMetalJsDefault = parcelHelpers.interopDefault(_handMetalJs);
var _handPlatterJs = require("./icons/hand-platter.js");
var _handPlatterJsDefault = parcelHelpers.interopDefault(_handPlatterJs);
var _handJs = require("./icons/hand.js");
var _handJsDefault = parcelHelpers.interopDefault(_handJs);
var _handshakeJs = require("./icons/handshake.js");
var _handshakeJsDefault = parcelHelpers.interopDefault(_handshakeJs);
var _hardDriveDownloadJs = require("./icons/hard-drive-download.js");
var _hardDriveDownloadJsDefault = parcelHelpers.interopDefault(_hardDriveDownloadJs);
var _hardDriveJs = require("./icons/hard-drive.js");
var _hardDriveJsDefault = parcelHelpers.interopDefault(_hardDriveJs);
var _hardDriveUploadJs = require("./icons/hard-drive-upload.js");
var _hardDriveUploadJsDefault = parcelHelpers.interopDefault(_hardDriveUploadJs);
var _hardHatJs = require("./icons/hard-hat.js");
var _hardHatJsDefault = parcelHelpers.interopDefault(_hardHatJs);
var _hashJs = require("./icons/hash.js");
var _hashJsDefault = parcelHelpers.interopDefault(_hashJs);
var _hazeJs = require("./icons/haze.js");
var _hazeJsDefault = parcelHelpers.interopDefault(_hazeJs);
var _hdmiPortJs = require("./icons/hdmi-port.js");
var _hdmiPortJsDefault = parcelHelpers.interopDefault(_hdmiPortJs);
var _heading1Js = require("./icons/heading-1.js");
var _heading1JsDefault = parcelHelpers.interopDefault(_heading1Js);
var _heading2Js = require("./icons/heading-2.js");
var _heading2JsDefault = parcelHelpers.interopDefault(_heading2Js);
var _heading3Js = require("./icons/heading-3.js");
var _heading3JsDefault = parcelHelpers.interopDefault(_heading3Js);
var _heading4Js = require("./icons/heading-4.js");
var _heading4JsDefault = parcelHelpers.interopDefault(_heading4Js);
var _heading5Js = require("./icons/heading-5.js");
var _heading5JsDefault = parcelHelpers.interopDefault(_heading5Js);
var _heading6Js = require("./icons/heading-6.js");
var _heading6JsDefault = parcelHelpers.interopDefault(_heading6Js);
var _headingJs = require("./icons/heading.js");
var _headingJsDefault = parcelHelpers.interopDefault(_headingJs);
var _headphoneOffJs = require("./icons/headphone-off.js");
var _headphoneOffJsDefault = parcelHelpers.interopDefault(_headphoneOffJs);
var _headphonesJs = require("./icons/headphones.js");
var _headphonesJsDefault = parcelHelpers.interopDefault(_headphonesJs);
var _headsetJs = require("./icons/headset.js");
var _headsetJsDefault = parcelHelpers.interopDefault(_headsetJs);
var _heartCrackJs = require("./icons/heart-crack.js");
var _heartCrackJsDefault = parcelHelpers.interopDefault(_heartCrackJs);
var _heartHandshakeJs = require("./icons/heart-handshake.js");
var _heartHandshakeJsDefault = parcelHelpers.interopDefault(_heartHandshakeJs);
var _heartMinusJs = require("./icons/heart-minus.js");
var _heartMinusJsDefault = parcelHelpers.interopDefault(_heartMinusJs);
var _heartOffJs = require("./icons/heart-off.js");
var _heartOffJsDefault = parcelHelpers.interopDefault(_heartOffJs);
var _heartPlusJs = require("./icons/heart-plus.js");
var _heartPlusJsDefault = parcelHelpers.interopDefault(_heartPlusJs);
var _heartPulseJs = require("./icons/heart-pulse.js");
var _heartPulseJsDefault = parcelHelpers.interopDefault(_heartPulseJs);
var _heartJs = require("./icons/heart.js");
var _heartJsDefault = parcelHelpers.interopDefault(_heartJs);
var _heaterJs = require("./icons/heater.js");
var _heaterJsDefault = parcelHelpers.interopDefault(_heaterJs);
var _hexagonJs = require("./icons/hexagon.js");
var _hexagonJsDefault = parcelHelpers.interopDefault(_hexagonJs);
var _highlighterJs = require("./icons/highlighter.js");
var _highlighterJsDefault = parcelHelpers.interopDefault(_highlighterJs);
var _hopOffJs = require("./icons/hop-off.js");
var _hopOffJsDefault = parcelHelpers.interopDefault(_hopOffJs);
var _historyJs = require("./icons/history.js");
var _historyJsDefault = parcelHelpers.interopDefault(_historyJs);
var _hopJs = require("./icons/hop.js");
var _hopJsDefault = parcelHelpers.interopDefault(_hopJs);
var _hospitalJs = require("./icons/hospital.js");
var _hospitalJsDefault = parcelHelpers.interopDefault(_hospitalJs);
var _hotelJs = require("./icons/hotel.js");
var _hotelJsDefault = parcelHelpers.interopDefault(_hotelJs);
var _housePlugJs = require("./icons/house-plug.js");
var _housePlugJsDefault = parcelHelpers.interopDefault(_housePlugJs);
var _hourglassJs = require("./icons/hourglass.js");
var _hourglassJsDefault = parcelHelpers.interopDefault(_hourglassJs);
var _houseWifiJs = require("./icons/house-wifi.js");
var _houseWifiJsDefault = parcelHelpers.interopDefault(_houseWifiJs);
var _housePlusJs = require("./icons/house-plus.js");
var _housePlusJsDefault = parcelHelpers.interopDefault(_housePlusJs);
var _idCardLanyardJs = require("./icons/id-card-lanyard.js");
var _idCardLanyardJsDefault = parcelHelpers.interopDefault(_idCardLanyardJs);
var _idCardJs = require("./icons/id-card.js");
var _idCardJsDefault = parcelHelpers.interopDefault(_idCardJs);
var _imageDownJs = require("./icons/image-down.js");
var _imageDownJsDefault = parcelHelpers.interopDefault(_imageDownJs);
var _imageMinusJs = require("./icons/image-minus.js");
var _imageMinusJsDefault = parcelHelpers.interopDefault(_imageMinusJs);
var _imageOffJs = require("./icons/image-off.js");
var _imageOffJsDefault = parcelHelpers.interopDefault(_imageOffJs);
var _imagePlayJs = require("./icons/image-play.js");
var _imagePlayJsDefault = parcelHelpers.interopDefault(_imagePlayJs);
var _imagePlusJs = require("./icons/image-plus.js");
var _imagePlusJsDefault = parcelHelpers.interopDefault(_imagePlusJs);
var _imageUpJs = require("./icons/image-up.js");
var _imageUpJsDefault = parcelHelpers.interopDefault(_imageUpJs);
var _imageJs = require("./icons/image.js");
var _imageJsDefault = parcelHelpers.interopDefault(_imageJs);
var _imageUpscaleJs = require("./icons/image-upscale.js");
var _imageUpscaleJsDefault = parcelHelpers.interopDefault(_imageUpscaleJs);
var _imagesJs = require("./icons/images.js");
var _imagesJsDefault = parcelHelpers.interopDefault(_imagesJs);
var _importJs = require("./icons/import.js");
var _importJsDefault = parcelHelpers.interopDefault(_importJs);
var _inboxJs = require("./icons/inbox.js");
var _inboxJsDefault = parcelHelpers.interopDefault(_inboxJs);
var _indianRupeeJs = require("./icons/indian-rupee.js");
var _indianRupeeJsDefault = parcelHelpers.interopDefault(_indianRupeeJs);
var _infinityJs = require("./icons/infinity.js");
var _infinityJsDefault = parcelHelpers.interopDefault(_infinityJs);
var _inspectionPanelJs = require("./icons/inspection-panel.js");
var _inspectionPanelJsDefault = parcelHelpers.interopDefault(_inspectionPanelJs);
var _infoJs = require("./icons/info.js");
var _infoJsDefault = parcelHelpers.interopDefault(_infoJs);
var _instagramJs = require("./icons/instagram.js");
var _instagramJsDefault = parcelHelpers.interopDefault(_instagramJs);
var _italicJs = require("./icons/italic.js");
var _italicJsDefault = parcelHelpers.interopDefault(_italicJs);
var _iterationCcwJs = require("./icons/iteration-ccw.js");
var _iterationCcwJsDefault = parcelHelpers.interopDefault(_iterationCcwJs);
var _iterationCwJs = require("./icons/iteration-cw.js");
var _iterationCwJsDefault = parcelHelpers.interopDefault(_iterationCwJs);
var _japaneseYenJs = require("./icons/japanese-yen.js");
var _japaneseYenJsDefault = parcelHelpers.interopDefault(_japaneseYenJs);
var _joystickJs = require("./icons/joystick.js");
var _joystickJsDefault = parcelHelpers.interopDefault(_joystickJs);
var _kanbanJs = require("./icons/kanban.js");
var _kanbanJsDefault = parcelHelpers.interopDefault(_kanbanJs);
var _keyRoundJs = require("./icons/key-round.js");
var _keyRoundJsDefault = parcelHelpers.interopDefault(_keyRoundJs);
var _keySquareJs = require("./icons/key-square.js");
var _keySquareJsDefault = parcelHelpers.interopDefault(_keySquareJs);
var _keyJs = require("./icons/key.js");
var _keyJsDefault = parcelHelpers.interopDefault(_keyJs);
var _keyboardMusicJs = require("./icons/keyboard-music.js");
var _keyboardMusicJsDefault = parcelHelpers.interopDefault(_keyboardMusicJs);
var _keyboardOffJs = require("./icons/keyboard-off.js");
var _keyboardOffJsDefault = parcelHelpers.interopDefault(_keyboardOffJs);
var _keyboardJs = require("./icons/keyboard.js");
var _keyboardJsDefault = parcelHelpers.interopDefault(_keyboardJs);
var _lampCeilingJs = require("./icons/lamp-ceiling.js");
var _lampCeilingJsDefault = parcelHelpers.interopDefault(_lampCeilingJs);
var _lampDeskJs = require("./icons/lamp-desk.js");
var _lampDeskJsDefault = parcelHelpers.interopDefault(_lampDeskJs);
var _lampFloorJs = require("./icons/lamp-floor.js");
var _lampFloorJsDefault = parcelHelpers.interopDefault(_lampFloorJs);
var _lampWallDownJs = require("./icons/lamp-wall-down.js");
var _lampWallDownJsDefault = parcelHelpers.interopDefault(_lampWallDownJs);
var _lampWallUpJs = require("./icons/lamp-wall-up.js");
var _lampWallUpJsDefault = parcelHelpers.interopDefault(_lampWallUpJs);
var _lampJs = require("./icons/lamp.js");
var _lampJsDefault = parcelHelpers.interopDefault(_lampJs);
var _landPlotJs = require("./icons/land-plot.js");
var _landPlotJsDefault = parcelHelpers.interopDefault(_landPlotJs);
var _landmarkJs = require("./icons/landmark.js");
var _landmarkJsDefault = parcelHelpers.interopDefault(_landmarkJs);
var _languagesJs = require("./icons/languages.js");
var _languagesJsDefault = parcelHelpers.interopDefault(_languagesJs);
var _laptopMinimalCheckJs = require("./icons/laptop-minimal-check.js");
var _laptopMinimalCheckJsDefault = parcelHelpers.interopDefault(_laptopMinimalCheckJs);
var _laptopJs = require("./icons/laptop.js");
var _laptopJsDefault = parcelHelpers.interopDefault(_laptopJs);
var _lassoSelectJs = require("./icons/lasso-select.js");
var _lassoSelectJsDefault = parcelHelpers.interopDefault(_lassoSelectJs);
var _lassoJs = require("./icons/lasso.js");
var _lassoJsDefault = parcelHelpers.interopDefault(_lassoJs);
var _laughJs = require("./icons/laugh.js");
var _laughJsDefault = parcelHelpers.interopDefault(_laughJs);
var _layers2Js = require("./icons/layers-2.js");
var _layers2JsDefault = parcelHelpers.interopDefault(_layers2Js);
var _layoutDashboardJs = require("./icons/layout-dashboard.js");
var _layoutDashboardJsDefault = parcelHelpers.interopDefault(_layoutDashboardJs);
var _layoutGridJs = require("./icons/layout-grid.js");
var _layoutGridJsDefault = parcelHelpers.interopDefault(_layoutGridJs);
var _layoutListJs = require("./icons/layout-list.js");
var _layoutListJsDefault = parcelHelpers.interopDefault(_layoutListJs);
var _layoutPanelLeftJs = require("./icons/layout-panel-left.js");
var _layoutPanelLeftJsDefault = parcelHelpers.interopDefault(_layoutPanelLeftJs);
var _layoutPanelTopJs = require("./icons/layout-panel-top.js");
var _layoutPanelTopJsDefault = parcelHelpers.interopDefault(_layoutPanelTopJs);
var _layoutTemplateJs = require("./icons/layout-template.js");
var _layoutTemplateJsDefault = parcelHelpers.interopDefault(_layoutTemplateJs);
var _leafJs = require("./icons/leaf.js");
var _leafJsDefault = parcelHelpers.interopDefault(_leafJs);
var _lecternJs = require("./icons/lectern.js");
var _lecternJsDefault = parcelHelpers.interopDefault(_lecternJs);
var _leafyGreenJs = require("./icons/leafy-green.js");
var _leafyGreenJsDefault = parcelHelpers.interopDefault(_leafyGreenJs);
var _letterTextJs = require("./icons/letter-text.js");
var _letterTextJsDefault = parcelHelpers.interopDefault(_letterTextJs);
var _libraryBigJs = require("./icons/library-big.js");
var _libraryBigJsDefault = parcelHelpers.interopDefault(_libraryBigJs);
var _libraryJs = require("./icons/library.js");
var _libraryJsDefault = parcelHelpers.interopDefault(_libraryJs);
var _lifeBuoyJs = require("./icons/life-buoy.js");
var _lifeBuoyJsDefault = parcelHelpers.interopDefault(_lifeBuoyJs);
var _ligatureJs = require("./icons/ligature.js");
var _ligatureJsDefault = parcelHelpers.interopDefault(_ligatureJs);
var _lightbulbOffJs = require("./icons/lightbulb-off.js");
var _lightbulbOffJsDefault = parcelHelpers.interopDefault(_lightbulbOffJs);
var _lightbulbJs = require("./icons/lightbulb.js");
var _lightbulbJsDefault = parcelHelpers.interopDefault(_lightbulbJs);
var _link2OffJs = require("./icons/link-2-off.js");
var _link2OffJsDefault = parcelHelpers.interopDefault(_link2OffJs);
var _linkJs = require("./icons/link.js");
var _linkJsDefault = parcelHelpers.interopDefault(_linkJs);
var _link2Js = require("./icons/link-2.js");
var _link2JsDefault = parcelHelpers.interopDefault(_link2Js);
var _linkedinJs = require("./icons/linkedin.js");
var _linkedinJsDefault = parcelHelpers.interopDefault(_linkedinJs);
var _listCheckJs = require("./icons/list-check.js");
var _listCheckJsDefault = parcelHelpers.interopDefault(_listCheckJs);
var _listChecksJs = require("./icons/list-checks.js");
var _listChecksJsDefault = parcelHelpers.interopDefault(_listChecksJs);
var _listCollapseJs = require("./icons/list-collapse.js");
var _listCollapseJsDefault = parcelHelpers.interopDefault(_listCollapseJs);
var _listFilterJs = require("./icons/list-filter.js");
var _listFilterJsDefault = parcelHelpers.interopDefault(_listFilterJs);
var _listEndJs = require("./icons/list-end.js");
var _listEndJsDefault = parcelHelpers.interopDefault(_listEndJs);
var _listFilterPlusJs = require("./icons/list-filter-plus.js");
var _listFilterPlusJsDefault = parcelHelpers.interopDefault(_listFilterPlusJs);
var _listMinusJs = require("./icons/list-minus.js");
var _listMinusJsDefault = parcelHelpers.interopDefault(_listMinusJs);
var _listMusicJs = require("./icons/list-music.js");
var _listMusicJsDefault = parcelHelpers.interopDefault(_listMusicJs);
var _listPlusJs = require("./icons/list-plus.js");
var _listPlusJsDefault = parcelHelpers.interopDefault(_listPlusJs);
var _listOrderedJs = require("./icons/list-ordered.js");
var _listOrderedJsDefault = parcelHelpers.interopDefault(_listOrderedJs);
var _listRestartJs = require("./icons/list-restart.js");
var _listRestartJsDefault = parcelHelpers.interopDefault(_listRestartJs);
var _listStartJs = require("./icons/list-start.js");
var _listStartJsDefault = parcelHelpers.interopDefault(_listStartJs);
var _listTodoJs = require("./icons/list-todo.js");
var _listTodoJsDefault = parcelHelpers.interopDefault(_listTodoJs);
var _listTreeJs = require("./icons/list-tree.js");
var _listTreeJsDefault = parcelHelpers.interopDefault(_listTreeJs);
var _listVideoJs = require("./icons/list-video.js");
var _listVideoJsDefault = parcelHelpers.interopDefault(_listVideoJs);
var _listXJs = require("./icons/list-x.js");
var _listXJsDefault = parcelHelpers.interopDefault(_listXJs);
var _loaderPinwheelJs = require("./icons/loader-pinwheel.js");
var _loaderPinwheelJsDefault = parcelHelpers.interopDefault(_loaderPinwheelJs);
var _loaderJs = require("./icons/loader.js");
var _loaderJsDefault = parcelHelpers.interopDefault(_loaderJs);
var _listJs = require("./icons/list.js");
var _listJsDefault = parcelHelpers.interopDefault(_listJs);
var _locateFixedJs = require("./icons/locate-fixed.js");
var _locateFixedJsDefault = parcelHelpers.interopDefault(_locateFixedJs);
var _locateOffJs = require("./icons/locate-off.js");
var _locateOffJsDefault = parcelHelpers.interopDefault(_locateOffJs);
var _locateJs = require("./icons/locate.js");
var _locateJsDefault = parcelHelpers.interopDefault(_locateJs);
var _locationEditJs = require("./icons/location-edit.js");
var _locationEditJsDefault = parcelHelpers.interopDefault(_locationEditJs);
var _lockKeyholeJs = require("./icons/lock-keyhole.js");
var _lockKeyholeJsDefault = parcelHelpers.interopDefault(_lockKeyholeJs);
var _lockJs = require("./icons/lock.js");
var _lockJsDefault = parcelHelpers.interopDefault(_lockJs);
var _logInJs = require("./icons/log-in.js");
var _logInJsDefault = parcelHelpers.interopDefault(_logInJs);
var _logOutJs = require("./icons/log-out.js");
var _logOutJsDefault = parcelHelpers.interopDefault(_logOutJs);
var _logsJs = require("./icons/logs.js");
var _logsJsDefault = parcelHelpers.interopDefault(_logsJs);
var _lollipopJs = require("./icons/lollipop.js");
var _lollipopJsDefault = parcelHelpers.interopDefault(_lollipopJs);
var _luggageJs = require("./icons/luggage.js");
var _luggageJsDefault = parcelHelpers.interopDefault(_luggageJs);
var _magnetJs = require("./icons/magnet.js");
var _magnetJsDefault = parcelHelpers.interopDefault(_magnetJs);
var _mailMinusJs = require("./icons/mail-minus.js");
var _mailMinusJsDefault = parcelHelpers.interopDefault(_mailMinusJs);
var _mailOpenJs = require("./icons/mail-open.js");
var _mailOpenJsDefault = parcelHelpers.interopDefault(_mailOpenJs);
var _mailCheckJs = require("./icons/mail-check.js");
var _mailCheckJsDefault = parcelHelpers.interopDefault(_mailCheckJs);
var _mailPlusJs = require("./icons/mail-plus.js");
var _mailPlusJsDefault = parcelHelpers.interopDefault(_mailPlusJs);
var _mailSearchJs = require("./icons/mail-search.js");
var _mailSearchJsDefault = parcelHelpers.interopDefault(_mailSearchJs);
var _mailQuestionJs = require("./icons/mail-question.js");
var _mailQuestionJsDefault = parcelHelpers.interopDefault(_mailQuestionJs);
var _mailWarningJs = require("./icons/mail-warning.js");
var _mailWarningJsDefault = parcelHelpers.interopDefault(_mailWarningJs);
var _mailXJs = require("./icons/mail-x.js");
var _mailXJsDefault = parcelHelpers.interopDefault(_mailXJs);
var _mailJs = require("./icons/mail.js");
var _mailJsDefault = parcelHelpers.interopDefault(_mailJs);
var _mailboxJs = require("./icons/mailbox.js");
var _mailboxJsDefault = parcelHelpers.interopDefault(_mailboxJs);
var _mailsJs = require("./icons/mails.js");
var _mailsJsDefault = parcelHelpers.interopDefault(_mailsJs);
var _mapPinCheckInsideJs = require("./icons/map-pin-check-inside.js");
var _mapPinCheckInsideJsDefault = parcelHelpers.interopDefault(_mapPinCheckInsideJs);
var _mapPinCheckJs = require("./icons/map-pin-check.js");
var _mapPinCheckJsDefault = parcelHelpers.interopDefault(_mapPinCheckJs);
var _mapPinHouseJs = require("./icons/map-pin-house.js");
var _mapPinHouseJsDefault = parcelHelpers.interopDefault(_mapPinHouseJs);
var _mapPinMinusInsideJs = require("./icons/map-pin-minus-inside.js");
var _mapPinMinusInsideJsDefault = parcelHelpers.interopDefault(_mapPinMinusInsideJs);
var _mapPinMinusJs = require("./icons/map-pin-minus.js");
var _mapPinMinusJsDefault = parcelHelpers.interopDefault(_mapPinMinusJs);
var _mapPinOffJs = require("./icons/map-pin-off.js");
var _mapPinOffJsDefault = parcelHelpers.interopDefault(_mapPinOffJs);
var _mapPinPlusInsideJs = require("./icons/map-pin-plus-inside.js");
var _mapPinPlusInsideJsDefault = parcelHelpers.interopDefault(_mapPinPlusInsideJs);
var _mapPinPlusJs = require("./icons/map-pin-plus.js");
var _mapPinPlusJsDefault = parcelHelpers.interopDefault(_mapPinPlusJs);
var _mapPinXInsideJs = require("./icons/map-pin-x-inside.js");
var _mapPinXInsideJsDefault = parcelHelpers.interopDefault(_mapPinXInsideJs);
var _mapPinXJs = require("./icons/map-pin-x.js");
var _mapPinXJsDefault = parcelHelpers.interopDefault(_mapPinXJs);
var _mapPinnedJs = require("./icons/map-pinned.js");
var _mapPinnedJsDefault = parcelHelpers.interopDefault(_mapPinnedJs);
var _mapPinJs = require("./icons/map-pin.js");
var _mapPinJsDefault = parcelHelpers.interopDefault(_mapPinJs);
var _mapPlusJs = require("./icons/map-plus.js");
var _mapPlusJsDefault = parcelHelpers.interopDefault(_mapPlusJs);
var _mapJs = require("./icons/map.js");
var _mapJsDefault = parcelHelpers.interopDefault(_mapJs);
var _marsStrokeJs = require("./icons/mars-stroke.js");
var _marsStrokeJsDefault = parcelHelpers.interopDefault(_marsStrokeJs);
var _martiniJs = require("./icons/martini.js");
var _martiniJsDefault = parcelHelpers.interopDefault(_martiniJs);
var _marsJs = require("./icons/mars.js");
var _marsJsDefault = parcelHelpers.interopDefault(_marsJs);
var _maximize2Js = require("./icons/maximize-2.js");
var _maximize2JsDefault = parcelHelpers.interopDefault(_maximize2Js);
var _maximizeJs = require("./icons/maximize.js");
var _maximizeJsDefault = parcelHelpers.interopDefault(_maximizeJs);
var _medalJs = require("./icons/medal.js");
var _medalJsDefault = parcelHelpers.interopDefault(_medalJs);
var _megaphoneOffJs = require("./icons/megaphone-off.js");
var _megaphoneOffJsDefault = parcelHelpers.interopDefault(_megaphoneOffJs);
var _megaphoneJs = require("./icons/megaphone.js");
var _megaphoneJsDefault = parcelHelpers.interopDefault(_megaphoneJs);
var _mehJs = require("./icons/meh.js");
var _mehJsDefault = parcelHelpers.interopDefault(_mehJs);
var _memoryStickJs = require("./icons/memory-stick.js");
var _memoryStickJsDefault = parcelHelpers.interopDefault(_memoryStickJs);
var _mergeJs = require("./icons/merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);
var _menuJs = require("./icons/menu.js");
var _menuJsDefault = parcelHelpers.interopDefault(_menuJs);
var _messageCircleCodeJs = require("./icons/message-circle-code.js");
var _messageCircleCodeJsDefault = parcelHelpers.interopDefault(_messageCircleCodeJs);
var _messageCircleDashedJs = require("./icons/message-circle-dashed.js");
var _messageCircleDashedJsDefault = parcelHelpers.interopDefault(_messageCircleDashedJs);
var _messageCircleHeartJs = require("./icons/message-circle-heart.js");
var _messageCircleHeartJsDefault = parcelHelpers.interopDefault(_messageCircleHeartJs);
var _messageCircleMoreJs = require("./icons/message-circle-more.js");
var _messageCircleMoreJsDefault = parcelHelpers.interopDefault(_messageCircleMoreJs);
var _messageCircleOffJs = require("./icons/message-circle-off.js");
var _messageCircleOffJsDefault = parcelHelpers.interopDefault(_messageCircleOffJs);
var _messageCirclePlusJs = require("./icons/message-circle-plus.js");
var _messageCirclePlusJsDefault = parcelHelpers.interopDefault(_messageCirclePlusJs);
var _messageCircleQuestionJs = require("./icons/message-circle-question.js");
var _messageCircleQuestionJsDefault = parcelHelpers.interopDefault(_messageCircleQuestionJs);
var _messageCircleReplyJs = require("./icons/message-circle-reply.js");
var _messageCircleReplyJsDefault = parcelHelpers.interopDefault(_messageCircleReplyJs);
var _messageCircleWarningJs = require("./icons/message-circle-warning.js");
var _messageCircleWarningJsDefault = parcelHelpers.interopDefault(_messageCircleWarningJs);
var _messageCircleXJs = require("./icons/message-circle-x.js");
var _messageCircleXJsDefault = parcelHelpers.interopDefault(_messageCircleXJs);
var _messageCircleJs = require("./icons/message-circle.js");
var _messageCircleJsDefault = parcelHelpers.interopDefault(_messageCircleJs);
var _messageSquareCodeJs = require("./icons/message-square-code.js");
var _messageSquareCodeJsDefault = parcelHelpers.interopDefault(_messageSquareCodeJs);
var _messageSquareDashedJs = require("./icons/message-square-dashed.js");
var _messageSquareDashedJsDefault = parcelHelpers.interopDefault(_messageSquareDashedJs);
var _messageSquareDotJs = require("./icons/message-square-dot.js");
var _messageSquareDotJsDefault = parcelHelpers.interopDefault(_messageSquareDotJs);
var _messageSquareDiffJs = require("./icons/message-square-diff.js");
var _messageSquareDiffJsDefault = parcelHelpers.interopDefault(_messageSquareDiffJs);
var _messageSquareHeartJs = require("./icons/message-square-heart.js");
var _messageSquareHeartJsDefault = parcelHelpers.interopDefault(_messageSquareHeartJs);
var _messageSquareLockJs = require("./icons/message-square-lock.js");
var _messageSquareLockJsDefault = parcelHelpers.interopDefault(_messageSquareLockJs);
var _messageSquareMoreJs = require("./icons/message-square-more.js");
var _messageSquareMoreJsDefault = parcelHelpers.interopDefault(_messageSquareMoreJs);
var _messageSquareOffJs = require("./icons/message-square-off.js");
var _messageSquareOffJsDefault = parcelHelpers.interopDefault(_messageSquareOffJs);
var _messageSquarePlusJs = require("./icons/message-square-plus.js");
var _messageSquarePlusJsDefault = parcelHelpers.interopDefault(_messageSquarePlusJs);
var _messageSquareQuoteJs = require("./icons/message-square-quote.js");
var _messageSquareQuoteJsDefault = parcelHelpers.interopDefault(_messageSquareQuoteJs);
var _messageSquareReplyJs = require("./icons/message-square-reply.js");
var _messageSquareReplyJsDefault = parcelHelpers.interopDefault(_messageSquareReplyJs);
var _messageSquareShareJs = require("./icons/message-square-share.js");
var _messageSquareShareJsDefault = parcelHelpers.interopDefault(_messageSquareShareJs);
var _messageSquareTextJs = require("./icons/message-square-text.js");
var _messageSquareTextJsDefault = parcelHelpers.interopDefault(_messageSquareTextJs);
var _messageSquareXJs = require("./icons/message-square-x.js");
var _messageSquareXJsDefault = parcelHelpers.interopDefault(_messageSquareXJs);
var _messageSquareWarningJs = require("./icons/message-square-warning.js");
var _messageSquareWarningJsDefault = parcelHelpers.interopDefault(_messageSquareWarningJs);
var _messageSquareJs = require("./icons/message-square.js");
var _messageSquareJsDefault = parcelHelpers.interopDefault(_messageSquareJs);
var _messagesSquareJs = require("./icons/messages-square.js");
var _messagesSquareJsDefault = parcelHelpers.interopDefault(_messagesSquareJs);
var _micOffJs = require("./icons/mic-off.js");
var _micOffJsDefault = parcelHelpers.interopDefault(_micOffJs);
var _micJs = require("./icons/mic.js");
var _micJsDefault = parcelHelpers.interopDefault(_micJs);
var _microchipJs = require("./icons/microchip.js");
var _microchipJsDefault = parcelHelpers.interopDefault(_microchipJs);
var _microscopeJs = require("./icons/microscope.js");
var _microscopeJsDefault = parcelHelpers.interopDefault(_microscopeJs);
var _microwaveJs = require("./icons/microwave.js");
var _microwaveJsDefault = parcelHelpers.interopDefault(_microwaveJs);
var _milestoneJs = require("./icons/milestone.js");
var _milestoneJsDefault = parcelHelpers.interopDefault(_milestoneJs);
var _milkOffJs = require("./icons/milk-off.js");
var _milkOffJsDefault = parcelHelpers.interopDefault(_milkOffJs);
var _milkJs = require("./icons/milk.js");
var _milkJsDefault = parcelHelpers.interopDefault(_milkJs);
var _minimize2Js = require("./icons/minimize-2.js");
var _minimize2JsDefault = parcelHelpers.interopDefault(_minimize2Js);
var _minimizeJs = require("./icons/minimize.js");
var _minimizeJsDefault = parcelHelpers.interopDefault(_minimizeJs);
var _minusJs = require("./icons/minus.js");
var _minusJsDefault = parcelHelpers.interopDefault(_minusJs);
var _monitorCheckJs = require("./icons/monitor-check.js");
var _monitorCheckJsDefault = parcelHelpers.interopDefault(_monitorCheckJs);
var _monitorCogJs = require("./icons/monitor-cog.js");
var _monitorCogJsDefault = parcelHelpers.interopDefault(_monitorCogJs);
var _monitorDotJs = require("./icons/monitor-dot.js");
var _monitorDotJsDefault = parcelHelpers.interopDefault(_monitorDotJs);
var _monitorOffJs = require("./icons/monitor-off.js");
var _monitorOffJsDefault = parcelHelpers.interopDefault(_monitorOffJs);
var _monitorDownJs = require("./icons/monitor-down.js");
var _monitorDownJsDefault = parcelHelpers.interopDefault(_monitorDownJs);
var _monitorPauseJs = require("./icons/monitor-pause.js");
var _monitorPauseJsDefault = parcelHelpers.interopDefault(_monitorPauseJs);
var _monitorSmartphoneJs = require("./icons/monitor-smartphone.js");
var _monitorSmartphoneJsDefault = parcelHelpers.interopDefault(_monitorSmartphoneJs);
var _monitorPlayJs = require("./icons/monitor-play.js");
var _monitorPlayJsDefault = parcelHelpers.interopDefault(_monitorPlayJs);
var _monitorSpeakerJs = require("./icons/monitor-speaker.js");
var _monitorSpeakerJsDefault = parcelHelpers.interopDefault(_monitorSpeakerJs);
var _monitorUpJs = require("./icons/monitor-up.js");
var _monitorUpJsDefault = parcelHelpers.interopDefault(_monitorUpJs);
var _monitorStopJs = require("./icons/monitor-stop.js");
var _monitorStopJsDefault = parcelHelpers.interopDefault(_monitorStopJs);
var _monitorXJs = require("./icons/monitor-x.js");
var _monitorXJsDefault = parcelHelpers.interopDefault(_monitorXJs);
var _monitorJs = require("./icons/monitor.js");
var _monitorJsDefault = parcelHelpers.interopDefault(_monitorJs);
var _moonStarJs = require("./icons/moon-star.js");
var _moonStarJsDefault = parcelHelpers.interopDefault(_moonStarJs);
var _moonJs = require("./icons/moon.js");
var _moonJsDefault = parcelHelpers.interopDefault(_moonJs);
var _mountainSnowJs = require("./icons/mountain-snow.js");
var _mountainSnowJsDefault = parcelHelpers.interopDefault(_mountainSnowJs);
var _mouseOffJs = require("./icons/mouse-off.js");
var _mouseOffJsDefault = parcelHelpers.interopDefault(_mouseOffJs);
var _mountainJs = require("./icons/mountain.js");
var _mountainJsDefault = parcelHelpers.interopDefault(_mountainJs);
var _mousePointer2Js = require("./icons/mouse-pointer-2.js");
var _mousePointer2JsDefault = parcelHelpers.interopDefault(_mousePointer2Js);
var _mousePointerBanJs = require("./icons/mouse-pointer-ban.js");
var _mousePointerBanJsDefault = parcelHelpers.interopDefault(_mousePointerBanJs);
var _mousePointerClickJs = require("./icons/mouse-pointer-click.js");
var _mousePointerClickJsDefault = parcelHelpers.interopDefault(_mousePointerClickJs);
var _mouseJs = require("./icons/mouse.js");
var _mouseJsDefault = parcelHelpers.interopDefault(_mouseJs);
var _moveDiagonal2Js = require("./icons/move-diagonal-2.js");
var _moveDiagonal2JsDefault = parcelHelpers.interopDefault(_moveDiagonal2Js);
var _mousePointerJs = require("./icons/mouse-pointer.js");
var _mousePointerJsDefault = parcelHelpers.interopDefault(_mousePointerJs);
var _moveDiagonalJs = require("./icons/move-diagonal.js");
var _moveDiagonalJsDefault = parcelHelpers.interopDefault(_moveDiagonalJs);
var _moveDownLeftJs = require("./icons/move-down-left.js");
var _moveDownLeftJsDefault = parcelHelpers.interopDefault(_moveDownLeftJs);
var _moveDownRightJs = require("./icons/move-down-right.js");
var _moveDownRightJsDefault = parcelHelpers.interopDefault(_moveDownRightJs);
var _moveDownJs = require("./icons/move-down.js");
var _moveDownJsDefault = parcelHelpers.interopDefault(_moveDownJs);
var _moveHorizontalJs = require("./icons/move-horizontal.js");
var _moveHorizontalJsDefault = parcelHelpers.interopDefault(_moveHorizontalJs);
var _moveLeftJs = require("./icons/move-left.js");
var _moveLeftJsDefault = parcelHelpers.interopDefault(_moveLeftJs);
var _moveRightJs = require("./icons/move-right.js");
var _moveRightJsDefault = parcelHelpers.interopDefault(_moveRightJs);
var _moveUpLeftJs = require("./icons/move-up-left.js");
var _moveUpLeftJsDefault = parcelHelpers.interopDefault(_moveUpLeftJs);
var _moveUpRightJs = require("./icons/move-up-right.js");
var _moveUpRightJsDefault = parcelHelpers.interopDefault(_moveUpRightJs);
var _moveUpJs = require("./icons/move-up.js");
var _moveUpJsDefault = parcelHelpers.interopDefault(_moveUpJs);
var _moveVerticalJs = require("./icons/move-vertical.js");
var _moveVerticalJsDefault = parcelHelpers.interopDefault(_moveVerticalJs);
var _moveJs = require("./icons/move.js");
var _moveJsDefault = parcelHelpers.interopDefault(_moveJs);
var _music2Js = require("./icons/music-2.js");
var _music2JsDefault = parcelHelpers.interopDefault(_music2Js);
var _music3Js = require("./icons/music-3.js");
var _music3JsDefault = parcelHelpers.interopDefault(_music3Js);
var _music4Js = require("./icons/music-4.js");
var _music4JsDefault = parcelHelpers.interopDefault(_music4Js);
var _navigation2OffJs = require("./icons/navigation-2-off.js");
var _navigation2OffJsDefault = parcelHelpers.interopDefault(_navigation2OffJs);
var _musicJs = require("./icons/music.js");
var _musicJsDefault = parcelHelpers.interopDefault(_musicJs);
var _navigationOffJs = require("./icons/navigation-off.js");
var _navigationOffJsDefault = parcelHelpers.interopDefault(_navigationOffJs);
var _navigation2Js = require("./icons/navigation-2.js");
var _navigation2JsDefault = parcelHelpers.interopDefault(_navigation2Js);
var _navigationJs = require("./icons/navigation.js");
var _navigationJsDefault = parcelHelpers.interopDefault(_navigationJs);
var _networkJs = require("./icons/network.js");
var _networkJsDefault = parcelHelpers.interopDefault(_networkJs);
var _newspaperJs = require("./icons/newspaper.js");
var _newspaperJsDefault = parcelHelpers.interopDefault(_newspaperJs);
var _nfcJs = require("./icons/nfc.js");
var _nfcJsDefault = parcelHelpers.interopDefault(_nfcJs);
var _nonBinaryJs = require("./icons/non-binary.js");
var _nonBinaryJsDefault = parcelHelpers.interopDefault(_nonBinaryJs);
var _notebookPenJs = require("./icons/notebook-pen.js");
var _notebookPenJsDefault = parcelHelpers.interopDefault(_notebookPenJs);
var _notebookTabsJs = require("./icons/notebook-tabs.js");
var _notebookTabsJsDefault = parcelHelpers.interopDefault(_notebookTabsJs);
var _notebookTextJs = require("./icons/notebook-text.js");
var _notebookTextJsDefault = parcelHelpers.interopDefault(_notebookTextJs);
var _notebookJs = require("./icons/notebook.js");
var _notebookJsDefault = parcelHelpers.interopDefault(_notebookJs);
var _notepadTextDashedJs = require("./icons/notepad-text-dashed.js");
var _notepadTextDashedJsDefault = parcelHelpers.interopDefault(_notepadTextDashedJs);
var _notepadTextJs = require("./icons/notepad-text.js");
var _notepadTextJsDefault = parcelHelpers.interopDefault(_notepadTextJs);
var _nutOffJs = require("./icons/nut-off.js");
var _nutOffJsDefault = parcelHelpers.interopDefault(_nutOffJs);
var _nutJs = require("./icons/nut.js");
var _nutJsDefault = parcelHelpers.interopDefault(_nutJs);
var _octagonMinusJs = require("./icons/octagon-minus.js");
var _octagonMinusJsDefault = parcelHelpers.interopDefault(_octagonMinusJs);
var _octagonJs = require("./icons/octagon.js");
var _octagonJsDefault = parcelHelpers.interopDefault(_octagonJs);
var _omegaJs = require("./icons/omega.js");
var _omegaJsDefault = parcelHelpers.interopDefault(_omegaJs);
var _optionJs = require("./icons/option.js");
var _optionJsDefault = parcelHelpers.interopDefault(_optionJs);
var _orbitJs = require("./icons/orbit.js");
var _orbitJsDefault = parcelHelpers.interopDefault(_orbitJs);
var _origamiJs = require("./icons/origami.js");
var _origamiJsDefault = parcelHelpers.interopDefault(_origamiJs);
var _package2Js = require("./icons/package-2.js");
var _package2JsDefault = parcelHelpers.interopDefault(_package2Js);
var _packageCheckJs = require("./icons/package-check.js");
var _packageCheckJsDefault = parcelHelpers.interopDefault(_packageCheckJs);
var _packageMinusJs = require("./icons/package-minus.js");
var _packageMinusJsDefault = parcelHelpers.interopDefault(_packageMinusJs);
var _packageOpenJs = require("./icons/package-open.js");
var _packageOpenJsDefault = parcelHelpers.interopDefault(_packageOpenJs);
var _packagePlusJs = require("./icons/package-plus.js");
var _packagePlusJsDefault = parcelHelpers.interopDefault(_packagePlusJs);
var _packageSearchJs = require("./icons/package-search.js");
var _packageSearchJsDefault = parcelHelpers.interopDefault(_packageSearchJs);
var _packageXJs = require("./icons/package-x.js");
var _packageXJsDefault = parcelHelpers.interopDefault(_packageXJs);
var _packageJs = require("./icons/package.js");
var _packageJsDefault = parcelHelpers.interopDefault(_packageJs);
var _paintBucketJs = require("./icons/paint-bucket.js");
var _paintBucketJsDefault = parcelHelpers.interopDefault(_paintBucketJs);
var _paintRollerJs = require("./icons/paint-roller.js");
var _paintRollerJsDefault = parcelHelpers.interopDefault(_paintRollerJs);
var _paintbrushJs = require("./icons/paintbrush.js");
var _paintbrushJsDefault = parcelHelpers.interopDefault(_paintbrushJs);
var _paletteJs = require("./icons/palette.js");
var _paletteJsDefault = parcelHelpers.interopDefault(_paletteJs);
var _panelBottomCloseJs = require("./icons/panel-bottom-close.js");
var _panelBottomCloseJsDefault = parcelHelpers.interopDefault(_panelBottomCloseJs);
var _pandaJs = require("./icons/panda.js");
var _pandaJsDefault = parcelHelpers.interopDefault(_pandaJs);
var _panelBottomOpenJs = require("./icons/panel-bottom-open.js");
var _panelBottomOpenJsDefault = parcelHelpers.interopDefault(_panelBottomOpenJs);
var _panelBottomJs = require("./icons/panel-bottom.js");
var _panelBottomJsDefault = parcelHelpers.interopDefault(_panelBottomJs);
var _panelRightCloseJs = require("./icons/panel-right-close.js");
var _panelRightCloseJsDefault = parcelHelpers.interopDefault(_panelRightCloseJs);
var _panelRightOpenJs = require("./icons/panel-right-open.js");
var _panelRightOpenJsDefault = parcelHelpers.interopDefault(_panelRightOpenJs);
var _panelRightJs = require("./icons/panel-right.js");
var _panelRightJsDefault = parcelHelpers.interopDefault(_panelRightJs);
var _panelTopCloseJs = require("./icons/panel-top-close.js");
var _panelTopCloseJsDefault = parcelHelpers.interopDefault(_panelTopCloseJs);
var _panelTopOpenJs = require("./icons/panel-top-open.js");
var _panelTopOpenJsDefault = parcelHelpers.interopDefault(_panelTopOpenJs);
var _panelTopJs = require("./icons/panel-top.js");
var _panelTopJsDefault = parcelHelpers.interopDefault(_panelTopJs);
var _panelsLeftBottomJs = require("./icons/panels-left-bottom.js");
var _panelsLeftBottomJsDefault = parcelHelpers.interopDefault(_panelsLeftBottomJs);
var _panelsRightBottomJs = require("./icons/panels-right-bottom.js");
var _panelsRightBottomJsDefault = parcelHelpers.interopDefault(_panelsRightBottomJs);
var _paperclipJs = require("./icons/paperclip.js");
var _paperclipJsDefault = parcelHelpers.interopDefault(_paperclipJs);
var _parenthesesJs = require("./icons/parentheses.js");
var _parenthesesJsDefault = parcelHelpers.interopDefault(_parenthesesJs);
var _parkingMeterJs = require("./icons/parking-meter.js");
var _parkingMeterJsDefault = parcelHelpers.interopDefault(_parkingMeterJs);
var _partyPopperJs = require("./icons/party-popper.js");
var _partyPopperJsDefault = parcelHelpers.interopDefault(_partyPopperJs);
var _pauseJs = require("./icons/pause.js");
var _pauseJsDefault = parcelHelpers.interopDefault(_pauseJs);
var _pawPrintJs = require("./icons/paw-print.js");
var _pawPrintJsDefault = parcelHelpers.interopDefault(_pawPrintJs);
var _pcCaseJs = require("./icons/pc-case.js");
var _pcCaseJsDefault = parcelHelpers.interopDefault(_pcCaseJs);
var _penOffJs = require("./icons/pen-off.js");
var _penOffJsDefault = parcelHelpers.interopDefault(_penOffJs);
var _penToolJs = require("./icons/pen-tool.js");
var _penToolJsDefault = parcelHelpers.interopDefault(_penToolJs);
var _pencilLineJs = require("./icons/pencil-line.js");
var _pencilLineJsDefault = parcelHelpers.interopDefault(_pencilLineJs);
var _pencilOffJs = require("./icons/pencil-off.js");
var _pencilOffJsDefault = parcelHelpers.interopDefault(_pencilOffJs);
var _pencilJs = require("./icons/pencil.js");
var _pencilJsDefault = parcelHelpers.interopDefault(_pencilJs);
var _pencilRulerJs = require("./icons/pencil-ruler.js");
var _pencilRulerJsDefault = parcelHelpers.interopDefault(_pencilRulerJs);
var _pentagonJs = require("./icons/pentagon.js");
var _pentagonJsDefault = parcelHelpers.interopDefault(_pentagonJs);
var _percentJs = require("./icons/percent.js");
var _percentJsDefault = parcelHelpers.interopDefault(_percentJs);
var _personStandingJs = require("./icons/person-standing.js");
var _personStandingJsDefault = parcelHelpers.interopDefault(_personStandingJs);
var _philippinePesoJs = require("./icons/philippine-peso.js");
var _philippinePesoJsDefault = parcelHelpers.interopDefault(_philippinePesoJs);
var _phoneCallJs = require("./icons/phone-call.js");
var _phoneCallJsDefault = parcelHelpers.interopDefault(_phoneCallJs);
var _phoneForwardedJs = require("./icons/phone-forwarded.js");
var _phoneForwardedJsDefault = parcelHelpers.interopDefault(_phoneForwardedJs);
var _phoneIncomingJs = require("./icons/phone-incoming.js");
var _phoneIncomingJsDefault = parcelHelpers.interopDefault(_phoneIncomingJs);
var _phoneMissedJs = require("./icons/phone-missed.js");
var _phoneMissedJsDefault = parcelHelpers.interopDefault(_phoneMissedJs);
var _phoneOffJs = require("./icons/phone-off.js");
var _phoneOffJsDefault = parcelHelpers.interopDefault(_phoneOffJs);
var _phoneJs = require("./icons/phone.js");
var _phoneJsDefault = parcelHelpers.interopDefault(_phoneJs);
var _phoneOutgoingJs = require("./icons/phone-outgoing.js");
var _phoneOutgoingJsDefault = parcelHelpers.interopDefault(_phoneOutgoingJs);
var _piJs = require("./icons/pi.js");
var _piJsDefault = parcelHelpers.interopDefault(_piJs);
var _pianoJs = require("./icons/piano.js");
var _pianoJsDefault = parcelHelpers.interopDefault(_pianoJs);
var _pickaxeJs = require("./icons/pickaxe.js");
var _pickaxeJsDefault = parcelHelpers.interopDefault(_pickaxeJs);
var _pictureInPicture2Js = require("./icons/picture-in-picture-2.js");
var _pictureInPicture2JsDefault = parcelHelpers.interopDefault(_pictureInPicture2Js);
var _pictureInPictureJs = require("./icons/picture-in-picture.js");
var _pictureInPictureJsDefault = parcelHelpers.interopDefault(_pictureInPictureJs);
var _piggyBankJs = require("./icons/piggy-bank.js");
var _piggyBankJsDefault = parcelHelpers.interopDefault(_piggyBankJs);
var _pilcrowLeftJs = require("./icons/pilcrow-left.js");
var _pilcrowLeftJsDefault = parcelHelpers.interopDefault(_pilcrowLeftJs);
var _pilcrowRightJs = require("./icons/pilcrow-right.js");
var _pilcrowRightJsDefault = parcelHelpers.interopDefault(_pilcrowRightJs);
var _pilcrowJs = require("./icons/pilcrow.js");
var _pilcrowJsDefault = parcelHelpers.interopDefault(_pilcrowJs);
var _pillBottleJs = require("./icons/pill-bottle.js");
var _pillBottleJsDefault = parcelHelpers.interopDefault(_pillBottleJs);
var _pillJs = require("./icons/pill.js");
var _pillJsDefault = parcelHelpers.interopDefault(_pillJs);
var _pinOffJs = require("./icons/pin-off.js");
var _pinOffJsDefault = parcelHelpers.interopDefault(_pinOffJs);
var _pinJs = require("./icons/pin.js");
var _pinJsDefault = parcelHelpers.interopDefault(_pinJs);
var _pipetteJs = require("./icons/pipette.js");
var _pipetteJsDefault = parcelHelpers.interopDefault(_pipetteJs);
var _pizzaJs = require("./icons/pizza.js");
var _pizzaJsDefault = parcelHelpers.interopDefault(_pizzaJs);
var _planeLandingJs = require("./icons/plane-landing.js");
var _planeLandingJsDefault = parcelHelpers.interopDefault(_planeLandingJs);
var _planeTakeoffJs = require("./icons/plane-takeoff.js");
var _planeTakeoffJsDefault = parcelHelpers.interopDefault(_planeTakeoffJs);
var _planeJs = require("./icons/plane.js");
var _planeJsDefault = parcelHelpers.interopDefault(_planeJs);
var _playJs = require("./icons/play.js");
var _playJsDefault = parcelHelpers.interopDefault(_playJs);
var _plug2Js = require("./icons/plug-2.js");
var _plug2JsDefault = parcelHelpers.interopDefault(_plug2Js);
var _plugJs = require("./icons/plug.js");
var _plugJsDefault = parcelHelpers.interopDefault(_plugJs);
var _plusJs = require("./icons/plus.js");
var _plusJsDefault = parcelHelpers.interopDefault(_plusJs);
var _pocketKnifeJs = require("./icons/pocket-knife.js");
var _pocketKnifeJsDefault = parcelHelpers.interopDefault(_pocketKnifeJs);
var _pocketJs = require("./icons/pocket.js");
var _pocketJsDefault = parcelHelpers.interopDefault(_pocketJs);
var _podcastJs = require("./icons/podcast.js");
var _podcastJsDefault = parcelHelpers.interopDefault(_podcastJs);
var _pointerOffJs = require("./icons/pointer-off.js");
var _pointerOffJsDefault = parcelHelpers.interopDefault(_pointerOffJs);
var _pointerJs = require("./icons/pointer.js");
var _pointerJsDefault = parcelHelpers.interopDefault(_pointerJs);
var _popcornJs = require("./icons/popcorn.js");
var _popcornJsDefault = parcelHelpers.interopDefault(_popcornJs);
var _poundSterlingJs = require("./icons/pound-sterling.js");
var _poundSterlingJsDefault = parcelHelpers.interopDefault(_poundSterlingJs);
var _popsicleJs = require("./icons/popsicle.js");
var _popsicleJsDefault = parcelHelpers.interopDefault(_popsicleJs);
var _powerJs = require("./icons/power.js");
var _powerJsDefault = parcelHelpers.interopDefault(_powerJs);
var _powerOffJs = require("./icons/power-off.js");
var _powerOffJsDefault = parcelHelpers.interopDefault(_powerOffJs);
var _presentationJs = require("./icons/presentation.js");
var _presentationJsDefault = parcelHelpers.interopDefault(_presentationJs);
var _printerCheckJs = require("./icons/printer-check.js");
var _printerCheckJsDefault = parcelHelpers.interopDefault(_printerCheckJs);
var _printerJs = require("./icons/printer.js");
var _printerJsDefault = parcelHelpers.interopDefault(_printerJs);
var _projectorJs = require("./icons/projector.js");
var _projectorJsDefault = parcelHelpers.interopDefault(_projectorJs);
var _proportionsJs = require("./icons/proportions.js");
var _proportionsJsDefault = parcelHelpers.interopDefault(_proportionsJs);
var _puzzleJs = require("./icons/puzzle.js");
var _puzzleJsDefault = parcelHelpers.interopDefault(_puzzleJs);
var _pyramidJs = require("./icons/pyramid.js");
var _pyramidJsDefault = parcelHelpers.interopDefault(_pyramidJs);
var _qrCodeJs = require("./icons/qr-code.js");
var _qrCodeJsDefault = parcelHelpers.interopDefault(_qrCodeJs);
var _quoteJs = require("./icons/quote.js");
var _quoteJsDefault = parcelHelpers.interopDefault(_quoteJs);
var _rabbitJs = require("./icons/rabbit.js");
var _rabbitJsDefault = parcelHelpers.interopDefault(_rabbitJs);
var _radarJs = require("./icons/radar.js");
var _radarJsDefault = parcelHelpers.interopDefault(_radarJs);
var _radiationJs = require("./icons/radiation.js");
var _radiationJsDefault = parcelHelpers.interopDefault(_radiationJs);
var _radicalJs = require("./icons/radical.js");
var _radicalJsDefault = parcelHelpers.interopDefault(_radicalJs);
var _radioTowerJs = require("./icons/radio-tower.js");
var _radioTowerJsDefault = parcelHelpers.interopDefault(_radioTowerJs);
var _radioReceiverJs = require("./icons/radio-receiver.js");
var _radioReceiverJsDefault = parcelHelpers.interopDefault(_radioReceiverJs);
var _radioJs = require("./icons/radio.js");
var _radioJsDefault = parcelHelpers.interopDefault(_radioJs);
var _radiusJs = require("./icons/radius.js");
var _radiusJsDefault = parcelHelpers.interopDefault(_radiusJs);
var _railSymbolJs = require("./icons/rail-symbol.js");
var _railSymbolJsDefault = parcelHelpers.interopDefault(_railSymbolJs);
var _rainbowJs = require("./icons/rainbow.js");
var _rainbowJsDefault = parcelHelpers.interopDefault(_rainbowJs);
var _ratJs = require("./icons/rat.js");
var _ratJsDefault = parcelHelpers.interopDefault(_ratJs);
var _ratioJs = require("./icons/ratio.js");
var _ratioJsDefault = parcelHelpers.interopDefault(_ratioJs);
var _receiptCentJs = require("./icons/receipt-cent.js");
var _receiptCentJsDefault = parcelHelpers.interopDefault(_receiptCentJs);
var _receiptIndianRupeeJs = require("./icons/receipt-indian-rupee.js");
var _receiptIndianRupeeJsDefault = parcelHelpers.interopDefault(_receiptIndianRupeeJs);
var _receiptJapaneseYenJs = require("./icons/receipt-japanese-yen.js");
var _receiptJapaneseYenJsDefault = parcelHelpers.interopDefault(_receiptJapaneseYenJs);
var _receiptEuroJs = require("./icons/receipt-euro.js");
var _receiptEuroJsDefault = parcelHelpers.interopDefault(_receiptEuroJs);
var _receiptPoundSterlingJs = require("./icons/receipt-pound-sterling.js");
var _receiptPoundSterlingJsDefault = parcelHelpers.interopDefault(_receiptPoundSterlingJs);
var _receiptRussianRubleJs = require("./icons/receipt-russian-ruble.js");
var _receiptRussianRubleJsDefault = parcelHelpers.interopDefault(_receiptRussianRubleJs);
var _receiptSwissFrancJs = require("./icons/receipt-swiss-franc.js");
var _receiptSwissFrancJsDefault = parcelHelpers.interopDefault(_receiptSwissFrancJs);
var _receiptTextJs = require("./icons/receipt-text.js");
var _receiptTextJsDefault = parcelHelpers.interopDefault(_receiptTextJs);
var _receiptJs = require("./icons/receipt.js");
var _receiptJsDefault = parcelHelpers.interopDefault(_receiptJs);
var _rectangleGogglesJs = require("./icons/rectangle-goggles.js");
var _rectangleGogglesJsDefault = parcelHelpers.interopDefault(_rectangleGogglesJs);
var _rectangleHorizontalJs = require("./icons/rectangle-horizontal.js");
var _rectangleHorizontalJsDefault = parcelHelpers.interopDefault(_rectangleHorizontalJs);
var _rectangleVerticalJs = require("./icons/rectangle-vertical.js");
var _rectangleVerticalJsDefault = parcelHelpers.interopDefault(_rectangleVerticalJs);
var _recycleJs = require("./icons/recycle.js");
var _recycleJsDefault = parcelHelpers.interopDefault(_recycleJs);
var _redo2Js = require("./icons/redo-2.js");
var _redo2JsDefault = parcelHelpers.interopDefault(_redo2Js);
var _redoDotJs = require("./icons/redo-dot.js");
var _redoDotJsDefault = parcelHelpers.interopDefault(_redoDotJs);
var _redoJs = require("./icons/redo.js");
var _redoJsDefault = parcelHelpers.interopDefault(_redoJs);
var _refreshCcwDotJs = require("./icons/refresh-ccw-dot.js");
var _refreshCcwDotJsDefault = parcelHelpers.interopDefault(_refreshCcwDotJs);
var _refreshCcwJs = require("./icons/refresh-ccw.js");
var _refreshCcwJsDefault = parcelHelpers.interopDefault(_refreshCcwJs);
var _refreshCwOffJs = require("./icons/refresh-cw-off.js");
var _refreshCwOffJsDefault = parcelHelpers.interopDefault(_refreshCwOffJs);
var _refreshCwJs = require("./icons/refresh-cw.js");
var _refreshCwJsDefault = parcelHelpers.interopDefault(_refreshCwJs);
var _refrigeratorJs = require("./icons/refrigerator.js");
var _refrigeratorJsDefault = parcelHelpers.interopDefault(_refrigeratorJs);
var _regexJs = require("./icons/regex.js");
var _regexJsDefault = parcelHelpers.interopDefault(_regexJs);
var _removeFormattingJs = require("./icons/remove-formatting.js");
var _removeFormattingJsDefault = parcelHelpers.interopDefault(_removeFormattingJs);
var _repeat1Js = require("./icons/repeat-1.js");
var _repeat1JsDefault = parcelHelpers.interopDefault(_repeat1Js);
var _repeat2Js = require("./icons/repeat-2.js");
var _repeat2JsDefault = parcelHelpers.interopDefault(_repeat2Js);
var _repeatJs = require("./icons/repeat.js");
var _repeatJsDefault = parcelHelpers.interopDefault(_repeatJs);
var _replaceAllJs = require("./icons/replace-all.js");
var _replaceAllJsDefault = parcelHelpers.interopDefault(_replaceAllJs);
var _replaceJs = require("./icons/replace.js");
var _replaceJsDefault = parcelHelpers.interopDefault(_replaceJs);
var _replyAllJs = require("./icons/reply-all.js");
var _replyAllJsDefault = parcelHelpers.interopDefault(_replyAllJs);
var _replyJs = require("./icons/reply.js");
var _replyJsDefault = parcelHelpers.interopDefault(_replyJs);
var _rewindJs = require("./icons/rewind.js");
var _rewindJsDefault = parcelHelpers.interopDefault(_rewindJs);
var _ribbonJs = require("./icons/ribbon.js");
var _ribbonJsDefault = parcelHelpers.interopDefault(_ribbonJs);
var _rocketJs = require("./icons/rocket.js");
var _rocketJsDefault = parcelHelpers.interopDefault(_rocketJs);
var _rockingChairJs = require("./icons/rocking-chair.js");
var _rockingChairJsDefault = parcelHelpers.interopDefault(_rockingChairJs);
var _rollerCoasterJs = require("./icons/roller-coaster.js");
var _rollerCoasterJsDefault = parcelHelpers.interopDefault(_rollerCoasterJs);
var _rotateCcwKeyJs = require("./icons/rotate-ccw-key.js");
var _rotateCcwKeyJsDefault = parcelHelpers.interopDefault(_rotateCcwKeyJs);
var _rotateCcwSquareJs = require("./icons/rotate-ccw-square.js");
var _rotateCcwSquareJsDefault = parcelHelpers.interopDefault(_rotateCcwSquareJs);
var _rotateCcwJs = require("./icons/rotate-ccw.js");
var _rotateCcwJsDefault = parcelHelpers.interopDefault(_rotateCcwJs);
var _rotateCwSquareJs = require("./icons/rotate-cw-square.js");
var _rotateCwSquareJsDefault = parcelHelpers.interopDefault(_rotateCwSquareJs);
var _rotateCwJs = require("./icons/rotate-cw.js");
var _rotateCwJsDefault = parcelHelpers.interopDefault(_rotateCwJs);
var _routeOffJs = require("./icons/route-off.js");
var _routeOffJsDefault = parcelHelpers.interopDefault(_routeOffJs);
var _routeJs = require("./icons/route.js");
var _routeJsDefault = parcelHelpers.interopDefault(_routeJs);
var _routerJs = require("./icons/router.js");
var _routerJsDefault = parcelHelpers.interopDefault(_routerJs);
var _rows4Js = require("./icons/rows-4.js");
var _rows4JsDefault = parcelHelpers.interopDefault(_rows4Js);
var _rssJs = require("./icons/rss.js");
var _rssJsDefault = parcelHelpers.interopDefault(_rssJs);
var _rulerDimensionLineJs = require("./icons/ruler-dimension-line.js");
var _rulerDimensionLineJsDefault = parcelHelpers.interopDefault(_rulerDimensionLineJs);
var _rulerJs = require("./icons/ruler.js");
var _rulerJsDefault = parcelHelpers.interopDefault(_rulerJs);
var _russianRubleJs = require("./icons/russian-ruble.js");
var _russianRubleJsDefault = parcelHelpers.interopDefault(_russianRubleJs);
var _sailboatJs = require("./icons/sailboat.js");
var _sailboatJsDefault = parcelHelpers.interopDefault(_sailboatJs);
var _saladJs = require("./icons/salad.js");
var _saladJsDefault = parcelHelpers.interopDefault(_saladJs);
var _sandwichJs = require("./icons/sandwich.js");
var _sandwichJsDefault = parcelHelpers.interopDefault(_sandwichJs);
var _satelliteDishJs = require("./icons/satellite-dish.js");
var _satelliteDishJsDefault = parcelHelpers.interopDefault(_satelliteDishJs);
var _satelliteJs = require("./icons/satellite.js");
var _satelliteJsDefault = parcelHelpers.interopDefault(_satelliteJs);
var _saudiRiyalJs = require("./icons/saudi-riyal.js");
var _saudiRiyalJsDefault = parcelHelpers.interopDefault(_saudiRiyalJs);
var _saveAllJs = require("./icons/save-all.js");
var _saveAllJsDefault = parcelHelpers.interopDefault(_saveAllJs);
var _saveOffJs = require("./icons/save-off.js");
var _saveOffJsDefault = parcelHelpers.interopDefault(_saveOffJs);
var _saveJs = require("./icons/save.js");
var _saveJsDefault = parcelHelpers.interopDefault(_saveJs);
var _scaleJs = require("./icons/scale.js");
var _scaleJsDefault = parcelHelpers.interopDefault(_scaleJs);
var _scalingJs = require("./icons/scaling.js");
var _scalingJsDefault = parcelHelpers.interopDefault(_scalingJs);
var _scanBarcodeJs = require("./icons/scan-barcode.js");
var _scanBarcodeJsDefault = parcelHelpers.interopDefault(_scanBarcodeJs);
var _scanFaceJs = require("./icons/scan-face.js");
var _scanFaceJsDefault = parcelHelpers.interopDefault(_scanFaceJs);
var _scanEyeJs = require("./icons/scan-eye.js");
var _scanEyeJsDefault = parcelHelpers.interopDefault(_scanEyeJs);
var _scanHeartJs = require("./icons/scan-heart.js");
var _scanHeartJsDefault = parcelHelpers.interopDefault(_scanHeartJs);
var _scanLineJs = require("./icons/scan-line.js");
var _scanLineJsDefault = parcelHelpers.interopDefault(_scanLineJs);
var _scanQrCodeJs = require("./icons/scan-qr-code.js");
var _scanQrCodeJsDefault = parcelHelpers.interopDefault(_scanQrCodeJs);
var _scanSearchJs = require("./icons/scan-search.js");
var _scanSearchJsDefault = parcelHelpers.interopDefault(_scanSearchJs);
var _scanTextJs = require("./icons/scan-text.js");
var _scanTextJsDefault = parcelHelpers.interopDefault(_scanTextJs);
var _scanJs = require("./icons/scan.js");
var _scanJsDefault = parcelHelpers.interopDefault(_scanJs);
var _schoolJs = require("./icons/school.js");
var _schoolJsDefault = parcelHelpers.interopDefault(_schoolJs);
var _scissorsJs = require("./icons/scissors.js");
var _scissorsJsDefault = parcelHelpers.interopDefault(_scissorsJs);
var _scissorsLineDashedJs = require("./icons/scissors-line-dashed.js");
var _scissorsLineDashedJsDefault = parcelHelpers.interopDefault(_scissorsLineDashedJs);
var _screenShareOffJs = require("./icons/screen-share-off.js");
var _screenShareOffJsDefault = parcelHelpers.interopDefault(_screenShareOffJs);
var _screenShareJs = require("./icons/screen-share.js");
var _screenShareJsDefault = parcelHelpers.interopDefault(_screenShareJs);
var _scrollTextJs = require("./icons/scroll-text.js");
var _scrollTextJsDefault = parcelHelpers.interopDefault(_scrollTextJs);
var _scrollJs = require("./icons/scroll.js");
var _scrollJsDefault = parcelHelpers.interopDefault(_scrollJs);
var _searchCheckJs = require("./icons/search-check.js");
var _searchCheckJsDefault = parcelHelpers.interopDefault(_searchCheckJs);
var _searchCodeJs = require("./icons/search-code.js");
var _searchCodeJsDefault = parcelHelpers.interopDefault(_searchCodeJs);
var _searchSlashJs = require("./icons/search-slash.js");
var _searchSlashJsDefault = parcelHelpers.interopDefault(_searchSlashJs);
var _searchXJs = require("./icons/search-x.js");
var _searchXJsDefault = parcelHelpers.interopDefault(_searchXJs);
var _searchJs = require("./icons/search.js");
var _searchJsDefault = parcelHelpers.interopDefault(_searchJs);
var _sectionJs = require("./icons/section.js");
var _sectionJsDefault = parcelHelpers.interopDefault(_sectionJs);
var _sendToBackJs = require("./icons/send-to-back.js");
var _sendToBackJsDefault = parcelHelpers.interopDefault(_sendToBackJs);
var _sendJs = require("./icons/send.js");
var _sendJsDefault = parcelHelpers.interopDefault(_sendJs);
var _separatorHorizontalJs = require("./icons/separator-horizontal.js");
var _separatorHorizontalJsDefault = parcelHelpers.interopDefault(_separatorHorizontalJs);
var _separatorVerticalJs = require("./icons/separator-vertical.js");
var _separatorVerticalJsDefault = parcelHelpers.interopDefault(_separatorVerticalJs);
var _serverCogJs = require("./icons/server-cog.js");
var _serverCogJsDefault = parcelHelpers.interopDefault(_serverCogJs);
var _serverCrashJs = require("./icons/server-crash.js");
var _serverCrashJsDefault = parcelHelpers.interopDefault(_serverCrashJs);
var _serverOffJs = require("./icons/server-off.js");
var _serverOffJsDefault = parcelHelpers.interopDefault(_serverOffJs);
var _serverJs = require("./icons/server.js");
var _serverJsDefault = parcelHelpers.interopDefault(_serverJs);
var _settings2Js = require("./icons/settings-2.js");
var _settings2JsDefault = parcelHelpers.interopDefault(_settings2Js);
var _settingsJs = require("./icons/settings.js");
var _settingsJsDefault = parcelHelpers.interopDefault(_settingsJs);
var _shapesJs = require("./icons/shapes.js");
var _shapesJsDefault = parcelHelpers.interopDefault(_shapesJs);
var _share2Js = require("./icons/share-2.js");
var _share2JsDefault = parcelHelpers.interopDefault(_share2Js);
var _shareJs = require("./icons/share.js");
var _shareJsDefault = parcelHelpers.interopDefault(_shareJs);
var _shellJs = require("./icons/shell.js");
var _shellJsDefault = parcelHelpers.interopDefault(_shellJs);
var _sheetJs = require("./icons/sheet.js");
var _sheetJsDefault = parcelHelpers.interopDefault(_sheetJs);
var _shieldAlertJs = require("./icons/shield-alert.js");
var _shieldAlertJsDefault = parcelHelpers.interopDefault(_shieldAlertJs);
var _shieldBanJs = require("./icons/shield-ban.js");
var _shieldBanJsDefault = parcelHelpers.interopDefault(_shieldBanJs);
var _shieldCheckJs = require("./icons/shield-check.js");
var _shieldCheckJsDefault = parcelHelpers.interopDefault(_shieldCheckJs);
var _shieldEllipsisJs = require("./icons/shield-ellipsis.js");
var _shieldEllipsisJsDefault = parcelHelpers.interopDefault(_shieldEllipsisJs);
var _shieldHalfJs = require("./icons/shield-half.js");
var _shieldHalfJsDefault = parcelHelpers.interopDefault(_shieldHalfJs);
var _shieldMinusJs = require("./icons/shield-minus.js");
var _shieldMinusJsDefault = parcelHelpers.interopDefault(_shieldMinusJs);
var _shieldOffJs = require("./icons/shield-off.js");
var _shieldOffJsDefault = parcelHelpers.interopDefault(_shieldOffJs);
var _shieldPlusJs = require("./icons/shield-plus.js");
var _shieldPlusJsDefault = parcelHelpers.interopDefault(_shieldPlusJs);
var _shieldQuestionJs = require("./icons/shield-question.js");
var _shieldQuestionJsDefault = parcelHelpers.interopDefault(_shieldQuestionJs);
var _shieldUserJs = require("./icons/shield-user.js");
var _shieldUserJsDefault = parcelHelpers.interopDefault(_shieldUserJs);
var _shieldJs = require("./icons/shield.js");
var _shieldJsDefault = parcelHelpers.interopDefault(_shieldJs);
var _shipWheelJs = require("./icons/ship-wheel.js");
var _shipWheelJsDefault = parcelHelpers.interopDefault(_shipWheelJs);
var _shipJs = require("./icons/ship.js");
var _shipJsDefault = parcelHelpers.interopDefault(_shipJs);
var _shirtJs = require("./icons/shirt.js");
var _shirtJsDefault = parcelHelpers.interopDefault(_shirtJs);
var _shoppingBagJs = require("./icons/shopping-bag.js");
var _shoppingBagJsDefault = parcelHelpers.interopDefault(_shoppingBagJs);
var _shoppingBasketJs = require("./icons/shopping-basket.js");
var _shoppingBasketJsDefault = parcelHelpers.interopDefault(_shoppingBasketJs);
var _shoppingCartJs = require("./icons/shopping-cart.js");
var _shoppingCartJsDefault = parcelHelpers.interopDefault(_shoppingCartJs);
var _shovelJs = require("./icons/shovel.js");
var _shovelJsDefault = parcelHelpers.interopDefault(_shovelJs);
var _showerHeadJs = require("./icons/shower-head.js");
var _showerHeadJsDefault = parcelHelpers.interopDefault(_showerHeadJs);
var _shredderJs = require("./icons/shredder.js");
var _shredderJsDefault = parcelHelpers.interopDefault(_shredderJs);
var _shrimpJs = require("./icons/shrimp.js");
var _shrimpJsDefault = parcelHelpers.interopDefault(_shrimpJs);
var _shrinkJs = require("./icons/shrink.js");
var _shrinkJsDefault = parcelHelpers.interopDefault(_shrinkJs);
var _shrubJs = require("./icons/shrub.js");
var _shrubJsDefault = parcelHelpers.interopDefault(_shrubJs);
var _shuffleJs = require("./icons/shuffle.js");
var _shuffleJsDefault = parcelHelpers.interopDefault(_shuffleJs);
var _sigmaJs = require("./icons/sigma.js");
var _sigmaJsDefault = parcelHelpers.interopDefault(_sigmaJs);
var _signalHighJs = require("./icons/signal-high.js");
var _signalHighJsDefault = parcelHelpers.interopDefault(_signalHighJs);
var _signalLowJs = require("./icons/signal-low.js");
var _signalLowJsDefault = parcelHelpers.interopDefault(_signalLowJs);
var _signalMediumJs = require("./icons/signal-medium.js");
var _signalMediumJsDefault = parcelHelpers.interopDefault(_signalMediumJs);
var _signalZeroJs = require("./icons/signal-zero.js");
var _signalZeroJsDefault = parcelHelpers.interopDefault(_signalZeroJs);
var _signalJs = require("./icons/signal.js");
var _signalJsDefault = parcelHelpers.interopDefault(_signalJs);
var _signatureJs = require("./icons/signature.js");
var _signatureJsDefault = parcelHelpers.interopDefault(_signatureJs);
var _signpostBigJs = require("./icons/signpost-big.js");
var _signpostBigJsDefault = parcelHelpers.interopDefault(_signpostBigJs);
var _signpostJs = require("./icons/signpost.js");
var _signpostJsDefault = parcelHelpers.interopDefault(_signpostJs);
var _sirenJs = require("./icons/siren.js");
var _sirenJsDefault = parcelHelpers.interopDefault(_sirenJs);
var _skipForwardJs = require("./icons/skip-forward.js");
var _skipForwardJsDefault = parcelHelpers.interopDefault(_skipForwardJs);
var _skipBackJs = require("./icons/skip-back.js");
var _skipBackJsDefault = parcelHelpers.interopDefault(_skipBackJs);
var _slackJs = require("./icons/slack.js");
var _slackJsDefault = parcelHelpers.interopDefault(_slackJs);
var _skullJs = require("./icons/skull.js");
var _skullJsDefault = parcelHelpers.interopDefault(_skullJs);
var _slashJs = require("./icons/slash.js");
var _slashJsDefault = parcelHelpers.interopDefault(_slashJs);
var _sliceJs = require("./icons/slice.js");
var _sliceJsDefault = parcelHelpers.interopDefault(_sliceJs);
var _slidersHorizontalJs = require("./icons/sliders-horizontal.js");
var _slidersHorizontalJsDefault = parcelHelpers.interopDefault(_slidersHorizontalJs);
var _smartphoneChargingJs = require("./icons/smartphone-charging.js");
var _smartphoneChargingJsDefault = parcelHelpers.interopDefault(_smartphoneChargingJs);
var _smartphoneNfcJs = require("./icons/smartphone-nfc.js");
var _smartphoneNfcJsDefault = parcelHelpers.interopDefault(_smartphoneNfcJs);
var _smartphoneJs = require("./icons/smartphone.js");
var _smartphoneJsDefault = parcelHelpers.interopDefault(_smartphoneJs);
var _smilePlusJs = require("./icons/smile-plus.js");
var _smilePlusJsDefault = parcelHelpers.interopDefault(_smilePlusJs);
var _smileJs = require("./icons/smile.js");
var _smileJsDefault = parcelHelpers.interopDefault(_smileJs);
var _snailJs = require("./icons/snail.js");
var _snailJsDefault = parcelHelpers.interopDefault(_snailJs);
var _snowflakeJs = require("./icons/snowflake.js");
var _snowflakeJsDefault = parcelHelpers.interopDefault(_snowflakeJs);
var _soapDispenserDropletJs = require("./icons/soap-dispenser-droplet.js");
var _soapDispenserDropletJsDefault = parcelHelpers.interopDefault(_soapDispenserDropletJs);
var _sofaJs = require("./icons/sofa.js");
var _sofaJsDefault = parcelHelpers.interopDefault(_sofaJs);
var _soupJs = require("./icons/soup.js");
var _soupJsDefault = parcelHelpers.interopDefault(_soupJs);
var _spaceJs = require("./icons/space.js");
var _spaceJsDefault = parcelHelpers.interopDefault(_spaceJs);
var _spadeJs = require("./icons/spade.js");
var _spadeJsDefault = parcelHelpers.interopDefault(_spadeJs);
var _sparkleJs = require("./icons/sparkle.js");
var _sparkleJsDefault = parcelHelpers.interopDefault(_sparkleJs);
var _speakerJs = require("./icons/speaker.js");
var _speakerJsDefault = parcelHelpers.interopDefault(_speakerJs);
var _speechJs = require("./icons/speech.js");
var _speechJsDefault = parcelHelpers.interopDefault(_speechJs);
var _spellCheck2Js = require("./icons/spell-check-2.js");
var _spellCheck2JsDefault = parcelHelpers.interopDefault(_spellCheck2Js);
var _spellCheckJs = require("./icons/spell-check.js");
var _spellCheckJsDefault = parcelHelpers.interopDefault(_spellCheckJs);
var _splinePointerJs = require("./icons/spline-pointer.js");
var _splinePointerJsDefault = parcelHelpers.interopDefault(_splinePointerJs);
var _splineJs = require("./icons/spline.js");
var _splineJsDefault = parcelHelpers.interopDefault(_splineJs);
var _splitJs = require("./icons/split.js");
var _splitJsDefault = parcelHelpers.interopDefault(_splitJs);
var _sprayCanJs = require("./icons/spray-can.js");
var _sprayCanJsDefault = parcelHelpers.interopDefault(_sprayCanJs);
var _sproutJs = require("./icons/sprout.js");
var _sproutJsDefault = parcelHelpers.interopDefault(_sproutJs);
var _squareDashedBottomCodeJs = require("./icons/square-dashed-bottom-code.js");
var _squareDashedBottomCodeJsDefault = parcelHelpers.interopDefault(_squareDashedBottomCodeJs);
var _squareDashedBottomJs = require("./icons/square-dashed-bottom.js");
var _squareDashedBottomJsDefault = parcelHelpers.interopDefault(_squareDashedBottomJs);
var _squareDashedTopSolidJs = require("./icons/square-dashed-top-solid.js");
var _squareDashedTopSolidJsDefault = parcelHelpers.interopDefault(_squareDashedTopSolidJs);
var _squareRadicalJs = require("./icons/square-radical.js");
var _squareRadicalJsDefault = parcelHelpers.interopDefault(_squareRadicalJs);
var _squareRoundCornerJs = require("./icons/square-round-corner.js");
var _squareRoundCornerJsDefault = parcelHelpers.interopDefault(_squareRoundCornerJs);
var _squareSquareJs = require("./icons/square-square.js");
var _squareSquareJsDefault = parcelHelpers.interopDefault(_squareSquareJs);
var _squareStackJs = require("./icons/square-stack.js");
var _squareStackJsDefault = parcelHelpers.interopDefault(_squareStackJs);
var _squareJs = require("./icons/square.js");
var _squareJsDefault = parcelHelpers.interopDefault(_squareJs);
var _squaresExcludeJs = require("./icons/squares-exclude.js");
var _squaresExcludeJsDefault = parcelHelpers.interopDefault(_squaresExcludeJs);
var _squaresIntersectJs = require("./icons/squares-intersect.js");
var _squaresIntersectJsDefault = parcelHelpers.interopDefault(_squaresIntersectJs);
var _squaresSubtractJs = require("./icons/squares-subtract.js");
var _squaresSubtractJsDefault = parcelHelpers.interopDefault(_squaresSubtractJs);
var _squaresUniteJs = require("./icons/squares-unite.js");
var _squaresUniteJsDefault = parcelHelpers.interopDefault(_squaresUniteJs);
var _squircleJs = require("./icons/squircle.js");
var _squircleJsDefault = parcelHelpers.interopDefault(_squircleJs);
var _squirrelJs = require("./icons/squirrel.js");
var _squirrelJsDefault = parcelHelpers.interopDefault(_squirrelJs);
var _stampJs = require("./icons/stamp.js");
var _stampJsDefault = parcelHelpers.interopDefault(_stampJs);
var _starOffJs = require("./icons/star-off.js");
var _starOffJsDefault = parcelHelpers.interopDefault(_starOffJs);
var _starHalfJs = require("./icons/star-half.js");
var _starHalfJsDefault = parcelHelpers.interopDefault(_starHalfJs);
var _starJs = require("./icons/star.js");
var _starJsDefault = parcelHelpers.interopDefault(_starJs);
var _stepBackJs = require("./icons/step-back.js");
var _stepBackJsDefault = parcelHelpers.interopDefault(_stepBackJs);
var _stepForwardJs = require("./icons/step-forward.js");
var _stepForwardJsDefault = parcelHelpers.interopDefault(_stepForwardJs);
var _stethoscopeJs = require("./icons/stethoscope.js");
var _stethoscopeJsDefault = parcelHelpers.interopDefault(_stethoscopeJs);
var _stickerJs = require("./icons/sticker.js");
var _stickerJsDefault = parcelHelpers.interopDefault(_stickerJs);
var _storeJs = require("./icons/store.js");
var _storeJsDefault = parcelHelpers.interopDefault(_storeJs);
var _stickyNoteJs = require("./icons/sticky-note.js");
var _stickyNoteJsDefault = parcelHelpers.interopDefault(_stickyNoteJs);
var _stretchHorizontalJs = require("./icons/stretch-horizontal.js");
var _stretchHorizontalJsDefault = parcelHelpers.interopDefault(_stretchHorizontalJs);
var _stretchVerticalJs = require("./icons/stretch-vertical.js");
var _stretchVerticalJsDefault = parcelHelpers.interopDefault(_stretchVerticalJs);
var _strikethroughJs = require("./icons/strikethrough.js");
var _strikethroughJsDefault = parcelHelpers.interopDefault(_strikethroughJs);
var _subscriptJs = require("./icons/subscript.js");
var _subscriptJsDefault = parcelHelpers.interopDefault(_subscriptJs);
var _sunDimJs = require("./icons/sun-dim.js");
var _sunDimJsDefault = parcelHelpers.interopDefault(_sunDimJs);
var _sunMoonJs = require("./icons/sun-moon.js");
var _sunMoonJsDefault = parcelHelpers.interopDefault(_sunMoonJs);
var _sunSnowJs = require("./icons/sun-snow.js");
var _sunSnowJsDefault = parcelHelpers.interopDefault(_sunSnowJs);
var _sunMediumJs = require("./icons/sun-medium.js");
var _sunMediumJsDefault = parcelHelpers.interopDefault(_sunMediumJs);
var _sunJs = require("./icons/sun.js");
var _sunJsDefault = parcelHelpers.interopDefault(_sunJs);
var _sunsetJs = require("./icons/sunset.js");
var _sunsetJsDefault = parcelHelpers.interopDefault(_sunsetJs);
var _sunriseJs = require("./icons/sunrise.js");
var _sunriseJsDefault = parcelHelpers.interopDefault(_sunriseJs);
var _superscriptJs = require("./icons/superscript.js");
var _superscriptJsDefault = parcelHelpers.interopDefault(_superscriptJs);
var _swatchBookJs = require("./icons/swatch-book.js");
var _swatchBookJsDefault = parcelHelpers.interopDefault(_swatchBookJs);
var _swissFrancJs = require("./icons/swiss-franc.js");
var _swissFrancJsDefault = parcelHelpers.interopDefault(_swissFrancJs);
var _switchCameraJs = require("./icons/switch-camera.js");
var _switchCameraJsDefault = parcelHelpers.interopDefault(_switchCameraJs);
var _swordJs = require("./icons/sword.js");
var _swordJsDefault = parcelHelpers.interopDefault(_swordJs);
var _syringeJs = require("./icons/syringe.js");
var _syringeJsDefault = parcelHelpers.interopDefault(_syringeJs);
var _swordsJs = require("./icons/swords.js");
var _swordsJsDefault = parcelHelpers.interopDefault(_swordsJs);
var _table2Js = require("./icons/table-2.js");
var _table2JsDefault = parcelHelpers.interopDefault(_table2Js);
var _tableCellsMergeJs = require("./icons/table-cells-merge.js");
var _tableCellsMergeJsDefault = parcelHelpers.interopDefault(_tableCellsMergeJs);
var _tableColumnsSplitJs = require("./icons/table-columns-split.js");
var _tableColumnsSplitJsDefault = parcelHelpers.interopDefault(_tableColumnsSplitJs);
var _tableCellsSplitJs = require("./icons/table-cells-split.js");
var _tableCellsSplitJsDefault = parcelHelpers.interopDefault(_tableCellsSplitJs);
var _tablePropertiesJs = require("./icons/table-properties.js");
var _tablePropertiesJsDefault = parcelHelpers.interopDefault(_tablePropertiesJs);
var _tableRowsSplitJs = require("./icons/table-rows-split.js");
var _tableRowsSplitJsDefault = parcelHelpers.interopDefault(_tableRowsSplitJs);
var _tableOfContentsJs = require("./icons/table-of-contents.js");
var _tableOfContentsJsDefault = parcelHelpers.interopDefault(_tableOfContentsJs);
var _tableJs = require("./icons/table.js");
var _tableJsDefault = parcelHelpers.interopDefault(_tableJs);
var _tabletJs = require("./icons/tablet.js");
var _tabletJsDefault = parcelHelpers.interopDefault(_tabletJs);
var _tagJs = require("./icons/tag.js");
var _tagJsDefault = parcelHelpers.interopDefault(_tagJs);
var _tabletSmartphoneJs = require("./icons/tablet-smartphone.js");
var _tabletSmartphoneJsDefault = parcelHelpers.interopDefault(_tabletSmartphoneJs);
var _tabletsJs = require("./icons/tablets.js");
var _tabletsJsDefault = parcelHelpers.interopDefault(_tabletsJs);
var _tagsJs = require("./icons/tags.js");
var _tagsJsDefault = parcelHelpers.interopDefault(_tagsJs);
var _tally1Js = require("./icons/tally-1.js");
var _tally1JsDefault = parcelHelpers.interopDefault(_tally1Js);
var _tally2Js = require("./icons/tally-2.js");
var _tally2JsDefault = parcelHelpers.interopDefault(_tally2Js);
var _tally3Js = require("./icons/tally-3.js");
var _tally3JsDefault = parcelHelpers.interopDefault(_tally3Js);
var _tally5Js = require("./icons/tally-5.js");
var _tally5JsDefault = parcelHelpers.interopDefault(_tally5Js);
var _tally4Js = require("./icons/tally-4.js");
var _tally4JsDefault = parcelHelpers.interopDefault(_tally4Js);
var _tangentJs = require("./icons/tangent.js");
var _tangentJsDefault = parcelHelpers.interopDefault(_tangentJs);
var _targetJs = require("./icons/target.js");
var _targetJsDefault = parcelHelpers.interopDefault(_targetJs);
var _telescopeJs = require("./icons/telescope.js");
var _telescopeJsDefault = parcelHelpers.interopDefault(_telescopeJs);
var _tentTreeJs = require("./icons/tent-tree.js");
var _tentTreeJsDefault = parcelHelpers.interopDefault(_tentTreeJs);
var _terminalJs = require("./icons/terminal.js");
var _terminalJsDefault = parcelHelpers.interopDefault(_terminalJs);
var _tentJs = require("./icons/tent.js");
var _tentJsDefault = parcelHelpers.interopDefault(_tentJs);
var _testTubeJs = require("./icons/test-tube.js");
var _testTubeJsDefault = parcelHelpers.interopDefault(_testTubeJs);
var _testTubesJs = require("./icons/test-tubes.js");
var _testTubesJsDefault = parcelHelpers.interopDefault(_testTubesJs);
var _textCursorInputJs = require("./icons/text-cursor-input.js");
var _textCursorInputJsDefault = parcelHelpers.interopDefault(_textCursorInputJs);
var _textCursorJs = require("./icons/text-cursor.js");
var _textCursorJsDefault = parcelHelpers.interopDefault(_textCursorJs);
var _textQuoteJs = require("./icons/text-quote.js");
var _textQuoteJsDefault = parcelHelpers.interopDefault(_textQuoteJs);
var _textSearchJs = require("./icons/text-search.js");
var _textSearchJsDefault = parcelHelpers.interopDefault(_textSearchJs);
var _textJs = require("./icons/text.js");
var _textJsDefault = parcelHelpers.interopDefault(_textJs);
var _theaterJs = require("./icons/theater.js");
var _theaterJsDefault = parcelHelpers.interopDefault(_theaterJs);
var _thermometerSnowflakeJs = require("./icons/thermometer-snowflake.js");
var _thermometerSnowflakeJsDefault = parcelHelpers.interopDefault(_thermometerSnowflakeJs);
var _thermometerSunJs = require("./icons/thermometer-sun.js");
var _thermometerSunJsDefault = parcelHelpers.interopDefault(_thermometerSunJs);
var _thermometerJs = require("./icons/thermometer.js");
var _thermometerJsDefault = parcelHelpers.interopDefault(_thermometerJs);
var _thumbsDownJs = require("./icons/thumbs-down.js");
var _thumbsDownJsDefault = parcelHelpers.interopDefault(_thumbsDownJs);
var _thumbsUpJs = require("./icons/thumbs-up.js");
var _thumbsUpJsDefault = parcelHelpers.interopDefault(_thumbsUpJs);
var _ticketCheckJs = require("./icons/ticket-check.js");
var _ticketCheckJsDefault = parcelHelpers.interopDefault(_ticketCheckJs);
var _ticketMinusJs = require("./icons/ticket-minus.js");
var _ticketMinusJsDefault = parcelHelpers.interopDefault(_ticketMinusJs);
var _ticketPercentJs = require("./icons/ticket-percent.js");
var _ticketPercentJsDefault = parcelHelpers.interopDefault(_ticketPercentJs);
var _ticketPlusJs = require("./icons/ticket-plus.js");
var _ticketPlusJsDefault = parcelHelpers.interopDefault(_ticketPlusJs);
var _ticketSlashJs = require("./icons/ticket-slash.js");
var _ticketSlashJsDefault = parcelHelpers.interopDefault(_ticketSlashJs);
var _ticketXJs = require("./icons/ticket-x.js");
var _ticketXJsDefault = parcelHelpers.interopDefault(_ticketXJs);
var _ticketJs = require("./icons/ticket.js");
var _ticketJsDefault = parcelHelpers.interopDefault(_ticketJs);
var _ticketsPlaneJs = require("./icons/tickets-plane.js");
var _ticketsPlaneJsDefault = parcelHelpers.interopDefault(_ticketsPlaneJs);
var _ticketsJs = require("./icons/tickets.js");
var _ticketsJsDefault = parcelHelpers.interopDefault(_ticketsJs);
var _timerOffJs = require("./icons/timer-off.js");
var _timerOffJsDefault = parcelHelpers.interopDefault(_timerOffJs);
var _timerResetJs = require("./icons/timer-reset.js");
var _timerResetJsDefault = parcelHelpers.interopDefault(_timerResetJs);
var _timerJs = require("./icons/timer.js");
var _timerJsDefault = parcelHelpers.interopDefault(_timerJs);
var _toggleLeftJs = require("./icons/toggle-left.js");
var _toggleLeftJsDefault = parcelHelpers.interopDefault(_toggleLeftJs);
var _toggleRightJs = require("./icons/toggle-right.js");
var _toggleRightJsDefault = parcelHelpers.interopDefault(_toggleRightJs);
var _toiletJs = require("./icons/toilet.js");
var _toiletJsDefault = parcelHelpers.interopDefault(_toiletJs);
var _tornadoJs = require("./icons/tornado.js");
var _tornadoJsDefault = parcelHelpers.interopDefault(_tornadoJs);
var _torusJs = require("./icons/torus.js");
var _torusJsDefault = parcelHelpers.interopDefault(_torusJs);
var _touchpadOffJs = require("./icons/touchpad-off.js");
var _touchpadOffJsDefault = parcelHelpers.interopDefault(_touchpadOffJs);
var _touchpadJs = require("./icons/touchpad.js");
var _touchpadJsDefault = parcelHelpers.interopDefault(_touchpadJs);
var _towerControlJs = require("./icons/tower-control.js");
var _towerControlJsDefault = parcelHelpers.interopDefault(_towerControlJs);
var _toyBrickJs = require("./icons/toy-brick.js");
var _toyBrickJsDefault = parcelHelpers.interopDefault(_toyBrickJs);
var _trafficConeJs = require("./icons/traffic-cone.js");
var _trafficConeJsDefault = parcelHelpers.interopDefault(_trafficConeJs);
var _tractorJs = require("./icons/tractor.js");
var _tractorJsDefault = parcelHelpers.interopDefault(_tractorJs);
var _trainFrontTunnelJs = require("./icons/train-front-tunnel.js");
var _trainFrontTunnelJsDefault = parcelHelpers.interopDefault(_trainFrontTunnelJs);
var _trainFrontJs = require("./icons/train-front.js");
var _trainFrontJsDefault = parcelHelpers.interopDefault(_trainFrontJs);
var _trainTrackJs = require("./icons/train-track.js");
var _trainTrackJsDefault = parcelHelpers.interopDefault(_trainTrackJs);
var _trash2Js = require("./icons/trash-2.js");
var _trash2JsDefault = parcelHelpers.interopDefault(_trash2Js);
var _transgenderJs = require("./icons/transgender.js");
var _transgenderJsDefault = parcelHelpers.interopDefault(_transgenderJs);
var _trashJs = require("./icons/trash.js");
var _trashJsDefault = parcelHelpers.interopDefault(_trashJs);
var _treeDeciduousJs = require("./icons/tree-deciduous.js");
var _treeDeciduousJsDefault = parcelHelpers.interopDefault(_treeDeciduousJs);
var _treePineJs = require("./icons/tree-pine.js");
var _treePineJsDefault = parcelHelpers.interopDefault(_treePineJs);
var _treesJs = require("./icons/trees.js");
var _treesJsDefault = parcelHelpers.interopDefault(_treesJs);
var _trelloJs = require("./icons/trello.js");
var _trelloJsDefault = parcelHelpers.interopDefault(_trelloJs);
var _trendingDownJs = require("./icons/trending-down.js");
var _trendingDownJsDefault = parcelHelpers.interopDefault(_trendingDownJs);
var _trendingUpDownJs = require("./icons/trending-up-down.js");
var _trendingUpDownJsDefault = parcelHelpers.interopDefault(_trendingUpDownJs);
var _trendingUpJs = require("./icons/trending-up.js");
var _trendingUpJsDefault = parcelHelpers.interopDefault(_trendingUpJs);
var _triangleDashedJs = require("./icons/triangle-dashed.js");
var _triangleDashedJsDefault = parcelHelpers.interopDefault(_triangleDashedJs);
var _triangleRightJs = require("./icons/triangle-right.js");
var _triangleRightJsDefault = parcelHelpers.interopDefault(_triangleRightJs);
var _triangleJs = require("./icons/triangle.js");
var _triangleJsDefault = parcelHelpers.interopDefault(_triangleJs);
var _trophyJs = require("./icons/trophy.js");
var _trophyJsDefault = parcelHelpers.interopDefault(_trophyJs);
var _truckElectricJs = require("./icons/truck-electric.js");
var _truckElectricJsDefault = parcelHelpers.interopDefault(_truckElectricJs);
var _truckJs = require("./icons/truck.js");
var _truckJsDefault = parcelHelpers.interopDefault(_truckJs);
var _turtleJs = require("./icons/turtle.js");
var _turtleJsDefault = parcelHelpers.interopDefault(_turtleJs);
var _tvMinimalPlayJs = require("./icons/tv-minimal-play.js");
var _tvMinimalPlayJsDefault = parcelHelpers.interopDefault(_tvMinimalPlayJs);
var _tvJs = require("./icons/tv.js");
var _tvJsDefault = parcelHelpers.interopDefault(_tvJs);
var _twitchJs = require("./icons/twitch.js");
var _twitchJsDefault = parcelHelpers.interopDefault(_twitchJs);
var _twitterJs = require("./icons/twitter.js");
var _twitterJsDefault = parcelHelpers.interopDefault(_twitterJs);
var _typeOutlineJs = require("./icons/type-outline.js");
var _typeOutlineJsDefault = parcelHelpers.interopDefault(_typeOutlineJs);
var _typeJs = require("./icons/type.js");
var _typeJsDefault = parcelHelpers.interopDefault(_typeJs);
var _umbrellaOffJs = require("./icons/umbrella-off.js");
var _umbrellaOffJsDefault = parcelHelpers.interopDefault(_umbrellaOffJs);
var _umbrellaJs = require("./icons/umbrella.js");
var _umbrellaJsDefault = parcelHelpers.interopDefault(_umbrellaJs);
var _underlineJs = require("./icons/underline.js");
var _underlineJsDefault = parcelHelpers.interopDefault(_underlineJs);
var _undo2Js = require("./icons/undo-2.js");
var _undo2JsDefault = parcelHelpers.interopDefault(_undo2Js);
var _undoDotJs = require("./icons/undo-dot.js");
var _undoDotJsDefault = parcelHelpers.interopDefault(_undoDotJs);
var _undoJs = require("./icons/undo.js");
var _undoJsDefault = parcelHelpers.interopDefault(_undoJs);
var _unfoldHorizontalJs = require("./icons/unfold-horizontal.js");
var _unfoldHorizontalJsDefault = parcelHelpers.interopDefault(_unfoldHorizontalJs);
var _unfoldVerticalJs = require("./icons/unfold-vertical.js");
var _unfoldVerticalJsDefault = parcelHelpers.interopDefault(_unfoldVerticalJs);
var _ungroupJs = require("./icons/ungroup.js");
var _ungroupJsDefault = parcelHelpers.interopDefault(_ungroupJs);
var _unlink2Js = require("./icons/unlink-2.js");
var _unlink2JsDefault = parcelHelpers.interopDefault(_unlink2Js);
var _unlinkJs = require("./icons/unlink.js");
var _unlinkJsDefault = parcelHelpers.interopDefault(_unlinkJs);
var _unplugJs = require("./icons/unplug.js");
var _unplugJsDefault = parcelHelpers.interopDefault(_unplugJs);
var _uploadJs = require("./icons/upload.js");
var _uploadJsDefault = parcelHelpers.interopDefault(_uploadJs);
var _usbJs = require("./icons/usb.js");
var _usbJsDefault = parcelHelpers.interopDefault(_usbJs);
var _userCheckJs = require("./icons/user-check.js");
var _userCheckJsDefault = parcelHelpers.interopDefault(_userCheckJs);
var _userCogJs = require("./icons/user-cog.js");
var _userCogJsDefault = parcelHelpers.interopDefault(_userCogJs);
var _userLockJs = require("./icons/user-lock.js");
var _userLockJsDefault = parcelHelpers.interopDefault(_userLockJs);
var _userMinusJs = require("./icons/user-minus.js");
var _userMinusJsDefault = parcelHelpers.interopDefault(_userMinusJs);
var _userPenJs = require("./icons/user-pen.js");
var _userPenJsDefault = parcelHelpers.interopDefault(_userPenJs);
var _userPlusJs = require("./icons/user-plus.js");
var _userPlusJsDefault = parcelHelpers.interopDefault(_userPlusJs);
var _userRoundPenJs = require("./icons/user-round-pen.js");
var _userRoundPenJsDefault = parcelHelpers.interopDefault(_userRoundPenJs);
var _userRoundSearchJs = require("./icons/user-round-search.js");
var _userRoundSearchJsDefault = parcelHelpers.interopDefault(_userRoundSearchJs);
var _userSearchJs = require("./icons/user-search.js");
var _userSearchJsDefault = parcelHelpers.interopDefault(_userSearchJs);
var _userXJs = require("./icons/user-x.js");
var _userXJsDefault = parcelHelpers.interopDefault(_userXJs);
var _userJs = require("./icons/user.js");
var _userJsDefault = parcelHelpers.interopDefault(_userJs);
var _usersJs = require("./icons/users.js");
var _usersJsDefault = parcelHelpers.interopDefault(_usersJs);
var _variableJs = require("./icons/variable.js");
var _variableJsDefault = parcelHelpers.interopDefault(_variableJs);
var _utilityPoleJs = require("./icons/utility-pole.js");
var _utilityPoleJsDefault = parcelHelpers.interopDefault(_utilityPoleJs);
var _vaultJs = require("./icons/vault.js");
var _vaultJsDefault = parcelHelpers.interopDefault(_vaultJs);
var _veganJs = require("./icons/vegan.js");
var _veganJsDefault = parcelHelpers.interopDefault(_veganJs);
var _venetianMaskJs = require("./icons/venetian-mask.js");
var _venetianMaskJsDefault = parcelHelpers.interopDefault(_venetianMaskJs);
var _venusAndMarsJs = require("./icons/venus-and-mars.js");
var _venusAndMarsJsDefault = parcelHelpers.interopDefault(_venusAndMarsJs);
var _venusJs = require("./icons/venus.js");
var _venusJsDefault = parcelHelpers.interopDefault(_venusJs);
var _vibrateOffJs = require("./icons/vibrate-off.js");
var _vibrateOffJsDefault = parcelHelpers.interopDefault(_vibrateOffJs);
var _vibrateJs = require("./icons/vibrate.js");
var _vibrateJsDefault = parcelHelpers.interopDefault(_vibrateJs);
var _videoOffJs = require("./icons/video-off.js");
var _videoOffJsDefault = parcelHelpers.interopDefault(_videoOffJs);
var _videotapeJs = require("./icons/videotape.js");
var _videotapeJsDefault = parcelHelpers.interopDefault(_videotapeJs);
var _videoJs = require("./icons/video.js");
var _videoJsDefault = parcelHelpers.interopDefault(_videoJs);
var _voicemailJs = require("./icons/voicemail.js");
var _voicemailJsDefault = parcelHelpers.interopDefault(_voicemailJs);
var _viewJs = require("./icons/view.js");
var _viewJsDefault = parcelHelpers.interopDefault(_viewJs);
var _volleyballJs = require("./icons/volleyball.js");
var _volleyballJsDefault = parcelHelpers.interopDefault(_volleyballJs);
var _volume1Js = require("./icons/volume-1.js");
var _volume1JsDefault = parcelHelpers.interopDefault(_volume1Js);
var _volume2Js = require("./icons/volume-2.js");
var _volume2JsDefault = parcelHelpers.interopDefault(_volume2Js);
var _volumeOffJs = require("./icons/volume-off.js");
var _volumeOffJsDefault = parcelHelpers.interopDefault(_volumeOffJs);
var _volumeJs = require("./icons/volume.js");
var _volumeJsDefault = parcelHelpers.interopDefault(_volumeJs);
var _volumeXJs = require("./icons/volume-x.js");
var _volumeXJsDefault = parcelHelpers.interopDefault(_volumeXJs);
var _voteJs = require("./icons/vote.js");
var _voteJsDefault = parcelHelpers.interopDefault(_voteJs);
var _walletCardsJs = require("./icons/wallet-cards.js");
var _walletCardsJsDefault = parcelHelpers.interopDefault(_walletCardsJs);
var _walletJs = require("./icons/wallet.js");
var _walletJsDefault = parcelHelpers.interopDefault(_walletJs);
var _wallpaperJs = require("./icons/wallpaper.js");
var _wallpaperJsDefault = parcelHelpers.interopDefault(_wallpaperJs);
var _wandJs = require("./icons/wand.js");
var _wandJsDefault = parcelHelpers.interopDefault(_wandJs);
var _warehouseJs = require("./icons/warehouse.js");
var _warehouseJsDefault = parcelHelpers.interopDefault(_warehouseJs);
var _washingMachineJs = require("./icons/washing-machine.js");
var _washingMachineJsDefault = parcelHelpers.interopDefault(_washingMachineJs);
var _watchJs = require("./icons/watch.js");
var _watchJsDefault = parcelHelpers.interopDefault(_watchJs);
var _wavesLadderJs = require("./icons/waves-ladder.js");
var _wavesLadderJsDefault = parcelHelpers.interopDefault(_wavesLadderJs);
var _wavesJs = require("./icons/waves.js");
var _wavesJsDefault = parcelHelpers.interopDefault(_wavesJs);
var _waypointsJs = require("./icons/waypoints.js");
var _waypointsJsDefault = parcelHelpers.interopDefault(_waypointsJs);
var _webcamJs = require("./icons/webcam.js");
var _webcamJsDefault = parcelHelpers.interopDefault(_webcamJs);
var _webhookOffJs = require("./icons/webhook-off.js");
var _webhookOffJsDefault = parcelHelpers.interopDefault(_webhookOffJs);
var _webhookJs = require("./icons/webhook.js");
var _webhookJsDefault = parcelHelpers.interopDefault(_webhookJs);
var _weightJs = require("./icons/weight.js");
var _weightJsDefault = parcelHelpers.interopDefault(_weightJs);
var _wheatOffJs = require("./icons/wheat-off.js");
var _wheatOffJsDefault = parcelHelpers.interopDefault(_wheatOffJs);
var _wheatJs = require("./icons/wheat.js");
var _wheatJsDefault = parcelHelpers.interopDefault(_wheatJs);
var _wholeWordJs = require("./icons/whole-word.js");
var _wholeWordJsDefault = parcelHelpers.interopDefault(_wholeWordJs);
var _wifiHighJs = require("./icons/wifi-high.js");
var _wifiHighJsDefault = parcelHelpers.interopDefault(_wifiHighJs);
var _wifiLowJs = require("./icons/wifi-low.js");
var _wifiLowJsDefault = parcelHelpers.interopDefault(_wifiLowJs);
var _wifiOffJs = require("./icons/wifi-off.js");
var _wifiOffJsDefault = parcelHelpers.interopDefault(_wifiOffJs);
var _wifiPenJs = require("./icons/wifi-pen.js");
var _wifiPenJsDefault = parcelHelpers.interopDefault(_wifiPenJs);
var _wifiZeroJs = require("./icons/wifi-zero.js");
var _wifiZeroJsDefault = parcelHelpers.interopDefault(_wifiZeroJs);
var _wifiJs = require("./icons/wifi.js");
var _wifiJsDefault = parcelHelpers.interopDefault(_wifiJs);
var _windArrowDownJs = require("./icons/wind-arrow-down.js");
var _windArrowDownJsDefault = parcelHelpers.interopDefault(_windArrowDownJs);
var _windJs = require("./icons/wind.js");
var _windJsDefault = parcelHelpers.interopDefault(_windJs);
var _wineJs = require("./icons/wine.js");
var _wineJsDefault = parcelHelpers.interopDefault(_wineJs);
var _wineOffJs = require("./icons/wine-off.js");
var _wineOffJsDefault = parcelHelpers.interopDefault(_wineOffJs);
var _workflowJs = require("./icons/workflow.js");
var _workflowJsDefault = parcelHelpers.interopDefault(_workflowJs);
var _wormJs = require("./icons/worm.js");
var _wormJsDefault = parcelHelpers.interopDefault(_wormJs);
var _wrenchJs = require("./icons/wrench.js");
var _wrenchJsDefault = parcelHelpers.interopDefault(_wrenchJs);
var _wrapTextJs = require("./icons/wrap-text.js");
var _wrapTextJsDefault = parcelHelpers.interopDefault(_wrapTextJs);
var _xJs = require("./icons/x.js");
var _xJsDefault = parcelHelpers.interopDefault(_xJs);
var _youtubeJs = require("./icons/youtube.js");
var _youtubeJsDefault = parcelHelpers.interopDefault(_youtubeJs);
var _zapOffJs = require("./icons/zap-off.js");
var _zapOffJsDefault = parcelHelpers.interopDefault(_zapOffJs);
var _zapJs = require("./icons/zap.js");
var _zapJsDefault = parcelHelpers.interopDefault(_zapJs);
var _zoomInJs = require("./icons/zoom-in.js");
var _zoomInJsDefault = parcelHelpers.interopDefault(_zoomInJs);
var _zoomOutJs = require("./icons/zoom-out.js");
var _zoomOutJsDefault = parcelHelpers.interopDefault(_zoomOutJs);
var _arrowDown01Js = require("./icons/arrow-down-0-1.js");
var _arrowDown01JsDefault = parcelHelpers.interopDefault(_arrowDown01Js);
var _arrowDown10Js = require("./icons/arrow-down-1-0.js");
var _arrowDown10JsDefault = parcelHelpers.interopDefault(_arrowDown10Js);
var _arrowUp01Js = require("./icons/arrow-up-0-1.js");
var _arrowUp01JsDefault = parcelHelpers.interopDefault(_arrowUp01Js);
var _arrowUp10Js = require("./icons/arrow-up-1-0.js");
var _arrowUp10JsDefault = parcelHelpers.interopDefault(_arrowUp10Js);
var _createLucideIconJs = require("./createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
var _iconJs = require("./Icon.js");
var _iconJsDefault = parcelHelpers.interopDefault(_iconJs);

},{"./icons/index.js":false,"./icons/alarm-clock-check.js":false,"./icons/alarm-clock-minus.js":false,"./icons/alarm-clock-plus.js":false,"./icons/arrow-down-a-z.js":false,"./icons/arrow-down-wide-narrow.js":false,"./icons/arrow-down-z-a.js":false,"./icons/arrow-up-a-z.js":false,"./icons/arrow-up-narrow-wide.js":false,"./icons/arrow-up-z-a.js":false,"./icons/axis-3d.js":false,"./icons/badge-check.js":false,"./icons/between-horizontal-end.js":false,"./icons/between-horizontal-start.js":false,"./icons/book-dashed.js":false,"./icons/braces.js":false,"./icons/captions.js":false,"./icons/chart-area.js":false,"./icons/chart-bar-big.js":false,"./icons/chart-bar.js":false,"./icons/chart-candlestick.js":false,"./icons/chart-column-big.js":false,"./icons/chart-column-increasing.js":false,"./icons/chart-column.js":false,"./icons/chart-line.js":false,"./icons/chart-no-axes-column-increasing.js":"cV8Zl","./icons/chart-no-axes-column.js":false,"./icons/chart-no-axes-gantt.js":false,"./icons/chart-scatter.js":false,"./icons/chart-pie.js":false,"./icons/circle-alert.js":false,"./icons/circle-arrow-down.js":false,"./icons/circle-arrow-left.js":false,"./icons/circle-arrow-out-down-left.js":false,"./icons/circle-arrow-out-down-right.js":false,"./icons/circle-arrow-out-up-right.js":false,"./icons/circle-arrow-out-up-left.js":false,"./icons/circle-arrow-right.js":false,"./icons/circle-arrow-up.js":false,"./icons/circle-check-big.js":false,"./icons/circle-check.js":false,"./icons/circle-chevron-down.js":false,"./icons/circle-chevron-left.js":false,"./icons/circle-chevron-right.js":false,"./icons/circle-chevron-up.js":false,"./icons/circle-divide.js":false,"./icons/circle-gauge.js":false,"./icons/circle-help.js":false,"./icons/circle-minus.js":false,"./icons/circle-parking-off.js":false,"./icons/circle-parking.js":false,"./icons/circle-pause.js":false,"./icons/circle-percent.js":false,"./icons/circle-play.js":false,"./icons/circle-plus.js":false,"./icons/circle-power.js":false,"./icons/circle-slash-2.js":false,"./icons/circle-stop.js":false,"./icons/circle-user-round.js":false,"./icons/circle-user.js":false,"./icons/circle-x.js":false,"./icons/clipboard-pen-line.js":false,"./icons/clipboard-pen.js":false,"./icons/cloud-download.js":false,"./icons/cloud-upload.js":false,"./icons/code-xml.js":false,"./icons/columns-2.js":false,"./icons/columns-3-cog.js":false,"./icons/columns-3.js":false,"./icons/contact-round.js":false,"./icons/diamond-percent.js":false,"./icons/earth.js":false,"./icons/ellipsis-vertical.js":false,"./icons/ellipsis.js":false,"./icons/file-axis-3d.js":false,"./icons/file-chart-column-increasing.js":false,"./icons/file-chart-column.js":false,"./icons/file-chart-line.js":false,"./icons/file-chart-pie.js":false,"./icons/file-cog.js":false,"./icons/file-pen-line.js":false,"./icons/file-pen.js":false,"./icons/folder-cog.js":false,"./icons/folder-pen.js":false,"./icons/funnel-x.js":false,"./icons/funnel.js":false,"./icons/git-commit-horizontal.js":false,"./icons/grid-2x2-check.js":false,"./icons/grid-2x2-plus.js":false,"./icons/grid-2x2-x.js":false,"./icons/grid-2x2.js":false,"./icons/grid-3x3.js":false,"./icons/hand-helping.js":false,"./icons/house.js":false,"./icons/ice-cream-bowl.js":false,"./icons/ice-cream-cone.js":false,"./icons/indent-decrease.js":false,"./icons/indent-increase.js":false,"./icons/laptop-minimal.js":false,"./icons/layers.js":false,"./icons/loader-circle.js":false,"./icons/lock-keyhole-open.js":false,"./icons/lock-open.js":false,"./icons/mic-vocal.js":false,"./icons/move-3d.js":false,"./icons/octagon-alert.js":false,"./icons/octagon-pause.js":false,"./icons/octagon-x.js":false,"./icons/paintbrush-vertical.js":false,"./icons/panel-bottom-dashed.js":false,"./icons/panel-left-close.js":false,"./icons/panel-left-dashed.js":false,"./icons/panel-left-open.js":false,"./icons/panel-left.js":false,"./icons/panel-right-dashed.js":false,"./icons/panel-top-dashed.js":false,"./icons/panels-top-left.js":false,"./icons/pen-line.js":false,"./icons/pen.js":false,"./icons/plug-zap.js":false,"./icons/rectangle-ellipsis.js":false,"./icons/rotate-3d.js":false,"./icons/rows-2.js":false,"./icons/rows-3.js":false,"./icons/scale-3d.js":false,"./icons/send-horizontal.js":false,"./icons/shield-x.js":false,"./icons/sliders-vertical.js":false,"./icons/sparkles.js":false,"./icons/square-activity.js":false,"./icons/square-arrow-down-left.js":false,"./icons/square-arrow-down-right.js":false,"./icons/square-arrow-down.js":false,"./icons/square-arrow-left.js":false,"./icons/square-arrow-out-down-left.js":false,"./icons/square-arrow-out-down-right.js":false,"./icons/square-arrow-out-up-left.js":false,"./icons/square-arrow-out-up-right.js":false,"./icons/square-arrow-right.js":false,"./icons/square-arrow-up-left.js":false,"./icons/square-arrow-up-right.js":false,"./icons/square-arrow-up.js":false,"./icons/square-asterisk.js":false,"./icons/square-bottom-dashed-scissors.js":false,"./icons/square-chart-gantt.js":false,"./icons/square-check-big.js":false,"./icons/square-chevron-down.js":false,"./icons/square-chevron-left.js":false,"./icons/square-check.js":false,"./icons/square-chevron-right.js":false,"./icons/square-code.js":false,"./icons/square-chevron-up.js":false,"./icons/square-dashed-mouse-pointer.js":false,"./icons/square-dashed-kanban.js":false,"./icons/square-dashed.js":false,"./icons/square-divide.js":false,"./icons/square-dot.js":false,"./icons/square-equal.js":false,"./icons/square-function.js":false,"./icons/square-kanban.js":false,"./icons/square-library.js":false,"./icons/square-m.js":false,"./icons/square-menu.js":false,"./icons/square-minus.js":false,"./icons/square-mouse-pointer.js":false,"./icons/square-parking-off.js":false,"./icons/square-parking.js":false,"./icons/square-pen.js":false,"./icons/square-percent.js":false,"./icons/square-pi.js":false,"./icons/square-pilcrow.js":false,"./icons/square-play.js":false,"./icons/square-plus.js":false,"./icons/square-power.js":false,"./icons/square-scissors.js":false,"./icons/square-sigma.js":false,"./icons/square-slash.js":false,"./icons/square-split-horizontal.js":false,"./icons/square-split-vertical.js":false,"./icons/square-terminal.js":false,"./icons/square-user-round.js":false,"./icons/square-user.js":false,"./icons/square-x.js":false,"./icons/test-tube-diagonal.js":false,"./icons/text-select.js":false,"./icons/tram-front.js":false,"./icons/tree-palm.js":false,"./icons/triangle-alert.js":false,"./icons/tv-minimal.js":false,"./icons/university.js":false,"./icons/user-round-check.js":false,"./icons/user-round-cog.js":false,"./icons/user-round-minus.js":false,"./icons/user-round-plus.js":false,"./icons/user-round-x.js":false,"./icons/user-round.js":false,"./icons/users-round.js":false,"./icons/utensils-crossed.js":false,"./icons/utensils.js":false,"./icons/wallet-minimal.js":false,"./icons/wand-sparkles.js":false,"./icons/a-arrow-down.js":false,"./icons/a-arrow-up.js":false,"./icons/a-large-small.js":false,"./icons/accessibility.js":false,"./icons/activity.js":false,"./icons/air-vent.js":false,"./icons/airplay.js":false,"./icons/alarm-clock-off.js":false,"./icons/alarm-clock.js":false,"./icons/alarm-smoke.js":false,"./icons/album.js":false,"./icons/align-center-horizontal.js":false,"./icons/align-center-vertical.js":false,"./icons/align-center.js":false,"./icons/align-end-horizontal.js":false,"./icons/align-end-vertical.js":false,"./icons/align-horizontal-distribute-center.js":false,"./icons/align-horizontal-distribute-end.js":false,"./icons/align-horizontal-justify-center.js":false,"./icons/align-horizontal-justify-end.js":false,"./icons/align-horizontal-distribute-start.js":false,"./icons/align-horizontal-justify-start.js":false,"./icons/align-horizontal-space-around.js":false,"./icons/align-horizontal-space-between.js":false,"./icons/align-justify.js":false,"./icons/align-left.js":false,"./icons/align-right.js":false,"./icons/align-start-horizontal.js":false,"./icons/align-start-vertical.js":false,"./icons/align-vertical-distribute-center.js":false,"./icons/align-vertical-distribute-end.js":false,"./icons/align-vertical-distribute-start.js":false,"./icons/align-vertical-justify-center.js":false,"./icons/align-vertical-justify-end.js":false,"./icons/align-vertical-justify-start.js":false,"./icons/align-vertical-space-around.js":false,"./icons/align-vertical-space-between.js":false,"./icons/ambulance.js":false,"./icons/ampersand.js":false,"./icons/ampersands.js":false,"./icons/amphora.js":false,"./icons/anchor.js":false,"./icons/angry.js":false,"./icons/annoyed.js":false,"./icons/antenna.js":false,"./icons/anvil.js":false,"./icons/aperture.js":false,"./icons/app-window-mac.js":false,"./icons/app-window.js":false,"./icons/apple.js":false,"./icons/archive-restore.js":false,"./icons/archive-x.js":false,"./icons/archive.js":false,"./icons/armchair.js":false,"./icons/arrow-big-down-dash.js":false,"./icons/arrow-big-down.js":false,"./icons/arrow-big-left-dash.js":false,"./icons/arrow-big-left.js":false,"./icons/arrow-big-right-dash.js":false,"./icons/arrow-big-right.js":false,"./icons/arrow-big-up-dash.js":false,"./icons/arrow-big-up.js":false,"./icons/arrow-down-from-line.js":false,"./icons/arrow-down-left.js":false,"./icons/arrow-down-narrow-wide.js":false,"./icons/arrow-down-right.js":"vbCFl","./icons/arrow-down-to-dot.js":false,"./icons/arrow-down-up.js":false,"./icons/arrow-down-to-line.js":false,"./icons/arrow-down.js":false,"./icons/arrow-left-from-line.js":false,"./icons/arrow-left-to-line.js":false,"./icons/arrow-left.js":false,"./icons/arrow-left-right.js":false,"./icons/arrow-right-from-line.js":false,"./icons/arrow-right-left.js":false,"./icons/arrow-right-to-line.js":false,"./icons/arrow-right.js":false,"./icons/arrow-up-down.js":false,"./icons/arrow-up-from-dot.js":false,"./icons/arrow-up-from-line.js":false,"./icons/arrow-up-left.js":false,"./icons/arrow-up-right.js":"gNzcS","./icons/arrow-up-to-line.js":false,"./icons/arrow-up-wide-narrow.js":false,"./icons/arrows-up-from-line.js":false,"./icons/arrow-up.js":false,"./icons/asterisk.js":false,"./icons/at-sign.js":false,"./icons/atom.js":false,"./icons/audio-lines.js":false,"./icons/audio-waveform.js":false,"./icons/award.js":false,"./icons/axe.js":false,"./icons/baby.js":false,"./icons/backpack.js":false,"./icons/badge-alert.js":false,"./icons/badge-cent.js":false,"./icons/badge-dollar-sign.js":false,"./icons/badge-euro.js":false,"./icons/badge-help.js":false,"./icons/badge-indian-rupee.js":false,"./icons/badge-info.js":false,"./icons/badge-japanese-yen.js":false,"./icons/badge-minus.js":false,"./icons/badge-percent.js":false,"./icons/badge-plus.js":false,"./icons/badge-russian-ruble.js":false,"./icons/badge-pound-sterling.js":false,"./icons/badge-swiss-franc.js":false,"./icons/badge.js":false,"./icons/badge-x.js":false,"./icons/baggage-claim.js":false,"./icons/ban.js":false,"./icons/banana.js":false,"./icons/bandage.js":false,"./icons/banknote-arrow-down.js":false,"./icons/banknote-arrow-up.js":false,"./icons/banknote-x.js":false,"./icons/banknote.js":false,"./icons/barcode.js":false,"./icons/baseline.js":false,"./icons/bath.js":false,"./icons/battery-charging.js":false,"./icons/battery-full.js":false,"./icons/battery-low.js":false,"./icons/battery-plus.js":false,"./icons/battery-medium.js":false,"./icons/battery.js":false,"./icons/battery-warning.js":false,"./icons/beaker.js":false,"./icons/bean.js":false,"./icons/bed-double.js":false,"./icons/bean-off.js":false,"./icons/bed-single.js":false,"./icons/bed.js":false,"./icons/beef.js":false,"./icons/beer-off.js":false,"./icons/beer.js":false,"./icons/bell-dot.js":false,"./icons/bell-electric.js":false,"./icons/bell-minus.js":false,"./icons/bell-off.js":false,"./icons/bell-plus.js":false,"./icons/bell-ring.js":false,"./icons/bell.js":false,"./icons/between-vertical-end.js":false,"./icons/between-vertical-start.js":false,"./icons/biceps-flexed.js":false,"./icons/bike.js":false,"./icons/binary.js":false,"./icons/binoculars.js":false,"./icons/biohazard.js":false,"./icons/bird.js":false,"./icons/bitcoin.js":false,"./icons/blend.js":false,"./icons/blinds.js":false,"./icons/blocks.js":false,"./icons/bluetooth-connected.js":false,"./icons/bluetooth-off.js":false,"./icons/bluetooth-searching.js":false,"./icons/bluetooth.js":false,"./icons/bold.js":false,"./icons/bolt.js":false,"./icons/bomb.js":false,"./icons/bone.js":false,"./icons/book-a.js":false,"./icons/book-audio.js":false,"./icons/book-copy.js":false,"./icons/book-check.js":false,"./icons/book-down.js":false,"./icons/book-headphones.js":false,"./icons/book-heart.js":false,"./icons/book-image.js":false,"./icons/book-key.js":false,"./icons/book-lock.js":false,"./icons/book-marked.js":false,"./icons/book-minus.js":false,"./icons/book-open-check.js":false,"./icons/book-open.js":false,"./icons/book-open-text.js":false,"./icons/book-plus.js":false,"./icons/book-text.js":false,"./icons/book-type.js":false,"./icons/book-up-2.js":false,"./icons/book-up.js":false,"./icons/book-user.js":false,"./icons/book-x.js":false,"./icons/book.js":false,"./icons/bookmark-check.js":false,"./icons/bookmark-minus.js":false,"./icons/bookmark-plus.js":false,"./icons/bookmark-x.js":false,"./icons/bookmark.js":false,"./icons/boom-box.js":false,"./icons/bot-message-square.js":false,"./icons/bot-off.js":false,"./icons/bot.js":false,"./icons/bow-arrow.js":false,"./icons/box.js":false,"./icons/boxes.js":false,"./icons/brackets.js":false,"./icons/brain-circuit.js":false,"./icons/brain-cog.js":false,"./icons/brain.js":false,"./icons/brick-wall-fire.js":false,"./icons/brick-wall.js":false,"./icons/briefcase-business.js":false,"./icons/briefcase-conveyor-belt.js":false,"./icons/briefcase-medical.js":false,"./icons/briefcase.js":false,"./icons/bring-to-front.js":false,"./icons/brush-cleaning.js":false,"./icons/brush.js":false,"./icons/bubbles.js":false,"./icons/bug-off.js":false,"./icons/bug-play.js":false,"./icons/bug.js":false,"./icons/building-2.js":false,"./icons/building.js":false,"./icons/bus.js":false,"./icons/bus-front.js":false,"./icons/cable-car.js":false,"./icons/cable.js":false,"./icons/cake-slice.js":false,"./icons/cake.js":false,"./icons/calculator.js":false,"./icons/calendar-1.js":false,"./icons/calendar-arrow-up.js":false,"./icons/calendar-arrow-down.js":false,"./icons/calendar-check-2.js":false,"./icons/calendar-check.js":false,"./icons/calendar-clock.js":false,"./icons/calendar-cog.js":false,"./icons/calendar-days.js":false,"./icons/calendar-fold.js":false,"./icons/calendar-heart.js":false,"./icons/calendar-minus-2.js":false,"./icons/calendar-minus.js":false,"./icons/calendar-off.js":false,"./icons/calendar-plus-2.js":false,"./icons/calendar-plus.js":false,"./icons/calendar-range.js":false,"./icons/calendar-search.js":false,"./icons/calendar-x-2.js":false,"./icons/calendar-sync.js":false,"./icons/calendar-x.js":false,"./icons/calendar.js":false,"./icons/camera-off.js":false,"./icons/camera.js":false,"./icons/candy-cane.js":false,"./icons/candy-off.js":false,"./icons/candy.js":false,"./icons/cannabis.js":false,"./icons/captions-off.js":false,"./icons/car-front.js":false,"./icons/car-taxi-front.js":false,"./icons/car.js":false,"./icons/caravan.js":false,"./icons/card-sim.js":false,"./icons/carrot.js":false,"./icons/case-lower.js":false,"./icons/case-sensitive.js":false,"./icons/case-upper.js":false,"./icons/cassette-tape.js":false,"./icons/cast.js":false,"./icons/castle.js":false,"./icons/cat.js":false,"./icons/cctv.js":false,"./icons/chart-bar-decreasing.js":false,"./icons/chart-bar-increasing.js":false,"./icons/chart-bar-stacked.js":false,"./icons/chart-column-decreasing.js":false,"./icons/chart-column-stacked.js":false,"./icons/chart-gantt.js":false,"./icons/chart-network.js":false,"./icons/chart-no-axes-column-decreasing.js":false,"./icons/chart-no-axes-combined.js":false,"./icons/chart-spline.js":false,"./icons/check-check.js":false,"./icons/check.js":false,"./icons/check-line.js":false,"./icons/chef-hat.js":false,"./icons/cherry.js":false,"./icons/chevron-down.js":false,"./icons/chevron-first.js":false,"./icons/chevron-last.js":false,"./icons/chevron-left.js":false,"./icons/chevron-right.js":false,"./icons/chevron-up.js":false,"./icons/chevrons-down-up.js":false,"./icons/chevrons-down.js":false,"./icons/chevrons-left-right-ellipsis.js":false,"./icons/chevrons-left-right.js":false,"./icons/chevrons-left.js":false,"./icons/chevrons-right-left.js":false,"./icons/chevrons-right.js":false,"./icons/chevrons-up-down.js":false,"./icons/chevrons-up.js":false,"./icons/chrome.js":false,"./icons/church.js":false,"./icons/cigarette-off.js":false,"./icons/cigarette.js":false,"./icons/circle-dashed.js":false,"./icons/circle-dollar-sign.js":false,"./icons/circle-dot-dashed.js":false,"./icons/circle-dot.js":false,"./icons/circle-ellipsis.js":false,"./icons/circle-equal.js":false,"./icons/circle-fading-plus.js":false,"./icons/circle-fading-arrow-up.js":false,"./icons/circle-off.js":false,"./icons/circle-pound-sterling.js":false,"./icons/circle-slash.js":false,"./icons/circle-small.js":false,"./icons/circle.js":false,"./icons/circuit-board.js":false,"./icons/citrus.js":false,"./icons/clapperboard.js":false,"./icons/clipboard-check.js":false,"./icons/clipboard-copy.js":false,"./icons/clipboard-list.js":false,"./icons/clipboard-minus.js":false,"./icons/clipboard-paste.js":false,"./icons/clipboard-plus.js":false,"./icons/clipboard-type.js":false,"./icons/clipboard-x.js":false,"./icons/clipboard.js":false,"./icons/clock-1.js":false,"./icons/clock-10.js":false,"./icons/clock-11.js":false,"./icons/clock-12.js":false,"./icons/clock-2.js":false,"./icons/clock-4.js":false,"./icons/clock-5.js":false,"./icons/clock-3.js":false,"./icons/clock-6.js":false,"./icons/clock-7.js":false,"./icons/clock-8.js":false,"./icons/clock-9.js":false,"./icons/clock-alert.js":false,"./icons/clock-arrow-down.js":false,"./icons/clock-arrow-up.js":false,"./icons/clock-fading.js":false,"./icons/clock-plus.js":false,"./icons/clock.js":false,"./icons/cloud-check.js":false,"./icons/cloud-alert.js":false,"./icons/cloud-cog.js":false,"./icons/cloud-drizzle.js":false,"./icons/cloud-fog.js":false,"./icons/cloud-hail.js":false,"./icons/cloud-lightning.js":false,"./icons/cloud-moon-rain.js":false,"./icons/cloud-off.js":false,"./icons/cloud-moon.js":false,"./icons/cloud-rain-wind.js":false,"./icons/cloud-rain.js":false,"./icons/cloud-snow.js":false,"./icons/cloud-sun-rain.js":false,"./icons/cloud-sun.js":false,"./icons/cloud.js":false,"./icons/cloudy.js":false,"./icons/club.js":false,"./icons/clover.js":false,"./icons/code.js":false,"./icons/codepen.js":false,"./icons/coffee.js":false,"./icons/codesandbox.js":false,"./icons/cog.js":false,"./icons/coins.js":false,"./icons/columns-4.js":false,"./icons/combine.js":false,"./icons/command.js":false,"./icons/compass.js":false,"./icons/component.js":false,"./icons/computer.js":false,"./icons/concierge-bell.js":false,"./icons/construction.js":false,"./icons/cone.js":false,"./icons/container.js":false,"./icons/contrast.js":false,"./icons/contact.js":false,"./icons/cookie.js":false,"./icons/cooking-pot.js":false,"./icons/copy-check.js":false,"./icons/copy-minus.js":false,"./icons/copy-plus.js":false,"./icons/copy-slash.js":false,"./icons/copy-x.js":false,"./icons/copy.js":false,"./icons/copyleft.js":false,"./icons/copyright.js":false,"./icons/corner-down-left.js":false,"./icons/corner-down-right.js":false,"./icons/corner-left-down.js":false,"./icons/corner-left-up.js":false,"./icons/corner-right-down.js":false,"./icons/corner-right-up.js":false,"./icons/corner-up-left.js":false,"./icons/corner-up-right.js":false,"./icons/cpu.js":false,"./icons/credit-card.js":false,"./icons/croissant.js":false,"./icons/creative-commons.js":false,"./icons/crop.js":false,"./icons/cross.js":false,"./icons/crosshair.js":false,"./icons/crown.js":false,"./icons/cup-soda.js":false,"./icons/cuboid.js":false,"./icons/currency.js":false,"./icons/cylinder.js":false,"./icons/dam.js":false,"./icons/database-backup.js":false,"./icons/database.js":false,"./icons/database-zap.js":false,"./icons/decimals-arrow-right.js":false,"./icons/decimals-arrow-left.js":false,"./icons/delete.js":false,"./icons/dessert.js":false,"./icons/diameter.js":false,"./icons/diamond-minus.js":false,"./icons/diamond-plus.js":false,"./icons/diamond.js":false,"./icons/dice-1.js":false,"./icons/dice-3.js":false,"./icons/dice-4.js":false,"./icons/dice-2.js":false,"./icons/dice-5.js":false,"./icons/dice-6.js":false,"./icons/dices.js":false,"./icons/disc-2.js":false,"./icons/diff.js":false,"./icons/disc-3.js":false,"./icons/disc-album.js":false,"./icons/disc.js":false,"./icons/divide.js":false,"./icons/dna-off.js":false,"./icons/dna.js":false,"./icons/dock.js":false,"./icons/dog.js":false,"./icons/dollar-sign.js":false,"./icons/donut.js":false,"./icons/door-closed-locked.js":false,"./icons/door-closed.js":false,"./icons/door-open.js":false,"./icons/dot.js":false,"./icons/download.js":false,"./icons/drafting-compass.js":false,"./icons/drama.js":false,"./icons/dribbble.js":false,"./icons/drill.js":false,"./icons/droplet-off.js":false,"./icons/droplet.js":false,"./icons/droplets.js":false,"./icons/drum.js":false,"./icons/drumstick.js":false,"./icons/dumbbell.js":false,"./icons/ear-off.js":false,"./icons/ear.js":false,"./icons/earth-lock.js":false,"./icons/eclipse.js":false,"./icons/egg-fried.js":false,"./icons/egg-off.js":false,"./icons/egg.js":false,"./icons/equal-approximately.js":false,"./icons/equal-not.js":false,"./icons/equal.js":false,"./icons/eraser.js":false,"./icons/ethernet-port.js":false,"./icons/euro.js":false,"./icons/expand.js":false,"./icons/external-link.js":false,"./icons/eye-closed.js":false,"./icons/eye-off.js":false,"./icons/eye.js":false,"./icons/facebook.js":false,"./icons/factory.js":false,"./icons/fan.js":false,"./icons/fast-forward.js":false,"./icons/feather.js":false,"./icons/fence.js":false,"./icons/ferris-wheel.js":false,"./icons/figma.js":false,"./icons/file-archive.js":false,"./icons/file-audio-2.js":false,"./icons/file-audio.js":false,"./icons/file-badge-2.js":false,"./icons/file-box.js":false,"./icons/file-badge.js":false,"./icons/file-check-2.js":false,"./icons/file-check.js":false,"./icons/file-clock.js":false,"./icons/file-code-2.js":false,"./icons/file-code.js":false,"./icons/file-diff.js":false,"./icons/file-digit.js":false,"./icons/file-down.js":false,"./icons/file-heart.js":false,"./icons/file-image.js":false,"./icons/file-input.js":false,"./icons/file-json-2.js":false,"./icons/file-json.js":false,"./icons/file-key-2.js":false,"./icons/file-lock-2.js":false,"./icons/file-key.js":false,"./icons/file-lock.js":false,"./icons/file-minus-2.js":false,"./icons/file-minus.js":false,"./icons/file-music.js":false,"./icons/file-output.js":false,"./icons/file-plus-2.js":false,"./icons/file-plus.js":false,"./icons/file-question.js":false,"./icons/file-scan.js":false,"./icons/file-search-2.js":false,"./icons/file-search.js":false,"./icons/file-sliders.js":false,"./icons/file-spreadsheet.js":false,"./icons/file-stack.js":false,"./icons/file-terminal.js":false,"./icons/file-symlink.js":false,"./icons/file-type-2.js":false,"./icons/file-text.js":false,"./icons/file-type.js":false,"./icons/file-up.js":false,"./icons/file-user.js":false,"./icons/file-video-2.js":false,"./icons/file-video.js":false,"./icons/file-volume-2.js":false,"./icons/file-volume.js":false,"./icons/file-warning.js":false,"./icons/file-x-2.js":false,"./icons/file-x.js":false,"./icons/file.js":false,"./icons/files.js":false,"./icons/film.js":false,"./icons/fingerprint.js":false,"./icons/fire-extinguisher.js":false,"./icons/fish-off.js":false,"./icons/fish.js":false,"./icons/fish-symbol.js":false,"./icons/flag-off.js":false,"./icons/flag-triangle-left.js":false,"./icons/flag-triangle-right.js":false,"./icons/flame-kindling.js":false,"./icons/flag.js":false,"./icons/flame.js":false,"./icons/flashlight-off.js":false,"./icons/flashlight.js":false,"./icons/flask-conical-off.js":false,"./icons/flask-conical.js":false,"./icons/flask-round.js":false,"./icons/flip-horizontal.js":false,"./icons/flip-horizontal-2.js":false,"./icons/flip-vertical-2.js":false,"./icons/flip-vertical.js":false,"./icons/flower-2.js":false,"./icons/flower.js":false,"./icons/focus.js":false,"./icons/fold-horizontal.js":false,"./icons/folder-archive.js":false,"./icons/fold-vertical.js":false,"./icons/folder-check.js":false,"./icons/folder-clock.js":false,"./icons/folder-closed.js":false,"./icons/folder-code.js":false,"./icons/folder-down.js":false,"./icons/folder-dot.js":false,"./icons/folder-git-2.js":false,"./icons/folder-git.js":false,"./icons/folder-heart.js":false,"./icons/folder-kanban.js":false,"./icons/folder-input.js":false,"./icons/folder-key.js":false,"./icons/folder-lock.js":false,"./icons/folder-minus.js":false,"./icons/folder-open-dot.js":false,"./icons/folder-open.js":false,"./icons/folder-output.js":false,"./icons/folder-plus.js":false,"./icons/folder-root.js":false,"./icons/folder-search-2.js":false,"./icons/folder-search.js":false,"./icons/folder-symlink.js":false,"./icons/folder-sync.js":false,"./icons/folder-tree.js":false,"./icons/folder-up.js":false,"./icons/folder-x.js":false,"./icons/folder.js":false,"./icons/folders.js":false,"./icons/forklift.js":false,"./icons/footprints.js":false,"./icons/forward.js":false,"./icons/frame.js":false,"./icons/framer.js":false,"./icons/frown.js":false,"./icons/fuel.js":false,"./icons/fullscreen.js":false,"./icons/funnel-plus.js":false,"./icons/gallery-horizontal-end.js":false,"./icons/gallery-horizontal.js":false,"./icons/gallery-thumbnails.js":false,"./icons/gallery-vertical-end.js":false,"./icons/gallery-vertical.js":false,"./icons/gamepad-2.js":false,"./icons/gamepad.js":false,"./icons/gauge.js":"6zzn0","./icons/gavel.js":false,"./icons/gem.js":false,"./icons/ghost.js":false,"./icons/gift.js":false,"./icons/git-branch-plus.js":false,"./icons/git-branch.js":false,"./icons/git-commit-vertical.js":false,"./icons/git-compare-arrows.js":false,"./icons/git-compare.js":false,"./icons/git-fork.js":false,"./icons/git-graph.js":false,"./icons/git-merge.js":false,"./icons/git-pull-request-arrow.js":false,"./icons/git-pull-request-closed.js":false,"./icons/git-pull-request-create-arrow.js":false,"./icons/git-pull-request-create.js":false,"./icons/git-pull-request-draft.js":false,"./icons/github.js":false,"./icons/git-pull-request.js":false,"./icons/gitlab.js":false,"./icons/glass-water.js":false,"./icons/glasses.js":false,"./icons/globe-lock.js":false,"./icons/globe.js":false,"./icons/goal.js":false,"./icons/gpu.js":false,"./icons/grab.js":false,"./icons/graduation-cap.js":false,"./icons/grape.js":false,"./icons/grid-3x2.js":false,"./icons/grip-horizontal.js":false,"./icons/grip-vertical.js":false,"./icons/grip.js":false,"./icons/group.js":false,"./icons/guitar.js":false,"./icons/ham.js":false,"./icons/hammer.js":false,"./icons/hamburger.js":false,"./icons/hand-coins.js":false,"./icons/hand-heart.js":false,"./icons/hand-metal.js":false,"./icons/hand-platter.js":false,"./icons/hand.js":false,"./icons/handshake.js":false,"./icons/hard-drive-download.js":false,"./icons/hard-drive.js":false,"./icons/hard-drive-upload.js":false,"./icons/hard-hat.js":false,"./icons/hash.js":false,"./icons/haze.js":false,"./icons/hdmi-port.js":false,"./icons/heading-1.js":false,"./icons/heading-2.js":false,"./icons/heading-3.js":false,"./icons/heading-4.js":false,"./icons/heading-5.js":false,"./icons/heading-6.js":false,"./icons/heading.js":false,"./icons/headphone-off.js":false,"./icons/headphones.js":false,"./icons/headset.js":false,"./icons/heart-crack.js":false,"./icons/heart-handshake.js":false,"./icons/heart-minus.js":false,"./icons/heart-off.js":false,"./icons/heart-plus.js":false,"./icons/heart-pulse.js":false,"./icons/heart.js":false,"./icons/heater.js":false,"./icons/hexagon.js":false,"./icons/highlighter.js":false,"./icons/hop-off.js":false,"./icons/history.js":false,"./icons/hop.js":false,"./icons/hospital.js":false,"./icons/hotel.js":false,"./icons/house-plug.js":false,"./icons/hourglass.js":false,"./icons/house-wifi.js":false,"./icons/house-plus.js":false,"./icons/id-card-lanyard.js":false,"./icons/id-card.js":false,"./icons/image-down.js":false,"./icons/image-minus.js":false,"./icons/image-off.js":false,"./icons/image-play.js":false,"./icons/image-plus.js":false,"./icons/image-up.js":false,"./icons/image.js":false,"./icons/image-upscale.js":false,"./icons/images.js":false,"./icons/import.js":false,"./icons/inbox.js":false,"./icons/indian-rupee.js":false,"./icons/infinity.js":false,"./icons/inspection-panel.js":false,"./icons/info.js":false,"./icons/instagram.js":false,"./icons/italic.js":false,"./icons/iteration-ccw.js":false,"./icons/iteration-cw.js":false,"./icons/japanese-yen.js":false,"./icons/joystick.js":false,"./icons/kanban.js":false,"./icons/key-round.js":false,"./icons/key-square.js":false,"./icons/key.js":false,"./icons/keyboard-music.js":false,"./icons/keyboard-off.js":false,"./icons/keyboard.js":false,"./icons/lamp-ceiling.js":false,"./icons/lamp-desk.js":false,"./icons/lamp-floor.js":false,"./icons/lamp-wall-down.js":false,"./icons/lamp-wall-up.js":false,"./icons/lamp.js":false,"./icons/land-plot.js":false,"./icons/landmark.js":false,"./icons/languages.js":false,"./icons/laptop-minimal-check.js":false,"./icons/laptop.js":false,"./icons/lasso-select.js":false,"./icons/lasso.js":false,"./icons/laugh.js":false,"./icons/layers-2.js":false,"./icons/layout-dashboard.js":false,"./icons/layout-grid.js":false,"./icons/layout-list.js":false,"./icons/layout-panel-left.js":false,"./icons/layout-panel-top.js":false,"./icons/layout-template.js":false,"./icons/leaf.js":false,"./icons/lectern.js":false,"./icons/leafy-green.js":false,"./icons/letter-text.js":false,"./icons/library-big.js":false,"./icons/library.js":false,"./icons/life-buoy.js":false,"./icons/ligature.js":false,"./icons/lightbulb-off.js":false,"./icons/lightbulb.js":false,"./icons/link-2-off.js":false,"./icons/link.js":false,"./icons/link-2.js":false,"./icons/linkedin.js":false,"./icons/list-check.js":false,"./icons/list-checks.js":false,"./icons/list-collapse.js":false,"./icons/list-filter.js":false,"./icons/list-end.js":false,"./icons/list-filter-plus.js":false,"./icons/list-minus.js":false,"./icons/list-music.js":false,"./icons/list-plus.js":false,"./icons/list-ordered.js":false,"./icons/list-restart.js":false,"./icons/list-start.js":false,"./icons/list-todo.js":false,"./icons/list-tree.js":false,"./icons/list-video.js":false,"./icons/list-x.js":false,"./icons/loader-pinwheel.js":false,"./icons/loader.js":false,"./icons/list.js":false,"./icons/locate-fixed.js":false,"./icons/locate-off.js":false,"./icons/locate.js":false,"./icons/location-edit.js":false,"./icons/lock-keyhole.js":false,"./icons/lock.js":false,"./icons/log-in.js":false,"./icons/log-out.js":false,"./icons/logs.js":false,"./icons/lollipop.js":false,"./icons/luggage.js":false,"./icons/magnet.js":false,"./icons/mail-minus.js":false,"./icons/mail-open.js":false,"./icons/mail-check.js":false,"./icons/mail-plus.js":false,"./icons/mail-search.js":false,"./icons/mail-question.js":false,"./icons/mail-warning.js":false,"./icons/mail-x.js":false,"./icons/mail.js":false,"./icons/mailbox.js":false,"./icons/mails.js":false,"./icons/map-pin-check-inside.js":false,"./icons/map-pin-check.js":false,"./icons/map-pin-house.js":false,"./icons/map-pin-minus-inside.js":false,"./icons/map-pin-minus.js":false,"./icons/map-pin-off.js":false,"./icons/map-pin-plus-inside.js":false,"./icons/map-pin-plus.js":false,"./icons/map-pin-x-inside.js":false,"./icons/map-pin-x.js":false,"./icons/map-pinned.js":false,"./icons/map-pin.js":false,"./icons/map-plus.js":false,"./icons/map.js":false,"./icons/mars-stroke.js":false,"./icons/martini.js":false,"./icons/mars.js":false,"./icons/maximize-2.js":false,"./icons/maximize.js":false,"./icons/medal.js":false,"./icons/megaphone-off.js":false,"./icons/megaphone.js":false,"./icons/meh.js":false,"./icons/memory-stick.js":false,"./icons/merge.js":false,"./icons/menu.js":false,"./icons/message-circle-code.js":false,"./icons/message-circle-dashed.js":false,"./icons/message-circle-heart.js":false,"./icons/message-circle-more.js":false,"./icons/message-circle-off.js":false,"./icons/message-circle-plus.js":false,"./icons/message-circle-question.js":false,"./icons/message-circle-reply.js":false,"./icons/message-circle-warning.js":false,"./icons/message-circle-x.js":false,"./icons/message-circle.js":false,"./icons/message-square-code.js":false,"./icons/message-square-dashed.js":false,"./icons/message-square-dot.js":false,"./icons/message-square-diff.js":false,"./icons/message-square-heart.js":false,"./icons/message-square-lock.js":false,"./icons/message-square-more.js":false,"./icons/message-square-off.js":false,"./icons/message-square-plus.js":false,"./icons/message-square-quote.js":false,"./icons/message-square-reply.js":false,"./icons/message-square-share.js":false,"./icons/message-square-text.js":false,"./icons/message-square-x.js":false,"./icons/message-square-warning.js":false,"./icons/message-square.js":false,"./icons/messages-square.js":false,"./icons/mic-off.js":false,"./icons/mic.js":false,"./icons/microchip.js":false,"./icons/microscope.js":false,"./icons/microwave.js":false,"./icons/milestone.js":false,"./icons/milk-off.js":false,"./icons/milk.js":false,"./icons/minimize-2.js":false,"./icons/minimize.js":false,"./icons/minus.js":false,"./icons/monitor-check.js":false,"./icons/monitor-cog.js":false,"./icons/monitor-dot.js":false,"./icons/monitor-off.js":false,"./icons/monitor-down.js":false,"./icons/monitor-pause.js":false,"./icons/monitor-smartphone.js":false,"./icons/monitor-play.js":false,"./icons/monitor-speaker.js":false,"./icons/monitor-up.js":false,"./icons/monitor-stop.js":false,"./icons/monitor-x.js":false,"./icons/monitor.js":false,"./icons/moon-star.js":false,"./icons/moon.js":"dGTNs","./icons/mountain-snow.js":false,"./icons/mouse-off.js":false,"./icons/mountain.js":false,"./icons/mouse-pointer-2.js":false,"./icons/mouse-pointer-ban.js":false,"./icons/mouse-pointer-click.js":false,"./icons/mouse.js":false,"./icons/move-diagonal-2.js":false,"./icons/mouse-pointer.js":false,"./icons/move-diagonal.js":false,"./icons/move-down-left.js":false,"./icons/move-down-right.js":false,"./icons/move-down.js":false,"./icons/move-horizontal.js":false,"./icons/move-left.js":false,"./icons/move-right.js":false,"./icons/move-up-left.js":false,"./icons/move-up-right.js":false,"./icons/move-up.js":false,"./icons/move-vertical.js":false,"./icons/move.js":false,"./icons/music-2.js":false,"./icons/music-3.js":false,"./icons/music-4.js":false,"./icons/navigation-2-off.js":false,"./icons/music.js":false,"./icons/navigation-off.js":false,"./icons/navigation-2.js":false,"./icons/navigation.js":false,"./icons/network.js":false,"./icons/newspaper.js":false,"./icons/nfc.js":false,"./icons/non-binary.js":false,"./icons/notebook-pen.js":false,"./icons/notebook-tabs.js":false,"./icons/notebook-text.js":false,"./icons/notebook.js":false,"./icons/notepad-text-dashed.js":false,"./icons/notepad-text.js":false,"./icons/nut-off.js":false,"./icons/nut.js":false,"./icons/octagon-minus.js":false,"./icons/octagon.js":false,"./icons/omega.js":false,"./icons/option.js":false,"./icons/orbit.js":false,"./icons/origami.js":false,"./icons/package-2.js":false,"./icons/package-check.js":false,"./icons/package-minus.js":false,"./icons/package-open.js":false,"./icons/package-plus.js":false,"./icons/package-search.js":false,"./icons/package-x.js":false,"./icons/package.js":false,"./icons/paint-bucket.js":false,"./icons/paint-roller.js":false,"./icons/paintbrush.js":false,"./icons/palette.js":false,"./icons/panel-bottom-close.js":false,"./icons/panda.js":false,"./icons/panel-bottom-open.js":false,"./icons/panel-bottom.js":false,"./icons/panel-right-close.js":false,"./icons/panel-right-open.js":false,"./icons/panel-right.js":false,"./icons/panel-top-close.js":false,"./icons/panel-top-open.js":false,"./icons/panel-top.js":false,"./icons/panels-left-bottom.js":false,"./icons/panels-right-bottom.js":false,"./icons/paperclip.js":false,"./icons/parentheses.js":false,"./icons/parking-meter.js":false,"./icons/party-popper.js":false,"./icons/pause.js":false,"./icons/paw-print.js":false,"./icons/pc-case.js":false,"./icons/pen-off.js":false,"./icons/pen-tool.js":false,"./icons/pencil-line.js":false,"./icons/pencil-off.js":false,"./icons/pencil.js":false,"./icons/pencil-ruler.js":false,"./icons/pentagon.js":false,"./icons/percent.js":false,"./icons/person-standing.js":false,"./icons/philippine-peso.js":false,"./icons/phone-call.js":false,"./icons/phone-forwarded.js":false,"./icons/phone-incoming.js":false,"./icons/phone-missed.js":false,"./icons/phone-off.js":false,"./icons/phone.js":false,"./icons/phone-outgoing.js":false,"./icons/pi.js":false,"./icons/piano.js":false,"./icons/pickaxe.js":false,"./icons/picture-in-picture-2.js":false,"./icons/picture-in-picture.js":false,"./icons/piggy-bank.js":false,"./icons/pilcrow-left.js":false,"./icons/pilcrow-right.js":false,"./icons/pilcrow.js":false,"./icons/pill-bottle.js":false,"./icons/pill.js":false,"./icons/pin-off.js":false,"./icons/pin.js":false,"./icons/pipette.js":false,"./icons/pizza.js":false,"./icons/plane-landing.js":false,"./icons/plane-takeoff.js":false,"./icons/plane.js":false,"./icons/play.js":false,"./icons/plug-2.js":false,"./icons/plug.js":false,"./icons/plus.js":false,"./icons/pocket-knife.js":false,"./icons/pocket.js":false,"./icons/podcast.js":false,"./icons/pointer-off.js":false,"./icons/pointer.js":false,"./icons/popcorn.js":false,"./icons/pound-sterling.js":false,"./icons/popsicle.js":false,"./icons/power.js":false,"./icons/power-off.js":false,"./icons/presentation.js":false,"./icons/printer-check.js":false,"./icons/printer.js":false,"./icons/projector.js":false,"./icons/proportions.js":false,"./icons/puzzle.js":false,"./icons/pyramid.js":false,"./icons/qr-code.js":false,"./icons/quote.js":false,"./icons/rabbit.js":false,"./icons/radar.js":false,"./icons/radiation.js":false,"./icons/radical.js":false,"./icons/radio-tower.js":false,"./icons/radio-receiver.js":false,"./icons/radio.js":false,"./icons/radius.js":false,"./icons/rail-symbol.js":false,"./icons/rainbow.js":false,"./icons/rat.js":false,"./icons/ratio.js":false,"./icons/receipt-cent.js":false,"./icons/receipt-indian-rupee.js":false,"./icons/receipt-japanese-yen.js":false,"./icons/receipt-euro.js":false,"./icons/receipt-pound-sterling.js":false,"./icons/receipt-russian-ruble.js":false,"./icons/receipt-swiss-franc.js":false,"./icons/receipt-text.js":false,"./icons/receipt.js":false,"./icons/rectangle-goggles.js":false,"./icons/rectangle-horizontal.js":false,"./icons/rectangle-vertical.js":false,"./icons/recycle.js":false,"./icons/redo-2.js":false,"./icons/redo-dot.js":false,"./icons/redo.js":false,"./icons/refresh-ccw-dot.js":false,"./icons/refresh-ccw.js":false,"./icons/refresh-cw-off.js":false,"./icons/refresh-cw.js":false,"./icons/refrigerator.js":false,"./icons/regex.js":false,"./icons/remove-formatting.js":false,"./icons/repeat-1.js":false,"./icons/repeat-2.js":false,"./icons/repeat.js":false,"./icons/replace-all.js":false,"./icons/replace.js":false,"./icons/reply-all.js":false,"./icons/reply.js":false,"./icons/rewind.js":false,"./icons/ribbon.js":false,"./icons/rocket.js":false,"./icons/rocking-chair.js":false,"./icons/roller-coaster.js":false,"./icons/rotate-ccw-key.js":false,"./icons/rotate-ccw-square.js":false,"./icons/rotate-ccw.js":false,"./icons/rotate-cw-square.js":false,"./icons/rotate-cw.js":false,"./icons/route-off.js":false,"./icons/route.js":false,"./icons/router.js":false,"./icons/rows-4.js":false,"./icons/rss.js":false,"./icons/ruler-dimension-line.js":false,"./icons/ruler.js":false,"./icons/russian-ruble.js":false,"./icons/sailboat.js":false,"./icons/salad.js":false,"./icons/sandwich.js":false,"./icons/satellite-dish.js":false,"./icons/satellite.js":false,"./icons/saudi-riyal.js":false,"./icons/save-all.js":false,"./icons/save-off.js":false,"./icons/save.js":false,"./icons/scale.js":false,"./icons/scaling.js":false,"./icons/scan-barcode.js":false,"./icons/scan-face.js":false,"./icons/scan-eye.js":false,"./icons/scan-heart.js":false,"./icons/scan-line.js":false,"./icons/scan-qr-code.js":false,"./icons/scan-search.js":false,"./icons/scan-text.js":false,"./icons/scan.js":false,"./icons/school.js":false,"./icons/scissors.js":false,"./icons/scissors-line-dashed.js":false,"./icons/screen-share-off.js":false,"./icons/screen-share.js":false,"./icons/scroll-text.js":false,"./icons/scroll.js":false,"./icons/search-check.js":false,"./icons/search-code.js":false,"./icons/search-slash.js":false,"./icons/search-x.js":false,"./icons/search.js":false,"./icons/section.js":false,"./icons/send-to-back.js":false,"./icons/send.js":false,"./icons/separator-horizontal.js":false,"./icons/separator-vertical.js":false,"./icons/server-cog.js":false,"./icons/server-crash.js":false,"./icons/server-off.js":false,"./icons/server.js":false,"./icons/settings-2.js":false,"./icons/settings.js":false,"./icons/shapes.js":false,"./icons/share-2.js":false,"./icons/share.js":false,"./icons/shell.js":false,"./icons/sheet.js":false,"./icons/shield-alert.js":false,"./icons/shield-ban.js":false,"./icons/shield-check.js":false,"./icons/shield-ellipsis.js":false,"./icons/shield-half.js":false,"./icons/shield-minus.js":false,"./icons/shield-off.js":false,"./icons/shield-plus.js":false,"./icons/shield-question.js":false,"./icons/shield-user.js":false,"./icons/shield.js":false,"./icons/ship-wheel.js":false,"./icons/ship.js":false,"./icons/shirt.js":false,"./icons/shopping-bag.js":false,"./icons/shopping-basket.js":false,"./icons/shopping-cart.js":false,"./icons/shovel.js":false,"./icons/shower-head.js":false,"./icons/shredder.js":false,"./icons/shrimp.js":false,"./icons/shrink.js":false,"./icons/shrub.js":false,"./icons/shuffle.js":false,"./icons/sigma.js":false,"./icons/signal-high.js":false,"./icons/signal-low.js":false,"./icons/signal-medium.js":false,"./icons/signal-zero.js":false,"./icons/signal.js":false,"./icons/signature.js":false,"./icons/signpost-big.js":false,"./icons/signpost.js":false,"./icons/siren.js":false,"./icons/skip-forward.js":false,"./icons/skip-back.js":false,"./icons/slack.js":false,"./icons/skull.js":false,"./icons/slash.js":false,"./icons/slice.js":false,"./icons/sliders-horizontal.js":false,"./icons/smartphone-charging.js":false,"./icons/smartphone-nfc.js":false,"./icons/smartphone.js":false,"./icons/smile-plus.js":false,"./icons/smile.js":false,"./icons/snail.js":false,"./icons/snowflake.js":false,"./icons/soap-dispenser-droplet.js":false,"./icons/sofa.js":false,"./icons/soup.js":false,"./icons/space.js":false,"./icons/spade.js":false,"./icons/sparkle.js":false,"./icons/speaker.js":false,"./icons/speech.js":false,"./icons/spell-check-2.js":false,"./icons/spell-check.js":false,"./icons/spline-pointer.js":false,"./icons/spline.js":false,"./icons/split.js":false,"./icons/spray-can.js":false,"./icons/sprout.js":false,"./icons/square-dashed-bottom-code.js":false,"./icons/square-dashed-bottom.js":false,"./icons/square-dashed-top-solid.js":false,"./icons/square-radical.js":false,"./icons/square-round-corner.js":false,"./icons/square-square.js":false,"./icons/square-stack.js":false,"./icons/square.js":false,"./icons/squares-exclude.js":false,"./icons/squares-intersect.js":false,"./icons/squares-subtract.js":false,"./icons/squares-unite.js":false,"./icons/squircle.js":false,"./icons/squirrel.js":false,"./icons/stamp.js":false,"./icons/star-off.js":false,"./icons/star-half.js":false,"./icons/star.js":false,"./icons/step-back.js":false,"./icons/step-forward.js":false,"./icons/stethoscope.js":false,"./icons/sticker.js":false,"./icons/store.js":false,"./icons/sticky-note.js":false,"./icons/stretch-horizontal.js":false,"./icons/stretch-vertical.js":false,"./icons/strikethrough.js":false,"./icons/subscript.js":false,"./icons/sun-dim.js":false,"./icons/sun-moon.js":false,"./icons/sun-snow.js":false,"./icons/sun-medium.js":false,"./icons/sun.js":"cltTu","./icons/sunset.js":false,"./icons/sunrise.js":false,"./icons/superscript.js":false,"./icons/swatch-book.js":false,"./icons/swiss-franc.js":false,"./icons/switch-camera.js":false,"./icons/sword.js":false,"./icons/syringe.js":false,"./icons/swords.js":false,"./icons/table-2.js":false,"./icons/table-cells-merge.js":false,"./icons/table-columns-split.js":false,"./icons/table-cells-split.js":false,"./icons/table-properties.js":false,"./icons/table-rows-split.js":false,"./icons/table-of-contents.js":false,"./icons/table.js":false,"./icons/tablet.js":false,"./icons/tag.js":false,"./icons/tablet-smartphone.js":false,"./icons/tablets.js":false,"./icons/tags.js":false,"./icons/tally-1.js":false,"./icons/tally-2.js":false,"./icons/tally-3.js":false,"./icons/tally-5.js":false,"./icons/tally-4.js":false,"./icons/tangent.js":false,"./icons/target.js":false,"./icons/telescope.js":false,"./icons/tent-tree.js":false,"./icons/terminal.js":false,"./icons/tent.js":false,"./icons/test-tube.js":false,"./icons/test-tubes.js":false,"./icons/text-cursor-input.js":false,"./icons/text-cursor.js":false,"./icons/text-quote.js":false,"./icons/text-search.js":false,"./icons/text.js":false,"./icons/theater.js":false,"./icons/thermometer-snowflake.js":false,"./icons/thermometer-sun.js":false,"./icons/thermometer.js":false,"./icons/thumbs-down.js":false,"./icons/thumbs-up.js":false,"./icons/ticket-check.js":false,"./icons/ticket-minus.js":false,"./icons/ticket-percent.js":false,"./icons/ticket-plus.js":false,"./icons/ticket-slash.js":false,"./icons/ticket-x.js":false,"./icons/ticket.js":false,"./icons/tickets-plane.js":false,"./icons/tickets.js":false,"./icons/timer-off.js":false,"./icons/timer-reset.js":false,"./icons/timer.js":false,"./icons/toggle-left.js":false,"./icons/toggle-right.js":false,"./icons/toilet.js":false,"./icons/tornado.js":false,"./icons/torus.js":false,"./icons/touchpad-off.js":false,"./icons/touchpad.js":false,"./icons/tower-control.js":false,"./icons/toy-brick.js":false,"./icons/traffic-cone.js":false,"./icons/tractor.js":false,"./icons/train-front-tunnel.js":false,"./icons/train-front.js":false,"./icons/train-track.js":false,"./icons/trash-2.js":false,"./icons/transgender.js":false,"./icons/trash.js":false,"./icons/tree-deciduous.js":false,"./icons/tree-pine.js":false,"./icons/trees.js":false,"./icons/trello.js":false,"./icons/trending-down.js":false,"./icons/trending-up-down.js":false,"./icons/trending-up.js":false,"./icons/triangle-dashed.js":false,"./icons/triangle-right.js":false,"./icons/triangle.js":false,"./icons/trophy.js":false,"./icons/truck-electric.js":false,"./icons/truck.js":false,"./icons/turtle.js":false,"./icons/tv-minimal-play.js":false,"./icons/tv.js":false,"./icons/twitch.js":false,"./icons/twitter.js":false,"./icons/type-outline.js":false,"./icons/type.js":false,"./icons/umbrella-off.js":false,"./icons/umbrella.js":false,"./icons/underline.js":false,"./icons/undo-2.js":false,"./icons/undo-dot.js":false,"./icons/undo.js":false,"./icons/unfold-horizontal.js":false,"./icons/unfold-vertical.js":false,"./icons/ungroup.js":false,"./icons/unlink-2.js":false,"./icons/unlink.js":false,"./icons/unplug.js":false,"./icons/upload.js":false,"./icons/usb.js":false,"./icons/user-check.js":false,"./icons/user-cog.js":false,"./icons/user-lock.js":false,"./icons/user-minus.js":false,"./icons/user-pen.js":false,"./icons/user-plus.js":false,"./icons/user-round-pen.js":false,"./icons/user-round-search.js":false,"./icons/user-search.js":false,"./icons/user-x.js":false,"./icons/user.js":false,"./icons/users.js":false,"./icons/variable.js":false,"./icons/utility-pole.js":false,"./icons/vault.js":false,"./icons/vegan.js":false,"./icons/venetian-mask.js":false,"./icons/venus-and-mars.js":false,"./icons/venus.js":false,"./icons/vibrate-off.js":false,"./icons/vibrate.js":false,"./icons/video-off.js":false,"./icons/videotape.js":false,"./icons/video.js":false,"./icons/voicemail.js":false,"./icons/view.js":false,"./icons/volleyball.js":false,"./icons/volume-1.js":false,"./icons/volume-2.js":false,"./icons/volume-off.js":false,"./icons/volume.js":false,"./icons/volume-x.js":false,"./icons/vote.js":false,"./icons/wallet-cards.js":false,"./icons/wallet.js":false,"./icons/wallpaper.js":false,"./icons/wand.js":false,"./icons/warehouse.js":false,"./icons/washing-machine.js":false,"./icons/watch.js":false,"./icons/waves-ladder.js":false,"./icons/waves.js":false,"./icons/waypoints.js":false,"./icons/webcam.js":false,"./icons/webhook-off.js":false,"./icons/webhook.js":false,"./icons/weight.js":false,"./icons/wheat-off.js":false,"./icons/wheat.js":false,"./icons/whole-word.js":false,"./icons/wifi-high.js":false,"./icons/wifi-low.js":false,"./icons/wifi-off.js":false,"./icons/wifi-pen.js":false,"./icons/wifi-zero.js":false,"./icons/wifi.js":false,"./icons/wind-arrow-down.js":false,"./icons/wind.js":false,"./icons/wine.js":false,"./icons/wine-off.js":false,"./icons/workflow.js":false,"./icons/worm.js":false,"./icons/wrench.js":false,"./icons/wrap-text.js":false,"./icons/x.js":false,"./icons/youtube.js":false,"./icons/zap-off.js":false,"./icons/zap.js":false,"./icons/zoom-in.js":false,"./icons/zoom-out.js":false,"./icons/arrow-down-0-1.js":false,"./icons/arrow-down-1-0.js":false,"./icons/arrow-up-0-1.js":false,"./icons/arrow-up-1-0.js":false,"./createLucideIcon.js":false,"./Icon.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cV8Zl":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>ChartNoAxesColumnIncreasing);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "line",
        {
            x1: "12",
            x2: "12",
            y1: "20",
            y2: "10",
            key: "1vz5eb"
        }
    ],
    [
        "line",
        {
            x1: "18",
            x2: "18",
            y1: "20",
            y2: "4",
            key: "cun8e5"
        }
    ],
    [
        "line",
        {
            x1: "6",
            x2: "6",
            y1: "20",
            y2: "16",
            key: "hq0ia6"
        }
    ]
];
const ChartNoAxesColumnIncreasing = (0, _createLucideIconJsDefault.default)("chart-no-axes-column-increasing", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c2nE9":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createLucideIcon);
var _react = require("react");
var _utilsJs = require("./shared/src/utils.js");
var _iconJs = require("./Icon.js");
var _iconJsDefault = parcelHelpers.interopDefault(_iconJs);
const createLucideIcon = (iconName, iconNode)=>{
    const Component = (0, _react.forwardRef)(({ className, ...props }, ref)=>(0, _react.createElement)((0, _iconJsDefault.default), {
            ref,
            iconNode,
            className: (0, _utilsJs.mergeClasses)(`lucide-${(0, _utilsJs.toKebabCase)((0, _utilsJs.toPascalCase)(iconName))}`, `lucide-${iconName}`, className),
            ...props
        }));
    Component.displayName = (0, _utilsJs.toPascalCase)(iconName);
    return Component;
};

},{"react":"jMk1U","./shared/src/utils.js":"8WM4g","./Icon.js":"dOacq","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8WM4g":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasA11yProp", ()=>hasA11yProp);
parcelHelpers.export(exports, "mergeClasses", ()=>mergeClasses);
parcelHelpers.export(exports, "toCamelCase", ()=>toCamelCase);
parcelHelpers.export(exports, "toKebabCase", ()=>toKebabCase);
parcelHelpers.export(exports, "toPascalCase", ()=>toPascalCase);
const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
const toCamelCase = (string)=>string.replace(/^([A-Z])|[\s-_]+(\w)/g, (match, p1, p2)=>p2 ? p2.toUpperCase() : p1.toLowerCase());
const toPascalCase = (string)=>{
    const camelCase = toCamelCase(string);
    return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);
};
const mergeClasses = (...classes)=>classes.filter((className, index, array)=>{
        return Boolean(className) && className.trim() !== "" && array.indexOf(className) === index;
    }).join(" ").trim();
const hasA11yProp = (props)=>{
    for(const prop in props){
        if (prop.startsWith("aria-") || prop === "role" || prop === "title") return true;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dOacq":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Icon);
var _react = require("react");
var _defaultAttributesJs = require("./defaultAttributes.js");
var _defaultAttributesJsDefault = parcelHelpers.interopDefault(_defaultAttributesJs);
var _utilsJs = require("./shared/src/utils.js");
const Icon = (0, _react.forwardRef)(({ color = "currentColor", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = "", children, iconNode, ...rest }, ref)=>(0, _react.createElement)("svg", {
        ref,
        ...(0, _defaultAttributesJsDefault.default),
        width: size,
        height: size,
        stroke: color,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,
        className: (0, _utilsJs.mergeClasses)("lucide", className),
        ...!children && !(0, _utilsJs.hasA11yProp)(rest) && {
            "aria-hidden": "true"
        },
        ...rest
    }, [
        ...iconNode.map(([tag, attrs])=>(0, _react.createElement)(tag, attrs)),
        ...Array.isArray(children) ? children : [
            children
        ]
    ]));

},{"react":"jMk1U","./defaultAttributes.js":"bY6E5","./shared/src/utils.js":"8WM4g","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bY6E5":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>defaultAttributes);
var defaultAttributes = {
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round",
    strokeLinejoin: "round"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"vbCFl":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>ArrowDownRight);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "m7 7 10 10",
            key: "1fmybs"
        }
    ],
    [
        "path",
        {
            d: "M17 7v10H7",
            key: "6fjiku"
        }
    ]
];
const ArrowDownRight = (0, _createLucideIconJsDefault.default)("arrow-down-right", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gNzcS":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>ArrowUpRight);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M7 7h10v10",
            key: "1tivn9"
        }
    ],
    [
        "path",
        {
            d: "M7 17 17 7",
            key: "1vkiza"
        }
    ]
];
const ArrowUpRight = (0, _createLucideIconJsDefault.default)("arrow-up-right", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6zzn0":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Gauge);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "m12 14 4-4",
            key: "9kzdfg"
        }
    ],
    [
        "path",
        {
            d: "M3.34 19a10 10 0 1 1 17.32 0",
            key: "19p75a"
        }
    ]
];
const Gauge = (0, _createLucideIconJsDefault.default)("gauge", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dGTNs":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Moon);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z",
            key: "a7tn18"
        }
    ]
];
const Moon = (0, _createLucideIconJsDefault.default)("moon", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cltTu":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.513.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Sun);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "circle",
        {
            cx: "12",
            cy: "12",
            r: "4",
            key: "4exip2"
        }
    ],
    [
        "path",
        {
            d: "M12 2v2",
            key: "tus03m"
        }
    ],
    [
        "path",
        {
            d: "M12 20v2",
            key: "1lh1kg"
        }
    ],
    [
        "path",
        {
            d: "m4.93 4.93 1.41 1.41",
            key: "149t6j"
        }
    ],
    [
        "path",
        {
            d: "m17.66 17.66 1.41 1.41",
            key: "ptbguv"
        }
    ],
    [
        "path",
        {
            d: "M2 12h2",
            key: "1t8f8n"
        }
    ],
    [
        "path",
        {
            d: "M20 12h2",
            key: "1q8mjw"
        }
    ],
    [
        "path",
        {
            d: "m6.34 17.66-1.41 1.41",
            key: "1m8zz5"
        }
    ],
    [
        "path",
        {
            d: "m19.07 4.93-1.41 1.41",
            key: "1shlcs"
        }
    ]
];
const Sun = (0, _createLucideIconJsDefault.default)("sun", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dGyqr":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$7545 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$7545.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$7545.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>DarkModeToggle);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _lucideReact = require("lucide-react");
var _s = $RefreshSig$();
function DarkModeToggle() {
    _s();
    const [isDark, setIsDark] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        document.documentElement.classList.toggle('dark', isDark);
    }, [
        isDark
    ]);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
        onClick: ()=>setIsDark(!isDark),
        className: "fixed top-4 left-4 z-50 bg-gray-200 dark:bg-gray-800 p-2 rounded-full shadow hover:scale-105 transition",
        children: isDark ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Sun), {
            className: "w-5 h-5 text-yellow-400"
        }, void 0, false, {
            fileName: "src/components/darkModeToggle.js",
            lineNumber: 16,
            columnNumber: 17
        }, this) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Moon), {
            className: "w-5 h-5 text-blue-600"
        }, void 0, false, {
            fileName: "src/components/darkModeToggle.js",
            lineNumber: 16,
            columnNumber: 63
        }, this)
    }, void 0, false, {
        fileName: "src/components/darkModeToggle.js",
        lineNumber: 12,
        columnNumber: 5
    }, this);
}
_s(DarkModeToggle, "q9ovQTvwIdpxeVii6kJLTuTYpwE=");
_c = DarkModeToggle;
var _c;
$RefreshReg$(_c, "DarkModeToggle");

  $parcel$ReactRefreshHelpers$7545.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","lucide-react":"2I7qR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"60As1":[function(require,module,exports,__globalThis) {
module.exports = module.bundle.resolve("hero.b07b9919.mp4") + "?" + Date.now();

},{}]},["iUuJv","fILKw"], "fILKw", "parcelRequire84aa", {}, "./", "/", "http://localhost:1234")

//# sourceMappingURL=public.1fcc916e.js.map
